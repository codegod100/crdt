{
  "version": 3,
  "sources": ["../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/_internal/utils.mjs", "../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../webui/node_modules/.pnpm/@cloudflare+unenv-preset@2.7.7_unenv@2.0.0-rc.21_workerd@1.20251008.0/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/console.mjs", "../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/mock/noop.mjs", "../webui/node_modules/.pnpm/@cloudflare+unenv-preset@2.7.7_unenv@2.0.0-rc.21_workerd@1.20251008.0/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../webui/node_modules/.pnpm/wrangler@4.42.2_@cloudflare+workers-types@4.20251008.0/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../webui/node_modules/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../webui/node_modules/.pnpm/@cloudflare+unenv-preset@2.7.7_unenv@2.0.0-rc.21_workerd@1.20251008.0/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../webui/node_modules/.pnpm/wrangler@4.42.2_@cloudflare+workers-types@4.20251008.0/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../webui/node_modules/.pnpm/@sveltejs+kit@2.46.4_@sveltejs+vite-plugin-svelte@4.0.4_svelte@5.39.11_vite@5.4.20_@typ_9b1fa9597efbdcd21e9f473a7b772c8e/node_modules/@sveltejs/kit/src/exports/internal/remote-functions.js", "../webui/node_modules/.pnpm/@sveltejs+kit@2.46.4_@sveltejs+vite-plugin-svelte@4.0.4_svelte@5.39.11_vite@5.4.20_@typ_9b1fa9597efbdcd21e9f473a7b772c8e/node_modules/@sveltejs/kit/src/exports/internal/index.js", "../webui/node_modules/.pnpm/@sveltejs+kit@2.46.4_@sveltejs+vite-plugin-svelte@4.0.4_svelte@5.39.11_vite@5.4.20_@typ_9b1fa9597efbdcd21e9f473a7b772c8e/node_modules/@sveltejs/kit/src/runtime/server/constants.js", "../webui/node_modules/.pnpm/@sveltejs+kit@2.46.4_@sveltejs+vite-plugin-svelte@4.0.4_svelte@5.39.11_vite@5.4.20_@typ_9b1fa9597efbdcd21e9f473a7b772c8e/node_modules/@sveltejs/kit/src/exports/internal/event.js", "../webui/node_modules/.pnpm/@sveltejs+kit@2.46.4_@sveltejs+vite-plugin-svelte@4.0.4_svelte@5.39.11_vite@5.4.20_@typ_9b1fa9597efbdcd21e9f473a7b772c8e/node_modules/@sveltejs/kit/src/exports/internal/server.js", "../webui/.svelte-kit/output/server/chunks/utils.js", "../webui/.svelte-kit/output/server/chunks/utils2.js", "../webui/.svelte-kit/output/server/chunks/equality.js", "../webui/.svelte-kit/output/server/chunks/exports.js", "../webui/.svelte-kit/output/server/chunks/context.js", "../webui/.svelte-kit/output/server/chunks/index.js", "../webui/.svelte-kit/output/server/chunks/hooks.server.js", "../webui/.svelte-kit/output/server/entries/pages/_layout.svelte.js", "../webui/.svelte-kit/output/server/nodes/0.js", "../webui/.svelte-kit/output/server/entries/fallbacks/error.svelte.js", "../webui/.svelte-kit/output/server/nodes/1.js", "../webui/node_modules/.pnpm/capnweb@0.1.0/node_modules/capnweb/src/core.ts", "../webui/node_modules/.pnpm/capnweb@0.1.0/node_modules/capnweb/src/serialize.ts", "../webui/node_modules/.pnpm/capnweb@0.1.0/node_modules/capnweb/src/rpc.ts", "../webui/node_modules/.pnpm/capnweb@0.1.0/node_modules/capnweb/src/websocket.ts", "../webui/node_modules/.pnpm/capnweb@0.1.0/node_modules/capnweb/src/batch.ts", "../webui/node_modules/.pnpm/capnweb@0.1.0/node_modules/capnweb/src/messageport.ts", "../webui/node_modules/.pnpm/capnweb@0.1.0/node_modules/capnweb/src/map.ts", "../webui/node_modules/.pnpm/capnweb@0.1.0/node_modules/capnweb/src/index.ts", "../webui/node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.50.4-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs", "../webui/node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.50.4-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs", "../webui/node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.50.4-build1/node_modules/@sqlite.org/sqlite-wasm/index.mjs", "../webui/.svelte-kit/output/server/entries/pages/_page.svelte.js", "../webui/.svelte-kit/output/server/nodes/2.js", "../webui/.svelte-kit/output/server/chunks/environment.js", "../webui/node_modules/.pnpm/@sveltejs+kit@2.46.4_@sveltejs+vite-plugin-svelte@4.0.4_svelte@5.39.11_vite@5.4.20_@typ_9b1fa9597efbdcd21e9f473a7b772c8e/node_modules/@sveltejs/kit/src/exports/index.js", "../webui/node_modules/.pnpm/esm-env@1.2.2/node_modules/esm-env/true.js", "../webui/node_modules/.pnpm/esm-env@1.2.2/node_modules/esm-env/dev-fallback.js", "../webui/node_modules/.pnpm/@sveltejs+kit@2.46.4_@sveltejs+vite-plugin-svelte@4.0.4_svelte@5.39.11_vite@5.4.20_@typ_9b1fa9597efbdcd21e9f473a7b772c8e/node_modules/@sveltejs/kit/src/runtime/utils.js", "../webui/.svelte-kit/output/server/index.js", "../webui/.svelte-kit/output/server/chunks/shared.js", "../webui/.svelte-kit/output/server/chunks/internal.js", "../webui/.svelte-kit/cloudflare-tmp/manifest.js", "../webui/.svelte-kit/cloudflare-tmp/_worker.js", "../webui/src/lib/security-headers.js", "../test-wasm/subduction_wasm.js", "../beelay-worker/worker.ts", "../capnweb/src/core.ts", "../capnweb/src/serialize.ts", "../capnweb/src/rpc.ts", "../capnweb/src/websocket.ts", "../capnweb/src/batch.ts", "../capnweb/src/messageport.ts", "../capnweb/src/map.ts", "../capnweb/src/index.ts", "../webui/src/worker.ts"],
  "sourceRoot": "../.wrangler-build",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nconst isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  // `hrtime` is only available from workerd process v2\n  hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : UnenvHrTime,\n  // `nextTick` is available from workerd process v1\n  nextTick: workerdProcess.nextTick\n});\nexport const { exit, features, platform } = workerdProcess;\nexport const {\n  // Always implemented by workerd\n  env,\n  // Only implemented in workerd v2\n  hrtime,\n  // Always implemented by workerd\n  nextTick\n} = unenvProcess;\nexport const {\n  _channel,\n  _disconnect,\n  _events,\n  _eventsCount,\n  _handleQueue,\n  _maxListeners,\n  _pendingMessage,\n  _send,\n  assert,\n  disconnect,\n  mainModule\n} = unenvProcess;\nexport const {\n  // @ts-expect-error `_debugEnd` is missing typings\n  _debugEnd,\n  // @ts-expect-error `_debugProcess` is missing typings\n  _debugProcess,\n  // @ts-expect-error `_exiting` is missing typings\n  _exiting,\n  // @ts-expect-error `_fatalException` is missing typings\n  _fatalException,\n  // @ts-expect-error `_getActiveHandles` is missing typings\n  _getActiveHandles,\n  // @ts-expect-error `_getActiveRequests` is missing typings\n  _getActiveRequests,\n  // @ts-expect-error `_kill` is missing typings\n  _kill,\n  // @ts-expect-error `_linkedBinding` is missing typings\n  _linkedBinding,\n  // @ts-expect-error `_preload_modules` is missing typings\n  _preload_modules,\n  // @ts-expect-error `_rawDebug` is missing typings\n  _rawDebug,\n  // @ts-expect-error `_startProfilerIdleNotifier` is missing typings\n  _startProfilerIdleNotifier,\n  // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings\n  _stopProfilerIdleNotifier,\n  // @ts-expect-error `_tickCallback` is missing typings\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  availableMemory,\n  // @ts-expect-error `binding` is missing typings\n  binding,\n  channel,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  // @ts-expect-error `domain` is missing typings\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  finalization,\n  getActiveResourcesInfo,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getMaxListeners,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  // @ts-expect-error `initgroups` is missing typings\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  // @ts-expect-error `moduleLoadList` is missing typings\n  moduleLoadList,\n  off,\n  on,\n  once,\n  // @ts-expect-error `openStdin` is missing typings\n  openStdin,\n  permission,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  // @ts-expect-error `reallyExit` is missing typings\n  reallyExit,\n  ref,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  send,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setuid,\n  setUncaughtExceptionCaptureCallback,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  throwDeprecation,\n  title,\n  traceDeprecation,\n  umask,\n  unref,\n  uptime,\n  version,\n  versions\n} = isWorkerdProcessV2 ? workerdProcess : unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "/** @import { RemoteInfo } from 'types' */\n\n/** @type {RemoteInfo['type'][]} */\nconst types = ['command', 'form', 'prerender', 'query', 'query_batch'];\n\n/**\n * @param {Record<string, any>} module\n * @param {string} file\n * @param {string} hash\n */\nexport function init_remote_functions(module, file, hash) {\n\tif (module.default) {\n\t\tthrow new Error(\n\t\t\t`Cannot export \\`default\\` from a remote module (${file}) \u2014 please use named exports instead`\n\t\t);\n\t}\n\n\tfor (const [name, fn] of Object.entries(module)) {\n\t\tif (!types.includes(fn?.__?.type)) {\n\t\t\tthrow new Error(\n\t\t\t\t`\\`${name}\\` exported from ${file} is invalid \u2014 all exports from this file must be remote functions`\n\t\t\t);\n\t\t}\n\n\t\tfn.__.id = `${hash}/${name}`;\n\t\tfn.__.name = name;\n\t}\n}\n", "export class HttpError {\n\t/**\n\t * @param {number} status\n\t * @param {{message: string} extends App.Error ? (App.Error | string | undefined) : App.Error} body\n\t */\n\tconstructor(status, body) {\n\t\tthis.status = status;\n\t\tif (typeof body === 'string') {\n\t\t\tthis.body = { message: body };\n\t\t} else if (body) {\n\t\t\tthis.body = body;\n\t\t} else {\n\t\t\tthis.body = { message: `Error: ${status}` };\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this.body);\n\t}\n}\n\nexport class Redirect {\n\t/**\n\t * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n}\n\n/**\n * An error that was thrown from within the SvelteKit runtime that is not fatal and doesn't result in a 500, such as a 404.\n * `SvelteKitError` goes through `handleError`.\n * @extends Error\n */\nexport class SvelteKitError extends Error {\n\t/**\n\t * @param {number} status\n\t * @param {string} text\n\t * @param {string} message\n\t */\n\tconstructor(status, text, message) {\n\t\tsuper(message);\n\t\tthis.status = status;\n\t\tthis.text = text;\n\t}\n}\n\n/**\n * @template [T=undefined]\n */\nexport class ActionFailure {\n\t/**\n\t * @param {number} status\n\t * @param {T} data\n\t */\n\tconstructor(status, data) {\n\t\tthis.status = status;\n\t\tthis.data = data;\n\t}\n}\n\nexport { init_remote_functions } from './remote-functions.js';\n", "export const NULL_BODY_STATUS = [101, 103, 204, 205, 304];\n\n// eslint-disable-next-line n/prefer-global/process\nexport const IN_WEBCONTAINER = !!globalThis.process?.versions?.webcontainer;\n", "/** @import { RequestEvent } from '@sveltejs/kit' */\n/** @import { RequestStore } from 'types' */\n/** @import { AsyncLocalStorage } from 'node:async_hooks' */\n\nimport { IN_WEBCONTAINER } from '../../runtime/server/constants.js';\n\n/** @type {RequestStore | null} */\nlet sync_store = null;\n\n/** @type {AsyncLocalStorage<RequestStore | null> | null} */\nlet als;\n\nimport('node:async_hooks')\n\t.then((hooks) => (als = new hooks.AsyncLocalStorage()))\n\t.catch(() => {\n\t\t// can't use AsyncLocalStorage, but can still call getRequestEvent synchronously.\n\t\t// this isn't behind `supports` because it's basically just StackBlitz (i.e.\n\t\t// in-browser usage) that doesn't support it AFAICT\n\t});\n\n/**\n * Returns the current `RequestEvent`. Can be used inside server hooks, server `load` functions, actions, and endpoints (and functions called by them).\n *\n * In environments without [`AsyncLocalStorage`](https://nodejs.org/api/async_context.html#class-asynclocalstorage), this must be called synchronously (i.e. not after an `await`).\n * @since 2.20.0\n *\n * @returns {RequestEvent}\n */\nexport function getRequestEvent() {\n\tconst event = try_get_request_store()?.event;\n\n\tif (!event) {\n\t\tlet message =\n\t\t\t'Can only read the current request event inside functions invoked during `handle`, such as server `load` functions, actions, endpoints, and other server hooks.';\n\n\t\tif (!als) {\n\t\t\tmessage +=\n\t\t\t\t' In environments without `AsyncLocalStorage`, the event must be read synchronously, not after an `await`.';\n\t\t}\n\n\t\tthrow new Error(message);\n\t}\n\n\treturn event;\n}\n\nexport function get_request_store() {\n\tconst result = try_get_request_store();\n\tif (!result) {\n\t\tlet message = 'Could not get the request store.';\n\n\t\tif (als) {\n\t\t\tmessage += ' This is an internal error.';\n\t\t} else {\n\t\t\tmessage +=\n\t\t\t\t' In environments without `AsyncLocalStorage`, the request store (used by e.g. remote functions) must be accessed synchronously, not after an `await`.' +\n\t\t\t\t' If it was accessed synchronously then this is an internal error.';\n\t\t}\n\n\t\tthrow new Error(message);\n\t}\n\treturn result;\n}\n\nexport function try_get_request_store() {\n\treturn sync_store ?? als?.getStore() ?? null;\n}\n\n/**\n * @template T\n * @param {RequestStore | null} store\n * @param {() => T} fn\n */\nexport function with_request_store(store, fn) {\n\ttry {\n\t\tsync_store = store;\n\t\treturn als ? als.run(store, fn) : fn();\n\t} finally {\n\t\t// Since AsyncLocalStorage is not working in webcontainers, we don't reset `sync_store`\n\t\t// and handle only one request at a time in `src/runtime/server/index.js`.\n\t\tif (!IN_WEBCONTAINER) {\n\t\t\tsync_store = null;\n\t\t}\n\t}\n}\n", "/**\n * @template {{ tracing: { enabled: boolean, root: import('@opentelemetry/api').Span, current: import('@opentelemetry/api').Span } }} T\n * @param {T} event_like\n * @param {import('@opentelemetry/api').Span} current\n * @returns {T}\n */\nexport function merge_tracing(event_like, current) {\n\treturn {\n\t\t...event_like,\n\t\ttracing: {\n\t\t\t...event_like.tracing,\n\t\t\tcurrent\n\t\t}\n\t};\n}\n\nexport {\n\twith_request_store,\n\tgetRequestEvent,\n\tget_request_store,\n\ttry_get_request_store\n} from './event.js';\n", "const text_encoder = new TextEncoder();\nconst text_decoder = new TextDecoder();\nfunction get_relative_path(from, to) {\n  const from_parts = from.split(/[/\\\\]/);\n  const to_parts = to.split(/[/\\\\]/);\n  from_parts.pop();\n  while (from_parts[0] === to_parts[0]) {\n    from_parts.shift();\n    to_parts.shift();\n  }\n  let i = from_parts.length;\n  while (i--) from_parts[i] = \"..\";\n  return from_parts.concat(to_parts).join(\"/\");\n}\nfunction base64_encode(bytes) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(bytes).toString(\"base64\");\n  }\n  let binary = \"\";\n  for (let i = 0; i < bytes.length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\nfunction base64_decode(encoded) {\n  if (globalThis.Buffer) {\n    const buffer = globalThis.Buffer.from(encoded, \"base64\");\n    return new Uint8Array(buffer);\n  }\n  const binary = atob(encoded);\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  return bytes;\n}\nexport {\n  text_encoder as a,\n  base64_encode as b,\n  base64_decode as c,\n  get_relative_path as g,\n  text_decoder as t\n};\n", "var is_array = Array.isArray;\nvar index_of = Array.prototype.indexOf;\nvar array_from = Array.from;\nvar define_property = Object.defineProperty;\nvar get_descriptor = Object.getOwnPropertyDescriptor;\nvar object_prototype = Object.prototype;\nvar array_prototype = Array.prototype;\nvar get_prototype_of = Object.getPrototypeOf;\nvar is_extensible = Object.isExtensible;\nconst noop = () => {\n};\nfunction run(fn) {\n  return fn();\n}\nfunction run_all(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    arr[i]();\n  }\n}\nfunction deferred() {\n  var resolve;\n  var reject;\n  var promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve, reject };\n}\nexport {\n  deferred as a,\n  array_prototype as b,\n  get_prototype_of as c,\n  define_property as d,\n  is_extensible as e,\n  index_of as f,\n  get_descriptor as g,\n  array_from as h,\n  is_array as i,\n  run as j,\n  noop as n,\n  object_prototype as o,\n  run_all as r\n};\n", "function equals(value) {\n  return value === this.v;\n}\nfunction safe_not_equal(a, b) {\n  return a != a ? b == b : a !== b || a !== null && typeof a === \"object\" || typeof a === \"function\";\n}\nfunction safe_equals(value) {\n  return !safe_not_equal(value, this.v);\n}\nexport {\n  safe_not_equal as a,\n  equals as e,\n  safe_equals as s\n};\n", "import { n as noop } from \"./utils2.js\";\nimport { a as safe_not_equal } from \"./equality.js\";\nconst SCHEME = /^[a-z][a-z\\d+\\-.]+:/i;\nconst internal = new URL(\"sveltekit-internal://\");\nfunction resolve(base, path) {\n  if (path[0] === \"/\" && path[1] === \"/\") return path;\n  let url = new URL(base, internal);\n  url = new URL(path, url);\n  return url.protocol === internal.protocol ? url.pathname + url.search + url.hash : url.href;\n}\nfunction normalize_path(path, trailing_slash) {\n  if (path === \"/\" || trailing_slash === \"ignore\") return path;\n  if (trailing_slash === \"never\") {\n    return path.endsWith(\"/\") ? path.slice(0, -1) : path;\n  } else if (trailing_slash === \"always\" && !path.endsWith(\"/\")) {\n    return path + \"/\";\n  }\n  return path;\n}\nfunction decode_pathname(pathname) {\n  return pathname.split(\"%25\").map(decodeURI).join(\"%25\");\n}\nfunction decode_params(params) {\n  for (const key in params) {\n    params[key] = decodeURIComponent(params[key]);\n  }\n  return params;\n}\nfunction make_trackable(url, callback, search_params_callback, allow_hash = false) {\n  const tracked = new URL(url);\n  Object.defineProperty(tracked, \"searchParams\", {\n    value: new Proxy(tracked.searchParams, {\n      get(obj, key) {\n        if (key === \"get\" || key === \"getAll\" || key === \"has\") {\n          return (param) => {\n            search_params_callback(param);\n            return obj[key](param);\n          };\n        }\n        callback();\n        const value = Reflect.get(obj, key);\n        return typeof value === \"function\" ? value.bind(obj) : value;\n      }\n    }),\n    enumerable: true,\n    configurable: true\n  });\n  const tracked_url_properties = [\"href\", \"pathname\", \"search\", \"toString\", \"toJSON\"];\n  if (allow_hash) tracked_url_properties.push(\"hash\");\n  for (const property of tracked_url_properties) {\n    Object.defineProperty(tracked, property, {\n      get() {\n        callback();\n        return url[property];\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  {\n    tracked[Symbol.for(\"nodejs.util.inspect.custom\")] = (depth, opts, inspect) => {\n      return inspect(url, opts);\n    };\n    tracked.searchParams[Symbol.for(\"nodejs.util.inspect.custom\")] = (depth, opts, inspect) => {\n      return inspect(url.searchParams, opts);\n    };\n  }\n  if (!allow_hash) {\n    disable_hash(tracked);\n  }\n  return tracked;\n}\nfunction disable_hash(url) {\n  allow_nodejs_console_log(url);\n  Object.defineProperty(url, \"hash\", {\n    get() {\n      throw new Error(\n        \"Cannot access event.url.hash. Consider using `page.url.hash` inside a component instead\"\n      );\n    }\n  });\n}\nfunction disable_search(url) {\n  allow_nodejs_console_log(url);\n  for (const property of [\"search\", \"searchParams\"]) {\n    Object.defineProperty(url, property, {\n      get() {\n        throw new Error(`Cannot access url.${property} on a page with prerendering enabled`);\n      }\n    });\n  }\n}\nfunction allow_nodejs_console_log(url) {\n  {\n    url[Symbol.for(\"nodejs.util.inspect.custom\")] = (depth, opts, inspect) => {\n      return inspect(new URL(url), opts);\n    };\n  }\n}\nconst subscriber_queue = [];\nfunction readable(value, start) {\n  return {\n    subscribe: writable(value, start).subscribe\n  };\n}\nfunction writable(value, start = noop) {\n  let stop = null;\n  const subscribers = /* @__PURE__ */ new Set();\n  function set(new_value) {\n    if (safe_not_equal(value, new_value)) {\n      value = new_value;\n      if (stop) {\n        const run_queue = !subscriber_queue.length;\n        for (const subscriber of subscribers) {\n          subscriber[1]();\n          subscriber_queue.push(subscriber, value);\n        }\n        if (run_queue) {\n          for (let i = 0; i < subscriber_queue.length; i += 2) {\n            subscriber_queue[i][0](subscriber_queue[i + 1]);\n          }\n          subscriber_queue.length = 0;\n        }\n      }\n    }\n  }\n  function update(fn) {\n    set(fn(\n      /** @type {T} */\n      value\n    ));\n  }\n  function subscribe(run, invalidate = noop) {\n    const subscriber = [run, invalidate];\n    subscribers.add(subscriber);\n    if (subscribers.size === 1) {\n      stop = start(set, update) || noop;\n    }\n    run(\n      /** @type {T} */\n      value\n    );\n    return () => {\n      subscribers.delete(subscriber);\n      if (subscribers.size === 0 && stop) {\n        stop();\n        stop = null;\n      }\n    };\n  }\n  return { set, update, subscribe };\n}\nfunction validator(expected) {\n  function validate(module, file) {\n    if (!module) return;\n    for (const key in module) {\n      if (key[0] === \"_\" || expected.has(key)) continue;\n      const values = [...expected.values()];\n      const hint = hint_for_supported_files(key, file?.slice(file.lastIndexOf(\".\"))) ?? `valid exports are ${values.join(\", \")}, or anything with a '_' prefix`;\n      throw new Error(`Invalid export '${key}'${file ? ` in ${file}` : \"\"} (${hint})`);\n    }\n  }\n  return validate;\n}\nfunction hint_for_supported_files(key, ext = \".js\") {\n  const supported_files = [];\n  if (valid_layout_exports.has(key)) {\n    supported_files.push(`+layout${ext}`);\n  }\n  if (valid_page_exports.has(key)) {\n    supported_files.push(`+page${ext}`);\n  }\n  if (valid_layout_server_exports.has(key)) {\n    supported_files.push(`+layout.server${ext}`);\n  }\n  if (valid_page_server_exports.has(key)) {\n    supported_files.push(`+page.server${ext}`);\n  }\n  if (valid_server_exports.has(key)) {\n    supported_files.push(`+server${ext}`);\n  }\n  if (supported_files.length > 0) {\n    return `'${key}' is a valid export in ${supported_files.slice(0, -1).join(\", \")}${supported_files.length > 1 ? \" or \" : \"\"}${supported_files.at(-1)}`;\n  }\n}\nconst valid_layout_exports = /* @__PURE__ */ new Set([\n  \"load\",\n  \"prerender\",\n  \"csr\",\n  \"ssr\",\n  \"trailingSlash\",\n  \"config\"\n]);\nconst valid_page_exports = /* @__PURE__ */ new Set([...valid_layout_exports, \"entries\"]);\nconst valid_layout_server_exports = /* @__PURE__ */ new Set([...valid_layout_exports]);\nconst valid_page_server_exports = /* @__PURE__ */ new Set([...valid_layout_server_exports, \"actions\", \"entries\"]);\nconst valid_server_exports = /* @__PURE__ */ new Set([\n  \"GET\",\n  \"POST\",\n  \"PATCH\",\n  \"PUT\",\n  \"DELETE\",\n  \"OPTIONS\",\n  \"HEAD\",\n  \"fallback\",\n  \"prerender\",\n  \"trailingSlash\",\n  \"config\",\n  \"entries\"\n]);\nconst validate_layout_exports = validator(valid_layout_exports);\nconst validate_page_exports = validator(valid_page_exports);\nconst validate_layout_server_exports = validator(valid_layout_server_exports);\nconst validate_page_server_exports = validator(valid_page_server_exports);\nconst validate_server_exports = validator(valid_server_exports);\nexport {\n  SCHEME as S,\n  decode_params as a,\n  validate_layout_exports as b,\n  validate_page_server_exports as c,\n  disable_search as d,\n  validate_page_exports as e,\n  resolve as f,\n  decode_pathname as g,\n  validate_server_exports as h,\n  make_trackable as m,\n  normalize_path as n,\n  readable as r,\n  validate_layout_server_exports as v,\n  writable as w\n};\n", "function lifecycle_outside_component(name) {\n  {\n    throw new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n  }\n}\nconst ATTR_REGEX = /[&\"<]/g;\nconst CONTENT_REGEX = /[&<]/g;\nfunction escape_html(value, is_attr) {\n  const str = String(value ?? \"\");\n  const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n  pattern.lastIndex = 0;\n  let escaped = \"\";\n  let last = 0;\n  while (pattern.test(str)) {\n    const i = pattern.lastIndex - 1;\n    const ch = str[i];\n    escaped += str.substring(last, i) + (ch === \"&\" ? \"&amp;\" : ch === '\"' ? \"&quot;\" : \"&lt;\");\n    last = i + 1;\n  }\n  return escaped + str.substring(last);\n}\nvar ssr_context = null;\nfunction set_ssr_context(v) {\n  ssr_context = v;\n}\nfunction getContext(key) {\n  const context_map = get_or_init_context_map();\n  const result = (\n    /** @type {T} */\n    context_map.get(key)\n  );\n  return result;\n}\nfunction setContext(key, context) {\n  get_or_init_context_map().set(key, context);\n  return context;\n}\nfunction get_or_init_context_map(name) {\n  if (ssr_context === null) {\n    lifecycle_outside_component();\n  }\n  return ssr_context.c ??= new Map(get_parent_context(ssr_context) || void 0);\n}\nfunction push(fn) {\n  ssr_context = { p: ssr_context, c: null, r: null };\n}\nfunction pop() {\n  ssr_context = /** @type {SSRContext} */\n  ssr_context.p;\n}\nfunction get_parent_context(ssr_context2) {\n  let parent = ssr_context2.p;\n  while (parent !== null) {\n    const context_map = parent.c;\n    if (context_map !== null) {\n      return context_map;\n    }\n    parent = parent.p;\n  }\n  return null;\n}\nexport {\n  ssr_context as a,\n  set_ssr_context as b,\n  pop as c,\n  escape_html as e,\n  getContext as g,\n  push as p,\n  setContext as s\n};\n", "import { e as escape_html, b as set_ssr_context, a as ssr_context, p as push, c as pop } from \"./context.js\";\nconst DERIVED = 1 << 1;\nconst EFFECT = 1 << 2;\nconst RENDER_EFFECT = 1 << 3;\nconst BLOCK_EFFECT = 1 << 4;\nconst BRANCH_EFFECT = 1 << 5;\nconst ROOT_EFFECT = 1 << 6;\nconst BOUNDARY_EFFECT = 1 << 7;\nconst UNOWNED = 1 << 8;\nconst DISCONNECTED = 1 << 9;\nconst CLEAN = 1 << 10;\nconst DIRTY = 1 << 11;\nconst MAYBE_DIRTY = 1 << 12;\nconst INERT = 1 << 13;\nconst DESTROYED = 1 << 14;\nconst EFFECT_RAN = 1 << 15;\nconst EFFECT_TRANSPARENT = 1 << 16;\nconst INSPECT_EFFECT = 1 << 17;\nconst HEAD_EFFECT = 1 << 18;\nconst EFFECT_PRESERVED = 1 << 19;\nconst USER_EFFECT = 1 << 20;\nconst REACTION_IS_UPDATING = 1 << 21;\nconst ASYNC = 1 << 22;\nconst ERROR_VALUE = 1 << 23;\nconst STATE_SYMBOL = Symbol(\"$state\");\nconst LEGACY_PROPS = Symbol(\"legacy props\");\nconst STALE_REACTION = new class StaleReactionError extends Error {\n  name = \"StaleReactionError\";\n  message = \"The reaction that called `getAbortSignal()` was re-run or destroyed\";\n}();\nconst COMMENT_NODE = 8;\nconst HYDRATION_START = \"[\";\nconst HYDRATION_START_ELSE = \"[!\";\nconst HYDRATION_END = \"]\";\nconst HYDRATION_ERROR = {};\nconst ELEMENT_IS_NAMESPACED = 1;\nconst ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\nconst ELEMENT_IS_INPUT = 1 << 2;\nconst UNINITIALIZED = Symbol();\nconst DOM_BOOLEAN_ATTRIBUTES = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"indeterminate\",\n  \"inert\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\",\n  \"webkitdirectory\",\n  \"defer\",\n  \"disablepictureinpicture\",\n  \"disableremoteplayback\"\n];\nfunction is_boolean_attribute(name) {\n  return DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\nconst PASSIVE_EVENTS = [\"touchstart\", \"touchmove\"];\nfunction is_passive_event(name) {\n  return PASSIVE_EVENTS.includes(name);\n}\nfunction r(e) {\n  var t, f, n = \"\";\n  if (\"string\" == typeof e || \"number\" == typeof e) n += e;\n  else if (\"object\" == typeof e) if (Array.isArray(e)) {\n    var o = e.length;\n    for (t = 0; t < o; t++) e[t] && (f = r(e[t])) && (n && (n += \" \"), n += f);\n  } else for (f in e) e[f] && (n && (n += \" \"), n += f);\n  return n;\n}\nfunction clsx$1() {\n  for (var e, t, f = 0, n = \"\", o = arguments.length; f < o; f++) (e = arguments[f]) && (t = r(e)) && (n && (n += \" \"), n += t);\n  return n;\n}\nconst replacements = {\n  translate: /* @__PURE__ */ new Map([\n    [true, \"yes\"],\n    [false, \"no\"]\n  ])\n};\nfunction attr(name, value, is_boolean = false) {\n  if (name === \"hidden\" && value !== \"until-found\") {\n    is_boolean = true;\n  }\n  if (value == null || !value && is_boolean) return \"\";\n  const normalized = name in replacements && replacements[name].get(value) || value;\n  const assignment = is_boolean ? \"\" : `=\"${escape_html(normalized, true)}\"`;\n  return ` ${name}${assignment}`;\n}\nfunction clsx(value) {\n  if (typeof value === \"object\") {\n    return clsx$1(value);\n  } else {\n    return value ?? \"\";\n  }\n}\nconst whitespace = [...\" \t\\n\\r\\f\u00A0\\v\\uFEFF\"];\nfunction to_class(value, hash, directives) {\n  var classname = value == null ? \"\" : \"\" + value;\n  if (hash) {\n    classname = classname ? classname + \" \" + hash : hash;\n  }\n  if (directives) {\n    for (var key in directives) {\n      if (directives[key]) {\n        classname = classname ? classname + \" \" + key : key;\n      } else if (classname.length) {\n        var len = key.length;\n        var a = 0;\n        while ((a = classname.indexOf(key, a)) >= 0) {\n          var b = a + len;\n          if ((a === 0 || whitespace.includes(classname[a - 1])) && (b === classname.length || whitespace.includes(classname[b]))) {\n            classname = (a === 0 ? \"\" : classname.substring(0, a)) + classname.substring(b + 1);\n          } else {\n            a = b;\n          }\n        }\n      }\n    }\n  }\n  return classname === \"\" ? null : classname;\n}\nfunction append_styles(styles, important = false) {\n  var separator = important ? \" !important;\" : \";\";\n  var css = \"\";\n  for (var key in styles) {\n    var value = styles[key];\n    if (value != null && value !== \"\") {\n      css += \" \" + key + \": \" + value + separator;\n    }\n  }\n  return css;\n}\nfunction to_css_name(name) {\n  if (name[0] !== \"-\" || name[1] !== \"-\") {\n    return name.toLowerCase();\n  }\n  return name;\n}\nfunction to_style(value, styles) {\n  if (styles) {\n    var new_style = \"\";\n    var normal_styles;\n    var important_styles;\n    if (Array.isArray(styles)) {\n      normal_styles = styles[0];\n      important_styles = styles[1];\n    } else {\n      normal_styles = styles;\n    }\n    if (value) {\n      value = String(value).replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, \"\").trim();\n      var in_str = false;\n      var in_apo = 0;\n      var in_comment = false;\n      var reserved_names = [];\n      if (normal_styles) {\n        reserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n      }\n      if (important_styles) {\n        reserved_names.push(...Object.keys(important_styles).map(to_css_name));\n      }\n      var start_index = 0;\n      var name_index = -1;\n      const len = value.length;\n      for (var i = 0; i < len; i++) {\n        var c = value[i];\n        if (in_comment) {\n          if (c === \"/\" && value[i - 1] === \"*\") {\n            in_comment = false;\n          }\n        } else if (in_str) {\n          if (in_str === c) {\n            in_str = false;\n          }\n        } else if (c === \"/\" && value[i + 1] === \"*\") {\n          in_comment = true;\n        } else if (c === '\"' || c === \"'\") {\n          in_str = c;\n        } else if (c === \"(\") {\n          in_apo++;\n        } else if (c === \")\") {\n          in_apo--;\n        }\n        if (!in_comment && in_str === false && in_apo === 0) {\n          if (c === \":\" && name_index === -1) {\n            name_index = i;\n          } else if (c === \";\" || i === len - 1) {\n            if (name_index !== -1) {\n              var name = to_css_name(value.substring(start_index, name_index).trim());\n              if (!reserved_names.includes(name)) {\n                if (c !== \";\") {\n                  i++;\n                }\n                var property = value.substring(start_index, i).trim();\n                new_style += \" \" + property + \";\";\n              }\n            }\n            start_index = i + 1;\n            name_index = -1;\n          }\n        }\n      }\n    }\n    if (normal_styles) {\n      new_style += append_styles(normal_styles);\n    }\n    if (important_styles) {\n      new_style += append_styles(important_styles, true);\n    }\n    new_style = new_style.trim();\n    return new_style === \"\" ? null : new_style;\n  }\n  return value == null ? null : String(value);\n}\nconst BLOCK_OPEN = `<!--${HYDRATION_START}-->`;\nconst BLOCK_CLOSE = `<!--${HYDRATION_END}-->`;\nlet controller = null;\nfunction abort() {\n  controller?.abort(STALE_REACTION);\n  controller = null;\n}\nfunction await_invalid() {\n  const error = new Error(`await_invalid\nEncountered asynchronous work while rendering synchronously.\nhttps://svelte.dev/e/await_invalid`);\n  error.name = \"Svelte error\";\n  throw error;\n}\nfunction experimental_async_ssr() {\n  {\n    console.warn(`https://svelte.dev/e/experimental_async_ssr`);\n  }\n}\nclass Renderer {\n  /**\n   * The contents of the renderer.\n   * @type {RendererItem[]}\n   */\n  #out = [];\n  /**\n   * Any `onDestroy` callbacks registered during execution of this renderer.\n   * @type {(() => void)[] | undefined}\n   */\n  #on_destroy = void 0;\n  /**\n   * Whether this renderer is a component body.\n   * @type {boolean}\n   */\n  #is_component_body = false;\n  /**\n   * The type of string content that this renderer is accumulating.\n   * @type {RendererType}\n   */\n  type;\n  /** @type {Renderer | undefined} */\n  #parent;\n  /**\n   * Asynchronous work associated with this renderer\n   * @type {Promise<void> | undefined}\n   */\n  promise = void 0;\n  /**\n   * State which is associated with the content tree as a whole.\n   * It will be re-exposed, uncopied, on all children.\n   * @type {SSRState}\n   * @readonly\n   */\n  global;\n  /**\n   * State that is local to the branch it is declared in.\n   * It will be shallow-copied to all children.\n   *\n   * @type {{ select_value: string | undefined }}\n   */\n  local;\n  /**\n   * @param {SSRState} global\n   * @param {Renderer | undefined} [parent]\n   */\n  constructor(global, parent) {\n    this.#parent = parent;\n    this.global = global;\n    this.local = parent ? { ...parent.local } : { select_value: void 0 };\n    this.type = parent ? parent.type : \"body\";\n  }\n  /**\n   * @param {(renderer: Renderer) => void} fn\n   */\n  head(fn) {\n    const head = new Renderer(this.global, this);\n    head.type = \"head\";\n    this.#out.push(head);\n    head.child(fn);\n  }\n  /**\n   * @param {(renderer: Renderer) => void} fn\n   */\n  async(fn) {\n    this.#out.push(BLOCK_OPEN);\n    this.child(fn);\n    this.#out.push(BLOCK_CLOSE);\n  }\n  /**\n   * Create a child renderer. The child renderer inherits the state from the parent,\n   * but has its own content.\n   * @param {(renderer: Renderer) => MaybePromise<void>} fn\n   */\n  child(fn) {\n    const child = new Renderer(this.global, this);\n    this.#out.push(child);\n    const parent = ssr_context;\n    set_ssr_context({\n      ...ssr_context,\n      p: parent,\n      c: null,\n      r: child\n    });\n    const result = fn(child);\n    set_ssr_context(parent);\n    if (result instanceof Promise) {\n      if (child.global.mode === \"sync\") {\n        await_invalid();\n      }\n      result.catch(() => {\n      });\n      child.promise = result;\n    }\n    return child;\n  }\n  /**\n   * Create a component renderer. The component renderer inherits the state from the parent,\n   * but has its own content. It is treated as an ordering boundary for ondestroy callbacks.\n   * @param {(renderer: Renderer) => MaybePromise<void>} fn\n   * @param {Function} [component_fn]\n   * @returns {void}\n   */\n  component(fn, component_fn) {\n    push();\n    const child = this.child(fn);\n    child.#is_component_body = true;\n    pop();\n  }\n  /**\n   * @param {Record<string, any>} attrs\n   * @param {(renderer: Renderer) => void} fn\n   * @param {string | undefined} [css_hash]\n   * @param {Record<string, boolean> | undefined} [classes]\n   * @param {Record<string, string> | undefined} [styles]\n   * @param {number | undefined} [flags]\n   * @returns {void}\n   */\n  select(attrs, fn, css_hash, classes, styles, flags) {\n    const { value, ...select_attrs } = attrs;\n    this.push(`<select${attributes(select_attrs, css_hash, classes, styles, flags)}>`);\n    this.child((renderer) => {\n      renderer.local.select_value = value;\n      fn(renderer);\n    });\n    this.push(\"</select>\");\n  }\n  /**\n   * @param {Record<string, any>} attrs\n   * @param {string | number | boolean | ((renderer: Renderer) => void)} body\n   * @param {string | undefined} [css_hash]\n   * @param {Record<string, boolean> | undefined} [classes]\n   * @param {Record<string, string> | undefined} [styles]\n   * @param {number | undefined} [flags]\n   */\n  option(attrs, body, css_hash, classes, styles, flags) {\n    this.#out.push(`<option${attributes(attrs, css_hash, classes, styles, flags)}`);\n    const close = (renderer, value, { head, body: body2 }) => {\n      if (\"value\" in attrs) {\n        value = attrs.value;\n      }\n      if (value === this.local.select_value) {\n        renderer.#out.push(\" selected\");\n      }\n      renderer.#out.push(`>${body2}</option>`);\n      if (head) {\n        renderer.head((child) => child.push(head));\n      }\n    };\n    if (typeof body === \"function\") {\n      this.child((renderer) => {\n        const r2 = new Renderer(this.global, this);\n        body(r2);\n        if (this.global.mode === \"async\") {\n          return r2.#collect_content_async().then((content) => {\n            close(renderer, content.body.replaceAll(\"<!---->\", \"\"), content);\n          });\n        } else {\n          const content = r2.#collect_content();\n          close(renderer, content.body.replaceAll(\"<!---->\", \"\"), content);\n        }\n      });\n    } else {\n      close(this, body, { body });\n    }\n  }\n  /**\n   * @param {(renderer: Renderer) => void} fn\n   */\n  title(fn) {\n    const path = this.get_path();\n    const close = (head) => {\n      this.global.set_title(head, path);\n    };\n    this.child((renderer) => {\n      const r2 = new Renderer(renderer.global, renderer);\n      fn(r2);\n      if (renderer.global.mode === \"async\") {\n        return r2.#collect_content_async().then((content) => {\n          close(content.head);\n        });\n      } else {\n        const content = r2.#collect_content();\n        close(content.head);\n      }\n    });\n  }\n  /**\n   * @param {string | (() => Promise<string>)} content\n   */\n  push(content) {\n    if (typeof content === \"function\") {\n      this.child(async (renderer) => renderer.push(await content()));\n    } else {\n      this.#out.push(content);\n    }\n  }\n  /**\n   * @param {() => void} fn\n   */\n  on_destroy(fn) {\n    (this.#on_destroy ??= []).push(fn);\n  }\n  /**\n   * @returns {number[]}\n   */\n  get_path() {\n    return this.#parent ? [...this.#parent.get_path(), this.#parent.#out.indexOf(this)] : [];\n  }\n  /**\n   * @deprecated this is needed for legacy component bindings\n   */\n  copy() {\n    const copy = new Renderer(this.global, this.#parent);\n    copy.#out = this.#out.map((item) => item instanceof Renderer ? item.copy() : item);\n    copy.promise = this.promise;\n    return copy;\n  }\n  /**\n   * @param {Renderer} other\n   * @deprecated this is needed for legacy component bindings\n   */\n  subsume(other) {\n    if (this.global.mode !== other.global.mode) {\n      throw new Error(\n        \"invariant: A renderer cannot switch modes. If you're seeing this, there's a compiler bug. File an issue!\"\n      );\n    }\n    this.local = other.local;\n    this.#out = other.#out.map((item) => {\n      if (item instanceof Renderer) {\n        item.subsume(item);\n      }\n      return item;\n    });\n    this.promise = other.promise;\n    this.type = other.type;\n  }\n  get length() {\n    return this.#out.length;\n  }\n  /**\n   * Only available on the server and when compiling with the `server` option.\n   * Takes a component and returns an object with `body` and `head` properties on it, which you can use to populate the HTML when server-rendering your app.\n   * @template {Record<string, any>} Props\n   * @param {Component<Props>} component\n   * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} [options]\n   * @returns {RenderOutput}\n   */\n  static render(component, options = {}) {\n    let sync;\n    const result = (\n      /** @type {RenderOutput} */\n      {}\n    );\n    Object.defineProperties(result, {\n      html: {\n        get: () => {\n          return (sync ??= Renderer.#render(component, options)).body;\n        }\n      },\n      head: {\n        get: () => {\n          return (sync ??= Renderer.#render(component, options)).head;\n        }\n      },\n      body: {\n        get: () => {\n          return (sync ??= Renderer.#render(component, options)).body;\n        }\n      },\n      then: {\n        value: (\n          /**\n           * this is not type-safe, but honestly it's the best I can do right now, and it's a straightforward function.\n           *\n           * @template TResult1\n           * @template [TResult2=never]\n           * @param { (value: SyncRenderOutput) => TResult1 } onfulfilled\n           * @param { (reason: unknown) => TResult2 } onrejected\n           */\n          (onfulfilled, onrejected) => {\n            {\n              experimental_async_ssr();\n              const result2 = sync ??= Renderer.#render(component, options);\n              const user_result = onfulfilled({\n                head: result2.head,\n                body: result2.body,\n                html: result2.body\n              });\n              return Promise.resolve(user_result);\n            }\n          }\n        )\n      }\n    });\n    return result;\n  }\n  /**\n   * Collect all of the `onDestroy` callbacks regsitered during rendering. In an async context, this is only safe to call\n   * after awaiting `collect_async`.\n   *\n   * Child renderers are \"porous\" and don't affect execution order, but component body renderers\n   * create ordering boundaries. Within a renderer, callbacks run in order until hitting a component boundary.\n   * @returns {Iterable<() => void>}\n   */\n  *#collect_on_destroy() {\n    for (const component of this.#traverse_components()) {\n      yield* component.#collect_ondestroy();\n    }\n  }\n  /**\n   * Performs a depth-first search of renderers, yielding the deepest components first, then additional components as we backtrack up the tree.\n   * @returns {Iterable<Renderer>}\n   */\n  *#traverse_components() {\n    for (const child of this.#out) {\n      if (typeof child !== \"string\") {\n        yield* child.#traverse_components();\n      }\n    }\n    if (this.#is_component_body) {\n      yield this;\n    }\n  }\n  /**\n   * @returns {Iterable<() => void>}\n   */\n  *#collect_ondestroy() {\n    if (this.#on_destroy) {\n      for (const fn of this.#on_destroy) {\n        yield fn;\n      }\n    }\n    for (const child of this.#out) {\n      if (child instanceof Renderer && !child.#is_component_body) {\n        yield* child.#collect_ondestroy();\n      }\n    }\n  }\n  /**\n   * Render a component. Throws if any of the children are performing asynchronous work.\n   *\n   * @template {Record<string, any>} Props\n   * @param {Component<Props>} component\n   * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} options\n   * @returns {AccumulatedContent}\n   */\n  static #render(component, options) {\n    var previous_context = ssr_context;\n    try {\n      const renderer = Renderer.#open_render(\"sync\", component, options);\n      const content = renderer.#collect_content();\n      return Renderer.#close_render(content, renderer);\n    } finally {\n      abort();\n      set_ssr_context(previous_context);\n    }\n  }\n  /**\n   * Render a component.\n   *\n   * @template {Record<string, any>} Props\n   * @param {Component<Props>} component\n   * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} options\n   * @returns {Promise<AccumulatedContent>}\n   */\n  static async #render_async(component, options) {\n    var previous_context = ssr_context;\n    try {\n      const renderer = Renderer.#open_render(\"async\", component, options);\n      const content = await renderer.#collect_content_async();\n      return Renderer.#close_render(content, renderer);\n    } finally {\n      abort();\n      set_ssr_context(previous_context);\n    }\n  }\n  /**\n   * Collect all of the code from the `out` array and return it as a string, or a promise resolving to a string.\n   * @param {AccumulatedContent} content\n   * @returns {AccumulatedContent}\n   */\n  #collect_content(content = { head: \"\", body: \"\" }) {\n    for (const item of this.#out) {\n      if (typeof item === \"string\") {\n        content[this.type] += item;\n      } else if (item instanceof Renderer) {\n        item.#collect_content(content);\n      }\n    }\n    return content;\n  }\n  /**\n   * Collect all of the code from the `out` array and return it as a string.\n   * @param {AccumulatedContent} content\n   * @returns {Promise<AccumulatedContent>}\n   */\n  async #collect_content_async(content = { head: \"\", body: \"\" }) {\n    await this.promise;\n    for (const item of this.#out) {\n      if (typeof item === \"string\") {\n        content[this.type] += item;\n      } else if (item instanceof Renderer) {\n        await item.#collect_content_async(content);\n      }\n    }\n    return content;\n  }\n  /**\n   * @template {Record<string, any>} Props\n   * @param {'sync' | 'async'} mode\n   * @param {import('svelte').Component<Props>} component\n   * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} options\n   * @returns {Renderer}\n   */\n  static #open_render(mode, component, options) {\n    const renderer = new Renderer(\n      new SSRState(mode, options.idPrefix ? options.idPrefix + \"-\" : \"\")\n    );\n    renderer.push(BLOCK_OPEN);\n    if (options.context) {\n      push();\n      ssr_context.c = options.context;\n      ssr_context.r = renderer;\n    }\n    component(renderer, options.props ?? {});\n    if (options.context) {\n      pop();\n    }\n    renderer.push(BLOCK_CLOSE);\n    return renderer;\n  }\n  /**\n   * @param {AccumulatedContent} content\n   * @param {Renderer} renderer\n   */\n  static #close_render(content, renderer) {\n    for (const cleanup of renderer.#collect_on_destroy()) {\n      cleanup();\n    }\n    let head = content.head + renderer.global.get_title();\n    let body = content.body;\n    for (const { hash, code } of renderer.global.css) {\n      head += `<style id=\"${hash}\">${code}</style>`;\n    }\n    return {\n      head,\n      body\n    };\n  }\n}\nclass SSRState {\n  /** @readonly @type {'sync' | 'async'} */\n  mode;\n  /** @readonly @type {() => string} */\n  uid;\n  /** @readonly @type {Set<{ hash: string; code: string }>} */\n  css = /* @__PURE__ */ new Set();\n  /** @type {{ path: number[], value: string }} */\n  #title = { path: [], value: \"\" };\n  /**\n   * @param {'sync' | 'async'} mode\n   * @param {string} [id_prefix]\n   */\n  constructor(mode, id_prefix = \"\") {\n    this.mode = mode;\n    let uid = 1;\n    this.uid = () => `${id_prefix}s${uid++}`;\n  }\n  get_title() {\n    return this.#title.value;\n  }\n  /**\n   * Performs a depth-first (lexicographic) comparison using the path. Rejects sets\n   * from earlier than or equal to the current value.\n   * @param {string} value\n   * @param {number[]} path\n   */\n  set_title(value, path) {\n    const current = this.#title.path;\n    let i = 0;\n    let l = Math.min(path.length, current.length);\n    while (i < l && path[i] === current[i]) i += 1;\n    if (path[i] === void 0) return;\n    if (current[i] === void 0 || path[i] > current[i]) {\n      this.#title.path = path;\n      this.#title.value = value;\n    }\n  }\n}\nconst INVALID_ATTR_NAME_CHAR_REGEX = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\nfunction render(component, options = {}) {\n  return Renderer.render(\n    /** @type {Component<Props>} */\n    component,\n    options\n  );\n}\nfunction attributes(attrs, css_hash, classes, styles, flags = 0) {\n  if (styles) {\n    attrs.style = to_style(attrs.style, styles);\n  }\n  if (attrs.class) {\n    attrs.class = clsx(attrs.class);\n  }\n  if (css_hash || classes) {\n    attrs.class = to_class(attrs.class, css_hash, classes);\n  }\n  let attr_str = \"\";\n  let name;\n  const is_html = (flags & ELEMENT_IS_NAMESPACED) === 0;\n  const lowercase = (flags & ELEMENT_PRESERVE_ATTRIBUTE_CASE) === 0;\n  const is_input = (flags & ELEMENT_IS_INPUT) !== 0;\n  for (name in attrs) {\n    if (typeof attrs[name] === \"function\") continue;\n    if (name[0] === \"$\" && name[1] === \"$\") continue;\n    if (INVALID_ATTR_NAME_CHAR_REGEX.test(name)) continue;\n    var value = attrs[name];\n    if (lowercase) {\n      name = name.toLowerCase();\n    }\n    if (is_input) {\n      if (name === \"defaultvalue\" || name === \"defaultchecked\") {\n        name = name === \"defaultvalue\" ? \"value\" : \"checked\";\n        if (attrs[name]) continue;\n      }\n    }\n    attr_str += attr(name, value, is_html && is_boolean_attribute(name));\n  }\n  return attr_str;\n}\nfunction attr_class(value, hash, directives) {\n  var result = to_class(value, hash, directives);\n  return result ? ` class=\"${escape_html(result, true)}\"` : \"\";\n}\nfunction slot(renderer, $$props, name, slot_props, fallback_fn) {\n  var slot_fn = $$props.$$slots?.[name];\n  if (slot_fn === true) {\n    slot_fn = $$props[\"children\"];\n  }\n  if (slot_fn !== void 0) {\n    slot_fn(renderer, slot_props);\n  }\n}\nfunction ensure_array_like(array_like_or_iterator) {\n  if (array_like_or_iterator) {\n    return array_like_or_iterator.length !== void 0 ? array_like_or_iterator : Array.from(array_like_or_iterator);\n  }\n  return [];\n}\nexport {\n  ASYNC as A,\n  BOUNDARY_EFFECT as B,\n  COMMENT_NODE as C,\n  DIRTY as D,\n  ERROR_VALUE as E,\n  attr_class as F,\n  HYDRATION_ERROR as H,\n  INERT as I,\n  LEGACY_PROPS as L,\n  MAYBE_DIRTY as M,\n  ROOT_EFFECT as R,\n  STATE_SYMBOL as S,\n  UNOWNED as U,\n  HYDRATION_END as a,\n  HYDRATION_START as b,\n  HYDRATION_START_ELSE as c,\n  EFFECT_RAN as d,\n  CLEAN as e,\n  EFFECT as f,\n  BLOCK_EFFECT as g,\n  BRANCH_EFFECT as h,\n  DESTROYED as i,\n  DERIVED as j,\n  EFFECT_TRANSPARENT as k,\n  EFFECT_PRESERVED as l,\n  INSPECT_EFFECT as m,\n  UNINITIALIZED as n,\n  HEAD_EFFECT as o,\n  STALE_REACTION as p,\n  RENDER_EFFECT as q,\n  USER_EFFECT as r,\n  DISCONNECTED as s,\n  REACTION_IS_UPDATING as t,\n  is_passive_event as u,\n  render as v,\n  experimental_async_ssr as w,\n  slot as x,\n  attr as y,\n  ensure_array_like as z\n};\n", "const SECURITY_HEADERS = {\n  \"Cross-Origin-Opener-Policy\": \"same-origin\",\n  \"Cross-Origin-Embedder-Policy\": \"require-corp\",\n  \"Cross-Origin-Resource-Policy\": \"same-origin\",\n  \"Origin-Agent-Cluster\": \"?1\"\n};\nconst SECURITY_HEADER_ENTRIES = Object.entries(SECURITY_HEADERS);\nconst applySecurityHeaders = (headers) => {\n  for (const [header, value] of SECURITY_HEADER_ENTRIES) {\n    headers.set(header, value);\n  }\n};\nconst rewrapResponse = (response) => {\n  const cloned = response.clone();\n  const headers = new Headers(cloned.headers);\n  applySecurityHeaders(headers);\n  return new Response(cloned.body, {\n    status: cloned.status,\n    statusText: cloned.statusText,\n    headers\n  });\n};\nconst handle = async ({ event, resolve }) => {\n  const response = await resolve(event, {\n    filterSerializedResponseHeaders: (name) => name === \"content-type\"\n  });\n  return rewrapResponse(response);\n};\nexport {\n  handle\n};\n", "import { x as slot } from \"../../chunks/index.js\";\nfunction _layout($$renderer, $$props) {\n  $$renderer.push(`<!--[-->`);\n  slot($$renderer, $$props, \"default\", {});\n  $$renderer.push(`<!--]-->`);\n}\nexport {\n  _layout as default\n};\n", "\n\nexport const index = 0;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/_layout.svelte.js')).default;\nexport const imports = [\"_app/immutable/nodes/0.BWtM9yRt.js\",\"_app/immutable/chunks/NZTpNUN0.js\",\"_app/immutable/chunks/J393zdJQ.js\",\"_app/immutable/chunks/D4DQbwrw.js\"];\nexport const stylesheets = [\"_app/immutable/assets/0.CnyRlqf4.css\"];\nexport const fonts = [];\n", "import { g as getContext, e as escape_html } from \"../../chunks/context.js\";\nimport { n as noop } from \"../../chunks/utils2.js\";\nimport \"@sveltejs/kit/internal/server\";\nimport \"@sveltejs/kit/internal\";\nimport { w as writable } from \"../../chunks/exports.js\";\nimport \"../../chunks/utils.js\";\nfunction create_updated_store() {\n  const { set, subscribe } = writable(false);\n  {\n    return {\n      subscribe,\n      // eslint-disable-next-line @typescript-eslint/require-await\n      check: async () => false\n    };\n  }\n}\nconst is_legacy = noop.toString().includes(\"$$\") || /function \\w+\\(\\) \\{\\}/.test(noop.toString());\nif (is_legacy) {\n  ({\n    data: {},\n    form: null,\n    error: null,\n    params: {},\n    route: { id: null },\n    state: {},\n    status: -1,\n    url: new URL(\"https://example.com\")\n  });\n}\nconst stores = {\n  updated: /* @__PURE__ */ create_updated_store()\n};\n({\n  check: stores.updated.check\n});\nfunction context() {\n  return getContext(\"__request__\");\n}\nconst page$1 = {\n  get error() {\n    return context().page.error;\n  },\n  get status() {\n    return context().page.status;\n  }\n};\nconst page = page$1;\nfunction Error$1($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    $$renderer2.push(`<h1>${escape_html(page.status)}</h1> <p>${escape_html(page.error?.message)}</p>`);\n  });\n}\nexport {\n  Error$1 as default\n};\n", "\n\nexport const index = 1;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/fallbacks/error.svelte.js')).default;\nexport const imports = [\"_app/immutable/nodes/1.DdKoi16C.js\",\"_app/immutable/chunks/NZTpNUN0.js\",\"_app/immutable/chunks/J393zdJQ.js\",\"_app/immutable/chunks/D4DQbwrw.js\",\"_app/immutable/chunks/BuNyUiBZ.js\",\"_app/immutable/chunks/BnGH0CUP.js\",\"_app/immutable/chunks/C222IYg3.js\"];\nexport const stylesheets = [];\nexport const fonts = [];\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport type { RpcTargetBranded, __RPC_TARGET_BRAND } from \"./types.js\";\n\n// Polyfill Symbol.dispose for browsers that don't support it yet\nif (!Symbol.dispose) {\n  (Symbol as any).dispose = Symbol.for('dispose');\n}\nif (!Symbol.asyncDispose) {\n  (Symbol as any).asyncDispose = Symbol.for('asyncDispose');\n}\n\nlet workersModuleName = navigator.userAgent === \"Cloudflare-Workers\" ? \"cloudflare:workers\" : null;\nlet workersModule: any;\nif (workersModuleName) {\n  workersModule = await import(/* @vite-ignore */workersModuleName);\n}\n\nexport interface RpcTarget {\n  [__RPC_TARGET_BRAND]: never;\n};\n\nexport let RpcTarget = workersModule ? workersModule.RpcTarget : class {};\n\nexport type PropertyPath = (string | number)[];\n\ntype TypeForRpc = \"unsupported\" | \"primitive\" | \"object\" | \"function\" | \"array\" | \"date\" |\n    \"bigint\" | \"bytes\" | \"stub\" | \"rpc-promise\" | \"rpc-target\" | \"rpc-thenable\" | \"error\" |\n    \"undefined\";\n\nexport function typeForRpc(value: unknown): TypeForRpc {\n  switch (typeof value) {\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n      return \"primitive\";\n\n    case \"undefined\":\n      return \"undefined\";\n\n    case \"object\":\n    case \"function\":\n      // Test by prototype, below.\n      break;\n\n    case \"bigint\":\n      return \"bigint\";\n\n    default:\n      return \"unsupported\";\n  }\n\n  // Ugh JavaScript, why is `typeof null` equal to \"object\" but null isn't otherwise anything like\n  // an object?\n  if (value === null) {\n    return \"primitive\";\n  }\n\n  // Aside from RpcTarget, we generally don't support serializing *subclasses* of serializable\n  // types, so we switch on the exact prototype rather than use `instanceof` here.\n  let prototype = Object.getPrototypeOf(value);\n  switch (prototype) {\n    case Object.prototype:\n      return \"object\";\n\n    case Function.prototype:\n      return \"function\";\n\n    case Array.prototype:\n      return \"array\";\n\n    case Date.prototype:\n      return \"date\";\n\n    case Uint8Array.prototype:\n      return \"bytes\";\n\n    // TODO: All other structured clone types.\n\n    case RpcStub.prototype:\n      return \"stub\";\n\n    case RpcPromise.prototype:\n      return \"rpc-promise\";\n\n    // TODO: Promise<T> or thenable\n\n    default:\n      if (workersModule) {\n        // TODO: We also need to match `RpcPromise` and `RpcProperty`, but they currently aren't\n        //   exported by cloudflare:workers.\n        if (prototype == workersModule.RpcStub.prototype ||\n            value instanceof workersModule.ServiceStub) {\n          return \"rpc-target\";\n        } else if (prototype == workersModule.RpcPromise.prototype ||\n                   prototype == workersModule.RpcProperty.prototype) {\n          // Like rpc-target, but should be wrapped in RpcPromise, so that it can be pull()ed,\n          // which will await the thenable.\n          return \"rpc-thenable\";\n        }\n      }\n\n      if (value instanceof RpcTarget) {\n        return \"rpc-target\";\n      }\n\n      if (value instanceof Error) {\n        return \"error\";\n      }\n\n      return \"unsupported\";\n  }\n}\n\nfunction mapNotLoaded(): never {\n  throw new Error(\"RPC map() implementation was not loaded.\");\n}\n\n// map() is implemented in `map.ts`. We can't import it here because it would create an import\n// cycle, so instead we define two hook functions that map.ts will overwrite when it is imported.\nexport let mapImpl: MapImpl = { applyMap: mapNotLoaded, sendMap: mapNotLoaded };\n\ntype MapImpl = {\n  // Applies a map function to an input value (usually an array).\n  applyMap(input: unknown, parent: object | undefined, owner: RpcPayload | null,\n           captures: StubHook[], instructions: unknown[])\n          : StubHook;\n\n  // Implements the .map() method of RpcStub.\n  sendMap(hook: StubHook, path: PropertyPath, func: (value: RpcPromise) => unknown)\n         : RpcPromise;\n}\n\n// Inner interface backing an RpcStub or RpcPromise.\n//\n// A hook may eventually resolve to a \"payload\".\n//\n// Declared as `abstract class` to allow `instanceof StubHook`, used by `RpcStub` constructor.\n//\n// This is conceptually similar to the Cap'n Proto C++ class `ClientHook`.\nexport abstract class StubHook {\n  // Call a function at the given property path with the given arguments. Returns a hook for the\n  // promise for the result.\n  abstract call(path: PropertyPath, args: RpcPayload): StubHook;\n\n  // Apply a map operation.\n  //\n  // `captures` is a list of external stubs which are used as part of the mapper function.\n  // NOTE: The callee takes ownership of `captures`.\n  //\n  // `instructions` is a JSON-serializable value describing the mapper function as a series of\n  // steps. Each step is an expression to evaluate, in the usual RPC expression format. The last\n  // instruction is the return value.\n  //\n  // Each instruction can refer to the results of any of the instructions before it, as well as to\n  // the captures, as if they were imports on the import table. In particular:\n  // * The value 0 is the input to the mapper function (e.g. one element of the array being mapped).\n  // * Positive values are 1-based indexes into the instruction table, representing the results of\n  //   previous instructions.\n  // * Negative values are -1-based indexes into the capture list.\n  abstract map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook;\n\n  // Read the property at the given path. Returns a StubHook representing a promise for that\n  // property. This behaves very similarly to call(), except that no actual function is invoked\n  // on the remote end, the property is simply returned. (Well, if the property has a getter, then\n  // that will be invoked...)\n  //\n  // (In the case that this stub is a promise with a resolution payload, get() implies cloning\n  // a branch of the payload, making a deep copy of any pass-by-value content.)\n  abstract get(path: PropertyPath): StubHook;\n\n  // Create a clone of this StubHook, which can be disposed independently.\n  //\n  // The returned hook is NOT considered a promise, so will not resolve to a payload (you can use\n  // `get([])` to get a promise for a cloned payload).\n  abstract dup(): StubHook;\n\n  // Requests resolution of a StubHook that represents a promise, and eventually produces the\n  // payload.\n  //\n  // pull() should not be called on capabilities that aren't promises. It may never resolve or it\n  // may throw an exception.\n  //\n  // If pull() is never called (on a remote promise), the RPC system will not transmit the\n  // resolution at all. This allows a promise to be used strictly for pipelining.\n  //\n  // If the payload is already available, pull() returns it immediately, instead of returning a\n  // promise. This allows the caller to skip the microtask queue which is sometimes necessary to\n  // maintain e-order guarantees.\n  //\n  // The returned RpcPayload is the same one backing the StubHook itself. If the caller delivers\n  // or disposes the payload directly, then it should not call dispose() on the hook. If the caller\n  // does not intend to consume the StubHook, the caller must take responsibility for cloning the\n  // payload.\n  //\n  // You can call pull() multiple times, but it will return the same RpcPayload every time, and\n  // that payload should only be disposed once.\n  //\n  // If pull() returns a promise which rejects, the StubHook does not need to be disposed.\n  abstract pull(): RpcPayload | Promise<RpcPayload>;\n\n  // Called to prevent this stub from generating unhandled rejection events if it throws without\n  // having been pulled. Without this, if a client \"push\"es a call that immediately throws before\n  // the client manages to \"pull\" it or use it in a pipeline, this may be treated by the system as\n  // an unhandled rejection. Unfortuntaely, this unhandled rejection would be reported in the\n  // callee rather than the caller, possibly causing the callee to crash or log spurious errors,\n  // even though it's really up to the caller to deal with the exception!\n  abstract ignoreUnhandledRejections(): void;\n\n  // Attempts to cancel any outstanding promise backing this hook, and disposes the payload that\n  // pull() would return (if any). If a pull() promise is outstanding, it may still resolve (with\n  // a disposed payload) or it may reject. It's safe to call dispose() multiple times.\n  abstract dispose(): void;\n\n  abstract onBroken(callback: (error: any) => void): void;\n}\n\nexport class ErrorStubHook extends StubHook {\n  constructor(private error: any) { super(); }\n\n  call(path: PropertyPath, args: RpcPayload): StubHook { return this; }\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook { return this; }\n  get(path: PropertyPath): StubHook { return this; }\n  dup(): StubHook { return this; }\n  pull(): RpcPayload | Promise<RpcPayload> { return Promise.reject(this.error); }\n  ignoreUnhandledRejections(): void {}\n  dispose(): void {}\n  onBroken(callback: (error: any) => void): void {\n    try {\n      callback(this.error);\n    } catch (err) {\n      // Don't throw back into the RPC system. Treat this as an unhandled rejection.\n      Promise.resolve(err);\n    }\n  }\n};\n\nconst DISPOSED_HOOK: StubHook = new ErrorStubHook(\n    new Error(\"Attempted to use RPC stub after it has been disposed.\"));\n\n// A call interceptor can be used to intercept all RPC stub invocations within some synchronous\n// scope. This is used to implement record/replay\ntype CallInterceptor = (hook: StubHook, path: PropertyPath, params: RpcPayload) => StubHook;\nlet doCall: CallInterceptor = (hook: StubHook, path: PropertyPath, params: RpcPayload) => {\n  return hook.call(path, params);\n}\n\nexport function withCallInterceptor<T>(interceptor: CallInterceptor, callback: () => T): T {\n  let oldValue = doCall;\n  doCall = interceptor;\n  try {\n    return callback();\n  } finally {\n    doCall = oldValue;\n  }\n}\n\n// Private symbol which may be used to unwrap the real stub through the Proxy.\nlet RAW_STUB = Symbol(\"realStub\");\n\nexport interface RpcStub extends Disposable {\n  // Declare magic `RAW_STUB` key that unwraps the proxy.\n  [RAW_STUB]: this;\n}\n\nconst PROXY_HANDLERS: ProxyHandler<{raw: RpcStub}> = {\n  apply(target: {raw: RpcStub}, thisArg: any, argumentsList: any[]) {\n    let stub = target.raw;\n    return new RpcPromise(doCall(stub.hook,\n        stub.pathIfPromise || [], RpcPayload.fromAppParams(argumentsList)), []);\n  },\n\n  get(target: {raw: RpcStub}, prop: string | symbol, receiver: any) {\n    let stub = target.raw;\n    if (prop === RAW_STUB) {\n      return stub;\n    } else if (prop in RpcPromise.prototype) {\n      // Any method or property declared on RpcPromise (including inherited from RpcStub or\n      // Object) should pass through to the target object, as trying to turn these into RPCs will\n      // likely be problematic.\n      //\n      // Note we don't just check `prop in target` because we intentionally want to hide the\n      // properties `hook` and `path`.\n      return (<any>stub)[prop];\n    } else if (typeof prop === \"string\") {\n      // Return promise for property.\n      return new RpcPromise(stub.hook,\n          stub.pathIfPromise ? [...stub.pathIfPromise, prop] : [prop]);\n    } else if (prop === Symbol.dispose &&\n          (!stub.pathIfPromise || stub.pathIfPromise.length == 0)) {\n      // We only advertise Symbol.dispose on stubs and root promises, not properties.\n      return () => {\n        stub.hook.dispose();\n        stub.hook = DISPOSED_HOOK;\n      };\n    } else {\n      return undefined;\n    }\n  },\n\n  has(target: {raw: RpcStub}, prop: string | symbol) {\n    let stub = target.raw;\n    if (prop === RAW_STUB) {\n      return true;\n    } else if (prop in RpcPromise.prototype) {\n      return prop in stub;\n    } else if (typeof prop === \"string\") {\n      return true;\n    } else if (prop === Symbol.dispose &&\n          (!stub.pathIfPromise || stub.pathIfPromise.length == 0)) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  construct(target: {raw: RpcStub}, args: any) {\n    throw new Error(\"An RPC stub cannot be used as a constructor.\");\n  },\n\n  defineProperty(target: {raw: RpcStub}, property: string | symbol, attributes: PropertyDescriptor)\n      : boolean {\n    throw new Error(\"Can't define properties on RPC stubs.\");\n  },\n\n  deleteProperty(target: {raw: RpcStub}, p: string | symbol): boolean {\n    throw new Error(\"Can't delete properties on RPC stubs.\");\n  },\n\n  getOwnPropertyDescriptor(target: {raw: RpcStub}, p: string | symbol): PropertyDescriptor | undefined {\n    // Treat all properties as prototype properties. That's probably fine?\n    return undefined;\n  },\n\n  getPrototypeOf(target: {raw: RpcStub}): object | null {\n    return Object.getPrototypeOf(target.raw);\n  },\n\n  isExtensible(target: {raw: RpcStub}): boolean {\n    return false;\n  },\n\n  ownKeys(target: {raw: RpcStub}): ArrayLike<string | symbol> {\n    return [];\n  },\n\n  preventExtensions(target: {raw: RpcStub}): boolean {\n    // Extensions are not possible anyway.\n    return true;\n  },\n\n  set(target: {raw: RpcStub}, p: string | symbol, newValue: any, receiver: any): boolean {\n    throw new Error(\"Can't assign properties on RPC stubs.\");\n  },\n\n  setPrototypeOf(target: {raw: RpcStub}, v: object | null): boolean {\n    throw new Error(\"Can't override prototype of RPC stubs.\");\n  },\n};\n\n// Implementation of RpcStub.\n//\n// Note that the in the public API, we override the type of RpcStub to reflect the interface\n// exposed by the proxy. That happens in index.ts. But for internal purposes, it's easier to just\n// omit the type parameter.\nexport class RpcStub extends RpcTarget {\n  // Although `hook` and `path` are declared `public` here, they are effectively hidden by the\n  // proxy.\n  constructor(hook: StubHook, pathIfPromise?: PropertyPath) {\n    super();\n\n    if (!(hook instanceof StubHook)) {\n      // Application invoked the constructor to explicitly construct a stub backed by some value\n      // (usually an RpcTarget). (Note we override the types as seen by the app, which is why\n      // the app can pass something that isn't a StubHook -- within the implementation, though,\n      // we always pass StubHook.)\n      let value = <any>hook;\n      if (value instanceof RpcTarget || value instanceof Function) {\n        hook = TargetStubHook.create(value, undefined);\n      } else {\n        // We adopt the value with \"return\" semantics since we want to take ownership of any stubs\n        // within.\n        hook = new PayloadStubHook(RpcPayload.fromAppReturn(value));\n      }\n\n      // Don't let app set this.\n      if (pathIfPromise) {\n        throw new TypeError(\"RpcStub constructor expected one argument, received two.\");\n      }\n    }\n\n    this.hook = hook;\n    this.pathIfPromise = pathIfPromise;\n\n    // Proxy has an unfortunate rule that it will only be considered callable if the underlying\n    // `target` is callable, i.e. a function. So our target *must* be callable. So we use a\n    // dummy function.\n    let func: any = () => {};\n    func.raw = this;\n    return new Proxy(func, PROXY_HANDLERS);\n  }\n\n  public hook: StubHook;\n  public pathIfPromise?: PropertyPath;\n\n  dup(): RpcStub {\n    // Unfortunately the method will be invoked with `this` being the Proxy, not the `RpcPromise`\n    // itself, so we have to unwrap it.\n\n    // Note dup() intentionally resets the path to empty and turns the result into a stub.\n    // TODO: Maybe it should actually return the same type? But I think that's not what it does\n    //   in Workers RPC today? (Need to check.) Alternatively, should there be an optional\n    //   parameter to specify promise vs. stub?\n    let target = this[RAW_STUB];\n    if (target.pathIfPromise) {\n      return new RpcStub(target.hook.get(target.pathIfPromise));\n    } else {\n      return new RpcStub(target.hook.dup());\n    }\n  }\n\n  onRpcBroken(callback: (error: any) => void) {\n    this[RAW_STUB].hook.onBroken(callback);\n  }\n\n  map(func: (value: RpcPromise) => unknown): RpcPromise {\n    let {hook, pathIfPromise} = this[RAW_STUB];\n    return mapImpl.sendMap(hook, pathIfPromise || [], func);\n  }\n}\n\nexport class RpcPromise extends RpcStub {\n  // TODO: Support passing target value or promise to constructor.\n  constructor(hook: StubHook, pathIfPromise: PropertyPath) {\n    super(hook, pathIfPromise);\n  }\n\n  then(onfulfilled?: ((value: unknown) => unknown) | undefined | null,\n       onrejected?: ((reason: any) => unknown) | undefined | null)\n       : Promise<unknown> {\n    return pullPromise(this).then(...arguments);\n  }\n\n  catch(onrejected?: ((reason: any) => unknown) | undefined | null): Promise<unknown> {\n    return pullPromise(this).catch(...arguments);\n  }\n\n  finally(onfinally?: (() => void) | undefined | null): Promise<unknown> {\n    return pullPromise(this).finally(...arguments);\n  }\n}\n\n// Given a stub (still wrapped in a Proxy), extract the underlying `StubHook`.\n//\n// The caller takes ownership, meaning it's expected that the original stub will never be disposed\n// itself, but the caller is responsible for calling `dispose()` on the returned hook.\n//\n// However, if the stub points to a property of some other stub or promise, then no ownership is\n// \"transferred\" because properties do not actually have disposers. However, the returned hook is\n// a new hook that aliases that property, but does actually need to be disposed.\n//\n// The result is a promise (i.e. can be pull()ed) if and only if the input is a promise.\nexport function unwrapStubTakingOwnership(stub: RpcStub): StubHook {\n  let {hook, pathIfPromise} = stub[RAW_STUB];\n\n  if (pathIfPromise && pathIfPromise.length > 0) {\n    return hook.get(pathIfPromise);\n  } else {\n    return hook;\n  }\n}\n\n// Given a stub (still wrapped in a Proxy), extract the underlying `StubHook`, and dulpicate it,\n// returning the duplicate.\n//\n// The caller is responsible for disposing the returned hook, but the original stub also still\n// needs to be disposed by its owner (unless it is a proprety, which never needs disposal).\n//\n// The result is a promise (i.e. can be pull()ed) if and only if the input is a promise. Note that\n// this differs from the semantics of the actual `dup()` method.\nexport function unwrapStubAndDup(stub: RpcStub): StubHook {\n  let {hook, pathIfPromise} = stub[RAW_STUB];\n\n  if (pathIfPromise) {\n    return hook.get(pathIfPromise);\n  } else {\n    return hook.dup();\n  }\n}\n\n// Unwrap a stub returning the underlying `StubHook`, returning `undefined` if it is a property\n// stub.\n//\n// This function is agnostic to ownership transfer. Excatly one of `stub` or the return `hook` must\n// eventually be disposed (unless `undefined` is returned, in which case neither need to be\n// disposed, as properties are not normally disposable).\nexport function unwrapStubNoProperties(stub: RpcStub): StubHook | undefined {\n  let {hook, pathIfPromise} = stub[RAW_STUB];\n\n  if (pathIfPromise && pathIfPromise.length > 0) {\n    return undefined;\n  }\n\n  return hook;\n}\n\n// Unwrap a stub returning the underlying `StubHook`. If it's a property, return the `StubHook`\n// representing the stub or promise of which is is a proprety.\n//\n// This function is agnostic to ownership transfer. Excatly one of `stub` or the return `hook` must\n// eventually be disposed.\nexport function unwrapStubOrParent(stub: RpcStub): StubHook {\n  return stub[RAW_STUB].hook;\n}\n\n// Given a stub (still wrapped in a Proxy), extract the `hook` and `pathIfPromise` properties.\n//\n// This function is agnostic to ownership transfer. Excatly one of `stub` or the return `hook` must\n// eventually be disposed.\nexport function unwrapStubAndPath(stub: RpcStub): {hook: StubHook, pathIfPromise?: PropertyPath} {\n  return stub[RAW_STUB];\n}\n\n// Given a promise stub (still wrapped in a Proxy), pull the remote promise and deliver the\n// payload. This is a helper used to implement the then/catch/finally methods of RpcPromise.\nasync function pullPromise(promise: RpcPromise): Promise<unknown> {\n  let {hook, pathIfPromise} = promise[RAW_STUB];\n  if (pathIfPromise!.length > 0) {\n    // If this isn't the root promise, we have to clone it and pull the clone. This is a little\n    // weird in terms of disposal: There's no way for the app to dispose/cancel the promise while\n    // waiting becaues it never actually got a direct disposable reference. It has to dispose\n    // the result.\n    hook = hook.get(pathIfPromise!);\n  }\n  let payload = await hook.pull();\n  return payload.deliverResolve();\n}\n\n// =======================================================================================\n// RpcPayload\n\nexport type LocatedPromise = {parent: object, property: string | number, promise: RpcPromise};\n\n// Represents the params to an RPC call, or the resolution of an RPC promise, as it passes\n// through the system.\n//\n// `RpcPayload` is a linear type -- it is passed to or returned from a call, ownership is being\n// transferred. The payload in turn owns all the stubs within it. Disposing the payload disposes\n// the stubs.\n//\n// Hypothetically, when an `RpcPayload` is first constructed from a message structure passed from\n// the app, it ought to be deep-copied, for a few reasons:\n// - To ensure subsequent modifications of the data structure by the app aren't reflected in the\n//   already-sent message.\n// - To find all stubs in the message tree, to take ownership of them.\n// - To find all RpcTargets in the message tree, to wrap them in stubs.\n//\n// However, most payloads are immediately serialized to send across the wire. Said serialization\n// *also* has to make a deep copy, and takes ownership of all stubs found within. In the case that\n// the payload is immediately serialized, then making a deep copy first is wasteful.\n//\n// So, as an optimization, RpcPayload does not necessarily make a copy right away. Instead, it\n// keeps track of whether it's still pointing at the message structure received directly from the\n// app. In that case, the serializer can operate on the original structure directly, making it\n// more efficient.\n//\n// On the receiving end, when an RpcPayload is deserialized from the wire, the payload can safely\n// be delivered directly to the app without a copy. However, if the app makes a loopback call to\n// itself, the payload may never cross the wire. In this case, a deep copy must be made before\n// delivering the final message to the app. There are really two reasons for this copy:\n// - We obviously don't want the caller and callee sharing in-memory mutable data structures, as\n//   this would lead to vasty different behavior than what you'd see when doing RPC across a\n//   network connection.\n// - Before delivering the message to the application, all promises embedded in the message must\n//   be resolved. This is what makes pipelining possible: the sender of a message can place\n//   `RpcPromise`s in it that refer back to values in the recipient's process. These will be filled\n//   in just before delivering the message to the recipient, so that there's no need to transmit\n//   these values back and forth across the wire. It would be unreasonable to expect the\n//   application itself to check the message for promises and resolve them all, so instead the\n//   system automatically resolves all promises upfront, replacing them with their resolutions.\n//   This modifies the payload in-place -- but this of course requires that the payload is\n//   operating on a copy of the message, not the original provided from the sending app.\n//\n// For both the purposes of disposal and substituting promises with their resolutions, it is\n// necessary at some point to make a list of all the stubs (including promise stubs) present in\n// the message. Again, `RpcPayload` tries to minimize the number of times that the whole message\n// needs to be walked, so it implements the following policy:\n// * When constructing a payload from an app-provided message object, the message is not walked\n//   upfront. We do not know yet what stubs it contains.\n// * When deserializing a payload from the wire, we build a list of stubs as part of the\n//   deserialization process.\n// * If we need to deep-copy an app-provided message, we make a list of stubs then.\n// * Hence, we have a list of stubs if and only if the message structure was NOT provided directly\n//   by the application.\n// * If an app-provided payload is serialized, the serializer finds the stubs. (It also typically\n//   takes ownership of the stubs, effectively consuming the payload, so there's no need to build\n//   a list of the stubs.)\n// * If an app-provided payload is disposed, then we have to walk the message at that time to\n//   dispose all stubs within. But, note that when a payload is serialized -- with the serializer\n//   taking ownership of stubs -- then the payload will NOT be disposed explicitly, so this step\n//   will not be needed.\nexport class RpcPayload {\n  // Create a payload from a value passed as params to an RPC from the app.\n  //\n  // The payload does NOT take ownership of any stubs in `value`, and but promises not to modify\n  // `value`. If the payload is delivered locally, `value` will be deep-copied first, so as not\n  // to have the sender and recipient end up sharing the same mutable object. `value` will not be\n  // touched again after the call returns synchronously (returns a promise) -- by that point,\n  // the value has either been copied or serialized to the wire.\n  public static fromAppParams(value: unknown): RpcPayload {\n    return new RpcPayload(value, \"params\");\n  }\n\n  // Create a payload from a value return from an RPC implementation by the app.\n  //\n  // Unlike fromAppParams(), in this case the payload takes ownership of all stubs in `value`, and\n  // may hold onto `value` for an arbitarily long time (e.g. to serve pipelined requests). It\n  // will still avoid modifying `value` and will make a deep copy if it is delivered locally.\n  public static fromAppReturn(value: unknown): RpcPayload {\n    return new RpcPayload(value, \"return\");\n  }\n\n  // Combine an array of payloads into a single payload whose value is an array. Ownership of all\n  // stubs is transferred from the inputs to the outputs, hence if the output is disposed, the\n  // inputs should not be. (In case of exception, nothing is disposed, though.)\n  public static fromArray(array: RpcPayload[]): RpcPayload {\n    let stubs: RpcStub[] = [];\n    let promises: LocatedPromise[] = [];\n\n    let resultArray: unknown[] = [];\n\n    for (let payload of array) {\n      payload.ensureDeepCopied();\n      for (let stub of payload.stubs!) {\n        stubs.push(stub);\n      }\n      for (let promise of payload.promises!) {\n        if (promise.parent === payload) {\n          // This promise is the root of the source payload. We need to reparent it to its proper\n          // location in the result array.\n          promise = {\n            parent: resultArray,\n            property: resultArray.length,\n            promise: promise.promise\n          };\n        }\n        promises.push(promise);\n      }\n      resultArray.push(payload.value);\n    }\n\n    return new RpcPayload(resultArray, \"owned\", stubs, promises);\n  }\n\n  // Create a payload from a value parsed off the wire using Evaluator.evaluate().\n  //\n  // A payload is constructed with a null value and the given stubs and promises arrays. The value\n  // is expected to be filled in by the evaluator, and the stubs and promises arrays are expected\n  // to be extended with stubs found during parsing. (This weird usage model is necessary so that\n  // if the root value turns out to be a promise, its `parent` in `promises` can be the payload\n  // object itself.)\n  //\n  // When done, the payload takes ownership of the final value and all the stubs within. It may\n  // modify the value in preparation for delivery, and may deliver the value directly to the app\n  // without copying.\n  public static forEvaluate(stubs: RpcStub[], promises: LocatedPromise[]) {\n    return new RpcPayload(null, \"owned\", stubs, promises);\n  }\n\n  // Deep-copy the given value, including dup()ing all stubs.\n  //\n  // If `value` is a function, it should be bound to `oldParent` as its `this`.\n  //\n  // If deep-copying from a branch of some other RpcPayload, it must be provided, to make sure\n  // RpcTargets found within don't get duplicate stubs.\n  public static deepCopyFrom(\n      value: unknown, oldParent: object | undefined, owner: RpcPayload | null): RpcPayload {\n    let result = new RpcPayload(null, \"owned\", [], []);\n    result.value = result.deepCopy(value, oldParent, \"value\", result, /*dupStubs=*/true, owner);\n    return result;\n  }\n\n  // Private constructor; use factory functions above to construct.\n  private constructor(\n    // The payload value.\n    public value: unknown,\n\n    // What is the provinance of `value`?\n    // \"params\": It came from the app, in params to a call. We must dupe any stubs within.\n    // \"return\": It came from the app, returned from a call. We take ownership of all stubs within.\n    // \"owned\": This value belongs fully to us, either because it was deserialized from the wire\n    //   or because we deep-copied a value from the app.\n    private source: \"params\" | \"return\" | \"owned\",\n\n    // `stubs` and `promises` are filled in only if `value` belongs to us (`source` is \"owned\") and\n    // so can safely be delivered to the app. If `value` came from thne app in the first place,\n    // then it cannot be delivered back to the app nor modified by us without first deep-copying\n    // it. `stubs` and `promises` will be computed as part of the deep-copy.\n\n    // All non-promise stubs found in `value`. Provided so that they can easily be disposed.\n    private stubs?: RpcStub[],\n\n    // All promises found in `value`. The locations of each promise are provided to allow\n    // substitutions later.\n    private promises?: LocatedPromise[]\n  ) {}\n\n  // For `soruce === \"return\"` payloads only, this tracks any StubHooks created around RpcTargets\n  // found in the payload at the time that it is serialized (or deep-copied) for return, so that we\n  // can make sure they are not disposed before the pipeline ends.\n  //\n  // This is initialized on first use.\n  private rpcTargets?: Map<RpcTarget | Function, StubHook>;\n\n  // Get the StubHook representing the given RpcTarget found inside this payload.\n  public getHookForRpcTarget(target: RpcTarget | Function, parent: object | undefined,\n                             dupStubs: boolean = true): StubHook {\n    if (this.source === \"params\") {\n      return TargetStubHook.create(target, parent);\n    } else if (this.source === \"return\") {\n      // If dupStubs is true, we want to both make sure the map contains the stub, and also return\n      // a dup of that stub.\n      //\n      // If dupStubs is false, then we are being called as part of ensureDeepCopy(), i.e. replacing\n      // ourselves with a deep copy. In this case we actually want the copy to end up owning all\n      // the hooks, and the map to be left empty. So what we do in this case is:\n      // * If the target is not in the map, we just create it, but don't populate the map.\n      // * If the target *is* in the map, we *remove* the hook from the map, and return it.\n\n      let hook = this.rpcTargets?.get(target);\n      if (hook) {\n        if (dupStubs) {\n          return hook.dup();\n        } else {\n          this.rpcTargets?.delete(target);\n          return hook;\n        }\n      } else {\n        hook = TargetStubHook.create(target, parent);\n        if (dupStubs) {\n          if (!this.rpcTargets) {\n            this.rpcTargets = new Map;\n          }\n          this.rpcTargets.set(target, hook);\n          return hook.dup();\n        } else {\n          return hook;\n        }\n      }\n    } else {\n      throw new Error(\"owned payload shouldn't contain raw RpcTargets\");\n    }\n  }\n\n  private deepCopy(\n      value: unknown, oldParent: object | undefined, property: string | number, parent: object,\n      dupStubs: boolean, owner: RpcPayload | null): unknown {\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"unsupported\":\n        // This will throw later on when someone tries to do something with it.\n        return value;\n\n      case \"primitive\":\n      case \"bigint\":\n      case \"date\":\n      case \"bytes\":\n      case \"error\":\n      case \"undefined\":\n        // immutable, no need to copy\n        // TODO: Should errors be copied if they have own properties?\n        return value;\n\n      case \"array\": {\n        // We have to construct the new array first, then fill it in, so we can pass it as the\n        // parent.\n        let array = <Array<unknown>>value;\n        let len = array.length;\n        let result = new Array(len);\n        for (let i = 0; i < len; i++) {\n          result[i] = this.deepCopy(array[i], array, i, result, dupStubs, owner);\n        }\n        return result;\n      }\n\n      case \"object\": {\n        // Plain object. Unfortunately there's no way to pre-allocate the right shape.\n        let result: Record<string, unknown> = {};\n        let object = <Record<string, unknown>>value;\n        for (let i in object) {\n          result[i] = this.deepCopy(object[i], object, i, result, dupStubs, owner);\n        }\n        return result;\n      }\n\n      case \"stub\":\n      case \"rpc-promise\": {\n        let stub = <RpcStub>value;\n        let hook: StubHook;\n        if (dupStubs) {\n          hook = unwrapStubAndDup(stub);\n        } else {\n          hook = unwrapStubTakingOwnership(stub);\n        }\n        if (stub instanceof RpcPromise) {\n          let promise = new RpcPromise(hook, []);\n          this.promises!.push({parent, property, promise});\n          return promise;\n        } else {\n          let newStub = new RpcStub(hook);\n          this.stubs!.push(newStub);\n          return newStub;\n        }\n      }\n\n      case \"function\":\n      case \"rpc-target\": {\n        let target = <RpcTarget | Function>value;\n        let stub: RpcStub;\n        if (owner) {\n          stub = new RpcStub(owner.getHookForRpcTarget(target, oldParent, dupStubs));\n        } else {\n          stub = new RpcStub(TargetStubHook.create(target, oldParent));\n        }\n        this.stubs!.push(stub);\n        return stub;\n      }\n\n      case \"rpc-thenable\": {\n        let target = <RpcTarget>value;\n        let promise: RpcPromise;\n        if (owner) {\n          promise = new RpcPromise(owner.getHookForRpcTarget(target, oldParent, dupStubs), []);\n        } else {\n          promise = new RpcPromise(TargetStubHook.create(target, oldParent), []);\n        }\n        this.promises!.push({parent, property, promise});\n        return promise;\n      }\n\n      default:\n        kind satisfies never;\n        throw new Error(\"unreachable\");\n    }\n  }\n\n  // Ensures that if the value originally came from an unowned source, we have replaced it with a\n  // deep copy.\n  public ensureDeepCopied() {\n    if (this.source !== \"owned\") {\n      // If we came from call params, we need to dupe any stubs. Otherwise (we came from a return),\n      // we take ownership of all stubs.\n      let dupStubs = this.source === \"params\";\n\n      this.stubs = [];\n      this.promises = [];\n\n      // Deep-copy the value.\n      try {\n        this.value = this.deepCopy(this.value, undefined, \"value\", this, dupStubs, this);\n      } catch (err) {\n        // Roll back the change.\n        this.stubs = undefined;\n        this.promises = undefined;\n        throw err;\n      }\n\n      // We now own the value.\n      this.source = \"owned\";\n\n      // `rpcTargets` should have been left empty. We can throw it out.\n      if (this.rpcTargets && this.rpcTargets.size > 0) {\n        throw new Error(\"Not all rpcTargets were accounted for in deep-copy?\");\n      }\n      this.rpcTargets = undefined;\n    }\n  }\n\n  // Resolve all promises in this payload and then assign the final value into `parent[property]`.\n  private deliverTo(parent: object, property: string | number, promises: Promise<any>[]): void {\n    this.ensureDeepCopied();\n\n    if (this.value instanceof RpcPromise) {\n      RpcPayload.deliverRpcPromiseTo(this.value, parent, property, promises);\n    } else {\n      (<any>parent)[property] = this.value;\n\n      for (let record of this.promises!) {\n        // Note that because we already did ensureDeepCopied(), replacing each promise with its\n        // resolution does not interfere with disposal later on -- disposal will be based on the\n        // `promises` list, so will still properly dispose each promise, which in turn disposes\n        // the promise's eventual payload.\n        RpcPayload.deliverRpcPromiseTo(record.promise, record.parent, record.property, promises);\n      }\n    }\n  }\n\n  private static deliverRpcPromiseTo(\n      promise: RpcPromise, parent: object, property: string | number,\n      promises: Promise<unknown>[]) {\n    // deepCopy() should have replaced any property stubs with normal promise stubs.\n    let hook = unwrapStubNoProperties(promise);\n    if (!hook) {\n      throw new Error(\"property promises should have been resolved earlier\");\n    }\n\n    let inner = hook.pull();\n    if (inner instanceof RpcPayload) {\n      // Immediately resolved to payload.\n      inner.deliverTo(parent, property, promises);\n    } else {\n      // It's a promise.\n      promises.push(inner.then(payload => {\n        let subPromises: Promise<unknown>[] = [];\n        payload.deliverTo(parent, property, subPromises);\n        if (subPromises.length > 0) {\n          return Promise.all(subPromises);\n        }\n      }));\n    }\n  }\n\n  // Call the given function with the payload as an argument. The call is made synchronously if\n  // possible, in order to maintain e-order. However, if any RpcPromises exist in the payload,\n  // they are awaited and substituted before calling the function. The result of the call is\n  // wrapped into another payload.\n  //\n  // The payload is automatically disposed after the call completes. The caller should not call\n  // dispose().\n  public async deliverCall(func: Function, thisArg: object | undefined): Promise<RpcPayload> {\n    try {\n      let promises: Promise<void>[] = [];\n      this.deliverTo(this, \"value\", promises);\n\n      // WARNING: It is critical that if the promises list is empty, we do not await anything, so\n      //   that the function is called immediately and synchronously. Otherwise, we might violate\n      //   e-order.\n      if (promises.length > 0) {\n        await Promise.all(promises);\n      }\n\n      // Call the function.\n      let result = Function.prototype.apply.call(func, thisArg, this.value);\n\n      if (result instanceof RpcPromise) {\n        // Special case: If the function immediately returns RpcPromise, we don't want to await it,\n        // since that will actually wait for the promise. Instead we want to construct a payload\n        // around it directly.\n        return RpcPayload.fromAppReturn(result);\n      } else {\n        // In all other cases, await the result (which may or may not be a promise, but `await`\n        // will just pass through non-promises).\n        return RpcPayload.fromAppReturn(await result);\n      }\n    } finally {\n      this.dispose();\n    }\n  }\n\n  // Produce a promise for this payload for return to the application. Any RpcPromises in the\n  // payload are awaited and substituted with their results first.\n  //\n  // The returned object will have a disposer which disposes the payload. The caller should not\n  // separately dispose it.\n  public async deliverResolve(): Promise<unknown> {\n    try {\n      let promises: Promise<void>[] = [];\n      this.deliverTo(this, \"value\", promises);\n\n      if (promises.length > 0) {\n        await Promise.all(promises);\n      }\n\n      let result = this.value;\n\n      // Add disposer to result.\n      if (result instanceof Object) {\n        if (!(Symbol.dispose in result)) {\n          // We want the disposer to be non-enumerable as otherwise it gets in the way of things\n          // like unit tests trying to deep-compare the result to an object.\n          Object.defineProperty(result, Symbol.dispose, {\n            // NOTE: Using `this.dispose.bind(this)` here causes Playwright's build of\n            //   Chromium 140.0.7339.16 to fail when the object is assigned to a `using` variable,\n            //   with the error:\n            //       TypeError: Symbol(Symbol.dispose) is not a function\n            //   I cannot reproduce this problem in Chrome 140.0.7339.127 nor in Node or workerd,\n            //   so maybe it was a short-lived V8 bug or something. To be safe, though, we use\n            //   `() => this.dispose()`, which seems to always work.\n            value: () => this.dispose(),\n            writable: true,\n            enumerable: false,\n            configurable: true,\n          });\n        }\n      }\n\n      return result;\n    } catch (err) {\n      // Automatically dispose since the application will never receive the disposable...\n      this.dispose();\n      throw err;\n    }\n  }\n\n  public dispose() {\n    if (this.source === \"owned\") {\n      // Oh good, we can just run through them.\n      this.stubs!.forEach(stub => stub[Symbol.dispose]());\n      this.promises!.forEach(promise => promise.promise[Symbol.dispose]());\n    } else if (this.source === \"return\") {\n      // Value received directly from app as a return value. We take ownership of all stubs, so we\n      // must recursively scan it for things to dispose.\n      this.disposeImpl(this.value, undefined);\n      if (this.rpcTargets && this.rpcTargets.size > 0) {\n        throw new Error(\"Not all rpcTargets were accounted for in disposeImpl()?\");\n      }\n    } else {\n      // this.source is \"params\". We don't own the stubs within.\n    }\n\n    // Make dispose() idempotent.\n    this.source = \"owned\";\n    this.stubs = [];\n    this.promises = [];\n  }\n\n  // Recursive dispose, called only when `source` is \"return\".\n  private disposeImpl(value: unknown, parent: object | undefined) {\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"unsupported\":\n      case \"primitive\":\n      case \"bigint\":\n      case \"bytes\":\n      case \"date\":\n      case \"error\":\n      case \"undefined\":\n        return;\n\n      case \"array\": {\n        let array = <Array<unknown>>value;\n        let len = array.length;\n        for (let i = 0; i < len; i++) {\n          this.disposeImpl(array[i], array);\n        }\n        return;\n      }\n\n      case \"object\": {\n        let object = <Record<string, unknown>>value;\n        for (let i in object) {\n          this.disposeImpl(object[i], object);\n        }\n        return;\n      }\n\n      case \"stub\":\n      case \"rpc-promise\": {\n        let stub = <RpcStub>value;\n        let hook = unwrapStubNoProperties(stub);\n        if (hook) {\n          hook.dispose();\n        }\n        return;\n      }\n\n      case \"function\":\n      case \"rpc-target\": {\n        let target = <RpcTarget | Function>value;\n        let hook = this.rpcTargets?.get(target);\n        if (hook) {\n          // We created a hook around this target earlier. Dispose it now.\n          hook.dispose();\n          this.rpcTargets!.delete(target);\n        } else {\n          // There never was a stub pointing at this target. This could be because:\n          // * The call was used only for promise pipelining, so the result was never serialized,\n          //   so it never got added to `rpcTargets`.\n          // * The same RpcTarget appears in the results twice, and we already disposed the hook\n          //   when we saw it earlier. Note that it's intentional that we should call the disposer\n          //   twice if the same object appears twice.\n          disposeRpcTarget(target);\n        }\n        return;\n      }\n\n      case \"rpc-thenable\":\n        // Since thenables are promises, we don't own them, so we don't dispose them.\n        return;\n\n      default:\n        kind satisfies never;\n        return;\n    }\n  }\n\n  // Ignore unhandled rejections in all promises in this payload -- that is, all promises that\n  // *would* be awaited if this payload were to be delivered. See the similarly-named method of\n  // StubHook for explanation.\n  ignoreUnhandledRejections(): void {\n    if (this.stubs) {\n      // Propagate to all stubs and promises.\n      this.stubs.forEach(stub => {\n        unwrapStubOrParent(stub).ignoreUnhandledRejections();\n      });\n      this.promises!.forEach(\n          promise => unwrapStubOrParent(promise.promise).ignoreUnhandledRejections());\n    } else {\n      // Ugh we have to walk the tree.\n      this.ignoreUnhandledRejectionsImpl(this.value);\n    }\n  }\n\n  private ignoreUnhandledRejectionsImpl(value: unknown) {\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"unsupported\":\n      case \"primitive\":\n      case \"bigint\":\n      case \"bytes\":\n      case \"date\":\n      case \"error\":\n      case \"undefined\":\n      case \"function\":\n      case \"rpc-target\":\n        return;\n\n      case \"array\": {\n        let array = <Array<unknown>>value;\n        let len = array.length;\n        for (let i = 0; i < len; i++) {\n          this.ignoreUnhandledRejectionsImpl(array[i]);\n        }\n        return;\n      }\n\n      case \"object\": {\n        let object = <Record<string, unknown>>value;\n        for (let i in object) {\n          this.ignoreUnhandledRejectionsImpl(object[i]);\n        }\n        return;\n      }\n\n      case \"stub\":\n      case \"rpc-promise\":\n        unwrapStubOrParent(<RpcStub>value).ignoreUnhandledRejections();\n        return;\n\n      case \"rpc-thenable\":\n        (<any>value).then((_: any) => {}, (_: any) => {});\n        return;\n\n      default:\n        kind satisfies never;\n        return;\n    }\n  }\n};\n\n// =======================================================================================\n// Local StubHook implementations\n\n// Result of followPath().\ntype FollowPathResult = {\n  // Path led to a regular value.\n\n  value: unknown,              // the value\n  parent: object | undefined,  // the immediate parent (useful as `this` if making a call)\n  owner: RpcPayload | null,    // RpcPayload that owns the value, if any\n\n  hook?: never,\n  remainingPath?: never,\n} | {\n  // Path leads into another stub, which needs to be called recursively.\n\n  hook: StubHook,               // StubHook of the inner stub.\n  remainingPath: PropertyPath,  // Path to pass to `hook` when recursing.\n\n  value?: never,\n  parent?: never,\n  owner?: never,\n};\n\nfunction followPath(value: unknown, parent: object | undefined,\n                    path: PropertyPath, owner: RpcPayload | null): FollowPathResult {\n  for (let i = 0; i < path.length; i++) {\n    parent = <object>value;\n\n    let part = path[i];\n    if (part in Object.prototype) {\n      // Don't allow messing with Object.prototype properties over RPC. We block these even if\n      // the specific object has overridden them for consistency with the deserialization code,\n      // which will refuse to deserialize an object containing such properties. Anyway, it's\n      // impossible for a normal client to even request these because accessing Object prototype\n      // properties on a stub will resolve to the local prototype property, not making an RPC at\n      // all.\n      value = undefined;\n      continue;\n    }\n\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"object\":\n      case \"function\":\n        // Must be own property, NOT inherited from a prototype.\n        if (Object.hasOwn(<object>value, part)) {\n          value = (<any>value)[part];\n        } else {\n          value = undefined;\n        }\n        break;\n\n      case \"array\":\n        // For arrays, restricrt specifically to numeric indexes, to be consistent with\n        // serialization, which only sends a flat list.\n        if (Number.isInteger(part) && <number>part >= 0) {\n          value = (<any>value)[part];\n        } else {\n          value = undefined;\n        }\n        break;\n\n      case \"rpc-target\":\n      case \"rpc-thenable\": {\n        // Must be prototype property, and must NOT be inherited from `Object`.\n        if (Object.hasOwn(<object>value, part)) {\n          value = undefined;\n        } else {\n          value = (<any>value)[part];\n        }\n\n        // Since we're descending into the RpcTarget, the rest of the path is not \"owned\" by any\n        // RpcPayload.\n        owner = null;\n        break;\n      }\n\n      case \"stub\":\n      case \"rpc-promise\": {\n        let {hook: hook, pathIfPromise} = unwrapStubAndPath(<RpcStub>value);\n        return { hook, remainingPath:\n            pathIfPromise ? pathIfPromise.concat(path.slice(i)) : path.slice(i) };\n      }\n\n      case \"primitive\":\n      case \"bigint\":\n      case \"bytes\":\n      case \"date\":\n      case \"error\":\n        // These have no properties that can be accessed remotely.\n        value = undefined;\n        break;\n\n      case \"undefined\":\n        // Intentionally produce TypeError.\n        value = (value as any)[part];\n        break;\n\n      case \"unsupported\": {\n        if (i === 0) {\n          throw new TypeError(`RPC stub points at a non-serializable type.`);\n        } else {\n          let prefix = path.slice(0, i).join(\".\");\n          let remainder = path.slice(0, i).join(\".\");\n          throw new TypeError(\n              `'${prefix}' is not a serializable type, so property ${remainder} cannot ` +\n              `be accessed.`);\n        }\n      }\n\n      default:\n        kind satisfies never;\n        throw new TypeError(\"unreachable\");\n    }\n  }\n\n  // If we reached a promise, we actually want the caller to forward to the promise, not return\n  // the promise itself.\n  if (value instanceof RpcPromise) {\n    let {hook: hook, pathIfPromise} = unwrapStubAndPath(<RpcStub>value);\n    return { hook, remainingPath: pathIfPromise || [] };\n  }\n\n  // We don't validate the final value itself because we don't know the intended use yet. If it's\n  // for a call, any callable is valid. If it's for get(), then any serializable value is valid.\n  return {\n    value,\n    parent,\n    owner,\n  };\n}\n\n// Shared base class for PayloadStubHook and TargetStubHook.\nabstract class ValueStubHook extends StubHook {\n  protected abstract getValue(): {value: unknown, owner: RpcPayload | null};\n\n  call(path: PropertyPath, args: RpcPayload): StubHook {\n    try {\n      let {value, owner} = this.getValue();\n      let followResult = followPath(value, undefined, path, owner);\n\n      if (followResult.hook) {\n        return followResult.hook.call(followResult.remainingPath, args);\n      }\n\n      // It's a local function.\n      if (typeof followResult.value != \"function\") {\n        throw new TypeError(`'${path.join('.')}' is not a function.`);\n      }\n      let promise = args.deliverCall(followResult.value, followResult.parent);\n      return new PromiseStubHook(promise.then(payload => {\n        return new PayloadStubHook(payload);\n      }));\n    } catch (err) {\n      return new ErrorStubHook(err);\n    }\n  }\n\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook {\n    try {\n      let followResult: FollowPathResult;\n      try {\n        let {value, owner} = this.getValue();\n        followResult = followPath(value, undefined, path, owner);;\n      } catch (err) {\n        // Oops, we need to dispose the captures of which we took ownership.\n        for (let cap of captures) {\n          cap.dispose();\n        }\n        throw err;\n      }\n\n      if (followResult.hook) {\n        return followResult.hook.map(followResult.remainingPath, captures, instructions);\n      }\n\n      return mapImpl.applyMap(\n          followResult.value, followResult.parent, followResult.owner, captures, instructions);\n    } catch (err) {\n      return new ErrorStubHook(err);\n    }\n  }\n\n  get(path: PropertyPath): StubHook {\n    try {\n      let {value, owner} = this.getValue();\n\n      if (path.length === 0 && owner === null) {\n        // The only way this happens is if someone sends \"pipeline\" and references a\n        // TargetStubHook, but they shouldn't do that, because TargetStubHook never backs a\n        // promise, and a non-promise cannot be converted to a promise.\n        // TODO: Is this still correct for rpc-thenable?\n        throw new Error(\"Can't dup an RpcTarget stub as a promise.\");\n      }\n\n      let followResult = followPath(value, undefined, path, owner);\n\n      if (followResult.hook) {\n        return followResult.hook.get(followResult.remainingPath);\n      }\n\n      // Note that if `followResult.owner` is null, then we've descended into the contents of an\n      // RpcTarget. In that case, if this deep copy discovers an RpcTarget embedded in the result,\n      // it will create a new stub for it. If that RpcTarget has a disposer, it'll be disposed when\n      // that stub is disposed. If the same RpcTarget is returned in *another* get(), it create\n      // *another* stub, which calls the disposer *another* time. This can be quite weird -- the\n      // disposer may be called any number of times, including zero if the property is never read\n      // at all. Unfortunately, that's just the way it is. The application can avoid this problem by\n      // wrapping the RpcTarget in an RpcStub itself, proactively, and using that as the property --\n      // then, each time the property is get()ed, a dup() of that stub is returned.\n      return new PayloadStubHook(RpcPayload.deepCopyFrom(\n          followResult.value, followResult.parent, followResult.owner));\n    } catch (err) {\n      return new ErrorStubHook(err);\n    }\n  }\n}\n\n// StubHook wrapping an RpcPayload in local memory.\n//\n// This is used for:\n// - Resolution of a promise.\n//   - Initially on the server side, where it can be pull()ed and used in pipelining.\n//   - On the client side, after pull() has transmitted the payload.\n// - Implementing RpcTargets, on the server side.\n//   - Since the payload's root is an RpcTarget, pull()ing it will just duplicate the stub.\nexport class PayloadStubHook extends ValueStubHook {\n  constructor(payload: RpcPayload) {\n    super();\n    this.payload = payload;\n  }\n\n  private payload?: RpcPayload;  // cleared when disposed\n\n  private getPayload(): RpcPayload {\n    if (this.payload) {\n      return this.payload;\n    } else {\n      throw new Error(\"Attempted to use an RPC StubHook after it was disposed.\");\n    }\n  }\n\n  protected getValue() {\n    let payload = this.getPayload();\n    return {value: payload.value, owner: payload};\n  }\n\n  dup(): StubHook {\n    // Although dup() is documented as not copying the payload, what this really means is that\n    // you aren't expected to be able to pull() from a dup()ed hook if it is remote. However,\n    // PayloadStubHook already has the value locally, and there's nothing we can do except clone\n    // it here.\n    //\n    // TODO: Should we prohibit pull()ing from the clone? The fact that it'll be wrapped as\n    //   RpcStub instead of RpcPromise should already prevent this...\n    let thisPayload = this.getPayload();\n    return new PayloadStubHook(RpcPayload.deepCopyFrom(\n        thisPayload.value, undefined, thisPayload));\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    // Reminder: pull() intentionally returns the hook's own payload and not a clone. The caller\n    // only needs to dispose one of the hook or the payload. It is the caller's responsibility\n    // to not dispose the payload if they intend to keep the hook around.\n    return this.getPayload();\n  }\n\n  ignoreUnhandledRejections(): void {\n    if (this.payload) {\n      this.payload.ignoreUnhandledRejections();\n    }\n  }\n\n  dispose(): void {\n    if (this.payload) {\n      this.payload.dispose();\n      this.payload = undefined;\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    if (this.payload) {\n      if (this.payload.value instanceof RpcStub) {\n        // Payload is a single stub, we should forward onRpcBroken to it.\n        // TODO: Consider prohibiting PayloadStubHook created around a single stub; should always\n        //   use the underlying stub's hook instead?\n        this.payload.value.onRpcBroken(callback);\n      }\n\n      // TODO: Should native stubs be able to implement onRpcBroken?\n    }\n  }\n}\n\nfunction disposeRpcTarget(target: RpcTarget | Function) {\n  if (Symbol.dispose in target) {\n    try {\n      ((<Disposable><any>target)[Symbol.dispose])();\n    } catch (err) {\n      // We don't actually want to throw from dispose() as this will create trouble for\n      // the RPC state machine. Instead, treat the application's error as an unhandled\n      // rejection.\n      Promise.reject(err);\n    }\n  }\n}\n\n// Many TargetStubHooks could point at the same RpcTarget. We store a refcount in a separate\n// object that they all share.\n//\n// We can't store the refcount on the RpcTarget itself because if the application chooses to pass\n// the same RpcTarget into the RPC system multiple times, we need to call this disposer multiple\n// times for consistency.\ntype BoxedRefcount = { count: number };\n\n// StubHook which wraps an RpcTarget. This has similarities to PayloadStubHook (especially when\n// the root of the payload happens to be an RpcTarget), but there can only be one RpcPayload\n// pointing at an RpcTarget whereas there can be several TargetStubHooks pointing at it. Also,\n// TargetStubHook cannot be pull()ed, because it always backs an RpcStub, not an RpcPromise.\nclass TargetStubHook extends ValueStubHook {\n  // Constructs a TargetStubHook that is not duplicated from an existing hook.\n  //\n  // If `value` is a function, `parent` is bound as its \"this\".\n  static create(value: RpcTarget | Function, parent: object | undefined) {\n    if (typeof value !== \"function\") {\n      // If the target isn't callable, we don't need to pass a `this` to it, so drop `parent`.\n      // NOTE: `typeof value === \"function\"` checks if the value is callable. This technically\n      //   works even for `RpcTarget` implementations that are callable, not just plain functions.\n      parent = undefined;\n    }\n    return new TargetStubHook(value, parent);\n  }\n\n  private constructor(target: RpcTarget | Function,\n                      parent?: object | undefined,\n                      dupFrom?: TargetStubHook) {\n    super();\n    this.target = target;\n    this.parent = parent;\n    if (dupFrom) {\n      if (dupFrom.refcount) {\n        this.refcount = dupFrom.refcount;\n        ++this.refcount.count;\n      }\n    } else if (Symbol.dispose in target) {\n      // Disposer present, so we need to refcount.\n      this.refcount = {count: 1};\n    }\n  }\n\n  private target?: RpcTarget | Function;  // cleared when disposed\n  private parent?: object | undefined;  // `this` parameter when calling `target`\n  private refcount?: BoxedRefcount;  // undefined if not needed (because target has no disposer)\n\n  private getTarget(): RpcTarget | Function {\n    if (this.target) {\n      return this.target;\n    } else {\n      throw new Error(\"Attempted to use an RPC StubHook after it was disposed.\");\n    }\n  }\n\n  protected getValue() {\n    return {value: this.getTarget(), owner: null};\n  }\n\n  dup(): StubHook {\n    return new TargetStubHook(this.getTarget(), this.parent, this);\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    let target = this.getTarget();\n    if (\"then\" in target) {\n      // If the target is itself thenable, we allow it to be treated as a promise. This is used\n      // in particular to support wrapping a workerd-native RpcPromise or RpcProperty.\n      return Promise.resolve(target).then(resolution => {\n        return RpcPayload.fromAppReturn(resolution);\n      });\n    } else {\n      // This shouldn't be called since RpcTarget always becomes RpcStub, not RpcPromise, and you\n      // can only pull a promise.\n      return Promise.reject(new Error(\"Tried to resolve a non-promise stub.\"));\n    }\n  }\n\n  ignoreUnhandledRejections(): void {\n    // Nothing to do.\n  }\n\n  dispose(): void {\n    if (this.target) {\n      if (this.refcount) {\n        if (--this.refcount.count == 0) {\n          disposeRpcTarget(this.target);\n        }\n      }\n\n      this.target = undefined;\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    // TODO: Should RpcTargets be able to implement onRpcBroken?\n  }\n}\n\n// StubHook derived from a Promise for some other StubHook. Waits for the promise and then\n// forward calls, being careful to honor e-order.\nclass PromiseStubHook extends StubHook {\n  private promise: Promise<StubHook>;\n  private resolution: StubHook | undefined;\n\n  constructor(promise: Promise<StubHook>) {\n    super();\n\n    this.promise = promise.then(res => { this.resolution = res; return res; });\n  }\n\n  call(path: PropertyPath, args: RpcPayload): StubHook {\n    // Note: We can't use `resolution` even if it's available because it could technically break\n    //   e-order: A call() that arrives just after the resolution could be delivered faster than\n    //   a call() that arrives just before. Keeping the promise around and always waiting on it\n    //   avoids the problem.\n    // TODO: Is there a way around this?\n\n    // Once call() returns (synchronously), we can no longer touch the original args. Since we\n    // can't serialize them yet, we have to deep-copy them now.\n    args.ensureDeepCopied();\n\n    return new PromiseStubHook(this.promise.then(hook => hook.call(path, args)));\n  }\n\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook {\n    return new PromiseStubHook(this.promise.then(\n        hook => hook.map(path, captures, instructions),\n        err => {\n          for (let cap of captures) {\n            cap.dispose();\n          }\n          throw err;\n        }));\n  }\n\n  get(path: PropertyPath): StubHook {\n    // Note: e-order matters for get(), just like call(), in case the property has a getter.\n    return new PromiseStubHook(this.promise.then(hook => hook.get(path)));\n  }\n\n  dup(): StubHook {\n    if (this.resolution) {\n      return this.resolution.dup();\n    } else {\n      return new PromiseStubHook(this.promise.then(hook => hook.dup()));\n    }\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    // Luckily, resolutions are not subject to e-order, so it's safe to use `this.resolution`\n    // here. In fact, it is required to maintain e-order elsewhere: If this promise is being used\n    // as the input to some other local call (via promise pipelining), we need to make sure that\n    // other call is not delayed at all when this promise is already resolved.\n    if (this.resolution) {\n      return this.resolution.pull();\n    } else {\n      return this.promise.then(hook => hook.pull());\n    }\n  }\n\n  ignoreUnhandledRejections(): void {\n    if (this.resolution) {\n      this.resolution.ignoreUnhandledRejections();\n    } else {\n      this.promise.then(res => {\n        res.ignoreUnhandledRejections();\n      }, err => {\n        // Ignore the error!\n      });\n    }\n  }\n\n  dispose(): void {\n    if (this.resolution) {\n      this.resolution.dispose();\n    } else {\n      this.promise.then(hook => {\n        hook.dispose();\n      }, err => {\n        // nothing to dispose\n      });\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    if (this.resolution) {\n      this.resolution.onBroken(callback);\n    } else {\n      this.promise.then(hook => {\n        hook.onBroken(callback);\n      }, callback);\n    }\n  }\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { StubHook, RpcPayload, typeForRpc, RpcStub, RpcPromise, LocatedPromise, RpcTarget, PropertyPath, unwrapStubAndPath } from \"./core.js\";\n\nexport type ImportId = number;\nexport type ExportId = number;\n\n// =======================================================================================\n\nexport interface Exporter {\n  exportStub(hook: StubHook): ExportId;\n  exportPromise(hook: StubHook): ExportId;\n  getImport(hook: StubHook): ImportId | undefined;\n\n  // If a serialization error occurs after having exported some capabilities, this will be called\n  // to roll back the exports.\n  unexport(ids: Array<ExportId>): void;\n\n  onSendError(error: Error): Error | void;\n}\n\nclass NullExporter implements Exporter {\n  exportStub(stub: StubHook): never {\n    throw new Error(\"Cannot serialize RPC stubs without an RPC session.\");\n  }\n  exportPromise(stub: StubHook): never {\n    throw new Error(\"Cannot serialize RPC stubs without an RPC session.\");\n  }\n  getImport(hook: StubHook): ImportId | undefined {\n    return undefined;\n  }\n  unexport(ids: Array<ExportId>): void {}\n\n  onSendError(error: Error): Error | void {}\n}\n\nconst NULL_EXPORTER = new NullExporter();\n\n// Maps error name to error class for deserialization.\nconst ERROR_TYPES: Record<string, any> = {\n  Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError, AggregateError,\n  // TODO: DOMError? Others?\n};\n\n// Polyfill type for UInt8Array.toBase64(), which has started landing in JS runtimes but is not\n// supported everywhere just yet.\ninterface Uint8Array {\n  toBase64?(options?: {\n    alphabet?: \"base64\" | \"base64url\",\n    omitPadding?: boolean\n  }): string;\n};\n\ninterface FromBase64 {\n  fromBase64?(text: string, options?: {\n    alphabet?: \"base64\" | \"base64url\",\n    lastChunkHandling?: \"loose\" | \"strict\" | \"stop-before-partial\"\n  }): Uint8Array;\n}\n\n// Converts fully-hydrated messages into object trees that are JSON-serializable for sending over\n// the wire. This is used to implement serialization -- but it doesn't take the last step of\n// actually converting to a string. (The name is meant to be the opposite of \"Evaluator\", which\n// implements the opposite direction.)\nexport class Devaluator {\n  private constructor(private exporter: Exporter, private source: RpcPayload | undefined) {}\n\n  // Devaluate the given value.\n  // * value: The value to devaluate.\n  // * parent: The value's parent object, which would be used as `this` if the value were called\n  //     as a function.\n  // * exporter: Callbacks to the RPC session for exporting capabilities found in this message.\n  // * source: The RpcPayload which contains the value, and therefore owns stubs within.\n  //\n  // Returns: The devaluated value, ready to be JSON-serialized.\n  public static devaluate(\n      value: unknown, parent?: object, exporter: Exporter = NULL_EXPORTER, source?: RpcPayload)\n      : unknown {\n    let devaluator = new Devaluator(exporter, source);\n    try {\n      return devaluator.devaluateImpl(value, parent, 0);\n    } catch (err) {\n      if (devaluator.exports) {\n        try {\n          exporter.unexport(devaluator.exports);\n        } catch (err) {\n          // probably a side effect of the original error, ignore it\n        }\n      }\n      throw err;\n    }\n  }\n\n  private exports?: Array<ExportId>;\n\n  private devaluateImpl(value: unknown, parent: object | undefined, depth: number): unknown {\n    if (depth >= 64) {\n      throw new Error(\n          \"Serialization exceeded maximum allowed depth. (Does the message contain cycles?)\");\n    }\n\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"unsupported\": {\n        let msg;\n        try {\n          msg = `Cannot serialize value: ${value}`;\n        } catch (err) {\n          msg = \"Cannot serialize value: (couldn't stringify value)\";\n        }\n        throw new TypeError(msg);\n      }\n\n      case \"primitive\":\n        // Supported directly by JSON.\n        return value;\n\n      case \"object\": {\n        let object = <Record<string, unknown>>value;\n        let result: Record<string, unknown> = {};\n        for (let key in object) {\n          result[key] = this.devaluateImpl(object[key], object, depth + 1);\n        }\n        return result;\n      }\n\n      case \"array\": {\n        let array = <Array<unknown>>value;\n        let len = array.length;\n        let result = new Array(len);\n        for (let i = 0; i < len; i++) {\n          result[i] = this.devaluateImpl(array[i], array, depth + 1);\n        }\n        // Wrap literal arrays in an outer one-element array, to \"escape\" them.\n        return [result];\n      }\n\n      case \"bigint\":\n        return [\"bigint\", (<bigint>value).toString()];\n\n      case \"date\":\n        return [\"date\", (<Date>value).getTime()];\n\n      case \"bytes\": {\n        let bytes = value as Uint8Array;\n        if (bytes.toBase64) {\n          return [\"bytes\", bytes.toBase64({omitPadding: true})];\n        } else {\n          return [\"bytes\",\n              btoa(String.fromCharCode.apply(null, bytes as number[]).replace(/=*$/, \"\"))];\n        }\n      }\n\n      case \"error\": {\n        let e = <Error>value;\n\n        // TODO:\n        // - Determine type by checking prototype rather than `name`, which can be overridden?\n        // - Serialize cause / supressed error / etc.\n        // - Serialize added properties.\n\n        let rewritten = this.exporter.onSendError(e);\n        if (rewritten) {\n          e = rewritten;\n        }\n\n        let result = [\"error\", e.name, e.message];\n        if (rewritten && rewritten.stack) {\n          result.push(rewritten.stack);\n        }\n        return result;\n      }\n\n      case \"undefined\":\n        return [\"undefined\"];\n\n      case \"stub\":\n      case \"rpc-promise\": {\n        if (!this.source) {\n          throw new Error(\"Can't serialize RPC stubs in this context.\");\n        }\n\n        let {hook, pathIfPromise} = unwrapStubAndPath(<RpcStub>value);\n        let importId = this.exporter.getImport(hook);\n        if (importId !== undefined) {\n          if (pathIfPromise) {\n            // It's a promise pointing back to the peer, so we are doing pipelining here.\n            if (pathIfPromise.length > 0) {\n              return [\"pipeline\", importId, pathIfPromise];\n            } else {\n              return [\"pipeline\", importId];\n            }\n          } else {\n            return [\"import\", importId];\n          }\n        }\n\n        if (pathIfPromise) {\n          hook = hook.get(pathIfPromise);\n        } else {\n          hook = hook.dup();\n        }\n\n        return this.devaluateHook(pathIfPromise ? \"promise\" : \"export\", hook);\n      }\n\n      case \"function\":\n      case \"rpc-target\": {\n        if (!this.source) {\n          throw new Error(\"Can't serialize RPC stubs in this context.\");\n        }\n\n        let hook = this.source.getHookForRpcTarget(<RpcTarget|Function>value, parent);\n        return this.devaluateHook(\"export\", hook);\n      }\n\n      case \"rpc-thenable\": {\n        if (!this.source) {\n          throw new Error(\"Can't serialize RPC stubs in this context.\");\n        }\n\n        let hook = this.source.getHookForRpcTarget(<RpcTarget>value, parent);\n        return this.devaluateHook(\"promise\", hook);\n      }\n\n      default:\n        kind satisfies never;\n        throw new Error(\"unreachable\");\n    }\n  }\n\n  private devaluateHook(type: \"export\" | \"promise\", hook: StubHook): unknown {\n    if (!this.exports) this.exports = [];\n    let exportId = type === \"promise\" ? this.exporter.exportPromise(hook)\n                                      : this.exporter.exportStub(hook);\n    this.exports.push(exportId);\n    return [type, exportId];\n  }\n}\n\n/**\n * Serialize a value, using Cap'n Web's underlying serialization. This won't be able to serialize\n * RPC stubs, but it will support basic data types.\n */\nexport function serialize(value: unknown): string {\n  return JSON.stringify(Devaluator.devaluate(value));\n}\n\n// =======================================================================================\n\nexport interface Importer {\n  importStub(idx: ImportId): StubHook;\n  importPromise(idx: ImportId): StubHook;\n  getExport(idx: ExportId): StubHook | undefined;\n}\n\nclass NullImporter implements Importer {\n  importStub(idx: ImportId): never {\n    throw new Error(\"Cannot deserialize RPC stubs without an RPC session.\");\n  }\n  importPromise(idx: ImportId): never {\n    throw new Error(\"Cannot deserialize RPC stubs without an RPC session.\");\n  }\n  getExport(idx: ExportId): StubHook | undefined {\n    return undefined;\n  }\n}\n\nconst NULL_IMPORTER = new NullImporter();\n\n// Takes object trees parse from JSON and converts them into fully-hydrated JavaScript objects for\n// delivery to the app. This is used to implement deserialization, except that it doesn't actually\n// start from a raw string.\nexport class Evaluator {\n  constructor(private importer: Importer) {}\n\n  private stubs: RpcStub[] = [];\n  private promises: LocatedPromise[] = [];\n\n  public evaluate(value: unknown): RpcPayload {\n    let payload = RpcPayload.forEvaluate(this.stubs, this.promises);\n    try {\n      payload.value = this.evaluateImpl(value, payload, \"value\");\n      return payload;\n    } catch (err) {\n      payload.dispose();\n      throw err;\n    }\n  }\n\n  // Evaluate the value without destroying it.\n  public evaluateCopy(value: unknown): RpcPayload {\n    return this.evaluate(structuredClone(value));\n  }\n\n  private evaluateImpl(value: unknown, parent: object, property: string | number): unknown {\n    if (value instanceof Array) {\n      if (value.length == 1 && value[0] instanceof Array) {\n        // Escaped array. Evaluate the contents.\n        let result = value[0];\n        for (let i = 0; i < result.length; i++) {\n          result[i] = this.evaluateImpl(result[i], result, i);\n        }\n        return result;\n      } else switch (value[0]) {\n        case \"bigint\":\n          if (typeof value[1] == \"string\") {\n            return BigInt(value[1]);\n          }\n          break;\n        case \"date\":\n          if (typeof value[1] == \"number\") {\n            return new Date(value[1]);\n          }\n          break;\n        case \"bytes\": {\n          let b64 = Uint8Array as FromBase64;\n          if (typeof value[1] == \"string\") {\n            if (b64.fromBase64) {\n              return b64.fromBase64(value[1]);\n            } else {\n              let bs = atob(value[1]);\n              let len = bs.length;\n              let bytes = new Uint8Array(len);\n              for (let i = 0; i < len; i++) {\n                bytes[i] = bs.charCodeAt(i);\n              }\n              return bytes;\n            }\n          }\n          break;\n        }\n        case \"error\":\n          if (value.length >= 3 && typeof value[1] === \"string\" && typeof value[2] === \"string\") {\n            let cls = ERROR_TYPES[value[1]] || Error;\n            let result = new cls(value[2]);\n            if (typeof value[3] === \"string\") {\n              result.stack = value[3];\n            }\n            return result;\n          }\n          break;\n        case \"undefined\":\n          if (value.length === 1) {\n            return undefined;\n          }\n          break;\n\n        case \"import\":\n        case \"pipeline\": {\n          // It's an \"import\" from the perspective of the sender, so it's an export from our\n          // side. In other words, the sender is passing our own object back to us.\n\n          if (value.length < 2 || value.length > 4) {\n            break;   // report error below\n          }\n\n          // First parameter is import ID (from the sender's perspective, so export ID from\n          // ours).\n          if (typeof value[1] != \"number\") {\n            break;   // report error below\n          }\n\n          let hook = this.importer.getExport(value[1]);\n          if (!hook) {\n            throw new Error(`no such entry on exports table: ${value[1]}`);\n          }\n\n          let isPromise = value[0] == \"pipeline\";\n\n          let addStub = (hook: StubHook) => {\n            if (isPromise) {\n              let promise = new RpcPromise(hook, []);\n              this.promises.push({promise, parent, property});\n              return promise;\n            } else {\n              let stub = new RpcPromise(hook, []);\n              this.stubs.push(stub);\n              return stub;\n            }\n          };\n\n          if (value.length == 2) {\n            // Just referencing the export itself.\n            if (isPromise) {\n              // We need to use hook.get([]) to make sure we get a promise hook.\n              return addStub(hook.get([]));\n            } else {\n              // dup() returns a stub hook.\n              return addStub(hook.dup());\n            }\n          }\n\n          // Second parameter, if given, is a property path.\n          let path = value[2];\n          if (!(path instanceof Array)) {\n            break;  // report error below\n          }\n          if (!path.every(\n              part => { return typeof part == \"string\" || typeof part == \"number\"; })) {\n            break;  // report error below\n          }\n\n          if (value.length == 3) {\n            // Just referencing the path, not a call.\n            return addStub(hook.get(path));\n          }\n\n          // Third parameter, if given, is call arguments. The sender has identified a function\n          // and wants us to call it.\n          //\n          // Usually this is used with \"pipeline\", in which case we evaluate to an\n          // RpcPromise. However, this can be used with \"import\", in which case the caller is\n          // asking that the result be coerced to RpcStub. This distinction matters if the\n          // result of this evaluation is to be passed as arguments to another call -- promises\n          // must be resolved in advance, but stubs can be passed immediately.\n          let args = value[3];\n          if (!(args instanceof Array)) {\n            break;  // report error below\n          }\n\n          // We need a new evaluator for the args, to build a separate payload.\n          let subEval = new Evaluator(this.importer);\n          args = subEval.evaluate([args]);\n\n          return addStub(hook.call(path, args));\n        }\n\n        case \"remap\": {\n          if (value.length !== 5 ||\n              typeof value[1] !== \"number\" ||\n              !(value[2] instanceof Array) ||\n              !(value[3] instanceof Array) ||\n              !(value[4] instanceof Array)) {\n            break;   // report error below\n          }\n\n          let hook = this.importer.getExport(value[1]);\n          if (!hook) {\n            throw new Error(`no such entry on exports table: ${value[1]}`);\n          }\n\n          let path = value[2];\n          if (!path.every(\n              part => { return typeof part == \"string\" || typeof part == \"number\"; })) {\n            break;  // report error below\n          }\n\n          let captures: StubHook[] = value[3].map(cap => {\n            if (!(cap instanceof Array) ||\n                cap.length !== 2 ||\n                (cap[0] !== \"import\" && cap[0] !== \"export\") ||\n                typeof cap[1] !== \"number\") {\n              throw new TypeError(`unknown map capture: ${JSON.stringify(cap)}`);\n            }\n\n            if (cap[0] === \"export\") {\n              return this.importer.importStub(cap[1]);\n            } else {\n              let exp = this.importer.getExport(cap[1]);\n              if (!exp) {\n                throw new Error(`no such entry on exports table: ${cap[1]}`);\n              }\n              return exp.dup();\n            }\n          });\n\n          let instructions = value[4];\n\n          let resultHook = hook.map(path, captures, instructions);\n\n          let promise = new RpcPromise(resultHook, []);\n          this.promises.push({promise, parent, property});\n          return promise;\n        }\n\n        case \"export\":\n        case \"promise\":\n          // It's an \"export\" from the perspective of the sender, i.e. they sent us a new object\n          // which we want to import.\n          //\n          // \"promise\" is same as \"export\" but should not be delivered to the application. If any\n          // promises appear in a value, they must be resolved and substituted with their results\n          // before delivery. Note that if the value being evaluated appeared in call params, or\n          // appeared in a resolve message for a promise that is being pulled, then the new promise\n          // is automatically also being pulled, otherwise it is not.\n          if (typeof value[1] == \"number\") {\n            if (value[0] == \"promise\") {\n              let hook = this.importer.importPromise(value[1]);\n              let promise = new RpcPromise(hook, []);\n              this.promises.push({parent, property, promise});\n              return promise;\n            } else {\n              let hook = this.importer.importStub(value[1]);\n              let stub = new RpcStub(hook);\n              this.stubs.push(stub);\n              return stub;\n            }\n          }\n          break;\n      }\n      throw new TypeError(`unknown special value: ${JSON.stringify(value)}`);\n    } else if (value instanceof Object) {\n      let result = <Record<string, unknown>>value;\n      for (let key in result) {\n        if (key in Object.prototype || key === \"toJSON\") {\n          // Out of an abundance of caution, we will ignore properties that override properties\n          // of Object.prototype. It's especially important that we don't allow `__proto__` as it\n          // may lead to prototype pollution. We also would rather not allow, e.g., `toString()`,\n          // as overriding this could lead to various mischief.\n          //\n          // We also block `toJSON()` for similar reasons -- even though Object.prototype doesn't\n          // actually define it, `JSON.stringify()` treats it specially and we don't want someone\n          // snooping on JSON calls.\n          //\n          // We do still evaluate the inner value so that we can properly release any stubs.\n          this.evaluateImpl(result[key], result, key);\n          delete result[key];\n        } else {\n          result[key] = this.evaluateImpl(result[key], result, key);\n        }\n      }\n      return result;\n    } else {\n      // Other JSON types just pass through.\n      return value;\n    }\n  }\n}\n\n/**\n * Deserialize a value serialized using serialize().\n */\nexport function deserialize(value: string): unknown {\n  let payload = new Evaluator(NULL_IMPORTER).evaluate(JSON.parse(value));\n  payload.dispose();  // should be no-op but just in case\n  return payload.value;\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { StubHook, RpcPayload, RpcStub, PropertyPath, PayloadStubHook, ErrorStubHook, RpcTarget, unwrapStubAndPath } from \"./core.js\";\nimport { Devaluator, Evaluator, ExportId, ImportId, Exporter, Importer, serialize } from \"./serialize.js\";\n\n/**\n * Interface for an RPC transport, which is a simple bidirectional message stream. Implement this\n * interface if the built-in transports (e.g. for HTTP batch and WebSocket) don't meet your needs.\n */\nexport interface RpcTransport {\n  /**\n   * Sends a message to the other end.\n   */\n  send(message: string): Promise<void>;\n\n  /**\n   * Receives a message sent by the other end.\n   *\n   * If and when the transport becomes disconnected, this will reject. The thrown error will be\n   * propagated to all outstanding calls and future calls on any stubs associated with the session.\n   * If there are no outstanding calls (and none are made in the future), then the error does not\n   * propagate anywhere -- this is considered a \"clean\" shutdown.\n   */\n  receive(): Promise<string>;\n\n  /**\n   * Indicates that the RPC system has suffered an error that prevents the session from continuing.\n   * The transport should ideally try to send any queued messages if it can, and then close the\n   * connection. (It's not strictly necessary to deliver queued messages, but the last message sent\n   * before abort() is called is often an \"abort\" message, which communicates the error to the\n   * peer, so if that is dropped, the peer may have less information about what happened.)\n   */\n  abort?(reason: any): void;\n}\n\n// Entry on the exports table.\ntype ExportTableEntry = {\n  hook: StubHook,\n  refcount: number,\n  pull?: Promise<void>\n};\n\n// Entry on the imports table.\nclass ImportTableEntry {\n  constructor(public session: RpcSessionImpl, public importId: number, pulling: boolean) {\n    if (pulling) {\n      this.activePull = Promise.withResolvers<void>();\n    }\n  }\n\n  public localRefcount: number = 0;\n  public remoteRefcount: number = 1;\n\n  private activePull?: PromiseWithResolvers<void>;\n  public resolution?: StubHook;\n\n  // List of integer indexes into session.onBrokenCallbacks which are callbacks registered on\n  // this import. Initialized on first use (so `undefined` is the same as an empty list).\n  private onBrokenRegistrations?: number[];\n\n  resolve(resolution: StubHook) {\n    // TODO: Need embargo handling here? PayloadStubHook needs to be wrapped in a\n    // PromiseStubHook awaiting the embargo I suppose. Previous notes on embargoes:\n    // - Resolve message specifies last call that was received before the resolve. The introducer is\n    //   responsible for any embargoes up to that point.\n    // - Any further calls forwarded by the introducer after that point MUST immediately resolve to\n    //   a forwarded call. The caller is responsible for ensuring the last of these is handed off\n    //   before direct calls can be delivered.\n\n    if (this.localRefcount == 0) {\n      // Already disposed (canceled), so ignore the resolution and don't send a redundant release.\n      resolution.dispose();\n      return;\n    }\n\n    this.resolution = resolution;\n    this.sendRelease();\n\n    if (this.onBrokenRegistrations) {\n      // Delete all our callback registrations from this session and re-register them on the\n      // target stub.\n      for (let i of this.onBrokenRegistrations) {\n        let callback = this.session.onBrokenCallbacks[i];\n        let endIndex = this.session.onBrokenCallbacks.length;\n        resolution.onBroken(callback);\n        if (this.session.onBrokenCallbacks[endIndex] === callback) {\n          // Oh, calling onBroken() just registered the callback back on this connection again.\n          // But when the connection dies, we want all the callbacks to be called in the order in\n          // which they were registered. So we don't want this one pushed to the back of the line\n          // here. So, let's remove the newly-added registration and keep the original.\n          // TODO: This is quite hacky, think about whether this is really the right answer.\n          delete this.session.onBrokenCallbacks[endIndex];\n        } else {\n          // The callback is now registered elsewhere, so delete it from our session.\n          delete this.session.onBrokenCallbacks[i];\n        }\n      }\n      this.onBrokenRegistrations = undefined;\n    }\n\n    if (this.activePull) {\n      this.activePull.resolve();\n      this.activePull = undefined;\n    }\n  }\n\n  async awaitResolution(): Promise<RpcPayload> {\n    if (!this.activePull) {\n      this.session.sendPull(this.importId);\n      this.activePull = Promise.withResolvers<void>();\n    }\n    await this.activePull.promise;\n    return this.resolution!.pull();\n  }\n\n  dispose() {\n    if (this.resolution) {\n      this.resolution.dispose();\n    } else {\n      this.abort(new Error(\"RPC was canceled because the RpcPromise was disposed.\"));\n      this.sendRelease();\n    }\n  }\n\n  abort(error: any) {\n    if (!this.resolution) {\n      this.resolution = new ErrorStubHook(error);\n\n      if (this.activePull) {\n        this.activePull.reject(error);\n        this.activePull = undefined;\n      }\n\n      // The RpcSession itself will have called all our callbacks so we don't need to track the\n      // registrations anymore.\n      this.onBrokenRegistrations = undefined;\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    if (this.resolution) {\n      this.resolution.onBroken(callback);\n    } else {\n      let index = this.session.onBrokenCallbacks.length;\n      this.session.onBrokenCallbacks.push(callback);\n\n      if (!this.onBrokenRegistrations) this.onBrokenRegistrations = [];\n      this.onBrokenRegistrations.push(index);\n    }\n  }\n\n  private sendRelease() {\n    if (this.remoteRefcount > 0) {\n      this.session.sendRelease(this.importId, this.remoteRefcount);\n      this.remoteRefcount = 0;\n    }\n  }\n};\n\nclass RpcImportHook extends StubHook {\n  public entry?: ImportTableEntry;  // undefined when we're disposed\n\n  // `pulling` is true if we already expect that this import is going to be resolved later, and\n  // null if this import is not allowed to be pulled (i.e. it's a stub not a promise).\n  constructor(public isPromise: boolean, entry: ImportTableEntry) {\n    super();\n    ++entry.localRefcount;\n    this.entry = entry;\n  }\n\n  collectPath(path: PropertyPath): RpcImportHook {\n    return this;\n  }\n\n  getEntry(): ImportTableEntry {\n    if (this.entry) {\n      return this.entry;\n    } else {\n      // Shouldn't get here in practice since the holding stub should have replaced the hook when\n      // disposed.\n      throw new Error(\"This RpcImportHook was already disposed.\");\n    }\n  }\n\n  // -------------------------------------------------------------------------------------\n  // implements StubHook\n\n  call(path: PropertyPath, args: RpcPayload): StubHook {\n    let entry = this.getEntry();\n    if (entry.resolution) {\n      return entry.resolution.call(path, args);\n    } else {\n      return entry.session.sendCall(entry.importId, path, args);\n    }\n  }\n\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook {\n    let entry: ImportTableEntry;\n    try {\n      entry = this.getEntry();\n    } catch (err) {\n      for (let cap of captures) {\n        cap.dispose();\n      }\n      throw err;\n    }\n\n    if (entry.resolution) {\n      return entry.resolution.map(path, captures, instructions);\n    } else {\n      return entry.session.sendMap(entry.importId, path, captures, instructions);\n    }\n  }\n\n  get(path: PropertyPath): StubHook {\n    let entry = this.getEntry();\n    if (entry.resolution) {\n      return entry.resolution.get(path);\n    } else {\n      return entry.session.sendCall(entry.importId, path);\n    }\n  }\n\n  dup(): RpcImportHook {\n    return new RpcImportHook(false, this.getEntry());\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    let entry = this.getEntry();\n\n    if (!this.isPromise) {\n      throw new Error(\"Can't pull this hook because it's not a promise hook.\");\n    }\n\n    if (entry.resolution) {\n      return entry.resolution.pull();\n    }\n\n    return entry.awaitResolution();\n  }\n\n  ignoreUnhandledRejections(): void {\n    // We don't actually have to do anything here because this method only has to ignore rejections\n    // if pull() is *not* called, and if pull() is not called then we won't generate any rejections\n    // anyway.\n  }\n\n  dispose(): void {\n    let entry = this.entry;\n    this.entry = undefined;\n    if (entry) {\n      if (--entry.localRefcount === 0) {\n        entry.dispose();\n      }\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    if (this.entry) {\n      this.entry.onBroken(callback);\n    }\n  }\n}\n\nclass RpcMainHook extends RpcImportHook {\n  private session?: RpcSessionImpl;\n\n  constructor(entry: ImportTableEntry) {\n    super(false, entry);\n    this.session = entry.session;\n  }\n\n  dispose(): void {\n    if (this.session) {\n      let session = this.session;\n      this.session = undefined;\n      session.shutdown();\n    }\n  }\n}\n\n/**\n * Options to customize behavior of an RPC session. All functions which start a session should\n * optionally accept this.\n */\nexport type RpcSessionOptions = {\n  /**\n   * If provided, this function will be called whenever an `Error` object is serialized (for any\n   * resaon, not just because it was thrown). This can be used to log errors, and also to redact\n   * them.\n   *\n   * If `onSendError` returns an Error object, than object will be substituted in place of the\n   * original. If it has a stack property, the stack will be sent to the client.\n   *\n   * If `onSendError` doesn't return anything (or is not provided at all), the default behavior is\n   * to serialize the error with the stack omitted.\n   */\n  onSendError?: (error: Error) => Error | void;\n};\n\nclass RpcSessionImpl implements Importer, Exporter {\n  private exports: Array<ExportTableEntry> = [];\n  private reverseExports: Map<StubHook, ExportId> = new Map();\n  private imports: Array<ImportTableEntry> = [];\n  private abortReason?: any;\n  private cancelReadLoop: (error: any) => void;\n\n  // We assign positive numbers to imports we initiate, and negative numbers to exports we\n  // initiate. So the next import ID is just `imports.length`, but the next export ID needs\n  // to be tracked explicitly.\n  private nextExportId = -1;\n\n  // If set, call this when all incoming calls are complete.\n  private onBatchDone?: Omit<PromiseWithResolvers<void>, \"promise\">;\n\n  // How many promises is our peer expecting us to resolve?\n  private pullCount = 0;\n\n  // Sparse array of onBrokenCallback registrations. Items are strictly appended to the end but\n  // may be deleted from the middle (hence leaving the array sparse).\n  onBrokenCallbacks: ((error: any) => void)[] = [];\n\n  constructor(private transport: RpcTransport, mainHook: StubHook,\n      private options: RpcSessionOptions) {\n    // Export zero is automatically the bootstrap object.\n    this.exports.push({hook: mainHook, refcount: 1});\n\n    // Import zero is the other side's bootstrap object.\n    this.imports.push(new ImportTableEntry(this, 0, false));\n\n    let rejectFunc: (error: any) => void;;\n    let abortPromise = new Promise<never>((resolve, reject) => { rejectFunc = reject; });\n    this.cancelReadLoop = rejectFunc!;\n\n    this.readLoop(abortPromise).catch(err => this.abort(err));\n  }\n\n  // Should only be called once immediately after construction.\n  getMainImport(): RpcImportHook {\n    return new RpcMainHook(this.imports[0]);\n  }\n\n  shutdown(): void {\n    // TODO(someday): Should we add some sort of \"clean shutdown\" mechanism? This gets the job\n    //   done just fine for the moment.\n    this.abort(new Error(\"RPC session was shut down by disposing the main stub\"), false);\n  }\n\n  exportStub(hook: StubHook): ExportId {\n    if (this.abortReason) throw this.abortReason;\n\n    let existingExportId = this.reverseExports.get(hook);\n    if (existingExportId !== undefined) {\n      ++this.exports[existingExportId].refcount;\n      return existingExportId;\n    } else {\n      let exportId = this.nextExportId--;\n      this.exports[exportId] = { hook, refcount: 1 };\n      this.reverseExports.set(hook, exportId);\n      // TODO: Use onBroken().\n      return exportId;\n    }\n  }\n\n  exportPromise(hook: StubHook): ExportId {\n    if (this.abortReason) throw this.abortReason;\n\n    // Promises always use a new ID because otherwise the recipient could miss the resolution.\n    let exportId = this.nextExportId--;\n    this.exports[exportId] = { hook, refcount: 1 };\n    this.reverseExports.set(hook, exportId);\n\n    // Automatically start resolving any promises we send.\n    this.ensureResolvingExport(exportId);\n    return exportId;\n  }\n\n  unexport(ids: Array<ExportId>): void {\n    for (let id of ids) {\n      this.releaseExport(id, 1);\n    }\n  }\n\n  private releaseExport(exportId: ExportId, refcount: number) {\n    let entry = this.exports[exportId];\n    if (!entry) {\n      throw new Error(`no such export ID: ${exportId}`);\n    }\n    if (entry.refcount < refcount) {\n      throw new Error(`refcount would go negative: ${entry.refcount} < ${refcount}`);\n    }\n    entry.refcount -= refcount;\n    if (entry.refcount === 0) {\n      delete this.exports[exportId];\n      this.reverseExports.delete(entry.hook);\n      entry.hook.dispose();\n    }\n  }\n\n  onSendError(error: Error): Error | void {\n    if (this.options.onSendError) {\n      return this.options.onSendError(error);\n    }\n  }\n\n  private ensureResolvingExport(exportId: ExportId) {\n    let exp = this.exports[exportId];\n    if (!exp) {\n      throw new Error(`no such export ID: ${exportId}`);\n    }\n    if (!exp.pull) {\n      let resolve = async () => {\n        let hook = exp.hook;\n        for (;;) {\n          let payload = await hook.pull();\n          if (payload.value instanceof RpcStub) {\n            let {hook: inner, pathIfPromise} = unwrapStubAndPath(payload.value);\n            if (pathIfPromise && pathIfPromise.length == 0) {\n              if (this.getImport(hook) === undefined) {\n                // Optimization: The resolution is just another promise, and it is not a promise\n                // pointing back to the peer. So if we send a resolve message, it's just going to\n                // resolve to another new promise export, which is just going to have to wait for\n                // another resolve message later. This intermediate resolve message gives the peer\n                // no useful information, so let's skip it and just wait for the chained\n                // resolution.\n                hook = inner;\n                continue;\n              }\n            }\n          }\n\n          return payload;\n        }\n      };\n\n      ++this.pullCount;\n      exp.pull = resolve().then(\n        payload => {\n          // We don't transfer ownership of stubs in the payload since the payload\n          // belongs to the hook which sticks around to handle pipelined requests.\n          let value = Devaluator.devaluate(payload.value, undefined, this, payload);\n          this.send([\"resolve\", exportId, value]);\n        },\n        error => {\n          this.send([\"reject\", exportId, Devaluator.devaluate(error, undefined, this)]);\n        }\n      ).catch(\n        error => {\n          // If serialization failed, report the serialization error, which should\n          // itself always be serializable.\n          try {\n            this.send([\"reject\", exportId, Devaluator.devaluate(error, undefined, this)]);\n          } catch (error2) {\n            // TODO: Shouldn't happen, now what?\n            this.abort(error2);\n          }\n        }\n      ).finally(() => {\n        if (--this.pullCount === 0) {\n          if (this.onBatchDone) {\n            this.onBatchDone.resolve();\n          }\n        }\n      });\n    }\n  }\n\n  getImport(hook: StubHook): ImportId | undefined {\n    if (hook instanceof RpcImportHook && hook.entry && hook.entry.session === this) {\n      return hook.entry.importId;\n    } else {\n      return undefined;\n    }\n  }\n\n  importStub(idx: ImportId): RpcImportHook {\n    if (this.abortReason) throw this.abortReason;\n\n    let entry = this.imports[idx];\n    if (!entry) {\n      entry = new ImportTableEntry(this, idx, false);\n      this.imports[idx] = entry;\n    }\n    return new RpcImportHook(/*isPromise=*/false, entry);\n  }\n\n  importPromise(idx: ImportId): StubHook {\n    if (this.abortReason) throw this.abortReason;\n\n    if (this.imports[idx]) {\n      // Can't reuse an existing ID for a promise!\n      return new ErrorStubHook(new Error(\n          \"Bug in RPC system: The peer sent a promise reusing an existing export ID.\"));\n    }\n\n    // Create an already-pulling hook.\n    let entry = new ImportTableEntry(this, idx, true);\n    this.imports[idx] = entry;\n    return new RpcImportHook(/*isPromise=*/true, entry);\n  }\n\n  getExport(idx: ExportId): StubHook | undefined {\n    return this.exports[idx]?.hook;\n  }\n\n  private send(msg: any) {\n    if (this.abortReason !== undefined) {\n      // Ignore sends after we've aborted.\n      return;\n    }\n\n    let msgText: string;\n    try {\n      msgText = JSON.stringify(msg);\n    } catch (err) {\n      // If JSON stringification failed, there's something wrong with the devaluator, as it should\n      // not allow non-JSONable values to be injected in the first place.\n      try { this.abort(err); } catch (err2) {}\n      throw err;\n    }\n\n    this.transport.send(msgText)\n        // If send fails, abort the connection, but don't try to send an abort message since\n        // that'll probably also fail.\n        .catch(err => this.abort(err, false));\n  }\n\n  sendCall(id: ImportId, path: PropertyPath, args?: RpcPayload): RpcImportHook {\n    if (this.abortReason) throw this.abortReason;\n\n    let value: Array<any> = [\"pipeline\", id, path];\n    if (args) {\n      let devalue = Devaluator.devaluate(args.value, undefined, this, args);\n\n      // HACK: Since the args is an array, devaluator will wrap in a second array. Need to unwrap.\n      // TODO: Clean this up somehow.\n      value.push((<Array<unknown>>devalue)[0]);\n\n      // Serializing the payload takes ownership of all stubs within, so the payload itself does\n      // not need to be disposed.\n    }\n    this.send([\"push\", value]);\n\n    let entry = new ImportTableEntry(this, this.imports.length, false);\n    this.imports.push(entry);\n    return new RpcImportHook(/*isPromise=*/true, entry);\n  }\n\n  sendMap(id: ImportId, path: PropertyPath, captures: StubHook[], instructions: unknown[])\n      : RpcImportHook {\n    if (this.abortReason) {\n      for (let cap of captures) {\n        cap.dispose();\n      }\n      throw this.abortReason;\n    }\n\n    let devaluedCaptures = captures.map(hook => {\n      let importId = this.getImport(hook);\n      if (importId !== undefined) {\n        return [\"import\", importId];\n      } else {\n        return [\"export\", this.exportStub(hook)];\n      }\n    });\n\n    let value = [\"remap\", id, path, devaluedCaptures, instructions];\n\n    this.send([\"push\", value]);\n\n    let entry = new ImportTableEntry(this, this.imports.length, false);\n    this.imports.push(entry);\n    return new RpcImportHook(/*isPromise=*/true, entry);\n  }\n\n  sendPull(id: ImportId) {\n    if (this.abortReason) throw this.abortReason;\n\n    this.send([\"pull\", id]);\n  }\n\n  sendRelease(id: ImportId, remoteRefcount: number) {\n    if (this.abortReason) return;\n\n    this.send([\"release\", id, remoteRefcount]);\n    delete this.imports[id];\n  }\n\n  abort(error: any, trySendAbortMessage: boolean = true) {\n    // Don't double-abort.\n    if (this.abortReason !== undefined) return;\n\n    this.cancelReadLoop(error);\n\n    if (trySendAbortMessage) {\n      try {\n        this.transport.send(JSON.stringify([\"abort\", Devaluator\n            .devaluate(error, undefined, this)]))\n            .catch(err => {});\n      } catch (err) {\n        // ignore, probably the whole reason we're aborting is because the transport is broken\n      }\n    }\n\n    if (error === undefined) {\n      // Shouldn't happen, but if it does, avoid setting `abortReason` to `undefined`.\n      error = \"undefined\";\n    }\n\n    this.abortReason = error;\n    if (this.onBatchDone) {\n      this.onBatchDone.reject(error);\n    }\n\n    if (this.transport.abort) {\n      // Call transport's abort handler, but guard against buggy app code.\n      try {\n        this.transport.abort(error);\n      } catch (err) {\n        // Treat as unhandled rejection.\n        Promise.resolve(err);\n      }\n    }\n\n    // WATCH OUT: these are sparse arrays. `for/let/of` will iterate only positive indexes\n    // including deleted indexes -- bad. We need to use `for/let/in` instead.\n    for (let i in this.onBrokenCallbacks) {\n      try {\n        this.onBrokenCallbacks[i](error);\n      } catch (err) {\n        // Treat as unhandled rejection.\n        Promise.resolve(err);\n      }\n    }\n    for (let i in this.imports) {\n      this.imports[i].abort(error);\n    }\n    for (let i in this.exports) {\n      this.exports[i].hook.dispose();\n    }\n  }\n\n  private async readLoop(abortPromise: Promise<never>) {\n    while (!this.abortReason) {\n      let msg = JSON.parse(await Promise.race([this.transport.receive(), abortPromise]));\n      if (this.abortReason) break;  // check again before processing\n\n      if (msg instanceof Array) {\n        switch (msg[0]) {\n          case \"push\":  // [\"push\", Expression]\n            if (msg.length > 1) {\n              let payload = new Evaluator(this).evaluate(msg[1]);\n              let hook = new PayloadStubHook(payload);\n\n              // It's possible for a rejection to occur before the client gets a chance to send\n              // a \"pull\" message or to use the promise in a pipeline. We don't want that to be\n              // treated as an unhandled rejection on our end.\n              hook.ignoreUnhandledRejections();\n\n              this.exports.push({ hook, refcount: 1 });\n              continue;\n            }\n            break;\n\n          case \"pull\": {  // [\"pull\", ImportId]\n            let exportId = msg[1];\n            if (typeof exportId == \"number\") {\n              this.ensureResolvingExport(exportId);\n              continue;\n            }\n            break;\n          }\n\n          case \"resolve\":   // [\"resolve\", ExportId, Expression]\n          case \"reject\": {  // [\"reject\", ExportId, Expression]\n            let importId = msg[1];\n            if (typeof importId == \"number\" && msg.length > 2) {\n              let imp = this.imports[importId];\n              if (imp) {\n                if (msg[0] == \"resolve\") {\n                  imp.resolve(new PayloadStubHook(new Evaluator(this).evaluate(msg[2])));\n                } else {\n                  // HACK: We expect errors are always simple values (no stubs) so we can just\n                  //   pull the value out of the payload.\n                  let payload = new Evaluator(this).evaluate(msg[2]);\n                  payload.dispose();  // just in case -- should be no-op\n                  imp.resolve(new ErrorStubHook(payload.value));\n                }\n              } else {\n                // Import ID is not found on the table. Probably we released it already, in which\n                // case we do not care about the resolution, so whatever.\n\n                if (msg[0] == \"resolve\") {\n                  // We need to evaluate the resolution and immediately dispose it so that we\n                  // release any stubs it contains.\n                  new Evaluator(this).evaluate(msg[2]).dispose();\n                }\n              }\n              continue;\n            }\n            break;\n          }\n\n          case \"release\": {\n            let exportId = msg[1];\n            let refcount = msg[2];\n            if (typeof exportId == \"number\" && typeof refcount == \"number\") {\n              this.releaseExport(exportId, refcount);\n              continue;\n            }\n            break;\n          }\n\n          case \"abort\": {\n            let payload = new Evaluator(this).evaluate(msg[1]);\n            payload.dispose();  // just in case -- should be no-op\n            this.abort(payload, false);\n            break;\n          }\n        }\n      }\n\n      throw new Error(`bad RPC message: ${JSON.stringify(msg)}`);\n    }\n  }\n\n  async drain(): Promise<void> {\n    if (this.abortReason) {\n      throw this.abortReason;\n    }\n\n    if (this.pullCount > 0) {\n      let {promise, resolve, reject} = Promise.withResolvers<void>();\n      this.onBatchDone = {resolve, reject};\n      await promise;\n    }\n  }\n\n  getStats(): {imports: number, exports: number} {\n    let result = {imports: 0, exports: 0};\n    // We can't just use `.length` because the arrays can be sparse and can have negative indexes.\n    for (let i in this.imports) {\n      ++result.imports;\n    }\n    for (let i in this.exports) {\n      ++result.exports;\n    }\n    return result;\n  }\n}\n\n// Public interface that wraps RpcSession and hides private implementation details (even from\n// JavaScript with no type enforcement).\nexport class RpcSession {\n  #session: RpcSessionImpl;\n  #mainStub: RpcStub;\n\n  constructor(transport: RpcTransport, localMain?: any, options: RpcSessionOptions = {}) {\n    let mainHook: StubHook;\n    if (localMain) {\n      mainHook = new PayloadStubHook(RpcPayload.fromAppReturn(localMain));\n    } else {\n      mainHook = new ErrorStubHook(new Error(\"This connection has no main object.\"));\n    }\n    this.#session = new RpcSessionImpl(transport, mainHook, options);\n    this.#mainStub = new RpcStub(this.#session.getMainImport());\n  }\n\n  getRemoteMain(): RpcStub {\n    return this.#mainStub;\n  }\n\n  getStats(): {imports: number, exports: number} {\n    return this.#session.getStats();\n  }\n\n  drain(): Promise<void> {\n    return this.#session.drain();\n  }\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\n/// <reference types=\"@cloudflare/workers-types\" />\n\nimport { RpcStub } from \"./core.js\";\nimport { RpcTransport, RpcSession, RpcSessionOptions } from \"./rpc.js\";\n\nexport function newWebSocketRpcSession(\n    webSocket: WebSocket | string, localMain?: any, options?: RpcSessionOptions): RpcStub {\n  if (typeof webSocket === \"string\") {\n    webSocket = new WebSocket(webSocket);\n  }\n\n  let transport = new WebSocketTransport(webSocket);\n  let rpc = new RpcSession(transport, localMain, options);\n  return rpc.getRemoteMain();\n}\n\n/**\n * For use in Cloudflare Workers: Construct an HTTP response that starts a WebSocket RPC session\n * with the given `localMain`.\n */\nexport function newWorkersWebSocketRpcResponse(\n    request: Request, localMain?: any, options?: RpcSessionOptions): Response {\n  if (request.headers.get(\"Upgrade\")?.toLowerCase() !== \"websocket\") {\n    return new Response(\"This endpoint only accepts WebSocket requests.\", { status: 400 });\n  }\n\n  let pair = new WebSocketPair();\n  let server = pair[0];\n  server.accept()\n  newWebSocketRpcSession(server, localMain, options);\n  return new Response(null, {\n    status: 101,\n    webSocket: pair[1],\n  });\n}\n\nclass WebSocketTransport implements RpcTransport {\n  constructor (webSocket: WebSocket) {\n    this.#webSocket = webSocket;\n\n    if (webSocket.readyState === WebSocket.CONNECTING) {\n      this.#sendQueue = [];\n      webSocket.addEventListener(\"open\", event => {\n        try {\n          for (let message of this.#sendQueue!) {\n            webSocket.send(message);\n          }\n        } catch (err) {\n          this.#receivedError(err);\n        }\n        this.#sendQueue = undefined;\n      });\n    }\n\n    webSocket.addEventListener(\"message\", (event: MessageEvent<any>) => {\n      if (this.#error) {\n        // Ignore further messages.\n      } else if (typeof event.data === \"string\") {\n        if (this.#receiveResolver) {\n          this.#receiveResolver(event.data);\n          this.#receiveResolver = undefined;\n          this.#receiveRejecter = undefined;\n        } else {\n          this.#receiveQueue.push(event.data);\n        }\n      } else {\n        this.#receivedError(new TypeError(\"Received non-string message from WebSocket.\"));\n      }\n    });\n\n    webSocket.addEventListener(\"close\", (event: CloseEvent) => {\n      this.#receivedError(new Error(`Peer closed WebSocket: ${event.code} ${event.reason}`));\n    });\n\n    webSocket.addEventListener(\"error\", (event: Event) => {\n      this.#receivedError(new Error(`WebSocket connection failed.`));\n    });\n  }\n\n  #webSocket: WebSocket;\n  #sendQueue?: string[];  // only if not opened yet\n  #receiveResolver?: (message: string) => void;\n  #receiveRejecter?: (err: any) => void;\n  #receiveQueue: string[] = [];\n  #error?: any;\n\n  async send(message: string): Promise<void> {\n    if (this.#sendQueue === undefined) {\n      this.#webSocket.send(message);\n    } else {\n      // Not open yet, queue for later.\n      this.#sendQueue.push(message);\n    }\n  }\n\n  async receive(): Promise<string> {\n    if (this.#receiveQueue.length > 0) {\n      return this.#receiveQueue.shift()!;\n    } else if (this.#error) {\n      throw this.#error;\n    } else {\n      return new Promise<string>((resolve, reject) => {\n        this.#receiveResolver = resolve;\n        this.#receiveRejecter = reject;\n      });\n    }\n  }\n\n  abort?(reason: any): void {\n    let message: string;\n    if (reason instanceof Error) {\n      message = reason.message;\n    } else {\n      message = `${reason}`;\n    }\n    this.#webSocket.close(3000, message);\n\n    if (!this.#error) {\n      this.#error = reason;\n      // No need to call receiveRejecter(); RPC implementation will stop listening anyway.\n    }\n  }\n\n  #receivedError(reason: any) {\n    if (!this.#error) {\n      this.#error = reason;\n      if (this.#receiveRejecter) {\n        this.#receiveRejecter(reason);\n        this.#receiveResolver = undefined;\n        this.#receiveRejecter = undefined;\n      }\n    }\n  }\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { RpcStub } from \"./core.js\";\nimport { RpcTransport, RpcSession, RpcSessionOptions } from \"./rpc.js\";\nimport type { IncomingMessage, ServerResponse, OutgoingHttpHeader, OutgoingHttpHeaders } from \"node:http\";\n\ntype SendBatchFunc = (batch: string[]) => Promise<string[]>;\n\nclass BatchClientTransport implements RpcTransport {\n  constructor(sendBatch: SendBatchFunc) {\n    this.#promise = this.#scheduleBatch(sendBatch);\n  }\n\n  #promise: Promise<void>;\n  #aborted: any;\n\n  #batchToSend: string[] | null = [];\n  #batchToReceive: string[] | null = null;\n\n  async send(message: string): Promise<void> {\n    // If the batch was already sent, we just ignore the message, because throwing may cause the\n    // RPC system to abort prematurely. Once the last receive() is done then we'll throw an error\n    // that aborts the RPC system at the right time and will propagate to all other requests.\n    if (this.#batchToSend !== null) {\n      this.#batchToSend.push(message);\n    }\n  }\n\n  async receive(): Promise<string> {\n    if (!this.#batchToReceive) {\n      await this.#promise;\n    }\n\n    let msg = this.#batchToReceive!.shift();\n    if (msg !== undefined) {\n      return msg;\n    } else {\n      // No more messages. An error thrown here will propagate out of any calls that are still\n      // open.\n      throw new Error(\"Batch RPC request ended.\");\n    }\n  }\n\n  abort?(reason: any): void {\n    this.#aborted = reason;\n  }\n\n  async #scheduleBatch(sendBatch: SendBatchFunc) {\n    // Wait for microtask queue to clear before sending a batch.\n    //\n    // Note that simply waiting for one turn of the microtask qeueue (await Promise.resolve()) is\n    // not good enough here as the application needs a chance to call `.then()` on every RPC\n    // promise in order to explicitly indicate they want the results. Unfortuntaely, `await`ing\n    // a thenable does not call `.then()` immediately -- for some reason it waits for a turn of\n    // the microtask queue first, *then* calls `.then()`.\n    await new Promise(resolve => setTimeout(resolve, 0));\n\n    if (this.#aborted !== undefined) {\n      throw this.#aborted;\n    }\n\n    let batch = this.#batchToSend!;\n    this.#batchToSend = null;\n    this.#batchToReceive = await sendBatch(batch);\n  }\n}\n\nexport function newHttpBatchRpcSession(\n    urlOrRequest: string | Request, options?: RpcSessionOptions): RpcStub {\n  let sendBatch: SendBatchFunc = async (batch: string[]) => {\n    let response = await fetch(urlOrRequest, {\n      method: \"POST\",\n      body: batch.join(\"\\n\"),\n    });\n\n    if (!response.ok) {\n      response.body?.cancel();\n      throw new Error(`RPC request failed: ${response.status} ${response.statusText}`);\n    }\n\n    let body = await response.text();\n    return body == \"\" ? [] : body.split(\"\\n\");\n  };\n\n  let transport = new BatchClientTransport(sendBatch);\n  let rpc = new RpcSession(transport, undefined, options);\n  return rpc.getRemoteMain();\n}\n\nclass BatchServerTransport implements RpcTransport {\n  constructor(batch: string[]) {\n    this.#batchToReceive = batch;\n  }\n\n  #batchToSend: string[] = [];\n  #batchToReceive: string[];\n  #allReceived: PromiseWithResolvers<void> = Promise.withResolvers<void>();\n\n  async send(message: string): Promise<void> {\n    this.#batchToSend.push(message);\n  }\n\n  async receive(): Promise<string> {\n    let msg = this.#batchToReceive!.shift();\n    if (msg !== undefined) {\n      return msg;\n    } else {\n      // No more messages.\n      this.#allReceived.resolve();\n      return new Promise(r => {});\n    }\n  }\n\n  abort?(reason: any): void {\n    this.#allReceived.reject(reason);\n  }\n\n  whenAllReceived() {\n    return this.#allReceived.promise;\n  }\n\n  getResponseBody(): string {\n    return this.#batchToSend.join(\"\\n\");\n  }\n}\n\n/**\n * Implements the server end of an HTTP batch session, using standard Fetch API types to represent\n * HTTP requests and responses.\n *\n * @param request The request received from the client initiating the session.\n * @param localMain The main stub or RpcTarget which the server wishes to expose to the client.\n * @param options Optional RPC sesison options.\n * @returns The HTTP response to return to the client. Note that the returned object has mutable\n *     headers, so you can modify them using e.g. `response.headers.set(\"Foo\", \"bar\")`.\n */\nexport async function newHttpBatchRpcResponse(\n    request: Request, localMain: any, options?: RpcSessionOptions): Promise<Response> {\n  if (request.method !== \"POST\") {\n    return new Response(\"This endpoint only accepts POST requests.\", { status: 405 });\n  }\n\n  let body = await request.text();\n  let batch = body === \"\" ? [] : body.split(\"\\n\");\n\n  let transport = new BatchServerTransport(batch);\n  let rpc = new RpcSession(transport, localMain, options);\n\n  // TODO: Arguably we should arrange so any attempts to pull promise resolutions from the client\n  //   will reject rather than just hang. But it IS valid to make server->client calls in order to\n  //   then pipeline the result into something returned to the client. We don't want the errors to\n  //   prematurely cancel anything that would eventually complete. So for now we just say, it's the\n  //   app's responsibility to not wait on any server -> client calls since they will never\n  //   complete.\n\n  await transport.whenAllReceived();\n  await rpc.drain();\n\n  // TODO: Ask RpcSession to dispose everything it is still holding on to?\n\n  return new Response(transport.getResponseBody());\n}\n\n/**\n * Implements the server end of an HTTP batch session using traditional Node.js HTTP APIs.\n *\n * @param request The request received from the client initiating the session.\n * @param response The response object, to which the response should be written.\n * @param localMain The main stub or RpcTarget which the server wishes to expose to the client.\n * @param options Optional RPC sesison options. You can also pass headers to set on the response.\n */\nexport async function nodeHttpBatchRpcResponse(\n    request: IncomingMessage, response: ServerResponse,\n    localMain: any,\n    options?: RpcSessionOptions & {\n      headers?: OutgoingHttpHeaders | OutgoingHttpHeader[],\n    }): Promise<void> {\n  if (request.method !== \"POST\") {\n    response.writeHead(405, \"This endpoint only accepts POST requests.\");\n  }\n\n  let body = await new Promise<string>((resolve, reject) => {\n    let chunks: Buffer[] = [];\n    request.on(\"data\", chunk => {\n      chunks.push(chunk);\n    });\n    request.on(\"end\", () => {\n      resolve(Buffer.concat(chunks).toString());\n    });\n    request.on(\"error\", reject);\n  });\n  let batch = body === \"\" ? [] : body.split(\"\\n\");\n\n  let transport = new BatchServerTransport(batch);\n  let rpc = new RpcSession(transport, localMain, options);\n\n  await transport.whenAllReceived();\n  await rpc.drain();\n\n  response.writeHead(200, options?.headers);\n  response.end(transport.getResponseBody());\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { RpcStub } from \"./core.js\";\nimport { RpcTransport, RpcSession, RpcSessionOptions } from \"./rpc.js\";\n\n// Start a MessagePort session given a MessagePort or a pair of MessagePorts.\n//\n// `localMain` is the main RPC interface to expose to the peer. Returns a stub for the main\n// interface exposed from the peer.\nexport function newMessagePortRpcSession(\n    port: MessagePort, localMain?: any, options?: RpcSessionOptions): RpcStub {\n  let transport = new MessagePortTransport(port);\n  let rpc = new RpcSession(transport, localMain, options);\n  return rpc.getRemoteMain();\n}\n\nclass MessagePortTransport implements RpcTransport {\n  constructor (port: MessagePort) {\n    this.#port = port;\n\n    // Start listening for messages\n    port.start();\n\n    port.addEventListener(\"message\", (event: MessageEvent<any>) => {\n      if (this.#error) {\n        // Ignore further messages.\n      } else if (event.data === null) {\n        // Peer is signaling that they're closing the connection\n        this.#receivedError(new Error(\"Peer closed MessagePort connection.\"));\n      } else if (typeof event.data === \"string\") {\n        if (this.#receiveResolver) {\n          this.#receiveResolver(event.data);\n          this.#receiveResolver = undefined;\n          this.#receiveRejecter = undefined;\n        } else {\n          this.#receiveQueue.push(event.data);\n        }\n      } else {\n        this.#receivedError(new TypeError(\"Received non-string message from MessagePort.\"));\n      }\n    });\n\n    port.addEventListener(\"messageerror\", (event: MessageEvent) => {\n      this.#receivedError(new Error(\"MessagePort message error.\"));\n    });\n  }\n\n  #port: MessagePort;\n  #receiveResolver?: (message: string) => void;\n  #receiveRejecter?: (err: any) => void;\n  #receiveQueue: string[] = [];\n  #error?: any;\n\n  async send(message: string): Promise<void> {\n    if (this.#error) {\n      throw this.#error;\n    }\n    this.#port.postMessage(message);\n  }\n\n  async receive(): Promise<string> {\n    if (this.#receiveQueue.length > 0) {\n      return this.#receiveQueue.shift()!;\n    } else if (this.#error) {\n      throw this.#error;\n    } else {\n      return new Promise<string>((resolve, reject) => {\n        this.#receiveResolver = resolve;\n        this.#receiveRejecter = reject;\n      });\n    }\n  }\n\n  abort?(reason: any): void {\n    // Send close signal to peer before closing\n    try {\n      this.#port.postMessage(null);\n    } catch (err) {\n      // Ignore errors when sending close signal - port might already be closed\n    }\n\n    this.#port.close();\n\n    if (!this.#error) {\n      this.#error = reason;\n      // No need to call receiveRejecter(); RPC implementation will stop listening anyway.\n    }\n  }\n\n  #receivedError(reason: any) {\n    if (!this.#error) {\n      this.#error = reason;\n      if (this.#receiveRejecter) {\n        this.#receiveRejecter(reason);\n        this.#receiveResolver = undefined;\n        this.#receiveRejecter = undefined;\n      }\n    }\n  }\n}", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { StubHook, PropertyPath, RpcPayload, RpcStub, RpcPromise, withCallInterceptor, ErrorStubHook, mapImpl, PayloadStubHook, unwrapStubAndPath, unwrapStubNoProperties } from \"./core.js\";\nimport { Devaluator, Exporter, Importer, ExportId, ImportId, Evaluator } from \"./serialize.js\";\n\nlet currentMapBuilder: MapBuilder | undefined;\n\n// We use this type signature when building the instructions for type checking purposes. It\n// describes a subset of the overall RPC protocol.\nexport type MapInstruction =\n    | [\"pipeline\", number, PropertyPath]\n    | [\"pipeline\", number, PropertyPath, unknown]\n    | [\"remap\", number, PropertyPath, [\"import\", number][], MapInstruction[]]\n\nclass MapBuilder implements Exporter {\n  private context:\n    | {parent: undefined, captures: StubHook[], subject: StubHook, path: PropertyPath}\n    | {parent: MapBuilder, captures: number[], subject: number, path: PropertyPath};\n  private captureMap: Map<StubHook, number> = new Map();\n\n  private instructions: MapInstruction[] = [];\n\n  constructor(subject: StubHook, path: PropertyPath) {\n    if (currentMapBuilder) {\n      this.context = {\n        parent: currentMapBuilder,\n        captures: [],\n        subject: currentMapBuilder.capture(subject),\n        path\n      };\n    } else {\n      this.context = {\n        parent: undefined,\n        captures: [],\n        subject,\n        path\n      };\n    }\n\n    currentMapBuilder = this;\n  }\n\n  unregister() {\n    currentMapBuilder = this.context.parent;\n  }\n\n  makeInput(): MapVariableHook {\n    return new MapVariableHook(this, 0);\n  }\n\n  makeOutput(result: RpcPayload): StubHook {\n    let devalued: unknown;\n    try {\n      devalued = Devaluator.devaluate(result.value, undefined, this, result);\n    } finally {\n      result.dispose();\n    }\n\n    // The result is the final instruction. This doesn't actually fit our MapInstruction type\n    // signature, so we cheat a bit.\n    this.instructions.push(<any>devalued);\n\n    if (this.context.parent) {\n      this.context.parent.instructions.push(\n        [\"remap\", this.context.subject, this.context.path,\n                  this.context.captures.map(cap => [\"import\", cap]),\n                  this.instructions]\n      );\n      return new MapVariableHook(this.context.parent, this.context.parent.instructions.length);\n    } else {\n      return this.context.subject.map(this.context.path, this.context.captures, this.instructions);\n    }\n  }\n\n  pushCall(hook: StubHook, path: PropertyPath, params: RpcPayload): StubHook {\n    let devalued = Devaluator.devaluate(params.value, undefined, this, params);\n    // HACK: Since the args is an array, devaluator will wrap in a second array. Need to unwrap.\n    // TODO: Clean this up somehow.\n    devalued = (<Array<unknown>>devalued)[0];\n\n    let subject = this.capture(hook.dup());\n    this.instructions.push([\"pipeline\", subject, path, devalued]);\n    return new MapVariableHook(this, this.instructions.length);\n  }\n\n  pushGet(hook: StubHook, path: PropertyPath): StubHook {\n    let subject = this.capture(hook.dup());\n    this.instructions.push([\"pipeline\", subject, path]);\n    return new MapVariableHook(this, this.instructions.length);\n  }\n\n  capture(hook: StubHook): number {\n    if (hook instanceof MapVariableHook && hook.mapper === this) {\n      // Oh, this is already our own hook.\n      return hook.idx;\n    }\n\n    // TODO: Well, the hooks passed in are always unique, so they'll never exist in captureMap.\n    //   I suppose this is a problem with RPC as well. We need a way to identify hooks that are\n    //   dupes of the same target.\n    let result = this.captureMap.get(hook);\n    if (result === undefined) {\n      if (this.context.parent) {\n        let parentIdx = this.context.parent.capture(hook);\n        this.context.captures.push(parentIdx);\n      } else {\n        this.context.captures.push(hook);\n      }\n      result = -this.context.captures.length;\n      this.captureMap.set(hook, result);\n    }\n    return result;\n  }\n\n  // ---------------------------------------------------------------------------\n  // implements Exporter\n\n  exportStub(hook: StubHook): ExportId {\n    // It appears someone did something like:\n    //\n    //     stub.map(x => { return x.doSomething(new MyRpcTarget()); })\n    //\n    // That... won't work. They need to do this instead:\n    //\n    //     using myTargetStub = new RpcStub(new MyRpcTarget());\n    //     stub.map(x => { return x.doSomething(myTargetStub.dup()); })\n    //\n    // TODO(someday): Consider carefully if the inline syntax is maybe OK. If so, perhaps the\n    //   serializer could try calling `getImport()` even for known-local hooks.\n    // TODO(someday): Do we need to support rpc-thenable somehow?\n    throw new Error(\n        \"Can't construct an RpcTarget or RPC callback inside a mapper function. Try creating a \" +\n        \"new RpcStub outside the callback first, then using it inside the callback.\");\n  }\n  exportPromise(hook: StubHook): ExportId {\n    return this.exportStub(hook);\n  }\n  getImport(hook: StubHook): ImportId | undefined {\n    return this.capture(hook);\n  }\n\n  unexport(ids: Array<ExportId>): void {\n    // Presumably this MapBuilder is cooked anyway, so we don't really have to release anything.\n  }\n\n  onSendError(error: Error): Error | void {\n    // TODO(someday): Can we use the error-sender hook from the RPC system somehow?\n  }\n};\n\nmapImpl.sendMap = (hook: StubHook, path: PropertyPath, func: (promise: RpcPromise) => unknown) => {\n  let builder = new MapBuilder(hook, path);\n  let result: RpcPayload;\n  try {\n    result = RpcPayload.fromAppReturn(withCallInterceptor(builder.pushCall.bind(builder), () => {\n      return func(new RpcPromise(builder.makeInput(), []));\n    }));\n  } finally {\n    builder.unregister();\n  }\n\n  // Detect misuse: Map callbacks cannot be async.\n  if (result instanceof Promise) {\n    // Squelch unhanlded rejections from the map function itself -- it'll probably just throw\n    // something about pulling a MapVariableHook.\n    result.catch(err => {});\n\n    // Throw an understandable error.\n    throw new Error(\"RPC map() callbacks cannot be async.\");\n  }\n\n  return new RpcPromise(builder.makeOutput(result), []);\n}\n\nfunction throwMapperBuilderUseError(): never {\n  throw new Error(\n      \"Attempted to use an abstract placeholder from a mapper function. Please make sure your \" +\n      \"map function has no side effects.\");\n}\n\n// StubHook which represents a variable in a map function.\nclass MapVariableHook extends StubHook {\n  constructor(public mapper: MapBuilder, public idx: number) {\n    super();\n  }\n\n  // We don't have anything we actually need to dispose, so dup() can just return the same hook.\n  dup(): StubHook { return this; }\n  dispose(): void {}\n\n  get(path: PropertyPath): StubHook {\n    // This can actually be invoked as part of serialization, so we'll need to support it.\n    if (path.length == 0) {\n      // Since this hook cannot be pulled anyway, and dispose() is a no-op, we can actually just\n      // return the same hook again to represent getting the empty path.\n      return this;\n    } else if (currentMapBuilder) {\n      return currentMapBuilder.pushGet(this, path);\n    } else {\n      throwMapperBuilderUseError();\n    }\n  }\n\n  // Other methods should never be called.\n  call(path: PropertyPath, args: RpcPayload): StubHook {\n    // Can't be called; all calls are incercepted.\n    throwMapperBuilderUseError();\n  }\n\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook {\n    // Can't be called; all map()s are incercepted.\n    throwMapperBuilderUseError();\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    // Map functions cannot await.\n    throwMapperBuilderUseError();\n  }\n\n  ignoreUnhandledRejections(): void {\n    // Probably never called but whatever.\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    throwMapperBuilderUseError();\n  }\n}\n\n// =======================================================================================\n\nclass MapApplicator implements Importer {\n  private variables: StubHook[];\n\n  constructor(private captures: StubHook[], input: StubHook) {\n    this.variables = [input];\n  }\n\n  dispose() {\n    for (let variable of this.variables) {\n      variable.dispose();\n    }\n  }\n\n  apply(instructions: unknown[]): RpcPayload {\n    try {\n      if (instructions.length < 1) {\n        throw new Error(\"Invalid empty mapper function.\");\n      }\n\n      for (let instruction of instructions.slice(0, -1)) {\n        let payload = new Evaluator(this).evaluateCopy(instruction);\n\n        // The payload almost always contains a single stub. As an optimization, unwrap it.\n        if (payload.value instanceof RpcStub) {\n          let hook = unwrapStubNoProperties(payload.value);\n          if (hook) {\n            this.variables.push(hook);\n            continue;\n          }\n        }\n\n        this.variables.push(new PayloadStubHook(payload));\n      }\n\n      return new Evaluator(this).evaluateCopy(instructions[instructions.length - 1]);\n    } finally {\n      for (let variable of this.variables) {\n        variable.dispose();\n      }\n    }\n  }\n\n  importStub(idx: ImportId): StubHook {\n    // This implies we saw an \"export\" appear inside the body of a mapper function. This should be\n    // impossible because exportStub()/exportPromise() throw exceptions in MapBuilder.\n    throw new Error(\"A mapper function cannot refer to exports.\");\n  }\n  importPromise(idx: ImportId): StubHook {\n    return this.importStub(idx);\n  }\n\n  getExport(idx: ExportId): StubHook | undefined {\n    if (idx < 0) {\n      return this.captures[-idx - 1];\n    } else {\n      return this.variables[idx];\n    }\n  }\n}\n\nfunction applyMapToElement(input: unknown, parent: object | undefined, owner: RpcPayload | null,\n                           captures: StubHook[], instructions: unknown[]): RpcPayload {\n  // TODO(perf): I wonder if we could use .fromAppParams() instead of .deepCopyFrom()? It\n  //   maybe wouldn't correctly handle the case of RpcTargets in the input, so we need a variant\n  //   which takes an `owner`, which does add some complexity.\n  let inputHook = new PayloadStubHook(RpcPayload.deepCopyFrom(input, parent, owner));\n  let mapper = new MapApplicator(captures, inputHook);\n  try {\n    return mapper.apply(instructions);\n  } finally {\n    mapper.dispose();\n  }\n}\n\nmapImpl.applyMap = (input: unknown, parent: object | undefined, owner: RpcPayload | null,\n                    captures: StubHook[], instructions: unknown[]) => {\n  try {\n    let result: RpcPayload;\n    if (input instanceof RpcPromise) {\n      // The caller is responsible for making sure the input is not a promise, since we can't\n      // then know if it would resolve to an array later.\n      throw new Error(\"applyMap() can't be called on RpcPromise\");\n    } else if (input instanceof Array) {\n      let payloads: RpcPayload[] = [];\n      try {\n        for (let elem of input) {\n          payloads.push(applyMapToElement(elem, input, owner, captures, instructions));\n        }\n      } catch (err) {\n        for (let payload of payloads) {\n          payload.dispose();\n        }\n        throw err;\n      }\n\n      result = RpcPayload.fromArray(payloads);\n    } else if (input === null || input === undefined) {\n      result = RpcPayload.fromAppReturn(input);\n    } else {\n      result = applyMapToElement(input, parent, owner, captures, instructions);\n    }\n\n    // TODO(perf): We should probably return a hook that allows pipelining but whose pull() doesn't\n    //   resolve until all promises in the payload have been substituted.\n    return new PayloadStubHook(result);\n  } finally {\n    for (let cap of captures) {\n      cap.dispose();\n    }\n  }\n}\n\nexport function forceInitMap() {}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { RpcTarget as RpcTargetImpl, RpcStub as RpcStubImpl, RpcPromise as RpcPromiseImpl } from \"./core.js\";\nimport { serialize, deserialize } from \"./serialize.js\";\nimport { RpcTransport, RpcSession as RpcSessionImpl, RpcSessionOptions } from \"./rpc.js\";\nimport { RpcTargetBranded, Serializable, Stub, Stubify, __RPC_TARGET_BRAND } from \"./types.js\";\nimport { newWebSocketRpcSession as newWebSocketRpcSessionImpl,\n         newWorkersWebSocketRpcResponse } from \"./websocket.js\";\nimport { newHttpBatchRpcSession as newHttpBatchRpcSessionImpl,\n         newHttpBatchRpcResponse, nodeHttpBatchRpcResponse } from \"./batch.js\";\nimport { newMessagePortRpcSession as newMessagePortRpcSessionImpl } from \"./messageport.js\";\nimport { forceInitMap } from \"./map.js\";\n\nforceInitMap();\n\n// Re-export public API types.\nexport { serialize, deserialize, newWorkersWebSocketRpcResponse, newHttpBatchRpcResponse,\n         nodeHttpBatchRpcResponse };\nexport type { RpcTransport, RpcSessionOptions };\n\n// Hack the type system to make RpcStub's types work nicely!\n/**\n * Represents a reference to a remote object, on which methods may be remotely invoked via RPC.\n *\n * `RpcStub` can represent any interface (when using TypeScript, you pass the specific interface\n * type as `T`, but this isn't known at runtime). The way this works is, `RpcStub` is actually a\n * `Proxy`. It makes itself appear as if every possible method / property name is defined. You can\n * invoke any method name, and the invocation will be sent to the server. If it turns out that no\n * such method exists on the remote object, an exception is thrown back. But the client does not\n * actually know, until that point, what methods exist.\n */\nexport type RpcStub<T extends Serializable<T>> = Stub<T>;\nexport const RpcStub: {\n  new <T extends Serializable<T>>(value: T): RpcStub<T>;\n} = <any>RpcStubImpl;\n\n/**\n * Represents the result of an RPC call.\n *\n * Also used to represent propreties. That is, `stub.foo` evaluates to an `RpcPromise` for the\n * value of `foo`.\n *\n * This isn't actually a JavaScript `Promise`. It does, however, have `then()`, `catch()`, and\n * `finally()` methods, like `Promise` does, and because it has a `then()` method, JavaScript will\n * allow you to treat it like a promise, e.g. you can `await` it.\n *\n * An `RpcPromise` is also a proxy, just like `RpcStub`, where calling methods or awaiting\n * properties will make a pipelined network request.\n *\n * Note that and `RpcPromise` is \"lazy\": the actual final result is not requested from the server\n * until you actually `await` the promise (or call `then()`, etc. on it). This is an optimization:\n * if you only intend to use the promise for pipelining and you never await it, then there's no\n * need to transmit the resolution!\n */\nexport type RpcPromise<T extends Serializable<T>> = Stub<T> & Promise<Stubify<T>>;\nexport const RpcPromise: {\n  // Note: Cannot construct directly!\n} = <any>RpcPromiseImpl;\n\n/**\n * Use to construct an `RpcSession` on top of a custom `RpcTransport`.\n *\n * Most people won't use this. You only need it if you've implemented your own `RpcTransport`.\n */\nexport interface RpcSession<T extends Serializable<T> = undefined> {\n  getRemoteMain(): RpcStub<T>;\n  getStats(): {imports: number, exports: number};\n\n  // Waits until the peer is not waiting on any more promise resolutions from us. This is useful\n  // in particular to decide when a batch is complete.\n  drain(): Promise<void>;\n}\nexport const RpcSession: {\n  new <T extends Serializable<T> = undefined>(\n      transport: RpcTransport, localMain?: any, options?: RpcSessionOptions): RpcSession<T>;\n} = <any>RpcSessionImpl;\n\n// RpcTarget needs some hackage too to brand it properly and account for the implementation\n// conditionally being imported from \"cloudflare:workers\".\n/**\n * Classes which are intended to be passed by reference and called over RPC must extend\n * `RpcTarget`. A class which does not extend `RpcTarget` (and which dosen't have built-in support\n * from the RPC system) cannot be passed in an RPC message at all; an exception will be thrown.\n *\n * Note that on Cloudflare Workers, this `RpcTarget` is an alias for the one exported from the\n * \"cloudflare:workers\" module, so they can be used interchangably.\n */\nexport interface RpcTarget extends RpcTargetBranded {};\nexport const RpcTarget: {\n  new(): RpcTarget;\n} = RpcTargetImpl;\n\n/**\n * Empty interface used as default type parameter for sessions where the other side doesn't\n * necessarily export a main interface.\n */\ninterface Empty {}\n\n/**\n * Start a WebSocket session given either an already-open WebSocket or a URL.\n *\n * @param webSocket Either the `wss://` URL to connect to, or an already-open WebSocket object to\n * use.\n * @param localMain The main RPC interface to expose to the peer. Returns a stub for the main\n * interface exposed from the peer.\n */\nexport let newWebSocketRpcSession:<T extends Serializable<T> = Empty>\n    (webSocket: WebSocket | string, localMain?: any, options?: RpcSessionOptions) => RpcStub<T> =\n    <any>newWebSocketRpcSessionImpl;\n\n/**\n * Initiate an HTTP batch session from the client side.\n *\n * The parameters to this method have exactly the same signature as `fetch()`, but the return\n * value is an RpcStub. You can customize anything about the request except for the method\n * (it will always be set to POST) and the body (which the RPC system will fill in).\n */\nexport let newHttpBatchRpcSession:<T extends Serializable<T>>\n    (urlOrRequest: string | Request, init?: RequestInit) => RpcStub<T> =\n    <any>newHttpBatchRpcSessionImpl;\n\n/**\n * Initiate an RPC session over a MessagePort, which is particularly useful for communicating\n * between an iframe and its parent frame in a browser context. Each side should call this function\n * on its own end of the MessageChannel.\n */\nexport let newMessagePortRpcSession:<T extends Serializable<T> = Empty>\n    (port: MessagePort, localMain?: any, options?: RpcSessionOptions) => RpcStub<T> =\n    <any>newMessagePortRpcSessionImpl;\n\n/**\n * Implements unified handling of HTTP-batch and WebSocket responses for the Cloudflare Workers\n * Runtime.\n *\n * SECURITY WARNING: This function accepts cross-origin requests. If you do not want this, you\n * should validate the `Origin` header before calling this, or use `newHttpBatchRpcSession()` and\n * `newWebSocketRpcSession()` directly with appropriate security measures for each type of request.\n * But if your API uses in-band authorization (i.e. it has an RPC method that takes the user's\n * credentials as parameters and returns the authorized API), then cross-origin requests should\n * be safe.\n */\nexport async function newWorkersRpcResponse(request: Request, localMain: any) {\n  if (request.method === \"POST\") {\n    let response = await newHttpBatchRpcResponse(request, localMain);\n    // Since we're exposing the same API over WebSocket, too, and WebScoket always allows\n    // cross-origin requests, the API necessarily must be safe for cross-origin use (e.g. because\n    // it uses in-band authorization, as recommended in the readme). So, we might as well allow\n    // batch requests to be made cross-origin as well.\n    response.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n    return response;\n  } else if (request.headers.get(\"Upgrade\")?.toLowerCase() === \"websocket\") {\n    return newWorkersWebSocketRpcResponse(request, localMain);\n  } else {\n    return new Response(\"This endpoint only accepts POST or WebSocket requests.\", { status: 400 });\n  }\n}\n", "/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n ** SQLITE_VERSION \"3.50.4\"\n ** SQLITE_VERSION_NUMBER 3050004\n ** SQLITE_SOURCE_ID \"2025-07-30 19:33:53 4d8adfb30e03f9cf27f800a2c1ba3c48fb4ca1b08b0f5ed59a4d5ecbf45e20a3\"\n **\n ** Using the Emscripten SDK version 3.1.70.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptName = import.meta.url;\n\n  return function (moduleArg = {}) {\n    var moduleRtn;\n\n    var Module = moduleArg;\n\n    var readyPromiseResolve, readyPromiseReject;\n    var readyPromise = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string' &&\n      process.type != 'renderer';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var readAsync, readBinary;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptName) {\n        scriptDirectory = _scriptName;\n      }\n\n      if (scriptDirectory.startsWith('blob:')) {\n        scriptDirectory = '';\n      } else {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      }\n\n      {\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url) => {\n          return fetch(url, { credentials: 'same-origin' }).then((response) => {\n            if (response.ok) {\n              return response.arrayBuffer();\n            }\n            return Promise.reject(\n              new Error(response.status + ' : ' + response.url),\n            );\n          });\n        };\n      }\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.error.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    var wasmBinary = Module['wasmBinary'];\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 32768,\n      });\n    }\n\n    updateMemoryViews();\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function preRun() {\n      var preRuns = Module['preRun'];\n      if (preRuns) {\n        if (typeof preRuns == 'function') preRuns = [preRuns];\n        preRuns.forEach(addOnPreRun);\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      var postRuns = Module['postRun'];\n      if (postRuns) {\n        if (typeof postRuns == 'function') postRuns = [postRuns];\n        postRuns.forEach(addOnPostRun);\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      Module['monitorRunDependencies']?.(runDependencies);\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      Module['monitorRunDependencies']?.(runDependencies);\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      Module['onAbort']?.(what);\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    var isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n    var isFileURI = (filename) => filename.startsWith('file://');\n\n    function findWasmBinary() {\n      if (Module['locateFile']) {\n        var f = 'sqlite3.wasm';\n        if (!isDataURI(f)) {\n          return locateFile(f);\n        }\n        return f;\n      }\n\n      return new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    var wasmBinaryFile;\n\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw 'both async and sync fetching of the wasm failed';\n    }\n\n    function getBinaryPromise(binaryFile) {\n      if (!wasmBinary) {\n        return readAsync(binaryFile).then(\n          (response) => new Uint8Array(response),\n\n          () => getBinarySync(binaryFile),\n        );\n      }\n\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile)\n        .then((binary) => {\n          return WebAssembly.instantiate(binary, imports);\n        })\n        .then(receiver, (reason) => {\n          err(`failed to asynchronously prepare wasm: ${reason}`);\n\n          abort(reason);\n        });\n    }\n\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (\n        !binary &&\n        typeof WebAssembly.instantiateStreaming == 'function' &&\n        !isDataURI(binaryFile) &&\n        typeof fetch == 'function'\n      ) {\n        return fetch(binaryFile, { credentials: 'same-origin' }).then(\n          (response) => {\n            var result = WebAssembly.instantiateStreaming(response, imports);\n\n            return result.then(callback, function (reason) {\n              err(`wasm streaming compile failed: ${reason}`);\n              err('falling back to ArrayBuffer instantiation');\n              return instantiateArrayBuffer(binaryFile, imports, callback);\n            });\n          },\n        );\n      }\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n\n    function getWasmImports() {\n      return {\n        env: wasmImports,\n        wasi_snapshot_preview1: wasmImports,\n      };\n    }\n\n    function createWasm() {\n      var info = getWasmImports();\n\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n\n        addOnInit(wasmExports['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n        return wasmExports;\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          return Module['instantiateWasm'](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      wasmBinaryFile ??= findWasmBinary();\n\n      instantiateAsync(\n        wasmBinary,\n        wasmBinaryFile,\n        info,\n        receiveInstantiationResult,\n      ).catch(readyPromiseReject);\n      return {};\n    }\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n    var callRuntimeCallbacks = (callbacks) => {\n      callbacks.forEach((f) => f(Module));\n    };\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr];\n        case 'i8':\n          return HEAP8[ptr];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort(`invalid type for getValue: ${type}`);\n      }\n    }\n\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          HEAP64[ptr >> 3] = BigInt(value);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort(`invalid type for setValue: ${type}`);\n      }\n    }\n\n    var stackRestore = (val) => __emscripten_stack_restore(val);\n\n    var stackSave = () => _emscripten_stack_get_current();\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: (...paths) => PATH.normalize(paths.join('/')),\n      join2: (l, r) => PATH.normalize(l + '/' + r),\n    };\n\n    var initRandomFill = () => {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        return (view) => crypto.getRandomValues(view);\n      } else abort('initRandomDevice');\n    };\n    var randomFill = (view) => {\n      return (randomFill = initRandomFill())(view);\n    };\n\n    var PATH_FS = {\n      resolve: (...args) => {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? args[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;\n\n    var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    };\n\n    var FS_stdin_getChar_buffer = [];\n\n    var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (\n          typeof window != 'undefined' &&\n          typeof window.prompt == 'function'\n        ) {\n          result = window.prompt('Input: ');\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else {\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n      ttys: [],\n      init() {},\n      shutdown() {},\n      register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n        ioctl_tcgets(tty) {\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a,\n              0x00, 0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ],\n          };\n        },\n        ioctl_tcsets(tty, optional_actions, data) {\n          return 0;\n        },\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n    };\n\n    var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n    var mmapAlloc = (size) => {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (ptr) zeroMemory(ptr, size);\n      return ptr;\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n            },\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync,\n            },\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink,\n            },\n            stream: {},\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: FS.chrdev_stream_ops,\n          },\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n        },\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir(node) {\n          var entries = ['.', '..'];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            if (contents) {\n              if (position > 0 || position + length < contents.length) {\n                if (contents.subarray) {\n                  contents = contents.subarray(position, position + length);\n                } else {\n                  contents = Array.prototype.slice.call(\n                    contents,\n                    position,\n                    position + length,\n                  );\n                }\n              }\n              HEAP8.set(contents, ptr);\n            }\n          }\n          return { ptr, allocated };\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url).then(\n        (arrayBuffer) => {\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (err) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw `Loading data file \"${url}\" failed.`;\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    };\n\n    var FS_createDataFile = (\n      parent,\n      name,\n      fileData,\n      canRead,\n      canWrite,\n      canOwn,\n    ) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n\n    var preloadPlugins = Module['preloadPlugins'] || [];\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      if (typeof Browser != 'undefined') Browser.init();\n\n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n    var FS_createPreloadedFile = (\n      parent,\n      name,\n      url,\n      canRead,\n      canWrite,\n      onload,\n      onerror,\n      dontCreateFile,\n      canOwn,\n      preFinish,\n    ) => {\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`);\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(\n              parent,\n              name,\n              byteArray,\n              canRead,\n              canWrite,\n              canOwn,\n            );\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (\n          FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n            onerror?.();\n            removeRunDependency(dep);\n          })\n        ) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n\n    var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        r: 0,\n        'r+': 2,\n        w: 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        a: 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: class {\n        constructor(errno) {\n          this.name = 'ErrnoError';\n          this.errno = errno;\n        }\n      },\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      readFiles: {},\n      FSStream: class {\n        constructor() {\n          this.shared = {};\n        }\n        get object() {\n          return this.node;\n        }\n        set object(val) {\n          this.node = val;\n        }\n        get isRead() {\n          return (this.flags & 2097155) !== 1;\n        }\n        get isWrite() {\n          return (this.flags & 2097155) !== 0;\n        }\n        get isAppend() {\n          return this.flags & 1024;\n        }\n        get flags() {\n          return this.shared.flags;\n        }\n        set flags(val) {\n          this.shared.flags = val;\n        }\n        get position() {\n          return this.shared.position;\n        }\n        set position(val) {\n          this.shared.position = val;\n        }\n      },\n      FSNode: class {\n        constructor(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n          this.readMode = 292 | 73;\n          this.writeMode = 146;\n        }\n        get read() {\n          return (this.mode & this.readMode) === this.readMode;\n        }\n        set read(val) {\n          val ? (this.mode |= this.readMode) : (this.mode &= ~this.readMode);\n        }\n        get write() {\n          return (this.mode & this.writeMode) === this.writeMode;\n        }\n        set write(val) {\n          val ? (this.mode |= this.writeMode) : (this.mode &= ~this.writeMode);\n        }\n        get isFolder() {\n          return FS.isDir(this.mode);\n        }\n        get isDevice() {\n          return FS.isChrdev(this.mode);\n        }\n      },\n      lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? `${mount}/${path}`\n              : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n      hashName(parentid, name) {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream(stream, fd = -1) {\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      dupStream(origStream, fd = -1) {\n        var stream = FS.createStream(origStream, fd);\n        stream.stream_ops?.dup?.(stream);\n        return stream;\n      },\n      chrdev_stream_ops: {\n        open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          stream.stream_ops.open?.(stream);\n        },\n        llseek() {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push(...m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            `warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`,\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n\n          old_node.parent = new_dir;\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n      chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open(path, flags, mode) {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        if (flags & 64) {\n          mode = typeof mode == 'undefined' ? 438 : mode;\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap(stream, length, position, prot, flags) {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!length) {\n          throw new FS.ErrnoError(28);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices() {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var randomBuffer = new Uint8Array(1024),\n          randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories() {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount() {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup(parent, name) {\n                  var fd = +name;\n                  var stream = FS.getStreamChecked(fd);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams(input, output, error) {\n        if (input) {\n          FS.createDevice('/dev', 'stdin', input);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (output) {\n          FS.createDevice('/dev', 'stdout', null, output);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (error) {\n          FS.createDevice('/dev', 'stderr', null, error);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      staticInit() {\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init(input, output, error) {\n        FS.initialized = true;\n\n        input ??= Module['stdin'];\n        output ??= Module['stdout'];\n        error ??= Module['stderr'];\n\n        FS.createStandardStreams(input, output, error);\n      },\n      quit() {\n        FS.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(!!input, !!output);\n        FS.createDevice.major ??= 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else {\n          try {\n            obj.contents = readBinary(obj.url);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        }\n      },\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        class LazyUint8Array {\n          constructor() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = (idx / this.chunkSize) | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          }\n          setDataGetter(getter) {\n            this.getter = getter;\n          }\n          cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          }\n          get length() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._length;\n          }\n          get chunkSize() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._chunkSize;\n          }\n        }\n\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = (...args) => {\n            FS.forceLoadFile(node);\n            return fn(...args);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n    };\n\n    var UTF8ToString = (ptr, maxBytesToRead) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat(func, path, buf) {\n        var stat = func(path);\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 4) >> 2] = stat.mode;\n        HEAPU32[(buf + 8) >> 2] = stat.nlink;\n        HEAP32[(buf + 12) >> 2] = stat.uid;\n        HEAP32[(buf + 16) >> 2] = stat.gid;\n        HEAP32[(buf + 20) >> 2] = stat.rdev;\n        HEAP64[(buf + 24) >> 3] = BigInt(stat.size);\n        HEAP32[(buf + 32) >> 2] = 4096;\n        HEAP32[(buf + 36) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        HEAP64[(buf + 40) >> 3] = BigInt(Math.floor(atime / 1000));\n        HEAPU32[(buf + 48) >> 2] = (atime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 56) >> 3] = BigInt(Math.floor(mtime / 1000));\n        HEAPU32[(buf + 64) >> 2] = (mtime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 72) >> 3] = BigInt(Math.floor(ctime / 1000));\n        HEAPU32[(buf + 80) >> 2] = (ctime % 1000) * 1000 * 1000;\n        HEAP64[(buf + 88) >> 3] = BigInt(stat.ino);\n        return 0;\n      },\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n      varargs: undefined,\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function syscallGetVarargI() {\n      var ret = HEAP32[+SYSCALLS.varargs >> 2];\n      SYSCALLS.varargs += 4;\n      return ret;\n    }\n    var syscallGetVarargP = syscallGetVarargI;\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = syscallGetVarargI();\n            if (arg < 0) {\n              return -28;\n            }\n            while (FS.streams[arg]) {\n              arg++;\n            }\n            var newStream;\n            newStream = FS.dupStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = syscallGetVarargI();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 12: {\n            var arg = syscallGetVarargP();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 13:\n          case 14:\n            return 0;\n        }\n        return -28;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var INT53_MAX = 9007199254740992;\n\n    var INT53_MIN = -9007199254740992;\n    var bigintToI53Checked = (num) =>\n      num < INT53_MIN || num > INT53_MAX ? NaN : Number(num);\n    function ___syscall_ftruncate64(fd, length) {\n      length = bigintToI53Checked(length);\n\n      try {\n        if (isNaN(length)) return 61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21505: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcgets) {\n              var termios = stream.tty.ops.ioctl_tcgets(stream);\n              var argp = syscallGetVarargP();\n              HEAP32[argp >> 2] = termios.c_iflag || 0;\n              HEAP32[(argp + 4) >> 2] = termios.c_oflag || 0;\n              HEAP32[(argp + 8) >> 2] = termios.c_cflag || 0;\n              HEAP32[(argp + 12) >> 2] = termios.c_lflag || 0;\n              for (var i = 0; i < 32; i++) {\n                HEAP8[argp + i + 17] = termios.c_cc[i] || 0;\n              }\n              return 0;\n            }\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcsets) {\n              var argp = syscallGetVarargP();\n              var c_iflag = HEAP32[argp >> 2];\n              var c_oflag = HEAP32[(argp + 4) >> 2];\n              var c_cflag = HEAP32[(argp + 8) >> 2];\n              var c_lflag = HEAP32[(argp + 12) >> 2];\n              var c_cc = [];\n              for (var i = 0; i < 32; i++) {\n                c_cc.push(HEAP8[argp + i + 17]);\n              }\n              return stream.tty.ops.ioctl_tcsets(stream.tty, op, {\n                c_iflag,\n                c_oflag,\n                c_cflag,\n                c_lflag,\n                c_cc,\n              });\n            }\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = syscallGetVarargP();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = syscallGetVarargP();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tiocgwinsz) {\n              var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n              var argp = syscallGetVarargP();\n              HEAP16[argp >> 1] = winsize[0];\n              HEAP16[(argp + 2) >> 1] = winsize[1];\n            }\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21515: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? syscallGetVarargI() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var readI53FromI64 = (ptr) => {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    };\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        var now = Date.now(),\n          atime,\n          mtime;\n        if (!times) {\n          atime = now;\n          mtime = now;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          if (nanoseconds == 1073741823) {\n            atime = now;\n          } else if (nanoseconds == 1073741822) {\n            atime = -1;\n          } else {\n            atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          }\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          if (nanoseconds == 1073741823) {\n            mtime = now;\n          } else if (nanoseconds == 1073741822) {\n            mtime = -1;\n          } else {\n            mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          }\n        }\n\n        if (mtime != -1 || atime != -1) {\n          FS.utime(path, atime, mtime);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = 1;\n    var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\n    var isLeapYear = (year) =>\n      year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\n    var MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = leap\n        ? MONTH_DAYS_LEAP_CUMULATIVE\n        : MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    };\n\n    function __localtime_js(time, tmPtr) {\n      time = bigintToI53Checked(time);\n\n      var date = new Date(time * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = ydayFromDate(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, offset, allocated, addr) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, offset, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return -e.errno;\n      }\n    }\n\n    var __tzset_js = (timezone, daylight, std_name, dst_name) => {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      var extractZone = (timezoneOffset) => {\n        var sign = timezoneOffset >= 0 ? '-' : '+';\n\n        var absOffset = Math.abs(timezoneOffset);\n        var hours = String(Math.floor(absOffset / 60)).padStart(2, '0');\n        var minutes = String(absOffset % 60).padStart(2, '0');\n\n        return `UTC${sign}${hours}${minutes}`;\n      };\n\n      var winterName = extractZone(winterOffset);\n      var summerName = extractZone(summerOffset);\n      if (summerOffset < winterOffset) {\n        stringToUTF8(winterName, std_name, 17);\n        stringToUTF8(summerName, dst_name, 17);\n      } else {\n        stringToUTF8(winterName, dst_name, 17);\n        stringToUTF8(summerName, std_name, 17);\n      }\n    };\n\n    var _emscripten_date_now = () => Date.now();\n\n    var _emscripten_get_now = () => performance.now();\n\n    var getHeapMax = () => 2147483648;\n\n    var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = ((size - b.byteLength + 65535) / 65536) | 0;\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    };\n    var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n\n      requestedSize >>>= 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = growMemory(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    var ENV = {};\n\n    var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n\n    var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++] = str.charCodeAt(i);\n      }\n\n      HEAP8[buffer] = 0;\n    };\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => (bufSize += string.length + 1));\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var rightsBase = 0;\n        var rightsInheriting = 0;\n        var flags = 0;\n        {\n          var stream = SYSCALLS.getStreamFromFD(fd);\n\n          var type = stream.tty\n            ? 2\n            : FS.isDir(stream.mode)\n              ? 3\n              : FS.isLink(stream.mode)\n                ? 7\n                : 4;\n        }\n        HEAP8[pbuf] = type;\n        HEAP16[(pbuf + 2) >> 1] = flags;\n        HEAP64[(pbuf + 8) >> 3] = BigInt(rightsBase);\n        HEAP64[(pbuf + 16) >> 3] = BigInt(rightsInheriting);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      offset = bigintToI53Checked(offset);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        HEAP64[newOffset >> 3] = BigInt(stream.position);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops?.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) {\n          break;\n        }\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n\n    var wasmImports = {\n      __syscall_chmod: ___syscall_chmod,\n\n      __syscall_faccessat: ___syscall_faccessat,\n\n      __syscall_fchmod: ___syscall_fchmod,\n\n      __syscall_fchown32: ___syscall_fchown32,\n\n      __syscall_fcntl64: ___syscall_fcntl64,\n\n      __syscall_fstat64: ___syscall_fstat64,\n\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n\n      __syscall_getcwd: ___syscall_getcwd,\n\n      __syscall_ioctl: ___syscall_ioctl,\n\n      __syscall_lstat64: ___syscall_lstat64,\n\n      __syscall_mkdirat: ___syscall_mkdirat,\n\n      __syscall_newfstatat: ___syscall_newfstatat,\n\n      __syscall_openat: ___syscall_openat,\n\n      __syscall_readlinkat: ___syscall_readlinkat,\n\n      __syscall_rmdir: ___syscall_rmdir,\n\n      __syscall_stat64: ___syscall_stat64,\n\n      __syscall_unlinkat: ___syscall_unlinkat,\n\n      __syscall_utimensat: ___syscall_utimensat,\n\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n\n      _localtime_js: __localtime_js,\n\n      _mmap_js: __mmap_js,\n\n      _munmap_js: __munmap_js,\n\n      _tzset_js: __tzset_js,\n\n      emscripten_date_now: _emscripten_date_now,\n\n      emscripten_get_now: _emscripten_get_now,\n\n      emscripten_resize_heap: _emscripten_resize_heap,\n\n      environ_get: _environ_get,\n\n      environ_sizes_get: _environ_sizes_get,\n\n      fd_close: _fd_close,\n\n      fd_fdstat_get: _fd_fdstat_get,\n\n      fd_read: _fd_read,\n\n      fd_seek: _fd_seek,\n\n      fd_sync: _fd_sync,\n\n      fd_write: _fd_write,\n\n      memory: wasmMemory,\n    };\n    var wasmExports = createWasm();\n    var ___wasm_call_ctors = () =>\n      (___wasm_call_ctors = wasmExports['__wasm_call_ctors'])();\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = (a0, a1, a2, a3) =>\n      (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        wasmExports['sqlite3_status64'])(a0, a1, a2, a3));\n    var _sqlite3_status = (Module['_sqlite3_status'] = (a0, a1, a2, a3) =>\n      (_sqlite3_status = Module['_sqlite3_status'] =\n        wasmExports['sqlite3_status'])(a0, a1, a2, a3));\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        wasmExports['sqlite3_db_status'])(a0, a1, a2, a3, a4));\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = (a0) =>\n      (_sqlite3_msize = Module['_sqlite3_msize'] =\n        wasmExports['sqlite3_msize'])(a0));\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = (a0) =>\n      (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        wasmExports['sqlite3_vfs_find'])(a0));\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = () =>\n      (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        wasmExports['sqlite3_initialize'])());\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = (a0) =>\n      (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        wasmExports['sqlite3_malloc'])(a0));\n    var _sqlite3_free = (Module['_sqlite3_free'] = (a0) =>\n      (_sqlite3_free = Module['_sqlite3_free'] = wasmExports['sqlite3_free'])(\n        a0,\n      ));\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = (a0, a1) =>\n      (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        wasmExports['sqlite3_vfs_register'])(a0, a1));\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] = (a0) =>\n      (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n        wasmExports['sqlite3_vfs_unregister'])(a0));\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = (a0) =>\n      (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        wasmExports['sqlite3_malloc64'])(a0));\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = (a0, a1) =>\n      (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        wasmExports['sqlite3_realloc'])(a0, a1));\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = (a0, a1) =>\n      (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        wasmExports['sqlite3_realloc64'])(a0, a1));\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = (a0) =>\n      (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        wasmExports['sqlite3_value_text'])(a0));\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = (a0, a1) =>\n      (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        wasmExports['sqlite3_randomness'])(a0, a1));\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = (a0, a1) =>\n      (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        wasmExports['sqlite3_stricmp'])(a0, a1));\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = (a0, a1, a2) =>\n      (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        wasmExports['sqlite3_strnicmp'])(a0, a1, a2));\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] = (a0, a1) =>\n      (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n        wasmExports['sqlite3_uri_parameter'])(a0, a1));\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = (a0, a1, a2) =>\n      (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        wasmExports['sqlite3_uri_boolean'])(a0, a1, a2));\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = (a0, a1, a2, a3) =>\n      (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        wasmExports['sqlite3_serialize'])(a0, a1, a2, a3));\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        wasmExports['sqlite3_prepare_v2'])(a0, a1, a2, a3, a4));\n    var _sqlite3_step = (Module['_sqlite3_step'] = (a0) =>\n      (_sqlite3_step = Module['_sqlite3_step'] = wasmExports['sqlite3_step'])(\n        a0,\n      ));\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = (a0, a1) =>\n      (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        wasmExports['sqlite3_column_int64'])(a0, a1));\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = (a0) =>\n      (_sqlite3_reset = Module['_sqlite3_reset'] =\n        wasmExports['sqlite3_reset'])(a0));\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = (a0, a1, a2, a3, a4) =>\n      (_sqlite3_exec = Module['_sqlite3_exec'] = wasmExports['sqlite3_exec'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n      ));\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = (a0, a1) =>\n      (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        wasmExports['sqlite3_column_int'])(a0, a1));\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = (a0) =>\n      (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        wasmExports['sqlite3_finalize'])(a0));\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        wasmExports['sqlite3_file_control'])(a0, a1, a2, a3));\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = (a0, a1) =>\n      (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        wasmExports['sqlite3_column_name'])(a0, a1));\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = (a0, a1) =>\n      (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        wasmExports['sqlite3_column_text'])(a0, a1));\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = (a0, a1) =>\n      (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        wasmExports['sqlite3_column_type'])(a0, a1));\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = (a0) =>\n      (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        wasmExports['sqlite3_errmsg'])(a0));\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        wasmExports['sqlite3_deserialize'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] = (a0) =>\n      (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n        wasmExports['sqlite3_clear_bindings'])(a0));\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = (a0) =>\n      (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        wasmExports['sqlite3_value_blob'])(a0));\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = (a0) =>\n      (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        wasmExports['sqlite3_value_bytes'])(a0));\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = (a0) =>\n      (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        wasmExports['sqlite3_value_double'])(a0));\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = (a0) =>\n      (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        wasmExports['sqlite3_value_int'])(a0));\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = (a0) =>\n      (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        wasmExports['sqlite3_value_int64'])(a0));\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] = (a0) =>\n      (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n        wasmExports['sqlite3_value_subtype'])(a0));\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] = (a0, a1) =>\n      (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n        wasmExports['sqlite3_value_pointer'])(a0, a1));\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = (a0) =>\n      (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        wasmExports['sqlite3_value_type'])(a0));\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] = (a0) =>\n      (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n        wasmExports['sqlite3_value_nochange'])(a0));\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] = (a0) =>\n      (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n        wasmExports['sqlite3_value_frombind'])(a0));\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = (a0) =>\n      (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        wasmExports['sqlite3_value_dup'])(a0));\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = (a0) =>\n      (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        wasmExports['sqlite3_value_free'])(a0));\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        wasmExports['sqlite3_result_blob'])(a0, a1, a2, a3));\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      (a0) =>\n        (_sqlite3_result_error_toobig = Module['_sqlite3_result_error_toobig'] =\n          wasmExports['sqlite3_result_error_toobig'])(a0));\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] = (\n      a0,\n    ) =>\n      (_sqlite3_result_error_nomem = Module['_sqlite3_result_error_nomem'] =\n        wasmExports['sqlite3_result_error_nomem'])(a0));\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] = (a0, a1) =>\n      (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n        wasmExports['sqlite3_result_double'])(a0, a1));\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        wasmExports['sqlite3_result_error'])(a0, a1, a2));\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = (a0, a1) =>\n      (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        wasmExports['sqlite3_result_int'])(a0, a1));\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = (a0, a1) =>\n      (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        wasmExports['sqlite3_result_int64'])(a0, a1));\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = (a0) =>\n      (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        wasmExports['sqlite3_result_null'])(a0));\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n        wasmExports['sqlite3_result_pointer'])(a0, a1, a2, a3));\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n        wasmExports['sqlite3_result_subtype'])(a0, a1));\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        wasmExports['sqlite3_result_text'])(a0, a1, a2, a3));\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n        wasmExports['sqlite3_result_zeroblob'])(a0, a1));\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_zeroblob64 = Module['_sqlite3_result_zeroblob64'] =\n        wasmExports['sqlite3_result_zeroblob64'])(a0, a1));\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_result_error_code = Module['_sqlite3_result_error_code'] =\n        wasmExports['sqlite3_result_error_code'])(a0, a1));\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = (a0) =>\n      (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        wasmExports['sqlite3_user_data'])(a0));\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] = (\n      a0,\n    ) =>\n      (_sqlite3_context_db_handle = Module['_sqlite3_context_db_handle'] =\n        wasmExports['sqlite3_context_db_handle'])(a0));\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] = (a0) =>\n      (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n        wasmExports['sqlite3_vtab_nochange'])(a0));\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] = (a0, a1) =>\n      (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n        wasmExports['sqlite3_vtab_in_first'])(a0, a1));\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = (a0, a1) =>\n      (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        wasmExports['sqlite3_vtab_in_next'])(a0, a1));\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_aggregate_context = Module['_sqlite3_aggregate_context'] =\n        wasmExports['sqlite3_aggregate_context'])(a0, a1));\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = (a0, a1) =>\n      (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        wasmExports['sqlite3_get_auxdata'])(a0, a1));\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        wasmExports['sqlite3_set_auxdata'])(a0, a1, a2, a3));\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = (a0) =>\n      (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        wasmExports['sqlite3_column_count'])(a0));\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = (a0) =>\n      (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        wasmExports['sqlite3_data_count'])(a0));\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = (a0, a1) =>\n      (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        wasmExports['sqlite3_column_blob'])(a0, a1));\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = (a0, a1) =>\n      (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        wasmExports['sqlite3_column_bytes'])(a0, a1));\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] = (a0, a1) =>\n      (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n        wasmExports['sqlite3_column_double'])(a0, a1));\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = (a0, a1) =>\n      (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        wasmExports['sqlite3_column_value'])(a0, a1));\n    var _sqlite3_column_decltype = (Module['_sqlite3_column_decltype'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_column_decltype = Module['_sqlite3_column_decltype'] =\n        wasmExports['sqlite3_column_decltype'])(a0, a1));\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        wasmExports['sqlite3_bind_blob'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = (a0, a1, a2) =>\n      (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        wasmExports['sqlite3_bind_double'])(a0, a1, a2));\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = (a0, a1, a2) =>\n      (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        wasmExports['sqlite3_bind_int'])(a0, a1, a2));\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = (a0, a1, a2) =>\n      (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        wasmExports['sqlite3_bind_int64'])(a0, a1, a2));\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = (a0, a1) =>\n      (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        wasmExports['sqlite3_bind_null'])(a0, a1));\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        wasmExports['sqlite3_bind_pointer'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        wasmExports['sqlite3_bind_text'])(a0, a1, a2, a3, a4));\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = (a0) =>\n      (_sqlite3_bind_parameter_count = Module['_sqlite3_bind_parameter_count'] =\n        wasmExports['sqlite3_bind_parameter_count'])(a0));\n    var _sqlite3_bind_parameter_name = (Module['_sqlite3_bind_parameter_name'] =\n      (a0, a1) =>\n        (_sqlite3_bind_parameter_name = Module['_sqlite3_bind_parameter_name'] =\n          wasmExports['sqlite3_bind_parameter_name'])(a0, a1));\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = (a0, a1) =>\n      (_sqlite3_bind_parameter_index = Module['_sqlite3_bind_parameter_index'] =\n        wasmExports['sqlite3_bind_parameter_index'])(a0, a1));\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = (a0) =>\n      (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        wasmExports['sqlite3_db_handle'])(a0));\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] = (a0) =>\n      (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n        wasmExports['sqlite3_stmt_readonly'])(a0));\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] = (a0) =>\n      (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n        wasmExports['sqlite3_stmt_isexplain'])(a0));\n    var _sqlite3_stmt_explain = (Module['_sqlite3_stmt_explain'] = (a0, a1) =>\n      (_sqlite3_stmt_explain = Module['_sqlite3_stmt_explain'] =\n        wasmExports['sqlite3_stmt_explain'])(a0, a1));\n    var _sqlite3_stmt_busy = (Module['_sqlite3_stmt_busy'] = (a0) =>\n      (_sqlite3_stmt_busy = Module['_sqlite3_stmt_busy'] =\n        wasmExports['sqlite3_stmt_busy'])(a0));\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = (a0, a1, a2) =>\n      (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        wasmExports['sqlite3_stmt_status'])(a0, a1, a2));\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = (a0) =>\n      (_sqlite3_sql = Module['_sqlite3_sql'] = wasmExports['sqlite3_sql'])(a0));\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = (a0) =>\n      (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        wasmExports['sqlite3_expanded_sql'])(a0));\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n        wasmExports['sqlite3_preupdate_old'])(a0, a1, a2));\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] = (a0) =>\n      (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n        wasmExports['sqlite3_preupdate_count'])(a0));\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] = (a0) =>\n      (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n        wasmExports['sqlite3_preupdate_depth'])(a0));\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      (a0) =>\n        (_sqlite3_preupdate_blobwrite = Module['_sqlite3_preupdate_blobwrite'] =\n          wasmExports['sqlite3_preupdate_blobwrite'])(a0));\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n        wasmExports['sqlite3_preupdate_new'])(a0, a1, a2));\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] = (\n      a0,\n    ) =>\n      (_sqlite3_value_numeric_type = Module['_sqlite3_value_numeric_type'] =\n        wasmExports['sqlite3_value_numeric_type'])(a0));\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n        wasmExports['sqlite3_set_authorizer'])(a0, a1, a2));\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = (a0, a1) =>\n      (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        wasmExports['sqlite3_strglob'])(a0, a1));\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = (a0, a1, a2) =>\n      (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        wasmExports['sqlite3_strlike'])(a0, a1, a2));\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] = (a0) =>\n      (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n        wasmExports['sqlite3_auto_extension'])(a0));\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = (a0) =>\n      (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        wasmExports['sqlite3_cancel_auto_extension'])(a0));\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = () =>\n      (_sqlite3_reset_auto_extension = Module['_sqlite3_reset_auto_extension'] =\n        wasmExports['sqlite3_reset_auto_extension'])());\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        wasmExports['sqlite3_prepare_v3'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n        wasmExports['sqlite3_create_module'])(a0, a1, a2, a3));\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_create_module_v2 = Module['_sqlite3_create_module_v2'] =\n        wasmExports['sqlite3_create_module_v2'])(a0, a1, a2, a3, a4));\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = (a0, a1) =>\n      (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        wasmExports['sqlite3_drop_modules'])(a0, a1));\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = (a0, a1) =>\n      (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        wasmExports['sqlite3_declare_vtab'])(a0, a1));\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] = (\n      a0,\n    ) =>\n      (_sqlite3_vtab_on_conflict = Module['_sqlite3_vtab_on_conflict'] =\n        wasmExports['sqlite3_vtab_on_conflict'])(a0));\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n        wasmExports['sqlite3_vtab_collation'])(a0, a1));\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = (a0, a1, a2) =>\n      (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        wasmExports['sqlite3_vtab_in'])(a0, a1, a2));\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n        wasmExports['sqlite3_vtab_rhs_value'])(a0, a1, a2));\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] = (a0) =>\n      (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n        wasmExports['sqlite3_vtab_distinct'])(a0));\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        wasmExports['sqlite3_keyword_name'])(a0, a1, a2));\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] = () =>\n      (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n        wasmExports['sqlite3_keyword_count'])());\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] = (a0, a1) =>\n      (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n        wasmExports['sqlite3_keyword_check'])(a0, a1));\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = (a0) =>\n      (_sqlite3_complete = Module['_sqlite3_complete'] =\n        wasmExports['sqlite3_complete'])(a0));\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = () =>\n      (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        wasmExports['sqlite3_libversion'])());\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      () =>\n        (_sqlite3_libversion_number = Module['_sqlite3_libversion_number'] =\n          wasmExports['sqlite3_libversion_number'])());\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = () =>\n      (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        wasmExports['sqlite3_shutdown'])());\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] = (\n      a0,\n    ) =>\n      (_sqlite3_last_insert_rowid = Module['_sqlite3_last_insert_rowid'] =\n        wasmExports['sqlite3_last_insert_rowid'])(a0));\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = (a0, a1) =>\n      (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        wasmExports['sqlite3_set_last_insert_rowid'])(a0, a1));\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = (a0) =>\n      (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        wasmExports['sqlite3_changes64'])(a0));\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = (a0) =>\n      (_sqlite3_changes = Module['_sqlite3_changes'] =\n        wasmExports['sqlite3_changes'])(a0));\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] = (a0) =>\n      (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n        wasmExports['sqlite3_total_changes64'])(a0));\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] = (a0) =>\n      (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n        wasmExports['sqlite3_total_changes'])(a0));\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = (a0, a1) =>\n      (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        wasmExports['sqlite3_txn_state'])(a0, a1));\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = (a0) =>\n      (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        wasmExports['sqlite3_close_v2'])(a0));\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        wasmExports['sqlite3_busy_handler'])(a0, a1, a2));\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3_progress_handler = Module['_sqlite3_progress_handler'] =\n        wasmExports['sqlite3_progress_handler'])(a0, a1, a2, a3));\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = (a0, a1) =>\n      (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        wasmExports['sqlite3_busy_timeout'])(a0, a1));\n    var _sqlite3_interrupt = (Module['_sqlite3_interrupt'] = (a0) =>\n      (_sqlite3_interrupt = Module['_sqlite3_interrupt'] =\n        wasmExports['sqlite3_interrupt'])(a0));\n    var _sqlite3_is_interrupted = (Module['_sqlite3_is_interrupted'] = (a0) =>\n      (_sqlite3_is_interrupted = Module['_sqlite3_is_interrupted'] =\n        wasmExports['sqlite3_is_interrupted'])(a0));\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n    ) =>\n      (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n        wasmExports['sqlite3_create_function'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n      ));\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n      a8,\n    ) =>\n      (_sqlite3_create_function_v2 = Module['_sqlite3_create_function_v2'] =\n        wasmExports['sqlite3_create_function_v2'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) =>\n      (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        wasmExports['sqlite3_create_window_function'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n        a9,\n      ));\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_overload_function = Module['_sqlite3_overload_function'] =\n        wasmExports['sqlite3_overload_function'])(a0, a1, a2));\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = (a0, a1, a2, a3) =>\n      (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        wasmExports['sqlite3_trace_v2'])(a0, a1, a2, a3));\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = (a0, a1, a2) =>\n      (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        wasmExports['sqlite3_commit_hook'])(a0, a1, a2));\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = (a0, a1, a2) =>\n      (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        wasmExports['sqlite3_update_hook'])(a0, a1, a2));\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n        wasmExports['sqlite3_rollback_hook'])(a0, a1, a2));\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n        wasmExports['sqlite3_preupdate_hook'])(a0, a1, a2));\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = (a0) =>\n      (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        wasmExports['sqlite3_error_offset'])(a0));\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = (a0) =>\n      (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        wasmExports['sqlite3_errcode'])(a0));\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] = (\n      a0,\n    ) =>\n      (_sqlite3_extended_errcode = Module['_sqlite3_extended_errcode'] =\n        wasmExports['sqlite3_extended_errcode'])(a0));\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = (a0) =>\n      (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        wasmExports['sqlite3_errstr'])(a0));\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = (a0, a1, a2) =>\n      (_sqlite3_limit = Module['_sqlite3_limit'] =\n        wasmExports['sqlite3_limit'])(a0, a1, a2));\n    var _sqlite3_open = (Module['_sqlite3_open'] = (a0, a1) =>\n      (_sqlite3_open = Module['_sqlite3_open'] = wasmExports['sqlite3_open'])(\n        a0,\n        a1,\n      ));\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = (a0, a1, a2, a3) =>\n      (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        wasmExports['sqlite3_open_v2'])(a0, a1, a2, a3));\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3_create_collation = Module['_sqlite3_create_collation'] =\n        wasmExports['sqlite3_create_collation'])(a0, a1, a2, a3, a4));\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      (a0, a1, a2, a3, a4, a5) =>\n        (_sqlite3_create_collation_v2 = Module['_sqlite3_create_collation_v2'] =\n          wasmExports['sqlite3_create_collation_v2'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3_collation_needed = Module['_sqlite3_collation_needed'] =\n        wasmExports['sqlite3_collation_needed'])(a0, a1, a2));\n    var _sqlite3_get_autocommit = (Module['_sqlite3_get_autocommit'] = (a0) =>\n      (_sqlite3_get_autocommit = Module['_sqlite3_get_autocommit'] =\n        wasmExports['sqlite3_get_autocommit'])(a0));\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        wasmExports['sqlite3_table_column_metadata'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = (a0, a1) =>\n      (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        wasmExports['sqlite3_extended_result_codes'])(a0, a1));\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = (a0, a1) =>\n      (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        wasmExports['sqlite3_uri_key'])(a0, a1));\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = (a0, a1, a2) =>\n      (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        wasmExports['sqlite3_uri_int64'])(a0, a1, a2));\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = (a0, a1) =>\n      (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        wasmExports['sqlite3_db_name'])(a0, a1));\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = (a0, a1) =>\n      (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        wasmExports['sqlite3_db_filename'])(a0, a1));\n    var _sqlite3_db_readonly = (Module['_sqlite3_db_readonly'] = (a0, a1) =>\n      (_sqlite3_db_readonly = Module['_sqlite3_db_readonly'] =\n        wasmExports['sqlite3_db_readonly'])(a0, a1));\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] = (\n      a0,\n    ) =>\n      (_sqlite3_compileoption_used = Module['_sqlite3_compileoption_used'] =\n        wasmExports['sqlite3_compileoption_used'])(a0));\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] = (\n      a0,\n    ) =>\n      (_sqlite3_compileoption_get = Module['_sqlite3_compileoption_get'] =\n        wasmExports['sqlite3_compileoption_get'])(a0));\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        wasmExports['sqlite3session_diff'])(a0, a1, a2, a3));\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] = (a0, a1) =>\n      (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n        wasmExports['sqlite3session_attach'])(a0, a1));\n    var _sqlite3session_create = (Module['_sqlite3session_create'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_create = Module['_sqlite3session_create'] =\n        wasmExports['sqlite3session_create'])(a0, a1, a2));\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] = (a0) =>\n      (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n        wasmExports['sqlite3session_delete'])(a0));\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      (a0, a1, a2) =>\n        (_sqlite3session_table_filter = Module['_sqlite3session_table_filter'] =\n          wasmExports['sqlite3session_table_filter'])(a0, a1, a2));\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_changeset = Module['_sqlite3session_changeset'] =\n        wasmExports['sqlite3session_changeset'])(a0, a1, a2));\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        wasmExports['sqlite3session_changeset_strm'])(a0, a1, a2));\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_patchset_strm = Module['_sqlite3session_patchset_strm'] =\n        wasmExports['sqlite3session_patchset_strm'])(a0, a1, a2));\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n        wasmExports['sqlite3session_patchset'])(a0, a1, a2));\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] = (a0, a1) =>\n      (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n        wasmExports['sqlite3session_enable'])(a0, a1));\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n        wasmExports['sqlite3session_indirect'])(a0, a1));\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] = (a0) =>\n      (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n        wasmExports['sqlite3session_isempty'])(a0));\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] = (\n      a0,\n    ) =>\n      (_sqlite3session_memory_used = Module['_sqlite3session_memory_used'] =\n        wasmExports['sqlite3session_memory_used'])(a0));\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = (a0, a1, a2) =>\n      (_sqlite3session_object_config = Module['_sqlite3session_object_config'] =\n        wasmExports['sqlite3session_object_config'])(a0, a1, a2));\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = (a0) =>\n      (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        wasmExports['sqlite3session_changeset_size'])(a0));\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n        wasmExports['sqlite3changeset_start'])(a0, a1, a2));\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3changeset_start_v2 = Module['_sqlite3changeset_start_v2'] =\n        wasmExports['sqlite3changeset_start_v2'])(a0, a1, a2, a3));\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      (a0, a1, a2) =>\n        (_sqlite3changeset_start_strm = Module['_sqlite3changeset_start_strm'] =\n          wasmExports['sqlite3changeset_start_strm'])(a0, a1, a2));\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        wasmExports['sqlite3changeset_start_v2_strm'])(a0, a1, a2, a3));\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] = (a0) =>\n      (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n        wasmExports['sqlite3changeset_next'])(a0));\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        wasmExports['sqlite3changeset_op'])(a0, a1, a2, a3, a4));\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = (a0, a1, a2) =>\n      (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        wasmExports['sqlite3changeset_pk'])(a0, a1, a2));\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        wasmExports['sqlite3changeset_old'])(a0, a1, a2));\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        wasmExports['sqlite3changeset_new'])(a0, a1, a2));\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changeset_conflict = Module['_sqlite3changeset_conflict'] =\n        wasmExports['sqlite3changeset_conflict'])(a0, a1, a2));\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = (a0, a1) =>\n      (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        wasmExports['sqlite3changeset_fk_conflicts'])(a0, a1));\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] = (\n      a0,\n    ) =>\n      (_sqlite3changeset_finalize = Module['_sqlite3changeset_finalize'] =\n        wasmExports['sqlite3changeset_finalize'])(a0));\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n        wasmExports['sqlite3changeset_invert'])(a0, a1, a2, a3));\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3changeset_invert_strm = Module['_sqlite3changeset_invert_strm'] =\n        wasmExports['sqlite3changeset_invert_strm'])(a0, a1, a2, a3));\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n      a6,\n      a7,\n      a8,\n    ) =>\n      (_sqlite3changeset_apply_v2 = Module['_sqlite3changeset_apply_v2'] =\n        wasmExports['sqlite3changeset_apply_v2'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n        wasmExports['sqlite3changeset_apply'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) =>\n      (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        wasmExports['sqlite3changeset_apply_v2_strm'])(\n        a0,\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n      ));\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      (a0, a1, a2, a3, a4, a5) =>\n        (_sqlite3changeset_apply_strm = Module['_sqlite3changeset_apply_strm'] =\n          wasmExports['sqlite3changeset_apply_strm'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] = (a0) =>\n      (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n        wasmExports['sqlite3changegroup_new'])(a0));\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n        wasmExports['sqlite3changegroup_add'])(a0, a1, a2));\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3changegroup_output = Module['_sqlite3changegroup_output'] =\n        wasmExports['sqlite3changegroup_output'])(a0, a1, a2));\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      (a0, a1, a2) =>\n        (_sqlite3changegroup_add_strm = Module['_sqlite3changegroup_add_strm'] =\n          wasmExports['sqlite3changegroup_add_strm'])(a0, a1, a2));\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = (a0, a1, a2) =>\n      (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        wasmExports['sqlite3changegroup_output_strm'])(a0, a1, a2));\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] = (\n      a0,\n    ) =>\n      (_sqlite3changegroup_delete = Module['_sqlite3changegroup_delete'] =\n        wasmExports['sqlite3changegroup_delete'])(a0));\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n        wasmExports['sqlite3changeset_concat'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = (a0, a1, a2, a3, a4, a5) =>\n      (_sqlite3changeset_concat_strm = Module['_sqlite3changeset_concat_strm'] =\n        wasmExports['sqlite3changeset_concat_strm'])(a0, a1, a2, a3, a4, a5));\n    var _sqlite3session_config = (Module['_sqlite3session_config'] = (a0, a1) =>\n      (_sqlite3session_config = Module['_sqlite3session_config'] =\n        wasmExports['sqlite3session_config'])(a0, a1));\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = () =>\n      (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        wasmExports['sqlite3_sourceid'])());\n    var _sqlite3__wasm_pstack_ptr = (Module['_sqlite3__wasm_pstack_ptr'] = () =>\n      (_sqlite3__wasm_pstack_ptr = Module['_sqlite3__wasm_pstack_ptr'] =\n        wasmExports['sqlite3__wasm_pstack_ptr'])());\n    var _sqlite3__wasm_pstack_restore = (Module[\n      '_sqlite3__wasm_pstack_restore'\n    ] = (a0) =>\n      (_sqlite3__wasm_pstack_restore = Module['_sqlite3__wasm_pstack_restore'] =\n        wasmExports['sqlite3__wasm_pstack_restore'])(a0));\n    var _sqlite3__wasm_pstack_alloc = (Module['_sqlite3__wasm_pstack_alloc'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_pstack_alloc = Module['_sqlite3__wasm_pstack_alloc'] =\n        wasmExports['sqlite3__wasm_pstack_alloc'])(a0));\n    var _sqlite3__wasm_pstack_remaining = (Module[\n      '_sqlite3__wasm_pstack_remaining'\n    ] = () =>\n      (_sqlite3__wasm_pstack_remaining = Module[\n        '_sqlite3__wasm_pstack_remaining'\n      ] =\n        wasmExports['sqlite3__wasm_pstack_remaining'])());\n    var _sqlite3__wasm_pstack_quota = (Module['_sqlite3__wasm_pstack_quota'] =\n      () =>\n        (_sqlite3__wasm_pstack_quota = Module['_sqlite3__wasm_pstack_quota'] =\n          wasmExports['sqlite3__wasm_pstack_quota'])());\n    var _sqlite3__wasm_db_error = (Module['_sqlite3__wasm_db_error'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_db_error = Module['_sqlite3__wasm_db_error'] =\n        wasmExports['sqlite3__wasm_db_error'])(a0, a1, a2));\n    var _sqlite3__wasm_test_struct = (Module['_sqlite3__wasm_test_struct'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_struct = Module['_sqlite3__wasm_test_struct'] =\n        wasmExports['sqlite3__wasm_test_struct'])(a0));\n    var _sqlite3__wasm_enum_json = (Module['_sqlite3__wasm_enum_json'] = () =>\n      (_sqlite3__wasm_enum_json = Module['_sqlite3__wasm_enum_json'] =\n        wasmExports['sqlite3__wasm_enum_json'])());\n    var _sqlite3__wasm_vfs_unlink = (Module['_sqlite3__wasm_vfs_unlink'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_vfs_unlink = Module['_sqlite3__wasm_vfs_unlink'] =\n        wasmExports['sqlite3__wasm_vfs_unlink'])(a0, a1));\n    var _sqlite3__wasm_db_vfs = (Module['_sqlite3__wasm_db_vfs'] = (a0, a1) =>\n      (_sqlite3__wasm_db_vfs = Module['_sqlite3__wasm_db_vfs'] =\n        wasmExports['sqlite3__wasm_db_vfs'])(a0, a1));\n    var _sqlite3__wasm_db_reset = (Module['_sqlite3__wasm_db_reset'] = (a0) =>\n      (_sqlite3__wasm_db_reset = Module['_sqlite3__wasm_db_reset'] =\n        wasmExports['sqlite3__wasm_db_reset'])(a0));\n    var _sqlite3__wasm_db_export_chunked = (Module[\n      '_sqlite3__wasm_db_export_chunked'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_db_export_chunked = Module[\n        '_sqlite3__wasm_db_export_chunked'\n      ] =\n        wasmExports['sqlite3__wasm_db_export_chunked'])(a0, a1));\n    var _sqlite3__wasm_db_serialize = (Module['_sqlite3__wasm_db_serialize'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n    ) =>\n      (_sqlite3__wasm_db_serialize = Module['_sqlite3__wasm_db_serialize'] =\n        wasmExports['sqlite3__wasm_db_serialize'])(a0, a1, a2, a3, a4));\n    var _sqlite3__wasm_vfs_create_file = (Module[\n      '_sqlite3__wasm_vfs_create_file'\n    ] = (a0, a1, a2, a3) =>\n      (_sqlite3__wasm_vfs_create_file = Module[\n        '_sqlite3__wasm_vfs_create_file'\n      ] =\n        wasmExports['sqlite3__wasm_vfs_create_file'])(a0, a1, a2, a3));\n    var _sqlite3__wasm_posix_create_file = (Module[\n      '_sqlite3__wasm_posix_create_file'\n    ] = (a0, a1, a2) =>\n      (_sqlite3__wasm_posix_create_file = Module[\n        '_sqlite3__wasm_posix_create_file'\n      ] =\n        wasmExports['sqlite3__wasm_posix_create_file'])(a0, a1, a2));\n    var _sqlite3__wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        wasmExports['sqlite3__wasm_kvvfsMakeKeyOnPstack'])(a0, a1));\n    var _sqlite3__wasm_kvvfs_methods = (Module['_sqlite3__wasm_kvvfs_methods'] =\n      () =>\n        (_sqlite3__wasm_kvvfs_methods = Module['_sqlite3__wasm_kvvfs_methods'] =\n          wasmExports['sqlite3__wasm_kvvfs_methods'])());\n    var _sqlite3__wasm_vtab_config = (Module['_sqlite3__wasm_vtab_config'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_vtab_config = Module['_sqlite3__wasm_vtab_config'] =\n        wasmExports['sqlite3__wasm_vtab_config'])(a0, a1, a2));\n    var _sqlite3__wasm_db_config_ip = (Module['_sqlite3__wasm_db_config_ip'] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_sqlite3__wasm_db_config_ip = Module['_sqlite3__wasm_db_config_ip'] =\n        wasmExports['sqlite3__wasm_db_config_ip'])(a0, a1, a2, a3));\n    var _sqlite3__wasm_db_config_pii = (Module['_sqlite3__wasm_db_config_pii'] =\n      (a0, a1, a2, a3, a4) =>\n        (_sqlite3__wasm_db_config_pii = Module['_sqlite3__wasm_db_config_pii'] =\n          wasmExports['sqlite3__wasm_db_config_pii'])(a0, a1, a2, a3, a4));\n    var _sqlite3__wasm_db_config_s = (Module['_sqlite3__wasm_db_config_s'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_db_config_s = Module['_sqlite3__wasm_db_config_s'] =\n        wasmExports['sqlite3__wasm_db_config_s'])(a0, a1, a2));\n    var _sqlite3__wasm_config_i = (Module['_sqlite3__wasm_config_i'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_config_i = Module['_sqlite3__wasm_config_i'] =\n        wasmExports['sqlite3__wasm_config_i'])(a0, a1));\n    var _sqlite3__wasm_config_ii = (Module['_sqlite3__wasm_config_ii'] = (\n      a0,\n      a1,\n      a2,\n    ) =>\n      (_sqlite3__wasm_config_ii = Module['_sqlite3__wasm_config_ii'] =\n        wasmExports['sqlite3__wasm_config_ii'])(a0, a1, a2));\n    var _sqlite3__wasm_config_j = (Module['_sqlite3__wasm_config_j'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_config_j = Module['_sqlite3__wasm_config_j'] =\n        wasmExports['sqlite3__wasm_config_j'])(a0, a1));\n    var _sqlite3__wasm_qfmt_token = (Module['_sqlite3__wasm_qfmt_token'] = (\n      a0,\n      a1,\n    ) =>\n      (_sqlite3__wasm_qfmt_token = Module['_sqlite3__wasm_qfmt_token'] =\n        wasmExports['sqlite3__wasm_qfmt_token'])(a0, a1));\n    var _sqlite3__wasm_init_wasmfs = (Module['_sqlite3__wasm_init_wasmfs'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_init_wasmfs = Module['_sqlite3__wasm_init_wasmfs'] =\n        wasmExports['sqlite3__wasm_init_wasmfs'])(a0));\n    var _sqlite3__wasm_test_intptr = (Module['_sqlite3__wasm_test_intptr'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_intptr = Module['_sqlite3__wasm_test_intptr'] =\n        wasmExports['sqlite3__wasm_test_intptr'])(a0));\n    var _sqlite3__wasm_test_voidptr = (Module['_sqlite3__wasm_test_voidptr'] = (\n      a0,\n    ) =>\n      (_sqlite3__wasm_test_voidptr = Module['_sqlite3__wasm_test_voidptr'] =\n        wasmExports['sqlite3__wasm_test_voidptr'])(a0));\n    var _sqlite3__wasm_test_int64_max = (Module[\n      '_sqlite3__wasm_test_int64_max'\n    ] = () =>\n      (_sqlite3__wasm_test_int64_max = Module['_sqlite3__wasm_test_int64_max'] =\n        wasmExports['sqlite3__wasm_test_int64_max'])());\n    var _sqlite3__wasm_test_int64_min = (Module[\n      '_sqlite3__wasm_test_int64_min'\n    ] = () =>\n      (_sqlite3__wasm_test_int64_min = Module['_sqlite3__wasm_test_int64_min'] =\n        wasmExports['sqlite3__wasm_test_int64_min'])());\n    var _sqlite3__wasm_test_int64_times2 = (Module[\n      '_sqlite3__wasm_test_int64_times2'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_int64_times2 = Module[\n        '_sqlite3__wasm_test_int64_times2'\n      ] =\n        wasmExports['sqlite3__wasm_test_int64_times2'])(a0));\n    var _sqlite3__wasm_test_int64_minmax = (Module[\n      '_sqlite3__wasm_test_int64_minmax'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_test_int64_minmax = Module[\n        '_sqlite3__wasm_test_int64_minmax'\n      ] =\n        wasmExports['sqlite3__wasm_test_int64_minmax'])(a0, a1));\n    var _sqlite3__wasm_test_int64ptr = (Module['_sqlite3__wasm_test_int64ptr'] =\n      (a0) =>\n        (_sqlite3__wasm_test_int64ptr = Module['_sqlite3__wasm_test_int64ptr'] =\n          wasmExports['sqlite3__wasm_test_int64ptr'])(a0));\n    var _sqlite3__wasm_test_stack_overflow = (Module[\n      '_sqlite3__wasm_test_stack_overflow'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_stack_overflow = Module[\n        '_sqlite3__wasm_test_stack_overflow'\n      ] =\n        wasmExports['sqlite3__wasm_test_stack_overflow'])(a0));\n    var _sqlite3__wasm_test_str_hello = (Module[\n      '_sqlite3__wasm_test_str_hello'\n    ] = (a0) =>\n      (_sqlite3__wasm_test_str_hello = Module['_sqlite3__wasm_test_str_hello'] =\n        wasmExports['sqlite3__wasm_test_str_hello'])(a0));\n    var _sqlite3__wasm_SQLTester_strglob = (Module[\n      '_sqlite3__wasm_SQLTester_strglob'\n    ] = (a0, a1) =>\n      (_sqlite3__wasm_SQLTester_strglob = Module[\n        '_sqlite3__wasm_SQLTester_strglob'\n      ] =\n        wasmExports['sqlite3__wasm_SQLTester_strglob'])(a0, a1));\n    var _malloc = (Module['_malloc'] = (a0) =>\n      (_malloc = Module['_malloc'] = wasmExports['malloc'])(a0));\n    var _free = (Module['_free'] = (a0) =>\n      (_free = Module['_free'] = wasmExports['free'])(a0));\n    var _realloc = (Module['_realloc'] = (a0, a1) =>\n      (_realloc = Module['_realloc'] = wasmExports['realloc'])(a0, a1));\n    var _emscripten_builtin_memalign = (a0, a1) =>\n      (_emscripten_builtin_memalign =\n        wasmExports['emscripten_builtin_memalign'])(a0, a1);\n    var __emscripten_stack_restore = (a0) =>\n      (__emscripten_stack_restore = wasmExports['_emscripten_stack_restore'])(\n        a0,\n      );\n    var __emscripten_stack_alloc = (a0) =>\n      (__emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'])(a0);\n    var _emscripten_stack_get_current = () =>\n      (_emscripten_stack_get_current =\n        wasmExports['emscripten_stack_get_current'])();\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n    var calledPrerun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n\n      if (!calledPrerun) {\n        calledPrerun = 1;\n        preRun();\n\n        if (runDependencies > 0) {\n          return;\n        }\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = 1;\n        Module['calledRun'] = 1;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        Module['onRuntimeInitialized']?.();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(() => {\n          setTimeout(() => Module['setStatus'](''), 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    Module.runSQLite3PostLoadInit = function (EmscriptenModule) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          (sqlite3ApiBootstrap.sqlite3.config || console).warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                if (!!Module.HEAPU64) return true;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        delete globalThis.sqlite3ApiConfig;\n        delete sqlite3ApiBootstrap.defaultConfig;\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n\n          affirmDbHeader: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const header = 'SQLite format 3';\n            if (header.length > bytes.byteLength) {\n              toss3('Input does not contain an SQLite3 database header.');\n            }\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss3('Input does not contain an SQLite3 database header.');\n              }\n            }\n          },\n\n          affirmIsDb: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 !== 0) {\n              toss3('Byte array size', n, 'is invalid for an SQLite3 db.');\n            }\n            util.affirmDbHeader(bytes);\n          },\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3__wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3__wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n\n          call: function (f) {\n            const stackPos = wasm.pstack.pointer;\n            try {\n              return f(sqlite3);\n            } finally {\n              wasm.pstack.restore(stackPos);\n            }\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3__wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3__wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          util.sqlite3__wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = util.sqlite3__wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = util.sqlite3__wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_sql_to_string = (sql) => {\n          if ('string' === typeof sql) {\n            return sql;\n          }\n          const x = flexibleString(v);\n          return x === v ? undefined : x;\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n            case capi.SQLITE_DBCONFIG_ENABLE_ATTACH_CREATE:\n            case capi.SQLITE_DBCONFIG_ENABLE_ATTACH_WRITE:\n            case capi.SQLITE_DBCONFIG_ENABLE_COMMENTS:\n              if (!this.ip) {\n                this.ip = wasm.xWrap('sqlite3__wasm_db_config_ip', 'int', [\n                  'sqlite3*',\n                  'int',\n                  'int',\n                  '*',\n                ]);\n              }\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              if (!this.pii) {\n                this.pii = wasm.xWrap('sqlite3__wasm_db_config_pii', 'int', [\n                  'sqlite3*',\n                  'int',\n                  '*',\n                  'int',\n                  'int',\n                ]);\n              }\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              if (!this.s) {\n                this.s = wasm.xWrap('sqlite3__wasm_db_config_s', 'int', [\n                  'sqlite3*',\n                  'int',\n                  'string:static',\n                ]);\n              }\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n              ? 8\n              : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n              ? n\n              : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = fname instanceof Function ? fname : target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length)\n            __argcMismatch(f === fname ? f.name : fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              let i = 0;\n              for (; i < args.length; ++i)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                xcvPart.delete(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          ['sqlite3_bind_parameter_name', 'string', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_decltype', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_readonly', 'int', 'sqlite3*', 'string'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_autocommit', 'int', 'sqlite3*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n          ['sqlite3_interrupt', undefined, 'sqlite3*'],\n          ['sqlite3_is_interrupted', 'int', 'sqlite3*'],\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              true\n                ? '*'\n                : new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xDestroyAuxData',\n                    signature: 'v(p)',\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_busy', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_readonly', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (!!wasm.exports.sqlite3_progress_handler) {\n          wasm.bindingSignatures.push([\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ]);\n        }\n\n        if (!!wasm.exports.sqlite3_stmt_explain) {\n          wasm.bindingSignatures.push(\n            ['sqlite3_stmt_explain', 'int', 'sqlite3_stmt*', 'int'],\n            ['sqlite3_stmt_isexplain', 'int', 'sqlite3_stmt*'],\n          );\n        }\n\n        if (!!wasm.exports.sqlite3_set_authorizer) {\n          wasm.bindingSignatures.push([\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ]);\n        }\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3_declare_vtab) {\n          wasm.bindingSignatures.int64.push(\n            [\n              'sqlite3_create_module',\n              'int',\n              ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n            ],\n            [\n              'sqlite3_create_module_v2',\n              'int',\n              ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n            ],\n            ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n            ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n            ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n            ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n            ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n            ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n            ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n            ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n            ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n            [\n              'sqlite3_vtab_rhs_value',\n              'int',\n              'sqlite3_index_info*',\n              'int',\n              '**',\n            ],\n          );\n        }\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3_preupdate_hook) {\n          wasm.bindingSignatures.int64.push(\n            ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n            ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n            ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n            [\n              'sqlite3_preupdate_hook',\n              '*',\n              [\n                'sqlite3*',\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'sqlite3_preupdate_hook',\n                  signature: 'v(ppippjj)',\n                  contextKey: (argv) => argv[0],\n                  callProxy: (callback) => {\n                    return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                      callback(\n                        p,\n                        db,\n                        op,\n                        wasm.cstrToJs(zDb),\n                        wasm.cstrToJs(zTbl),\n                        iKey1,\n                        iKey2,\n                      );\n                    };\n                  },\n                }),\n                '*',\n              ],\n            ],\n            ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n            ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          );\n        }\n\n        if (\n          wasm.bigIntEnabled &&\n          !!wasm.exports.sqlite3changegroup_add &&\n          !!wasm.exports.sqlite3session_create &&\n          !!wasm.exports.sqlite3_preupdate_hook\n        ) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasmInternal = [\n          ['sqlite3__wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3__wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3__wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3__wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3__wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n          ['sqlite3__wasm_qfmt_token', 'string:dealloc', 'string', 'int'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n          if (wasm.exports.sqlite3_declare_vtab) {\n            wasm.xWrap.argAdapter('sqlite3_index_info*', (v) =>\n              __xArgPtr(\n                v instanceof (capi.sqlite3_index_info || nilType)\n                  ? v.pointer\n                  : v,\n              ),\n            )('sqlite3_module*', (v) =>\n              __xArgPtr(\n                v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n              ),\n            );\n          }\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasmInternal) {\n            util[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3__wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3__wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3__wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3__wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3__wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3__wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3__wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3__wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        if (wasm.exports.sqlite3_create_window_function) {\n          __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n            const m = __dbCleanupMap(pDb, 1);\n            if (!m.wudf) m.wudf = new Map();\n            this._addUDF(pDb, name, arity, m.wudf);\n          };\n        }\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            if (!x) {\n              continue;\n            }\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              sqlite3.config.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_create) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3__wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.exports\n            .sqlite3_create_window_function\n            ? wasm.xWrap('sqlite3_create_window_function', 'int', [\n                'sqlite3*',\n                'string',\n                'int',\n                'int',\n                '*',\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xStep',\n                  ...__cfProxy.xInverseAndStep,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xFinal',\n                  ...__cfProxy.xFinalAndValue,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xValue',\n                  ...__cfProxy.xFinalAndValue,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xInverse',\n                  ...__cfProxy.xInverseAndStep,\n                }),\n                new wasm.xWrap.FuncPtrAdapter({\n                  name: 'xDestroy',\n                  ...__cfProxy.xDestroy,\n                }),\n              ])\n            : undefined;\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          if (__sqlite3CreateWindowFunction) {\n            capi.sqlite3_create_window_function = function f(\n              pDb,\n              funcName,\n              nArg,\n              eTextRep,\n              pApp,\n              xStep,\n              xFinal,\n              xValue,\n              xInverse,\n              xDestroy,\n            ) {\n              if (f.length !== arguments.length) {\n                return __dbArgcMismatch(\n                  pDb,\n                  'sqlite3_create_window_function',\n                  f.length,\n                );\n              } else if (0 === (eTextRep & 0xf)) {\n                eTextRep |= capi.SQLITE_UTF8;\n              } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n                return __errEncoding(pDb);\n              }\n              try {\n                const rc = __sqlite3CreateWindowFunction(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xStep,\n                  xFinal,\n                  xValue,\n                  xInverse,\n                  xDestroy,\n                );\n                if (\n                  0 === rc &&\n                  (xStep instanceof Function ||\n                    xFinal instanceof Function ||\n                    xValue instanceof Function ||\n                    xInverse instanceof Function ||\n                    xDestroy instanceof Function)\n                ) {\n                  __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n                }\n                return rc;\n              } catch (e) {\n                console.error(\n                  'sqlite3_create_window_function() setup threw:',\n                  e,\n                );\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  e,\n                  'Creation of UDF threw: ' + e,\n                );\n              }\n            };\n          } else {\n            delete capi.sqlite3_create_window_function;\n          }\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult = capi.sqlite3_result_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n          }\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n          }\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n              capi.sqlite3_result_error_js;\n          if (capi.sqlite3_create_window_function) {\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n          }\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3__wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3__wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3__wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3__wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey =\n                wasm.exports.sqlite3__wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n\n        const StructBinder = sqlite3.StructBinder;\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage error: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.50.4',\n          libVersionNumber: 3050004,\n          sourceId:\n            '2025-07-30 19:33:53 4d8adfb30e03f9cf27f800a2c1ba3c48fb4ca1b08b0f5ed59a4d5ecbf45e20a3',\n          downloadVersion: 3500400,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenCallback = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs =\n              capi.sqlite3_js_db_vfs(pDb) ||\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenCallback[pVfs];\n            if (postInitSql) {\n              if (postInitSql instanceof Function) {\n                postInitSql(this, sqlite3);\n              } else {\n                checkSqlite3Rc(\n                  pDb,\n                  capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0),\n                );\n              }\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenCallback = function (pVfs, callback) {\n          if (!(callback instanceof Function)) {\n            toss3(\n              'dbCtorHelper.setVfsPostOpenCallback() should not be used with ' +\n                'a non-function argument.',\n              arguments,\n            );\n          }\n          __vfsPostOpenCallback[pVfs] = callback;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt, cache) => {\n                  if (!cache.columnNames)\n                    cache.columnNames = stmt.getColumnNames([]);\n\n                  const row = stmt.get([]);\n                  const rv = Object.create(null);\n                  for (const i in cache.columnNames)\n                    rv[cache.columnNames[i]] = row[i];\n                  return rv;\n                };\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    const cbArgCache = Object.create(null);\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++) {\n                        stmt.getColumnNames(\n                          (cbArgCache.columnNames = opt.columnNames || []),\n                        );\n                      }\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt, cbArgCache);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                  ? xArity.length - 1\n                  : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n\n          getParamName: function (ndx) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_name(this.pointer, ndx)\n              : undefined;\n          },\n\n          isBusy: function () {\n            return 0 !== capi.sqlite3_stmt_busy(affirmStmtOpen(this));\n          },\n\n          isReadOnly: function () {\n            return 0 !== capi.sqlite3_stmt_readonly(affirmStmtOpen(this));\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            const opt = dbCtorHelper.normalizeArgs(...arguments);\n            storageName = opt.filename;\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            opt.vfs = 'kvvfs';\n            dbCtorHelper.call(this, opt);\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const util = sqlite3.util;\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = util.sqlite3__wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  util.sqlite3__wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              oargs.vfs = args.vfs;\n              oargs.filename = args.filename || '';\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                const lastInsertRowId = !!rc.lastInsertRowId\n                  ? sqlite3.capi.sqlite3_last_insert_rowid(db)\n                  : undefined;\n                if (undefined !== lastInsertRowId) {\n                  rc.lastInsertRowId = lastInsertRowId;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null);\n        sqlite3.vfs = vfs;\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              o.struct.installMethods(o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        if (!sqlite3.wasm.exports.sqlite3_declare_vtab) {\n          return;\n        }\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vtab = Object.create(null);\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              mod.installMethods(remethods, false);\n            } else {\n              mod.installMethods(methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const util = sqlite3.util;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_CANTOPEN',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              OPFS_UNLINK_BEFORE_OPEN: 0x02,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              while (\n                'not-equal' !==\n                Atomics.wait(state.sabOPView, state.opIds.rc, -1)\n              ) {}\n\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                wasm.poke(pOut, 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if (wasm.isPtr(zName)) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  if (\n                    capi.sqlite3_uri_boolean(zName, 'delete-before-open', 0)\n                  ) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLINK_BEFORE_OPEN;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                fh.readOnly =\n                  !(sqlite3.SQLITE_OPEN_CREATE & flags) &&\n                  !!(flags & capi.SQLITE_OPEN_READONLY);\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            const importDbChunked = async function (filename, callback) {\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              const hFile = await hDir.getFileHandle(fnamePart, {\n                create: true,\n              });\n              let sah = await hFile.createSyncAccessHandle();\n              let nWrote = 0,\n                chunk,\n                checkedHeader = false,\n                err = false;\n              try {\n                sah.truncate(0);\n                while (undefined !== (chunk = await callback())) {\n                  if (chunk instanceof ArrayBuffer)\n                    chunk = new Uint8Array(chunk);\n                  if (0 === nWrote && chunk.byteLength >= 15) {\n                    util.affirmDbHeader(chunk);\n                    checkedHeader = true;\n                  }\n                  sah.write(chunk, { at: nWrote });\n                  nWrote += chunk.byteLength;\n                }\n                if (nWrote < 512 || 0 !== nWrote % 512) {\n                  toss(\n                    'Input size',\n                    nWrote,\n                    'is not correct for an SQLite database.',\n                  );\n                }\n                if (!checkedHeader) {\n                  const header = new Uint8Array(20);\n                  sah.read(header, { at: 0 });\n                  util.affirmDbHeader(header);\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                await sah.close();\n                sah = undefined;\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof Function) {\n                return importDbChunked(filename, bytes);\n              }\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              util.affirmIsDb(bytes);\n              const n = bytes.byteLength;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              let sah,\n                err,\n                nWrote = 0;\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenCallback(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is \u00E4 string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is \u00E4 string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const util = sqlite3.util;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n        const FLAG_COMPUTE_DIGEST_V2 = capi.SQLITE_OPEN_MEMORY;\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n          forceReinitIfPreviouslyFailed: false,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                return pool.storeErr(e, capi.SQLITE_IOERR);\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return n === nBytes ? 0 : toss('Unknown write() failure.');\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            const e = pool.popErr();\n            pool.log(`xGetLastError ${nOut} e =`, e);\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return e ? e.sqlite3Rc || capi.SQLITE_IOERR : 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              flags &= ~FLAG_COMPUTE_DIGEST_V2;\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            for (const n of this.#mapFilenameToSAH.keys()) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles = false) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody, flags);\n\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            if (path && flags) {\n              flags |= FLAG_COMPUTE_DIGEST_V2;\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n            const digest = this.computeDigest(this.#apBody, flags);\n\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray, fileFlags) {\n            if (fileFlags & FLAG_COMPUTE_DIGEST_V2) {\n              let h1 = 0xdeadbeef;\n              let h2 = 0x41c6ce57;\n              for (const v of byteArray) {\n                h1 = Math.imul(h1 ^ v, 2654435761);\n                h2 = Math.imul(h2 ^ v, 104729);\n              }\n              return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n            } else {\n              return new Uint32Array([0, 0]);\n            }\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e, code) {\n            if (e) {\n              e.sqlite3Rc = code || capi.SQLITE_IOERR;\n              this.error(e);\n            }\n            this.$error = e;\n            return code;\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            delete initPromises[this.vfsName];\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(\n                this.vfsName,\n                'removeVfs() failed with no recovery strategy:',\n                e,\n              );\n            }\n            return true;\n          }\n\n          pauseVfs() {\n            if (this.#mapS3FileToOFile_.size > 0) {\n              sqlite3.SQLite3Error.toss(\n                capi.SQLITE_MISUSE,\n                'Cannot pause VFS',\n                this.vfsName,\n                'because it has opened files.',\n              );\n            }\n            if (this.#mapSAHToName.size > 0) {\n              capi.sqlite3_vfs_unregister(this.vfsName);\n              this.releaseAccessHandles();\n            }\n            return this;\n          }\n\n          isPaused() {\n            return 0 === this.#mapSAHToName.size;\n          }\n\n          async unpauseVfs() {\n            if (0 === this.#mapSAHToName.size) {\n              return this.acquireAccessHandles(false).then(\n                () => capi.sqlite3_vfs_register(this.#cVfs, 0),\n                this,\n              );\n            }\n            return this;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          async importDbChunked(name, callback) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            sah.truncate(0);\n            let nWrote = 0,\n              chunk,\n              checkedHeader = false,\n              err = false;\n            try {\n              while (undefined !== (chunk = await callback())) {\n                if (chunk instanceof ArrayBuffer) chunk = new Uint8Array(chunk);\n                if (0 === nWrote && chunk.byteLength >= 15) {\n                  util.affirmDbHeader(chunk);\n                  checkedHeader = true;\n                }\n                sah.write(chunk, { at: HEADER_OFFSET_DATA + nWrote });\n                nWrote += chunk.byteLength;\n              }\n              if (nWrote < 512 || 0 !== nWrote % 512) {\n                toss(\n                  'Input size',\n                  nWrote,\n                  'is not correct for an SQLite database.',\n                );\n              }\n              if (!checkedHeader) {\n                const header = new Uint8Array(20);\n                sah.read(header, { at: 0 });\n                util.affirmDbHeader(header);\n              }\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n            } catch (e) {\n              this.setAssociatedPath(sah, '', 0);\n              throw e;\n            }\n            this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            return nWrote;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            else if (bytes instanceof Function)\n              return this.importDbChunked(name, bytes);\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n            return nWrote;\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n\n          pauseVfs() {\n            this.#p.pauseVfs();\n            return this;\n          }\n          async unpauseVfs() {\n            return this.#p.unpauseVfs().then(() => this);\n          }\n          isPaused() {\n            return this.#p.isPaused();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          options = Object.assign(\n            Object.create(null),\n            optionDefaults,\n            options || {},\n          );\n          const vfsName = options.name;\n          if (options.$testThrowPhase1) {\n            throw options.$testThrowPhase1;\n          }\n          if (initPromises[vfsName]) {\n            try {\n              const p = await initPromises[vfsName];\n\n              return p;\n            } catch (e) {\n              if (options.forceReinitIfPreviouslyFailed) {\n                delete initPromises[vfsName];\n              } else {\n                throw e;\n              }\n            }\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowPhase2) {\n                throw options.$testThrowPhase2;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  throw e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    };\n\n    moduleRtn = readyPromise;\n\n    return moduleRtn;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        EmscriptenModule.runSQLite3PostLoadInit(EmscriptenModule);\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        const rv = f();\n        return rv;\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n", "/*\n  2022-08-24\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This file implements a Promise-based proxy for the sqlite3 Worker\n  API #1. It is intended to be included either from the main thread or\n  a Worker, but only if (A) the environment supports nested Workers\n  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS\n  module. This file's features will load that module and provide a\n  slightly simpler client-side interface than the slightly-lower-level\n  Worker API does.\n\n  This script necessarily exposes one global symbol, but clients may\n  freely `delete` that symbol after calling it.\n*/\n'use strict';\n\nglobalThis.sqlite3Worker1Promiser = function callee(\n  config = callee.defaultConfig,\n) {\n  if (1 === arguments.length && 'function' === typeof arguments[0]) {\n    const f = config;\n    config = Object.assign(Object.create(null), callee.defaultConfig);\n    config.onready = f;\n  } else {\n    config = Object.assign(Object.create(null), callee.defaultConfig, config);\n  }\n  const handlerMap = Object.create(null);\n  const noop = function () {};\n  const err = config.onerror || noop;\n  const debug = config.debug || noop;\n  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);\n  const genMsgId =\n    config.generateMessageId ||\n    function (msg) {\n      return (\n        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)\n      );\n    };\n  const toss = (...args) => {\n    throw new Error(args.join(' '));\n  };\n  if (!config.worker) config.worker = callee.defaultConfig.worker;\n  if ('function' === typeof config.worker) config.worker = config.worker();\n  let dbId;\n  let promiserFunc;\n  config.worker.onmessage = function (ev) {\n    ev = ev.data;\n    debug('worker1.onmessage', ev);\n    let msgHandler = handlerMap[ev.messageId];\n    if (!msgHandler) {\n      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {\n        if (config.onready) config.onready(promiserFunc);\n        return;\n      }\n      msgHandler = handlerMap[ev.type];\n      if (msgHandler && msgHandler.onrow) {\n        msgHandler.onrow(ev);\n        return;\n      }\n      if (config.onunhandled) config.onunhandled(arguments[0]);\n      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);\n      return;\n    }\n    delete handlerMap[ev.messageId];\n    switch (ev.type) {\n      case 'error':\n        msgHandler.reject(ev);\n        return;\n      case 'open':\n        if (!dbId) dbId = ev.dbId;\n        break;\n      case 'close':\n        if (ev.dbId === dbId) dbId = undefined;\n        break;\n      default:\n        break;\n    }\n    try {\n      msgHandler.resolve(ev);\n    } catch (e) {\n      msgHandler.reject(e);\n    }\n  };\n  return (promiserFunc = function () {\n    let msg;\n    if (1 === arguments.length) {\n      msg = arguments[0];\n    } else if (2 === arguments.length) {\n      msg = Object.create(null);\n      msg.type = arguments[0];\n      msg.args = arguments[1];\n      msg.dbId = msg.args.dbId;\n    } else {\n      toss('Invalid arguments for sqlite3Worker1Promiser()-created factory.');\n    }\n    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;\n    msg.messageId = genMsgId(msg);\n    msg.departureTime = performance.now();\n    const proxy = Object.create(null);\n    proxy.message = msg;\n    let rowCallbackId;\n    if ('exec' === msg.type && msg.args) {\n      if ('function' === typeof msg.args.callback) {\n        rowCallbackId = msg.messageId + ':row';\n        proxy.onrow = msg.args.callback;\n        msg.args.callback = rowCallbackId;\n        handlerMap[rowCallbackId] = proxy;\n      } else if ('string' === typeof msg.args.callback) {\n        toss(\n          'exec callback may not be a string when using the Promise interface.',\n        );\n      }\n    }\n\n    let p = new Promise(function (resolve, reject) {\n      proxy.resolve = resolve;\n      proxy.reject = reject;\n      handlerMap[msg.messageId] = proxy;\n      debug(\n        'Posting',\n        msg.type,\n        'message to Worker dbId=' + (dbId || 'default') + ':',\n        msg,\n      );\n      config.worker.postMessage(msg);\n    });\n    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);\n    return p;\n  });\n};\n\nglobalThis.sqlite3Worker1Promiser.defaultConfig = {\n  worker: function () {\n    return new Worker(\n      new URL('sqlite3-worker1-bundler-friendly.mjs', import.meta.url),\n      {\n        type: 'module',\n      },\n    );\n  },\n  onerror: (...args) => console.error('worker1 promiser error', ...args),\n};\n\nsqlite3Worker1Promiser.v2 = function (config) {\n  let oldFunc;\n  if ('function' == typeof config) {\n    oldFunc = config;\n    config = {};\n  } else if ('function' === typeof config?.onready) {\n    oldFunc = config.onready;\n    delete config.onready;\n  }\n  const promiseProxy = Object.create(null);\n  config = Object.assign(config || Object.create(null), {\n    onready: async function (func) {\n      try {\n        if (oldFunc) await oldFunc(func);\n        promiseProxy.resolve(func);\n      } catch (e) {\n        promiseProxy.reject(e);\n      }\n    },\n  });\n  const p = new Promise(function (resolve, reject) {\n    promiseProxy.resolve = resolve;\n    promiseProxy.reject = reject;\n  });\n  try {\n    this.original(config);\n  } catch (e) {\n    promiseProxy.reject(e);\n  }\n  return p;\n}.bind({\n  original: sqlite3Worker1Promiser,\n});\n\nexport default sqlite3Worker1Promiser.v2;\n", "import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\nimport './sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs';\n\nconst sqlite3Worker1Promiser = globalThis.sqlite3Worker1Promiser;\n\nexport default sqlite3InitModule;\nexport { sqlite3Worker1Promiser };\n", "import { y as attr, z as ensure_array_like, F as attr_class } from \"../../chunks/index.js\";\nimport { a as ssr_context, e as escape_html } from \"../../chunks/context.js\";\nimport \"capnweb\";\nimport \"@sqlite.org/sqlite-wasm\";\nfunction onDestroy(fn) {\n  /** @type {SSRContext} */\n  ssr_context.r.on_destroy(fn);\n}\nfunction _page($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    const AUTHOR_COLORS = [\n      \"#0ea5e9\",\n      \"#ec4899\",\n      \"#8b5cf6\",\n      \"#22c55e\",\n      \"#f97316\",\n      \"#facc15\",\n      \"#06b6d4\",\n      \"#14b8a6\"\n    ];\n    function formatTimestamp(value) {\n      return new Date(value).toLocaleString();\n    }\n    function arrayFromString(value) {\n      return Array.from(value);\n    }\n    function mergeAttribution(previous, nextChars, fallbackAuthor) {\n      if (previous.length === 0) {\n        return nextChars.map((char) => ({ char, author: fallbackAuthor }));\n      }\n      const prevChars = previous.map((item) => item.char);\n      const prevLength = prevChars.length;\n      const nextLength = nextChars.length;\n      if (prevLength === 0) {\n        return nextChars.map((char) => ({ char, author: fallbackAuthor }));\n      }\n      const dp = Array.from({ length: prevLength + 1 }, () => new Array(nextLength + 1).fill(0));\n      for (let i2 = prevLength - 1; i2 >= 0; i2 -= 1) {\n        for (let j2 = nextLength - 1; j2 >= 0; j2 -= 1) {\n          if (prevChars[i2] === nextChars[j2]) {\n            dp[i2][j2] = dp[i2 + 1][j2 + 1] + 1;\n          } else {\n            dp[i2][j2] = Math.max(dp[i2 + 1][j2], dp[i2][j2 + 1]);\n          }\n        }\n      }\n      const result = [];\n      let i = 0;\n      let j = 0;\n      while (i < prevLength && j < nextLength) {\n        if (prevChars[i] === nextChars[j]) {\n          result.push({ char: nextChars[j], author: previous[i].author });\n          i += 1;\n          j += 1;\n        } else if (dp[i + 1][j] >= dp[i][j + 1]) {\n          i += 1;\n        } else {\n          result.push({ char: nextChars[j], author: fallbackAuthor });\n          j += 1;\n        }\n      }\n      while (j < nextLength) {\n        result.push({ char: nextChars[j], author: fallbackAuthor });\n        j += 1;\n      }\n      return result;\n    }\n    function computeCharAttribution(entries) {\n      let attribution = [];\n      for (const entry of entries) {\n        if (!entry.content) {\n          attribution = [];\n          continue;\n        }\n        const chars = arrayFromString(entry.content);\n        if (attribution.length === 0) {\n          attribution = chars.map((char) => ({ char, author: entry.user }));\n          continue;\n        }\n        attribution = mergeAttribution(attribution, chars, entry.user);\n      }\n      return attribution;\n    }\n    function ensureAttributionMatchesContent(base, content, fallbackAuthor) {\n      const contentChars = arrayFromString(content);\n      if (base.length === 0 && contentChars.length === 0) {\n        return [];\n      }\n      return mergeAttribution(base, contentChars, fallbackAuthor);\n    }\n    function toOverlayLines(attribution, fallbackAuthor) {\n      if (attribution.length === 0) {\n        return [[{ author: fallbackAuthor, text: \"\" }]];\n      }\n      const lines = [];\n      let segments = [];\n      let current = null;\n      const flushSegment = () => {\n        if (current) {\n          segments.push(current);\n          current = null;\n        }\n      };\n      const flushLine = (authorForEmpty) => {\n        flushSegment();\n        if (segments.length === 0) {\n          segments.push({ author: authorForEmpty, text: \"\" });\n        }\n        lines.push(segments);\n        segments = [];\n      };\n      for (const { char, author } of attribution) {\n        if (char === \"\\n\") {\n          flushLine(author);\n          continue;\n        }\n        if (!current || current.author !== author) {\n          flushSegment();\n          current = { author, text: char };\n        } else {\n          current.text += char;\n        }\n      }\n      flushLine(attribution.at(-1)?.author ?? fallbackAuthor);\n      return lines;\n    }\n    let logs = [];\n    let connectionStatus = \"disconnected\";\n    let channels = [];\n    let currentChannel = null;\n    let userName = \"\";\n    let joinAddressInput = \"\";\n    let newChannelName = \"\";\n    let documentContent = \"\";\n    let documentHistory = [];\n    let charAttribution = [];\n    let authorColors = {};\n    let authorColorIndex = 0;\n    let historyLength = 0;\n    let sliderMax = 0;\n    let sliderValue = 0;\n    let effectiveHistoryIndex = null;\n    let selectedTimelineEntry = null;\n    let textareaValue = \"\";\n    let legendEntries = [];\n    let fallbackUserName = \"anonymous\";\n    let fallbackAttribution = [];\n    let overlayAttribution = [];\n    const registerAuthor = (rawUser) => {\n      const user = rawUser?.trim() || \"anonymous\";\n      if (authorColors[user]) {\n        return;\n      }\n      const color = AUTHOR_COLORS[authorColorIndex % AUTHOR_COLORS.length];\n      authorColorIndex += 1;\n      authorColors = { ...authorColors, [user]: color };\n    };\n    onDestroy(() => {\n    });\n    {\n      const fallbackUser = userName.trim() || \"anonymous\";\n      if (!documentHistory.length) {\n        if (documentContent.length === 0) {\n          charAttribution = [];\n        } else {\n          registerAuthor(fallbackUser);\n          charAttribution = ensureAttributionMatchesContent([], documentContent, fallbackUser);\n        }\n      } else {\n        const maxIndex = documentHistory.length - 1;\n        const targetIndex = maxIndex;\n        const subset = documentHistory.slice(0, targetIndex + 1);\n        subset.forEach((entry) => registerAuthor(entry.user));\n        const baseAttribution = computeCharAttribution(subset);\n        const targetContent = documentContent;\n        const finalAttribution = ensureAttributionMatchesContent(baseAttribution, targetContent, fallbackUser);\n        {\n          registerAuthor(fallbackUser);\n        }\n        charAttribution = finalAttribution;\n      }\n    }\n    historyLength = documentHistory.length;\n    sliderMax = historyLength > 0 ? historyLength - 1 : 0;\n    sliderValue = historyLength > 0 ? sliderMax : 0;\n    effectiveHistoryIndex = historyLength > 0 ? sliderValue : null;\n    selectedTimelineEntry = effectiveHistoryIndex !== null ? documentHistory[effectiveHistoryIndex] : null;\n    textareaValue = documentContent;\n    selectedTimelineEntry ? `${selectedTimelineEntry.user} \u2022 ${formatTimestamp(selectedTimelineEntry.timestamp)}` : \"No commits yet\";\n    legendEntries = Object.entries(authorColors).sort((a, b) => a[0].localeCompare(b[0]));\n    legendEntries.length > 0;\n    fallbackUserName = userName.trim() || \"anonymous\";\n    fallbackAttribution = arrayFromString(textareaValue).map((char) => ({ char, author: fallbackUserName }));\n    overlayAttribution = charAttribution.length > 0 ? charAttribution : fallbackAttribution;\n    toOverlayLines(overlayAttribution, fallbackUserName);\n    $$renderer2.push(`<div class=\"app\"><header><h1>CRDT Channel Chat</h1> <p>Real-time collaborative messaging with CRDT conflict resolution</p></header> <main><div class=\"chat-layout\"><div class=\"channels-sidebar\"><div class=\"channel-controls\"><input type=\"text\" placeholder=\"Your name\"${attr(\"value\", userName)} class=\"user-input\"/> <div class=\"create-channel\"><input type=\"text\" placeholder=\"New channel name\"${attr(\"value\", newChannelName)} class=\"channel-input\"/> <button class=\"create-button\">+</button></div> <div class=\"join-channel\"><input type=\"text\" placeholder=\"Channel address\"${attr(\"value\", joinAddressInput)} class=\"channel-input\"/> <button class=\"join-button\">Join</button></div></div> <div class=\"channels-list\"><h3>Channels (${escape_html(channels.length)})</h3> <!--[-->`);\n    const each_array = ensure_array_like(channels);\n    for (let $$index = 0, $$length = each_array.length; $$index < $$length; $$index++) {\n      let channel = each_array[$$index];\n      $$renderer2.push(`<div${attr_class(\"channel-item\", void 0, { \"active\": currentChannel?.id === channel.id })} role=\"button\" tabindex=\"0\"><div class=\"channel-name\">#${escape_html(channel.name)}</div> <div class=\"channel-meta\">${escape_html(new Date(channel.lastModified).toLocaleDateString())}</div> <div class=\"channel-address\"><input type=\"text\" readonly${attr(\"value\", channel.docId)}/> <button>Copy</button></div></div>`);\n    }\n    $$renderer2.push(`<!--]--></div></div> <div class=\"messages-area\">`);\n    {\n      $$renderer2.push(\"<!--[!-->\");\n      $$renderer2.push(`<div class=\"welcome-screen\"><h2>Welcome to CRDT Chat!</h2> <p>Select a channel from the sidebar to start chatting, or create a new one.</p> <div class=\"status\"><span${attr_class(`status-indicator ${connectionStatus}`)}>Status: ${escape_html(connectionStatus)}</span> <span${attr_class(`status-indicator ${\"error\"}`)}>SQLite: ${escape_html(\"Initializing...\")}</span></div></div>`);\n    }\n    $$renderer2.push(`<!--]--></div></div> <div class=\"logs-container\"><h3>Activity Log</h3> <div class=\"logs\">`);\n    if (logs.length === 0) {\n      $$renderer2.push(\"<!--[-->\");\n      $$renderer2.push(`<p class=\"empty-logs\">Activity will appear here</p>`);\n    } else {\n      $$renderer2.push(\"<!--[!-->\");\n      $$renderer2.push(`<!--[-->`);\n      const each_array_5 = ensure_array_like(logs);\n      for (let index = 0, $$length = each_array_5.length; index < $$length; index++) {\n        let log = each_array_5[index];\n        $$renderer2.push(`<div class=\"log-entry\">${escape_html(log)}</div>`);\n      }\n      $$renderer2.push(`<!--]-->`);\n    }\n    $$renderer2.push(`<!--]--></div></div></main></div>`);\n  });\n}\nexport {\n  _page as default\n};\n", "\n\nexport const index = 2;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/_page.svelte.js')).default;\nexport const universal = {\n  \"ssr\": false\n};\nexport const universal_id = \"src/routes/+page.ts\";\nexport const imports = [\"_app/immutable/nodes/2.qf5vTKH-.js\",\"_app/immutable/chunks/NZTpNUN0.js\",\"_app/immutable/chunks/J393zdJQ.js\",\"_app/immutable/chunks/D4DQbwrw.js\",\"_app/immutable/chunks/BuNyUiBZ.js\",\"_app/immutable/chunks/8HJfsTjg.js\",\"_app/immutable/chunks/BnGH0CUP.js\"];\nexport const stylesheets = [];\nexport const fonts = [];\n", "const BROWSER = false;\nlet base = \"\";\nlet assets = base;\nconst app_dir = \"_app\";\nconst relative = true;\nconst initial = { base, assets };\nfunction override(paths) {\n  base = paths.base;\n  assets = paths.assets;\n}\nfunction reset() {\n  base = initial.base;\n  assets = initial.assets;\n}\nfunction set_assets(path) {\n  assets = initial.assets = path;\n}\nlet prerendering = false;\nfunction set_building() {\n}\nfunction set_prerendering() {\n  prerendering = true;\n}\nexport {\n  BROWSER as B,\n  assets as a,\n  base as b,\n  app_dir as c,\n  reset as d,\n  set_building as e,\n  set_prerendering as f,\n  override as o,\n  prerendering as p,\n  relative as r,\n  set_assets as s\n};\n", "import { HttpError, Redirect, ActionFailure } from './internal/index.js';\nimport { BROWSER, DEV } from 'esm-env';\nimport {\n\tadd_data_suffix,\n\tadd_resolution_suffix,\n\thas_data_suffix,\n\thas_resolution_suffix,\n\tstrip_data_suffix,\n\tstrip_resolution_suffix\n} from '../runtime/pathname.js';\nimport { text_encoder } from '../runtime/utils.js';\n\nexport { VERSION } from '../version.js';\n\n// TODO 3.0: remove these types as they are not used anymore (we can't remove them yet because that would be a breaking change)\n/**\n * @template {number} TNumber\n * @template {any[]} [TArray=[]]\n * @typedef {TNumber extends TArray['length'] ? TArray[number] : LessThan<TNumber, [...TArray, TArray['length']]>} LessThan\n */\n\n/**\n * @template {number} TStart\n * @template {number} TEnd\n * @typedef {Exclude<TEnd | LessThan<TEnd>, LessThan<TStart>>} NumericRange\n */\n\n// Keep the status codes as `number` because restricting to certain numbers makes it unnecessarily hard to use compared to the benefits\n// (we have runtime errors already to check for invalid codes). Also see https://github.com/sveltejs/kit/issues/11780\n\n// we have to repeat the JSDoc because the display for function overloads is broken\n// see https://github.com/microsoft/TypeScript/issues/55056\n\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {App.Error} body An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @overload\n * @param {number} status\n * @param {App.Error} body\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} [body] An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @overload\n * @param {number} status\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} [body]\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} body An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\nexport function error(status, body) {\n\tif ((!BROWSER || DEV) && (isNaN(status) || status < 400 || status > 599)) {\n\t\tthrow new Error(`HTTP error status codes must be between 400 and 599 \u2014 ${status} is invalid`);\n\t}\n\n\tthrow new HttpError(status, body);\n}\n\n/**\n * Checks whether this is an error thrown by {@link error}.\n * @template {number} T\n * @param {unknown} e\n * @param {T} [status] The status to filter for.\n * @return {e is (HttpError & { status: T extends undefined ? never : T })}\n */\nexport function isHttpError(e, status) {\n\tif (!(e instanceof HttpError)) return false;\n\treturn !status || e.status === status;\n}\n\n/**\n * Redirect a request. When called during request handling, SvelteKit will return a redirect response.\n * Make sure you're not catching the thrown redirect, which would prevent SvelteKit from handling it.\n *\n * Most common status codes:\n *  * `303 See Other`: redirect as a GET request (often used after a form POST request)\n *  * `307 Temporary Redirect`: redirect will keep the request method\n *  * `308 Permanent Redirect`: redirect will keep the request method, SEO will be transferred to the new page\n *\n * [See all redirect status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#redirection_messages)\n *\n * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308 | ({} & number)} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#redirection_messages). Must be in the range 300-308.\n * @param {string | URL} location The location to redirect to.\n * @throws {Redirect} This error instructs SvelteKit to redirect to the specified location.\n * @throws {Error} If the provided status is invalid.\n * @return {never}\n */\nexport function redirect(status, location) {\n\tif ((!BROWSER || DEV) && (isNaN(status) || status < 300 || status > 308)) {\n\t\tthrow new Error('Invalid status code');\n\t}\n\n\tthrow new Redirect(\n\t\t// @ts-ignore\n\t\tstatus,\n\t\tlocation.toString()\n\t);\n}\n\n/**\n * Checks whether this is a redirect thrown by {@link redirect}.\n * @param {unknown} e The object to check.\n * @return {e is Redirect}\n */\nexport function isRedirect(e) {\n\treturn e instanceof Redirect;\n}\n\n/**\n * Create a JSON `Response` object from the supplied data.\n * @param {any} data The value that will be serialized as JSON.\n * @param {ResponseInit} [init] Options such as `status` and `headers` that will be added to the response. `Content-Type: application/json` and `Content-Length` headers will be added automatically.\n */\nexport function json(data, init) {\n\t// TODO deprecate this in favour of `Response.json` when it's\n\t// more widely supported\n\tconst body = JSON.stringify(data);\n\n\t// we can't just do `text(JSON.stringify(data), init)` because\n\t// it will set a default `content-type` header. duplicated code\n\t// means less duplicated work\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-length')) {\n\t\theaders.set('content-length', text_encoder.encode(body).byteLength.toString());\n\t}\n\n\tif (!headers.has('content-type')) {\n\t\theaders.set('content-type', 'application/json');\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders\n\t});\n}\n\n/**\n * Create a `Response` object from the supplied body.\n * @param {string} body The value that will be used as-is.\n * @param {ResponseInit} [init] Options such as `status` and `headers` that will be added to the response. A `Content-Length` header will be added automatically.\n */\nexport function text(body, init) {\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-length')) {\n\t\tconst encoded = text_encoder.encode(body);\n\t\theaders.set('content-length', encoded.byteLength.toString());\n\t\treturn new Response(encoded, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders\n\t});\n}\n\n/**\n * Create an `ActionFailure` object. Call when form submission fails.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @overload\n * @param {number} status\n * @returns {import('./public.js').ActionFailure<undefined>}\n */\n/**\n * Create an `ActionFailure` object. Call when form submission fails.\n * @template [T=undefined]\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {T} data Data associated with the failure (e.g. validation errors)\n * @overload\n * @param {number} status\n * @param {T} data\n * @returns {import('./public.js').ActionFailure<T>}\n */\n/**\n * Create an `ActionFailure` object. Call when form submission fails.\n * @param {number} status\n * @param {any} [data]\n * @returns {import('./public.js').ActionFailure<any>}\n */\nexport function fail(status, data) {\n\t// @ts-expect-error unique symbol missing\n\treturn new ActionFailure(status, data);\n}\n\n/**\n * Checks whether this is an action failure thrown by {@link fail}.\n * @param {unknown} e The object to check.\n * @return {e is import('./public.js').ActionFailure}\n */\nexport function isActionFailure(e) {\n\treturn e instanceof ActionFailure;\n}\n\n/**\n * Strips possible SvelteKit-internal suffixes and trailing slashes from the URL pathname.\n * Returns the normalized URL as well as a method for adding the potential suffix back\n * based on a new pathname (possibly including search) or URL.\n * ```js\n * import { normalizeUrl } from '@sveltejs/kit';\n *\n * const { url, denormalize } = normalizeUrl('/blog/post/__data.json');\n * console.log(url.pathname); // /blog/post\n * console.log(denormalize('/blog/post/a')); // /blog/post/a/__data.json\n * ```\n * @param {URL | string} url\n * @returns {{ url: URL, wasNormalized: boolean, denormalize: (url?: string | URL) => URL }}\n * @since 2.18.0\n */\nexport function normalizeUrl(url) {\n\turl = new URL(url, 'http://internal');\n\n\tconst is_route_resolution = has_resolution_suffix(url.pathname);\n\tconst is_data_request = has_data_suffix(url.pathname);\n\tconst has_trailing_slash = url.pathname !== '/' && url.pathname.endsWith('/');\n\n\tif (is_route_resolution) {\n\t\turl.pathname = strip_resolution_suffix(url.pathname);\n\t} else if (is_data_request) {\n\t\turl.pathname = strip_data_suffix(url.pathname);\n\t} else if (has_trailing_slash) {\n\t\turl.pathname = url.pathname.slice(0, -1);\n\t}\n\n\treturn {\n\t\turl,\n\t\twasNormalized: is_data_request || is_route_resolution || has_trailing_slash,\n\t\tdenormalize: (new_url = url) => {\n\t\t\tnew_url = new URL(new_url, url);\n\t\t\tif (is_route_resolution) {\n\t\t\t\tnew_url.pathname = add_resolution_suffix(new_url.pathname);\n\t\t\t} else if (is_data_request) {\n\t\t\t\tnew_url.pathname = add_data_suffix(new_url.pathname);\n\t\t\t} else if (has_trailing_slash && !new_url.pathname.endsWith('/')) {\n\t\t\t\tnew_url.pathname += '/';\n\t\t\t}\n\t\t\treturn new_url;\n\t\t}\n\t};\n}\n", "export default true;\n", "const node_env = globalThis.process?.env?.NODE_ENV;\nexport default node_env && !node_env.toLowerCase().startsWith('prod');\n", "import { BROWSER } from 'esm-env';\n\nexport const text_encoder = new TextEncoder();\nexport const text_decoder = new TextDecoder();\n\n/**\n * Like node's path.relative, but without using node\n * @param {string} from\n * @param {string} to\n */\nexport function get_relative_path(from, to) {\n\tconst from_parts = from.split(/[/\\\\]/);\n\tconst to_parts = to.split(/[/\\\\]/);\n\tfrom_parts.pop(); // get dirname\n\n\twhile (from_parts[0] === to_parts[0]) {\n\t\tfrom_parts.shift();\n\t\tto_parts.shift();\n\t}\n\n\tlet i = from_parts.length;\n\twhile (i--) from_parts[i] = '..';\n\n\treturn from_parts.concat(to_parts).join('/');\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {string}\n */\nexport function base64_encode(bytes) {\n\t// Using `Buffer` is faster than iterating\n\tif (!BROWSER && globalThis.Buffer) {\n\t\treturn globalThis.Buffer.from(bytes).toString('base64');\n\t}\n\n\tlet binary = '';\n\n\tfor (let i = 0; i < bytes.length; i++) {\n\t\tbinary += String.fromCharCode(bytes[i]);\n\t}\n\n\treturn btoa(binary);\n}\n\n/**\n * @param {string} encoded\n * @returns {Uint8Array}\n */\nexport function base64_decode(encoded) {\n\t// Using `Buffer` is faster than iterating\n\tif (!BROWSER && globalThis.Buffer) {\n\t\tconst buffer = globalThis.Buffer.from(encoded, 'base64');\n\t\treturn new Uint8Array(buffer);\n\t}\n\n\tconst binary = atob(encoded);\n\tconst bytes = new Uint8Array(binary.length);\n\n\tfor (let i = 0; i < binary.length; i++) {\n\t\tbytes[i] = binary.charCodeAt(i);\n\t}\n\n\treturn bytes;\n}\n", "import { B as BROWSER, a as assets, b as base, c as app_dir, r as relative, o as override, d as reset } from \"./chunks/environment.js\";\nimport { json, text, error } from \"@sveltejs/kit\";\nimport { HttpError, SvelteKitError, Redirect, ActionFailure } from \"@sveltejs/kit/internal\";\nimport { with_request_store, merge_tracing, try_get_request_store } from \"@sveltejs/kit/internal/server\";\nimport { i as is_primitive, g as get_type, D as DevalueError, a as is_plain_object, e as enumerable_symbols, s as stringify_key, b as stringify_string, c as escaped, d as stringify, f as create_remote_cache_key, p as parse_remote_arg, h as stringify$1, T as TRAILING_SLASH_PARAM, I as INVALIDATED_PARAM } from \"./chunks/shared.js\";\nimport { m as make_trackable, d as disable_search, a as decode_params, S as SCHEME, r as readable, w as writable, v as validate_layout_server_exports, b as validate_layout_exports, c as validate_page_server_exports, e as validate_page_exports, n as normalize_path, f as resolve, g as decode_pathname, h as validate_server_exports } from \"./chunks/exports.js\";\nimport { b as base64_encode, t as text_decoder, a as text_encoder, g as get_relative_path } from \"./chunks/utils.js\";\nimport { p as public_env, r as read_implementation, o as options, s as set_private_env, a as set_public_env, g as get_hooks, b as set_read_implementation } from \"./chunks/internal.js\";\nfunction with_resolvers() {\n  let resolve2;\n  let reject;\n  const promise = new Promise((res, rej) => {\n    resolve2 = res;\n    reject = rej;\n  });\n  return { promise, resolve: resolve2, reject };\n}\nconst NULL_BODY_STATUS = [101, 103, 204, 205, 304];\nconst IN_WEBCONTAINER = !!globalThis.process?.versions?.webcontainer;\nconst SVELTE_KIT_ASSETS = \"/_svelte_kit_assets\";\nconst ENDPOINT_METHODS = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"OPTIONS\", \"HEAD\"];\nconst PAGE_METHODS = [\"GET\", \"POST\", \"HEAD\"];\nfunction negotiate(accept, types) {\n  const parts = [];\n  accept.split(\",\").forEach((str, i) => {\n    const match = /([^/ \\t]+)\\/([^; \\t]+)[ \\t]*(?:;[ \\t]*q=([0-9.]+))?/.exec(str);\n    if (match) {\n      const [, type, subtype, q = \"1\"] = match;\n      parts.push({ type, subtype, q: +q, i });\n    }\n  });\n  parts.sort((a, b) => {\n    if (a.q !== b.q) {\n      return b.q - a.q;\n    }\n    if (a.subtype === \"*\" !== (b.subtype === \"*\")) {\n      return a.subtype === \"*\" ? 1 : -1;\n    }\n    if (a.type === \"*\" !== (b.type === \"*\")) {\n      return a.type === \"*\" ? 1 : -1;\n    }\n    return a.i - b.i;\n  });\n  let accepted;\n  let min_priority = Infinity;\n  for (const mimetype of types) {\n    const [type, subtype] = mimetype.split(\"/\");\n    const priority = parts.findIndex(\n      (part) => (part.type === type || part.type === \"*\") && (part.subtype === subtype || part.subtype === \"*\")\n    );\n    if (priority !== -1 && priority < min_priority) {\n      accepted = mimetype;\n      min_priority = priority;\n    }\n  }\n  return accepted;\n}\nfunction is_content_type(request, ...types) {\n  const type = request.headers.get(\"content-type\")?.split(\";\", 1)[0].trim() ?? \"\";\n  return types.includes(type.toLowerCase());\n}\nfunction is_form_content_type(request) {\n  return is_content_type(\n    request,\n    \"application/x-www-form-urlencoded\",\n    \"multipart/form-data\",\n    \"text/plain\"\n  );\n}\nfunction coalesce_to_error(err) {\n  return err instanceof Error || err && /** @type {any} */\n  err.name && /** @type {any} */\n  err.message ? (\n    /** @type {Error} */\n    err\n  ) : new Error(JSON.stringify(err));\n}\nfunction normalize_error(error2) {\n  return (\n    /** @type {import('../exports/internal/index.js').Redirect | HttpError | SvelteKitError | Error} */\n    error2\n  );\n}\nfunction get_status(error2) {\n  return error2 instanceof HttpError || error2 instanceof SvelteKitError ? error2.status : 500;\n}\nfunction get_message(error2) {\n  return error2 instanceof SvelteKitError ? error2.text : \"Internal Error\";\n}\nconst escape_html_attr_dict = {\n  \"&\": \"&amp;\",\n  '\"': \"&quot;\"\n  // Svelte also escapes < because the escape function could be called inside a `noscript` there\n  // https://github.com/sveltejs/svelte/security/advisories/GHSA-8266-84wp-wv5c\n  // However, that doesn't apply in SvelteKit\n};\nconst escape_html_dict = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\"\n};\nconst surrogates = (\n  // high surrogate without paired low surrogate\n  \"[\\\\ud800-\\\\udbff](?![\\\\udc00-\\\\udfff])|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\udc00-\\\\udfff]\"\n);\nconst escape_html_attr_regex = new RegExp(\n  `[${Object.keys(escape_html_attr_dict).join(\"\")}]|` + surrogates,\n  \"g\"\n);\nconst escape_html_regex = new RegExp(\n  `[${Object.keys(escape_html_dict).join(\"\")}]|` + surrogates,\n  \"g\"\n);\nfunction escape_html(str, is_attr) {\n  const dict = is_attr ? escape_html_attr_dict : escape_html_dict;\n  const escaped_str = str.replace(is_attr ? escape_html_attr_regex : escape_html_regex, (match) => {\n    if (match.length === 2) {\n      return match;\n    }\n    return dict[match] ?? `&#${match.charCodeAt(0)};`;\n  });\n  return escaped_str;\n}\nfunction method_not_allowed(mod, method) {\n  return text(`${method} method not allowed`, {\n    status: 405,\n    headers: {\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n      // \"The server must generate an Allow header field in a 405 status code response\"\n      allow: allowed_methods(mod).join(\", \")\n    }\n  });\n}\nfunction allowed_methods(mod) {\n  const allowed = ENDPOINT_METHODS.filter((method) => method in mod);\n  if (\"GET\" in mod && !(\"HEAD\" in mod)) {\n    allowed.push(\"HEAD\");\n  }\n  return allowed;\n}\nfunction get_global_name(options2) {\n  return `__sveltekit_${options2.version_hash}`;\n}\nfunction static_error_page(options2, status, message) {\n  let page = options2.templates.error({ status, message: escape_html(message) });\n  return text(page, {\n    headers: { \"content-type\": \"text/html; charset=utf-8\" },\n    status\n  });\n}\nasync function handle_fatal_error(event, state, options2, error2) {\n  error2 = error2 instanceof HttpError ? error2 : coalesce_to_error(error2);\n  const status = get_status(error2);\n  const body2 = await handle_error_and_jsonify(event, state, options2, error2);\n  const type = negotiate(event.request.headers.get(\"accept\") || \"text/html\", [\n    \"application/json\",\n    \"text/html\"\n  ]);\n  if (event.isDataRequest || type === \"application/json\") {\n    return json(body2, {\n      status\n    });\n  }\n  return static_error_page(options2, status, body2.message);\n}\nasync function handle_error_and_jsonify(event, state, options2, error2) {\n  if (error2 instanceof HttpError) {\n    return { message: \"Unknown Error\", ...error2.body };\n  }\n  const status = get_status(error2);\n  const message = get_message(error2);\n  return await with_request_store(\n    { event, state },\n    () => options2.hooks.handleError({ error: error2, event, status, message })\n  ) ?? { message };\n}\nfunction redirect_response(status, location) {\n  const response = new Response(void 0, {\n    status,\n    headers: { location }\n  });\n  return response;\n}\nfunction clarify_devalue_error(event, error2) {\n  if (error2.path) {\n    return `Data returned from \\`load\\` while rendering ${event.route.id} is not serializable: ${error2.message} (${error2.path}). If you need to serialize/deserialize custom types, use transport hooks: https://svelte.dev/docs/kit/hooks#Universal-hooks-transport.`;\n  }\n  if (error2.path === \"\") {\n    return `Data returned from \\`load\\` while rendering ${event.route.id} is not a plain object`;\n  }\n  return error2.message;\n}\nfunction serialize_uses(node) {\n  const uses = {};\n  if (node.uses && node.uses.dependencies.size > 0) {\n    uses.dependencies = Array.from(node.uses.dependencies);\n  }\n  if (node.uses && node.uses.search_params.size > 0) {\n    uses.search_params = Array.from(node.uses.search_params);\n  }\n  if (node.uses && node.uses.params.size > 0) {\n    uses.params = Array.from(node.uses.params);\n  }\n  if (node.uses?.parent) uses.parent = 1;\n  if (node.uses?.route) uses.route = 1;\n  if (node.uses?.url) uses.url = 1;\n  return uses;\n}\nfunction has_prerendered_path(manifest, pathname) {\n  return manifest._.prerendered_routes.has(pathname) || pathname.at(-1) === \"/\" && manifest._.prerendered_routes.has(pathname.slice(0, -1));\n}\nfunction format_server_error(status, error2, event) {\n  const formatted_text = `\n\\x1B[1;31m[${status}] ${event.request.method} ${event.url.pathname}\\x1B[0m`;\n  if (status === 404) {\n    return formatted_text;\n  }\n  return `${formatted_text}\n${error2.stack}`;\n}\nfunction get_node_type(node_id) {\n  const parts = node_id?.split(\"/\");\n  const filename = parts?.at(-1);\n  if (!filename) return \"unknown\";\n  const dot_parts = filename.split(\".\");\n  return dot_parts.slice(0, -1).join(\".\");\n}\nasync function render_endpoint(event, event_state, mod, state) {\n  const method = (\n    /** @type {import('types').HttpMethod} */\n    event.request.method\n  );\n  let handler = mod[method] || mod.fallback;\n  if (method === \"HEAD\" && !mod.HEAD && mod.GET) {\n    handler = mod.GET;\n  }\n  if (!handler) {\n    return method_not_allowed(mod, method);\n  }\n  const prerender = mod.prerender ?? state.prerender_default;\n  if (prerender && (mod.POST || mod.PATCH || mod.PUT || mod.DELETE)) {\n    throw new Error(\"Cannot prerender endpoints that have mutative methods\");\n  }\n  if (state.prerendering && !state.prerendering.inside_reroute && !prerender) {\n    if (state.depth > 0) {\n      throw new Error(`${event.route.id} is not prerenderable`);\n    } else {\n      return new Response(void 0, { status: 204 });\n    }\n  }\n  event_state.is_endpoint_request = true;\n  try {\n    const response = await with_request_store(\n      { event, state: event_state },\n      () => handler(\n        /** @type {import('@sveltejs/kit').RequestEvent<Record<string, any>>} */\n        event\n      )\n    );\n    if (!(response instanceof Response)) {\n      throw new Error(\n        `Invalid response from route ${event.url.pathname}: handler should return a Response object`\n      );\n    }\n    if (state.prerendering && (!state.prerendering.inside_reroute || prerender)) {\n      const cloned = new Response(response.clone().body, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: new Headers(response.headers)\n      });\n      cloned.headers.set(\"x-sveltekit-prerender\", String(prerender));\n      if (state.prerendering.inside_reroute && prerender) {\n        cloned.headers.set(\n          \"x-sveltekit-routeid\",\n          encodeURI(\n            /** @type {string} */\n            event.route.id\n          )\n        );\n        state.prerendering.dependencies.set(event.url.pathname, { response: cloned, body: null });\n      } else {\n        return cloned;\n      }\n    }\n    return response;\n  } catch (e) {\n    if (e instanceof Redirect) {\n      return new Response(void 0, {\n        status: e.status,\n        headers: { location: e.location }\n      });\n    }\n    throw e;\n  }\n}\nfunction is_endpoint_request(event) {\n  const { method, headers: headers2 } = event.request;\n  if (ENDPOINT_METHODS.includes(method) && !PAGE_METHODS.includes(method)) {\n    return true;\n  }\n  if (method === \"POST\" && headers2.get(\"x-sveltekit-action\") === \"true\") return false;\n  const accept = event.request.headers.get(\"accept\") ?? \"*/*\";\n  return negotiate(accept, [\"*\", \"text/html\"]) !== \"text/html\";\n}\nfunction compact(arr) {\n  return arr.filter(\n    /** @returns {val is NonNullable<T>} */\n    (val) => val != null\n  );\n}\nconst DATA_SUFFIX = \"/__data.json\";\nconst HTML_DATA_SUFFIX = \".html__data.json\";\nfunction has_data_suffix(pathname) {\n  return pathname.endsWith(DATA_SUFFIX) || pathname.endsWith(HTML_DATA_SUFFIX);\n}\nfunction add_data_suffix(pathname) {\n  if (pathname.endsWith(\".html\")) return pathname.replace(/\\.html$/, HTML_DATA_SUFFIX);\n  return pathname.replace(/\\/$/, \"\") + DATA_SUFFIX;\n}\nfunction strip_data_suffix(pathname) {\n  if (pathname.endsWith(HTML_DATA_SUFFIX)) {\n    return pathname.slice(0, -HTML_DATA_SUFFIX.length) + \".html\";\n  }\n  return pathname.slice(0, -DATA_SUFFIX.length);\n}\nconst ROUTE_SUFFIX = \"/__route.js\";\nfunction has_resolution_suffix(pathname) {\n  return pathname.endsWith(ROUTE_SUFFIX);\n}\nfunction add_resolution_suffix(pathname) {\n  return pathname.replace(/\\/$/, \"\") + ROUTE_SUFFIX;\n}\nfunction strip_resolution_suffix(pathname) {\n  return pathname.slice(0, -ROUTE_SUFFIX.length);\n}\nconst chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$\";\nconst unsafe_chars = /[<\\b\\f\\n\\r\\t\\0\\u2028\\u2029]/g;\nconst reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;\nfunction uneval(value, replacer) {\n  const counts = /* @__PURE__ */ new Map();\n  const keys = [];\n  const custom = /* @__PURE__ */ new Map();\n  function walk(thing) {\n    if (typeof thing === \"function\") {\n      throw new DevalueError(`Cannot stringify a function`, keys);\n    }\n    if (!is_primitive(thing)) {\n      if (counts.has(thing)) {\n        counts.set(thing, counts.get(thing) + 1);\n        return;\n      }\n      counts.set(thing, 1);\n      if (replacer) {\n        const str2 = replacer(thing);\n        if (typeof str2 === \"string\") {\n          custom.set(thing, str2);\n          return;\n        }\n      }\n      const type = get_type(thing);\n      switch (type) {\n        case \"Number\":\n        case \"BigInt\":\n        case \"String\":\n        case \"Boolean\":\n        case \"Date\":\n        case \"RegExp\":\n        case \"URL\":\n        case \"URLSearchParams\":\n          return;\n        case \"Array\":\n          thing.forEach((value2, i) => {\n            keys.push(`[${i}]`);\n            walk(value2);\n            keys.pop();\n          });\n          break;\n        case \"Set\":\n          Array.from(thing).forEach(walk);\n          break;\n        case \"Map\":\n          for (const [key2, value2] of thing) {\n            keys.push(\n              `.get(${is_primitive(key2) ? stringify_primitive(key2) : \"...\"})`\n            );\n            walk(value2);\n            keys.pop();\n          }\n          break;\n        case \"Int8Array\":\n        case \"Uint8Array\":\n        case \"Uint8ClampedArray\":\n        case \"Int16Array\":\n        case \"Uint16Array\":\n        case \"Int32Array\":\n        case \"Uint32Array\":\n        case \"Float32Array\":\n        case \"Float64Array\":\n        case \"BigInt64Array\":\n        case \"BigUint64Array\":\n          walk(thing.buffer);\n          return;\n        case \"ArrayBuffer\":\n          return;\n        case \"Temporal.Duration\":\n        case \"Temporal.Instant\":\n        case \"Temporal.PlainDate\":\n        case \"Temporal.PlainTime\":\n        case \"Temporal.PlainDateTime\":\n        case \"Temporal.PlainMonthDay\":\n        case \"Temporal.PlainYearMonth\":\n        case \"Temporal.ZonedDateTime\":\n          return;\n        default:\n          if (!is_plain_object(thing)) {\n            throw new DevalueError(\n              `Cannot stringify arbitrary non-POJOs`,\n              keys\n            );\n          }\n          if (enumerable_symbols(thing).length > 0) {\n            throw new DevalueError(\n              `Cannot stringify POJOs with symbolic keys`,\n              keys\n            );\n          }\n          for (const key2 in thing) {\n            keys.push(stringify_key(key2));\n            walk(thing[key2]);\n            keys.pop();\n          }\n      }\n    }\n  }\n  walk(value);\n  const names = /* @__PURE__ */ new Map();\n  Array.from(counts).filter((entry) => entry[1] > 1).sort((a, b) => b[1] - a[1]).forEach((entry, i) => {\n    names.set(entry[0], get_name(i));\n  });\n  function stringify2(thing) {\n    if (names.has(thing)) {\n      return names.get(thing);\n    }\n    if (is_primitive(thing)) {\n      return stringify_primitive(thing);\n    }\n    if (custom.has(thing)) {\n      return custom.get(thing);\n    }\n    const type = get_type(thing);\n    switch (type) {\n      case \"Number\":\n      case \"String\":\n      case \"Boolean\":\n        return `Object(${stringify2(thing.valueOf())})`;\n      case \"RegExp\":\n        return `new RegExp(${stringify_string(thing.source)}, \"${thing.flags}\")`;\n      case \"Date\":\n        return `new Date(${thing.getTime()})`;\n      case \"URL\":\n        return `new URL(${stringify_string(thing.toString())})`;\n      case \"URLSearchParams\":\n        return `new URLSearchParams(${stringify_string(thing.toString())})`;\n      case \"Array\":\n        const members = (\n          /** @type {any[]} */\n          thing.map(\n            (v, i) => i in thing ? stringify2(v) : \"\"\n          )\n        );\n        const tail = thing.length === 0 || thing.length - 1 in thing ? \"\" : \",\";\n        return `[${members.join(\",\")}${tail}]`;\n      case \"Set\":\n      case \"Map\":\n        return `new ${type}([${Array.from(thing).map(stringify2).join(\",\")}])`;\n      case \"Int8Array\":\n      case \"Uint8Array\":\n      case \"Uint8ClampedArray\":\n      case \"Int16Array\":\n      case \"Uint16Array\":\n      case \"Int32Array\":\n      case \"Uint32Array\":\n      case \"Float32Array\":\n      case \"Float64Array\":\n      case \"BigInt64Array\":\n      case \"BigUint64Array\": {\n        let str2 = `new ${type}`;\n        if (counts.get(thing.buffer) === 1) {\n          const array2 = new thing.constructor(thing.buffer);\n          str2 += `([${array2}])`;\n        } else {\n          str2 += `([${stringify2(thing.buffer)}])`;\n        }\n        const a = thing.byteOffset;\n        const b = a + thing.byteLength;\n        if (a > 0 || b !== thing.buffer.byteLength) {\n          const m = +/(\\d+)/.exec(type)[1] / 8;\n          str2 += `.subarray(${a / m},${b / m})`;\n        }\n        return str2;\n      }\n      case \"ArrayBuffer\": {\n        const ui8 = new Uint8Array(thing);\n        return `new Uint8Array([${ui8.toString()}]).buffer`;\n      }\n      case \"Temporal.Duration\":\n      case \"Temporal.Instant\":\n      case \"Temporal.PlainDate\":\n      case \"Temporal.PlainTime\":\n      case \"Temporal.PlainDateTime\":\n      case \"Temporal.PlainMonthDay\":\n      case \"Temporal.PlainYearMonth\":\n      case \"Temporal.ZonedDateTime\":\n        return `${type}.from(${stringify_string(thing.toString())})`;\n      default:\n        const obj = `{${Object.keys(thing).map((key2) => `${safe_key(key2)}:${stringify2(thing[key2])}`).join(\",\")}}`;\n        const proto = Object.getPrototypeOf(thing);\n        if (proto === null) {\n          return Object.keys(thing).length > 0 ? `Object.assign(Object.create(null),${obj})` : `Object.create(null)`;\n        }\n        return obj;\n    }\n  }\n  const str = stringify2(value);\n  if (names.size) {\n    const params = [];\n    const statements = [];\n    const values = [];\n    names.forEach((name, thing) => {\n      params.push(name);\n      if (custom.has(thing)) {\n        values.push(\n          /** @type {string} */\n          custom.get(thing)\n        );\n        return;\n      }\n      if (is_primitive(thing)) {\n        values.push(stringify_primitive(thing));\n        return;\n      }\n      const type = get_type(thing);\n      switch (type) {\n        case \"Number\":\n        case \"String\":\n        case \"Boolean\":\n          values.push(`Object(${stringify2(thing.valueOf())})`);\n          break;\n        case \"RegExp\":\n          values.push(thing.toString());\n          break;\n        case \"Date\":\n          values.push(`new Date(${thing.getTime()})`);\n          break;\n        case \"Array\":\n          values.push(`Array(${thing.length})`);\n          thing.forEach((v, i) => {\n            statements.push(`${name}[${i}]=${stringify2(v)}`);\n          });\n          break;\n        case \"Set\":\n          values.push(`new Set`);\n          statements.push(\n            `${name}.${Array.from(thing).map((v) => `add(${stringify2(v)})`).join(\".\")}`\n          );\n          break;\n        case \"Map\":\n          values.push(`new Map`);\n          statements.push(\n            `${name}.${Array.from(thing).map(([k, v]) => `set(${stringify2(k)}, ${stringify2(v)})`).join(\".\")}`\n          );\n          break;\n        case \"ArrayBuffer\":\n          values.push(\n            `new Uint8Array([${new Uint8Array(thing).join(\",\")}]).buffer`\n          );\n          break;\n        default:\n          values.push(\n            Object.getPrototypeOf(thing) === null ? \"Object.create(null)\" : \"{}\"\n          );\n          Object.keys(thing).forEach((key2) => {\n            statements.push(\n              `${name}${safe_prop(key2)}=${stringify2(thing[key2])}`\n            );\n          });\n      }\n    });\n    statements.push(`return ${str}`);\n    return `(function(${params.join(\",\")}){${statements.join(\n      \";\"\n    )}}(${values.join(\",\")}))`;\n  } else {\n    return str;\n  }\n}\nfunction get_name(num) {\n  let name = \"\";\n  do {\n    name = chars[num % chars.length] + name;\n    num = ~~(num / chars.length) - 1;\n  } while (num >= 0);\n  return reserved.test(name) ? `${name}0` : name;\n}\nfunction escape_unsafe_char(c) {\n  return escaped[c] || c;\n}\nfunction escape_unsafe_chars(str) {\n  return str.replace(unsafe_chars, escape_unsafe_char);\n}\nfunction safe_key(key2) {\n  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key2) ? key2 : escape_unsafe_chars(JSON.stringify(key2));\n}\nfunction safe_prop(key2) {\n  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key2) ? `.${key2}` : `[${escape_unsafe_chars(JSON.stringify(key2))}]`;\n}\nfunction stringify_primitive(thing) {\n  if (typeof thing === \"string\") return stringify_string(thing);\n  if (thing === void 0) return \"void 0\";\n  if (thing === 0 && 1 / thing < 0) return \"-0\";\n  const str = String(thing);\n  if (typeof thing === \"number\") return str.replace(/^(-)?0\\./, \"$1.\");\n  if (typeof thing === \"bigint\") return thing + \"n\";\n  return str;\n}\nconst noop_span = {\n  spanContext() {\n    return noop_span_context;\n  },\n  setAttribute() {\n    return this;\n  },\n  setAttributes() {\n    return this;\n  },\n  addEvent() {\n    return this;\n  },\n  setStatus() {\n    return this;\n  },\n  updateName() {\n    return this;\n  },\n  end() {\n    return this;\n  },\n  isRecording() {\n    return false;\n  },\n  recordException() {\n    return this;\n  },\n  addLink() {\n    return this;\n  },\n  addLinks() {\n    return this;\n  }\n};\nconst noop_span_context = {\n  traceId: \"\",\n  spanId: \"\",\n  traceFlags: 0\n};\nasync function record_span({ name, attributes, fn }) {\n  {\n    return fn(noop_span);\n  }\n}\nfunction is_action_json_request(event) {\n  const accept = negotiate(event.request.headers.get(\"accept\") ?? \"*/*\", [\n    \"application/json\",\n    \"text/html\"\n  ]);\n  return accept === \"application/json\" && event.request.method === \"POST\";\n}\nasync function handle_action_json_request(event, event_state, options2, server) {\n  const actions = server?.actions;\n  if (!actions) {\n    const no_actions_error = new SvelteKitError(\n      405,\n      \"Method Not Allowed\",\n      `POST method not allowed. No form actions exist for ${\"this page\"}`\n    );\n    return action_json(\n      {\n        type: \"error\",\n        error: await handle_error_and_jsonify(event, event_state, options2, no_actions_error)\n      },\n      {\n        status: no_actions_error.status,\n        headers: {\n          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n          // \"The server must generate an Allow header field in a 405 status code response\"\n          allow: \"GET\"\n        }\n      }\n    );\n  }\n  check_named_default_separate(actions);\n  try {\n    const data = await call_action(event, event_state, actions);\n    if (BROWSER) ;\n    if (data instanceof ActionFailure) {\n      return action_json({\n        type: \"failure\",\n        status: data.status,\n        // @ts-expect-error we assign a string to what is supposed to be an object. That's ok\n        // because we don't use the object outside, and this way we have better code navigation\n        // through knowing where the related interface is used.\n        data: stringify_action_response(\n          data.data,\n          /** @type {string} */\n          event.route.id,\n          options2.hooks.transport\n        )\n      });\n    } else {\n      return action_json({\n        type: \"success\",\n        status: data ? 200 : 204,\n        // @ts-expect-error see comment above\n        data: stringify_action_response(\n          data,\n          /** @type {string} */\n          event.route.id,\n          options2.hooks.transport\n        )\n      });\n    }\n  } catch (e) {\n    const err = normalize_error(e);\n    if (err instanceof Redirect) {\n      return action_json_redirect(err);\n    }\n    return action_json(\n      {\n        type: \"error\",\n        error: await handle_error_and_jsonify(\n          event,\n          event_state,\n          options2,\n          check_incorrect_fail_use(err)\n        )\n      },\n      {\n        status: get_status(err)\n      }\n    );\n  }\n}\nfunction check_incorrect_fail_use(error2) {\n  return error2 instanceof ActionFailure ? new Error('Cannot \"throw fail()\". Use \"return fail()\"') : error2;\n}\nfunction action_json_redirect(redirect) {\n  return action_json({\n    type: \"redirect\",\n    status: redirect.status,\n    location: redirect.location\n  });\n}\nfunction action_json(data, init2) {\n  return json(data, init2);\n}\nfunction is_action_request(event) {\n  return event.request.method === \"POST\";\n}\nasync function handle_action_request(event, event_state, server) {\n  const actions = server?.actions;\n  if (!actions) {\n    event.setHeaders({\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n      // \"The server must generate an Allow header field in a 405 status code response\"\n      allow: \"GET\"\n    });\n    return {\n      type: \"error\",\n      error: new SvelteKitError(\n        405,\n        \"Method Not Allowed\",\n        `POST method not allowed. No form actions exist for ${\"this page\"}`\n      )\n    };\n  }\n  check_named_default_separate(actions);\n  try {\n    const data = await call_action(event, event_state, actions);\n    if (BROWSER) ;\n    if (data instanceof ActionFailure) {\n      return {\n        type: \"failure\",\n        status: data.status,\n        data: data.data\n      };\n    } else {\n      return {\n        type: \"success\",\n        status: 200,\n        // @ts-expect-error this will be removed upon serialization, so `undefined` is the same as omission\n        data\n      };\n    }\n  } catch (e) {\n    const err = normalize_error(e);\n    if (err instanceof Redirect) {\n      return {\n        type: \"redirect\",\n        status: err.status,\n        location: err.location\n      };\n    }\n    return {\n      type: \"error\",\n      error: check_incorrect_fail_use(err)\n    };\n  }\n}\nfunction check_named_default_separate(actions) {\n  if (actions.default && Object.keys(actions).length > 1) {\n    throw new Error(\n      \"When using named actions, the default action cannot be used. See the docs for more info: https://svelte.dev/docs/kit/form-actions#named-actions\"\n    );\n  }\n}\nasync function call_action(event, event_state, actions) {\n  const url = new URL(event.request.url);\n  let name = \"default\";\n  for (const param of url.searchParams) {\n    if (param[0].startsWith(\"/\")) {\n      name = param[0].slice(1);\n      if (name === \"default\") {\n        throw new Error('Cannot use reserved action name \"default\"');\n      }\n      break;\n    }\n  }\n  const action = actions[name];\n  if (!action) {\n    throw new SvelteKitError(404, \"Not Found\", `No action with name '${name}' found`);\n  }\n  if (!is_form_content_type(event.request)) {\n    throw new SvelteKitError(\n      415,\n      \"Unsupported Media Type\",\n      `Form actions expect form-encoded data \u2014 received ${event.request.headers.get(\n        \"content-type\"\n      )}`\n    );\n  }\n  return record_span({\n    name: \"sveltekit.form_action\",\n    attributes: {\n      \"http.route\": event.route.id || \"unknown\"\n    },\n    fn: async (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      const result = await with_request_store(\n        { event: traced_event, state: event_state },\n        () => action(traced_event)\n      );\n      if (result instanceof ActionFailure) {\n        current2.setAttributes({\n          \"sveltekit.form_action.result.type\": \"failure\",\n          \"sveltekit.form_action.result.status\": result.status\n        });\n      }\n      return result;\n    }\n  });\n}\nfunction validate_action_return(data) {\n  if (data instanceof Redirect) {\n    throw new Error(\"Cannot `return redirect(...)` \u2014 use `redirect(...)` instead\");\n  }\n  if (data instanceof HttpError) {\n    throw new Error(\"Cannot `return error(...)` \u2014 use `error(...)` or `return fail(...)` instead\");\n  }\n}\nfunction uneval_action_response(data, route_id, transport) {\n  const replacer = (thing) => {\n    for (const key2 in transport) {\n      const encoded = transport[key2].encode(thing);\n      if (encoded) {\n        return `app.decode('${key2}', ${uneval(encoded, replacer)})`;\n      }\n    }\n  };\n  return try_serialize(data, (value) => uneval(value, replacer), route_id);\n}\nfunction stringify_action_response(data, route_id, transport) {\n  const encoders = Object.fromEntries(\n    Object.entries(transport).map(([key2, value]) => [key2, value.encode])\n  );\n  return try_serialize(data, (value) => stringify(value, encoders), route_id);\n}\nfunction try_serialize(data, fn, route_id) {\n  try {\n    return fn(data);\n  } catch (e) {\n    const error2 = (\n      /** @type {any} */\n      e\n    );\n    if (data instanceof Response) {\n      throw new Error(\n        `Data returned from action inside ${route_id} is not serializable. Form actions need to return plain objects or fail(). E.g. return { success: true } or return fail(400, { message: \"invalid\" });`\n      );\n    }\n    if (\"path\" in error2) {\n      let message = `Data returned from action inside ${route_id} is not serializable: ${error2.message}`;\n      if (error2.path !== \"\") message += ` (data.${error2.path})`;\n      throw new Error(message);\n    }\n    throw error2;\n  }\n}\nfunction defer() {\n  let fulfil;\n  let reject;\n  const promise = new Promise((f, r) => {\n    fulfil = f;\n    reject = r;\n  });\n  return { promise, fulfil, reject };\n}\nfunction create_async_iterator() {\n  let count = 0;\n  const deferred = [defer()];\n  return {\n    iterate: (transform = (x) => x) => {\n      return {\n        [Symbol.asyncIterator]() {\n          return {\n            next: async () => {\n              const next = await deferred[0].promise;\n              if (!next.done) {\n                deferred.shift();\n                return { value: transform(next.value), done: false };\n              }\n              return next;\n            }\n          };\n        }\n      };\n    },\n    add: (promise) => {\n      count += 1;\n      void promise.then((value) => {\n        deferred[deferred.length - 1].fulfil({\n          value,\n          done: false\n        });\n        deferred.push(defer());\n        if (--count === 0) {\n          deferred[deferred.length - 1].fulfil({ done: true });\n        }\n      });\n    }\n  };\n}\nfunction server_data_serializer(event, event_state, options2) {\n  let promise_id = 1;\n  let max_nodes = -1;\n  const iterator = create_async_iterator();\n  const global = get_global_name(options2);\n  function get_replacer(index) {\n    return function replacer(thing) {\n      if (typeof thing?.then === \"function\") {\n        const id = promise_id++;\n        const promise = thing.then(\n          /** @param {any} data */\n          (data) => ({ data })\n        ).catch(\n          /** @param {any} error */\n          async (error2) => ({\n            error: await handle_error_and_jsonify(event, event_state, options2, error2)\n          })\n        ).then(\n          /**\n           * @param {{data: any; error: any}} result\n           */\n          async ({ data, error: error2 }) => {\n            let str;\n            try {\n              str = uneval(error2 ? [, error2] : [data], replacer);\n            } catch {\n              error2 = await handle_error_and_jsonify(\n                event,\n                event_state,\n                options2,\n                new Error(`Failed to serialize promise while rendering ${event.route.id}`)\n              );\n              data = void 0;\n              str = uneval([, error2], replacer);\n            }\n            return {\n              index,\n              str: `${global}.resolve(${id}, ${str.includes(\"app.decode\") ? `(app) => ${str}` : `() => ${str}`})`\n            };\n          }\n        );\n        iterator.add(promise);\n        return `${global}.defer(${id})`;\n      } else {\n        for (const key2 in options2.hooks.transport) {\n          const encoded = options2.hooks.transport[key2].encode(thing);\n          if (encoded) {\n            return `app.decode('${key2}', ${uneval(encoded, replacer)})`;\n          }\n        }\n      }\n    };\n  }\n  const strings = (\n    /** @type {string[]} */\n    []\n  );\n  return {\n    set_max_nodes(i) {\n      max_nodes = i;\n    },\n    add_node(i, node) {\n      try {\n        if (!node) {\n          strings[i] = \"null\";\n          return;\n        }\n        const payload = { type: \"data\", data: node.data, uses: serialize_uses(node) };\n        if (node.slash) payload.slash = node.slash;\n        strings[i] = uneval(payload, get_replacer(i));\n      } catch (e) {\n        e.path = e.path.slice(1);\n        throw new Error(clarify_devalue_error(\n          event,\n          /** @type {any} */\n          e\n        ));\n      }\n    },\n    get_data(csp) {\n      const open = `<script${csp.script_needs_nonce ? ` nonce=\"${csp.nonce}\"` : \"\"}>`;\n      const close = `<\\/script>\n`;\n      return {\n        data: `[${compact(max_nodes > -1 ? strings.slice(0, max_nodes) : strings).join(\",\")}]`,\n        chunks: promise_id > 1 ? iterator.iterate(({ index, str }) => {\n          if (max_nodes > -1 && index >= max_nodes) {\n            return \"\";\n          }\n          return open + str + close;\n        }) : null\n      };\n    }\n  };\n}\nfunction server_data_serializer_json(event, event_state, options2) {\n  let promise_id = 1;\n  const iterator = create_async_iterator();\n  const reducers = {\n    ...Object.fromEntries(\n      Object.entries(options2.hooks.transport).map(([key2, value]) => [key2, value.encode])\n    ),\n    /** @param {any} thing */\n    Promise: (thing) => {\n      if (typeof thing?.then !== \"function\") {\n        return;\n      }\n      const id = promise_id++;\n      let key2 = \"data\";\n      const promise = thing.catch(\n        /** @param {any} e */\n        async (e) => {\n          key2 = \"error\";\n          return handle_error_and_jsonify(\n            event,\n            event_state,\n            options2,\n            /** @type {any} */\n            e\n          );\n        }\n      ).then(\n        /** @param {any} value */\n        async (value) => {\n          let str;\n          try {\n            str = stringify(value, reducers);\n          } catch {\n            const error2 = await handle_error_and_jsonify(\n              event,\n              event_state,\n              options2,\n              new Error(`Failed to serialize promise while rendering ${event.route.id}`)\n            );\n            key2 = \"error\";\n            str = stringify(error2, reducers);\n          }\n          return `{\"type\":\"chunk\",\"id\":${id},\"${key2}\":${str}}\n`;\n        }\n      );\n      iterator.add(promise);\n      return id;\n    }\n  };\n  const strings = (\n    /** @type {string[]} */\n    []\n  );\n  return {\n    add_node(i, node) {\n      try {\n        if (!node) {\n          strings[i] = \"null\";\n          return;\n        }\n        if (node.type === \"error\" || node.type === \"skip\") {\n          strings[i] = JSON.stringify(node);\n          return;\n        }\n        strings[i] = `{\"type\":\"data\",\"data\":${stringify(node.data, reducers)},\"uses\":${JSON.stringify(\n          serialize_uses(node)\n        )}${node.slash ? `,\"slash\":${JSON.stringify(node.slash)}` : \"\"}}`;\n      } catch (e) {\n        e.path = \"data\" + e.path;\n        throw new Error(clarify_devalue_error(\n          event,\n          /** @type {any} */\n          e\n        ));\n      }\n    },\n    get_data() {\n      return {\n        data: `{\"type\":\"data\",\"nodes\":[${strings.join(\",\")}]}\n`,\n        chunks: promise_id > 1 ? iterator.iterate() : null\n      };\n    }\n  };\n}\nasync function load_server_data({ event, event_state, state, node, parent }) {\n  if (!node?.server) return null;\n  let is_tracking = true;\n  const uses = {\n    dependencies: /* @__PURE__ */ new Set(),\n    params: /* @__PURE__ */ new Set(),\n    parent: false,\n    route: false,\n    url: false,\n    search_params: /* @__PURE__ */ new Set()\n  };\n  const load = node.server.load;\n  const slash = node.server.trailingSlash;\n  if (!load) {\n    return { type: \"data\", data: null, uses, slash };\n  }\n  const url = make_trackable(\n    event.url,\n    () => {\n      if (is_tracking) {\n        uses.url = true;\n      }\n    },\n    (param) => {\n      if (is_tracking) {\n        uses.search_params.add(param);\n      }\n    }\n  );\n  if (state.prerendering) {\n    disable_search(url);\n  }\n  const result = await record_span({\n    name: \"sveltekit.load\",\n    attributes: {\n      \"sveltekit.load.node_id\": node.server_id || \"unknown\",\n      \"sveltekit.load.node_type\": get_node_type(node.server_id),\n      \"http.route\": event.route.id || \"unknown\"\n    },\n    fn: async (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      const result2 = await with_request_store(\n        { event: traced_event, state: event_state },\n        () => load.call(null, {\n          ...traced_event,\n          fetch: (info, init2) => {\n            new URL(info instanceof Request ? info.url : info, event.url);\n            return event.fetch(info, init2);\n          },\n          /** @param {string[]} deps */\n          depends: (...deps) => {\n            for (const dep of deps) {\n              const { href } = new URL(dep, event.url);\n              uses.dependencies.add(href);\n            }\n          },\n          params: new Proxy(event.params, {\n            get: (target, key2) => {\n              if (is_tracking) {\n                uses.params.add(key2);\n              }\n              return target[\n                /** @type {string} */\n                key2\n              ];\n            }\n          }),\n          parent: async () => {\n            if (is_tracking) {\n              uses.parent = true;\n            }\n            return parent();\n          },\n          route: new Proxy(event.route, {\n            get: (target, key2) => {\n              if (is_tracking) {\n                uses.route = true;\n              }\n              return target[\n                /** @type {'id'} */\n                key2\n              ];\n            }\n          }),\n          url,\n          untrack(fn) {\n            is_tracking = false;\n            try {\n              return fn();\n            } finally {\n              is_tracking = true;\n            }\n          }\n        })\n      );\n      return result2;\n    }\n  });\n  return {\n    type: \"data\",\n    data: result ?? null,\n    uses,\n    slash\n  };\n}\nasync function load_data({\n  event,\n  event_state,\n  fetched,\n  node,\n  parent,\n  server_data_promise,\n  state,\n  resolve_opts,\n  csr\n}) {\n  const server_data_node = await server_data_promise;\n  const load = node?.universal?.load;\n  if (!load) {\n    return server_data_node?.data ?? null;\n  }\n  const result = await record_span({\n    name: \"sveltekit.load\",\n    attributes: {\n      \"sveltekit.load.node_id\": node.universal_id || \"unknown\",\n      \"sveltekit.load.node_type\": get_node_type(node.universal_id),\n      \"http.route\": event.route.id || \"unknown\"\n    },\n    fn: async (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      return await with_request_store(\n        { event: traced_event, state: event_state },\n        () => load.call(null, {\n          url: event.url,\n          params: event.params,\n          data: server_data_node?.data ?? null,\n          route: event.route,\n          fetch: create_universal_fetch(event, state, fetched, csr, resolve_opts),\n          setHeaders: event.setHeaders,\n          depends: () => {\n          },\n          parent,\n          untrack: (fn) => fn(),\n          tracing: traced_event.tracing\n        })\n      );\n    }\n  });\n  return result ?? null;\n}\nfunction create_universal_fetch(event, state, fetched, csr, resolve_opts) {\n  const universal_fetch = async (input, init2) => {\n    const cloned_body = input instanceof Request && input.body ? input.clone().body : null;\n    const cloned_headers = input instanceof Request && [...input.headers].length ? new Headers(input.headers) : init2?.headers;\n    let response = await event.fetch(input, init2);\n    const url = new URL(input instanceof Request ? input.url : input, event.url);\n    const same_origin = url.origin === event.url.origin;\n    let dependency;\n    if (same_origin) {\n      if (state.prerendering) {\n        dependency = { response, body: null };\n        state.prerendering.dependencies.set(url.pathname, dependency);\n      }\n    } else if (url.protocol === \"https:\" || url.protocol === \"http:\") {\n      const mode = input instanceof Request ? input.mode : init2?.mode ?? \"cors\";\n      if (mode === \"no-cors\") {\n        response = new Response(\"\", {\n          status: response.status,\n          statusText: response.statusText,\n          headers: response.headers\n        });\n      } else {\n        const acao = response.headers.get(\"access-control-allow-origin\");\n        if (!acao || acao !== event.url.origin && acao !== \"*\") {\n          throw new Error(\n            `CORS error: ${acao ? \"Incorrect\" : \"No\"} 'Access-Control-Allow-Origin' header is present on the requested resource`\n          );\n        }\n      }\n    }\n    let teed_body;\n    const proxy = new Proxy(response, {\n      get(response2, key2, _receiver) {\n        async function push_fetched(body2, is_b64) {\n          const status_number = Number(response2.status);\n          if (isNaN(status_number)) {\n            throw new Error(\n              `response.status is not a number. value: \"${response2.status}\" type: ${typeof response2.status}`\n            );\n          }\n          fetched.push({\n            url: same_origin ? url.href.slice(event.url.origin.length) : url.href,\n            method: event.request.method,\n            request_body: (\n              /** @type {string | ArrayBufferView | undefined} */\n              input instanceof Request && cloned_body ? await stream_to_string(cloned_body) : init2?.body\n            ),\n            request_headers: cloned_headers,\n            response_body: body2,\n            response: response2,\n            is_b64\n          });\n        }\n        if (key2 === \"body\") {\n          if (response2.body === null) {\n            return null;\n          }\n          if (teed_body) {\n            return teed_body;\n          }\n          const [a, b] = response2.body.tee();\n          void (async () => {\n            let result = new Uint8Array();\n            for await (const chunk of a) {\n              const combined = new Uint8Array(result.length + chunk.length);\n              combined.set(result, 0);\n              combined.set(chunk, result.length);\n              result = combined;\n            }\n            if (dependency) {\n              dependency.body = new Uint8Array(result);\n            }\n            void push_fetched(base64_encode(result), true);\n          })();\n          return teed_body = b;\n        }\n        if (key2 === \"arrayBuffer\") {\n          return async () => {\n            const buffer = await response2.arrayBuffer();\n            const bytes = new Uint8Array(buffer);\n            if (dependency) {\n              dependency.body = bytes;\n            }\n            if (buffer instanceof ArrayBuffer) {\n              await push_fetched(base64_encode(bytes), true);\n            }\n            return buffer;\n          };\n        }\n        async function text2() {\n          const body2 = await response2.text();\n          if (body2 === \"\" && NULL_BODY_STATUS.includes(response2.status)) {\n            await push_fetched(void 0, false);\n            return void 0;\n          }\n          if (!body2 || typeof body2 === \"string\") {\n            await push_fetched(body2, false);\n          }\n          if (dependency) {\n            dependency.body = body2;\n          }\n          return body2;\n        }\n        if (key2 === \"text\") {\n          return text2;\n        }\n        if (key2 === \"json\") {\n          return async () => {\n            const body2 = await text2();\n            return body2 ? JSON.parse(body2) : void 0;\n          };\n        }\n        return Reflect.get(response2, key2, response2);\n      }\n    });\n    if (csr) {\n      const get = response.headers.get;\n      response.headers.get = (key2) => {\n        const lower = key2.toLowerCase();\n        const value = get.call(response.headers, lower);\n        if (value && !lower.startsWith(\"x-sveltekit-\")) {\n          const included = resolve_opts.filterSerializedResponseHeaders(lower, value);\n          if (!included) {\n            throw new Error(\n              `Failed to get response header \"${lower}\" \u2014 it must be included by the \\`filterSerializedResponseHeaders\\` option: https://svelte.dev/docs/kit/hooks#Server-hooks-handle (at ${event.route.id})`\n            );\n          }\n        }\n        return value;\n      };\n    }\n    return proxy;\n  };\n  return (input, init2) => {\n    const response = universal_fetch(input, init2);\n    response.catch(() => {\n    });\n    return response;\n  };\n}\nasync function stream_to_string(stream) {\n  let result = \"\";\n  const reader = stream.getReader();\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    result += text_decoder.decode(value);\n  }\n  return result;\n}\nfunction hash(...values) {\n  let hash2 = 5381;\n  for (const value of values) {\n    if (typeof value === \"string\") {\n      let i = value.length;\n      while (i) hash2 = hash2 * 33 ^ value.charCodeAt(--i);\n    } else if (ArrayBuffer.isView(value)) {\n      const buffer = new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n      let i = buffer.length;\n      while (i) hash2 = hash2 * 33 ^ buffer[--i];\n    } else {\n      throw new TypeError(\"value must be a string or TypedArray\");\n    }\n  }\n  return (hash2 >>> 0).toString(36);\n}\nconst replacements = {\n  \"<\": \"\\\\u003C\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst pattern = new RegExp(`[${Object.keys(replacements).join(\"\")}]`, \"g\");\nfunction serialize_data(fetched, filter, prerendering = false) {\n  const headers2 = {};\n  let cache_control = null;\n  let age = null;\n  let varyAny = false;\n  for (const [key2, value] of fetched.response.headers) {\n    if (filter(key2, value)) {\n      headers2[key2] = value;\n    }\n    if (key2 === \"cache-control\") cache_control = value;\n    else if (key2 === \"age\") age = value;\n    else if (key2 === \"vary\" && value.trim() === \"*\") varyAny = true;\n  }\n  const payload = {\n    status: fetched.response.status,\n    statusText: fetched.response.statusText,\n    headers: headers2,\n    body: fetched.response_body\n  };\n  const safe_payload = JSON.stringify(payload).replace(pattern, (match) => replacements[match]);\n  const attrs = [\n    'type=\"application/json\"',\n    \"data-sveltekit-fetched\",\n    `data-url=\"${escape_html(fetched.url, true)}\"`\n  ];\n  if (fetched.is_b64) {\n    attrs.push(\"data-b64\");\n  }\n  if (fetched.request_headers || fetched.request_body) {\n    const values = [];\n    if (fetched.request_headers) {\n      values.push([...new Headers(fetched.request_headers)].join(\",\"));\n    }\n    if (fetched.request_body) {\n      values.push(fetched.request_body);\n    }\n    attrs.push(`data-hash=\"${hash(...values)}\"`);\n  }\n  if (!prerendering && fetched.method === \"GET\" && cache_control && !varyAny) {\n    const match = /s-maxage=(\\d+)/g.exec(cache_control) ?? /max-age=(\\d+)/g.exec(cache_control);\n    if (match) {\n      const ttl = +match[1] - +(age ?? \"0\");\n      attrs.push(`data-ttl=\"${ttl}\"`);\n    }\n  }\n  return `<script ${attrs.join(\" \")}>${safe_payload}<\\/script>`;\n}\nconst s = JSON.stringify;\nfunction sha256(data) {\n  if (!key[0]) precompute();\n  const out = init.slice(0);\n  const array2 = encode$1(data);\n  for (let i = 0; i < array2.length; i += 16) {\n    const w = array2.subarray(i, i + 16);\n    let tmp;\n    let a;\n    let b;\n    let out0 = out[0];\n    let out1 = out[1];\n    let out2 = out[2];\n    let out3 = out[3];\n    let out4 = out[4];\n    let out5 = out[5];\n    let out6 = out[6];\n    let out7 = out[7];\n    for (let i2 = 0; i2 < 64; i2++) {\n      if (i2 < 16) {\n        tmp = w[i2];\n      } else {\n        a = w[i2 + 1 & 15];\n        b = w[i2 + 14 & 15];\n        tmp = w[i2 & 15] = (a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i2 & 15] + w[i2 + 9 & 15] | 0;\n      }\n      tmp = tmp + out7 + (out4 >>> 6 ^ out4 >>> 11 ^ out4 >>> 25 ^ out4 << 26 ^ out4 << 21 ^ out4 << 7) + (out6 ^ out4 & (out5 ^ out6)) + key[i2];\n      out7 = out6;\n      out6 = out5;\n      out5 = out4;\n      out4 = out3 + tmp | 0;\n      out3 = out2;\n      out2 = out1;\n      out1 = out0;\n      out0 = tmp + (out1 & out2 ^ out3 & (out1 ^ out2)) + (out1 >>> 2 ^ out1 >>> 13 ^ out1 >>> 22 ^ out1 << 30 ^ out1 << 19 ^ out1 << 10) | 0;\n    }\n    out[0] = out[0] + out0 | 0;\n    out[1] = out[1] + out1 | 0;\n    out[2] = out[2] + out2 | 0;\n    out[3] = out[3] + out3 | 0;\n    out[4] = out[4] + out4 | 0;\n    out[5] = out[5] + out5 | 0;\n    out[6] = out[6] + out6 | 0;\n    out[7] = out[7] + out7 | 0;\n  }\n  const bytes = new Uint8Array(out.buffer);\n  reverse_endianness(bytes);\n  return btoa(String.fromCharCode(...bytes));\n}\nconst init = new Uint32Array(8);\nconst key = new Uint32Array(64);\nfunction precompute() {\n  function frac(x) {\n    return (x - Math.floor(x)) * 4294967296;\n  }\n  let prime = 2;\n  for (let i = 0; i < 64; prime++) {\n    let is_prime = true;\n    for (let factor = 2; factor * factor <= prime; factor++) {\n      if (prime % factor === 0) {\n        is_prime = false;\n        break;\n      }\n    }\n    if (is_prime) {\n      if (i < 8) {\n        init[i] = frac(prime ** (1 / 2));\n      }\n      key[i] = frac(prime ** (1 / 3));\n      i++;\n    }\n  }\n}\nfunction reverse_endianness(bytes) {\n  for (let i = 0; i < bytes.length; i += 4) {\n    const a = bytes[i + 0];\n    const b = bytes[i + 1];\n    const c = bytes[i + 2];\n    const d = bytes[i + 3];\n    bytes[i + 0] = d;\n    bytes[i + 1] = c;\n    bytes[i + 2] = b;\n    bytes[i + 3] = a;\n  }\n}\nfunction encode$1(str) {\n  const encoded = text_encoder.encode(str);\n  const length = encoded.length * 8;\n  const size = 512 * Math.ceil((length + 65) / 512);\n  const bytes = new Uint8Array(size / 8);\n  bytes.set(encoded);\n  bytes[encoded.length] = 128;\n  reverse_endianness(bytes);\n  const words = new Uint32Array(bytes.buffer);\n  words[words.length - 2] = Math.floor(length / 4294967296);\n  words[words.length - 1] = length;\n  return words;\n}\nconst array = new Uint8Array(16);\nfunction generate_nonce() {\n  crypto.getRandomValues(array);\n  return btoa(String.fromCharCode(...array));\n}\nconst quoted = /* @__PURE__ */ new Set([\n  \"self\",\n  \"unsafe-eval\",\n  \"unsafe-hashes\",\n  \"unsafe-inline\",\n  \"none\",\n  \"strict-dynamic\",\n  \"report-sample\",\n  \"wasm-unsafe-eval\",\n  \"script\"\n]);\nconst crypto_pattern = /^(nonce|sha\\d\\d\\d)-/;\nclass BaseProvider {\n  /** @type {boolean} */\n  #use_hashes;\n  /** @type {boolean} */\n  #script_needs_csp;\n  /** @type {boolean} */\n  #script_src_needs_csp;\n  /** @type {boolean} */\n  #script_src_elem_needs_csp;\n  /** @type {boolean} */\n  #style_needs_csp;\n  /** @type {boolean} */\n  #style_src_needs_csp;\n  /** @type {boolean} */\n  #style_src_attr_needs_csp;\n  /** @type {boolean} */\n  #style_src_elem_needs_csp;\n  /** @type {import('types').CspDirectives} */\n  #directives;\n  /** @type {import('types').Csp.Source[]} */\n  #script_src;\n  /** @type {import('types').Csp.Source[]} */\n  #script_src_elem;\n  /** @type {import('types').Csp.Source[]} */\n  #style_src;\n  /** @type {import('types').Csp.Source[]} */\n  #style_src_attr;\n  /** @type {import('types').Csp.Source[]} */\n  #style_src_elem;\n  /** @type {string} */\n  #nonce;\n  /**\n   * @param {boolean} use_hashes\n   * @param {import('types').CspDirectives} directives\n   * @param {string} nonce\n   */\n  constructor(use_hashes, directives, nonce) {\n    this.#use_hashes = use_hashes;\n    this.#directives = directives;\n    const d = this.#directives;\n    this.#script_src = [];\n    this.#script_src_elem = [];\n    this.#style_src = [];\n    this.#style_src_attr = [];\n    this.#style_src_elem = [];\n    const effective_script_src = d[\"script-src\"] || d[\"default-src\"];\n    const script_src_elem = d[\"script-src-elem\"];\n    const effective_style_src = d[\"style-src\"] || d[\"default-src\"];\n    const style_src_attr = d[\"style-src-attr\"];\n    const style_src_elem = d[\"style-src-elem\"];\n    const needs_csp = (directive) => !!directive && !directive.some((value) => value === \"unsafe-inline\");\n    this.#script_src_needs_csp = needs_csp(effective_script_src);\n    this.#script_src_elem_needs_csp = needs_csp(script_src_elem);\n    this.#style_src_needs_csp = needs_csp(effective_style_src);\n    this.#style_src_attr_needs_csp = needs_csp(style_src_attr);\n    this.#style_src_elem_needs_csp = needs_csp(style_src_elem);\n    this.#script_needs_csp = this.#script_src_needs_csp || this.#script_src_elem_needs_csp;\n    this.#style_needs_csp = this.#style_src_needs_csp || this.#style_src_attr_needs_csp || this.#style_src_elem_needs_csp;\n    this.script_needs_nonce = this.#script_needs_csp && !this.#use_hashes;\n    this.style_needs_nonce = this.#style_needs_csp && !this.#use_hashes;\n    this.#nonce = nonce;\n  }\n  /** @param {string} content */\n  add_script(content) {\n    if (!this.#script_needs_csp) return;\n    const source = this.#use_hashes ? `sha256-${sha256(content)}` : `nonce-${this.#nonce}`;\n    if (this.#script_src_needs_csp) {\n      this.#script_src.push(source);\n    }\n    if (this.#script_src_elem_needs_csp) {\n      this.#script_src_elem.push(source);\n    }\n  }\n  /** @param {string} content */\n  add_style(content) {\n    if (!this.#style_needs_csp) return;\n    const source = this.#use_hashes ? `sha256-${sha256(content)}` : `nonce-${this.#nonce}`;\n    if (this.#style_src_needs_csp) {\n      this.#style_src.push(source);\n    }\n    if (this.#style_src_attr_needs_csp) {\n      this.#style_src_attr.push(source);\n    }\n    if (this.#style_src_elem_needs_csp) {\n      const sha256_empty_comment_hash = \"sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=\";\n      const d = this.#directives;\n      if (d[\"style-src-elem\"] && !d[\"style-src-elem\"].includes(sha256_empty_comment_hash) && !this.#style_src_elem.includes(sha256_empty_comment_hash)) {\n        this.#style_src_elem.push(sha256_empty_comment_hash);\n      }\n      if (source !== sha256_empty_comment_hash) {\n        this.#style_src_elem.push(source);\n      }\n    }\n  }\n  /**\n   * @param {boolean} [is_meta]\n   */\n  get_header(is_meta = false) {\n    const header = [];\n    const directives = { ...this.#directives };\n    if (this.#style_src.length > 0) {\n      directives[\"style-src\"] = [\n        ...directives[\"style-src\"] || directives[\"default-src\"] || [],\n        ...this.#style_src\n      ];\n    }\n    if (this.#style_src_attr.length > 0) {\n      directives[\"style-src-attr\"] = [\n        ...directives[\"style-src-attr\"] || [],\n        ...this.#style_src_attr\n      ];\n    }\n    if (this.#style_src_elem.length > 0) {\n      directives[\"style-src-elem\"] = [\n        ...directives[\"style-src-elem\"] || [],\n        ...this.#style_src_elem\n      ];\n    }\n    if (this.#script_src.length > 0) {\n      directives[\"script-src\"] = [\n        ...directives[\"script-src\"] || directives[\"default-src\"] || [],\n        ...this.#script_src\n      ];\n    }\n    if (this.#script_src_elem.length > 0) {\n      directives[\"script-src-elem\"] = [\n        ...directives[\"script-src-elem\"] || [],\n        ...this.#script_src_elem\n      ];\n    }\n    for (const key2 in directives) {\n      if (is_meta && (key2 === \"frame-ancestors\" || key2 === \"report-uri\" || key2 === \"sandbox\")) {\n        continue;\n      }\n      const value = (\n        /** @type {string[] | true} */\n        directives[key2]\n      );\n      if (!value) continue;\n      const directive = [key2];\n      if (Array.isArray(value)) {\n        value.forEach((value2) => {\n          if (quoted.has(value2) || crypto_pattern.test(value2)) {\n            directive.push(`'${value2}'`);\n          } else {\n            directive.push(value2);\n          }\n        });\n      }\n      header.push(directive.join(\" \"));\n    }\n    return header.join(\"; \");\n  }\n}\nclass CspProvider extends BaseProvider {\n  get_meta() {\n    const content = this.get_header(true);\n    if (!content) {\n      return;\n    }\n    return `<meta http-equiv=\"content-security-policy\" content=\"${escape_html(content, true)}\">`;\n  }\n}\nclass CspReportOnlyProvider extends BaseProvider {\n  /**\n   * @param {boolean} use_hashes\n   * @param {import('types').CspDirectives} directives\n   * @param {string} nonce\n   */\n  constructor(use_hashes, directives, nonce) {\n    super(use_hashes, directives, nonce);\n    if (Object.values(directives).filter((v) => !!v).length > 0) {\n      const has_report_to = directives[\"report-to\"]?.length ?? 0 > 0;\n      const has_report_uri = directives[\"report-uri\"]?.length ?? 0 > 0;\n      if (!has_report_to && !has_report_uri) {\n        throw Error(\n          \"`content-security-policy-report-only` must be specified with either the `report-to` or `report-uri` directives, or both\"\n        );\n      }\n    }\n  }\n}\nclass Csp {\n  /** @readonly */\n  nonce = generate_nonce();\n  /** @type {CspProvider} */\n  csp_provider;\n  /** @type {CspReportOnlyProvider} */\n  report_only_provider;\n  /**\n   * @param {import('./types.js').CspConfig} config\n   * @param {import('./types.js').CspOpts} opts\n   */\n  constructor({ mode, directives, reportOnly }, { prerender }) {\n    const use_hashes = mode === \"hash\" || mode === \"auto\" && prerender;\n    this.csp_provider = new CspProvider(use_hashes, directives, this.nonce);\n    this.report_only_provider = new CspReportOnlyProvider(use_hashes, reportOnly, this.nonce);\n  }\n  get script_needs_nonce() {\n    return this.csp_provider.script_needs_nonce || this.report_only_provider.script_needs_nonce;\n  }\n  get style_needs_nonce() {\n    return this.csp_provider.style_needs_nonce || this.report_only_provider.style_needs_nonce;\n  }\n  /** @param {string} content */\n  add_script(content) {\n    this.csp_provider.add_script(content);\n    this.report_only_provider.add_script(content);\n  }\n  /** @param {string} content */\n  add_style(content) {\n    this.csp_provider.add_style(content);\n    this.report_only_provider.add_style(content);\n  }\n}\nfunction exec(match, params, matchers) {\n  const result = {};\n  const values = match.slice(1);\n  const values_needing_match = values.filter((value) => value !== void 0);\n  let buffered = 0;\n  for (let i = 0; i < params.length; i += 1) {\n    const param = params[i];\n    let value = values[i - buffered];\n    if (param.chained && param.rest && buffered) {\n      value = values.slice(i - buffered, i + 1).filter((s2) => s2).join(\"/\");\n      buffered = 0;\n    }\n    if (value === void 0) {\n      if (param.rest) result[param.name] = \"\";\n      continue;\n    }\n    if (!param.matcher || matchers[param.matcher](value)) {\n      result[param.name] = value;\n      const next_param = params[i + 1];\n      const next_value = values[i + 1];\n      if (next_param && !next_param.rest && next_param.optional && next_value && param.chained) {\n        buffered = 0;\n      }\n      if (!next_param && !next_value && Object.keys(result).length === values_needing_match.length) {\n        buffered = 0;\n      }\n      continue;\n    }\n    if (param.optional && param.chained) {\n      buffered++;\n      continue;\n    }\n    return;\n  }\n  if (buffered) return;\n  return result;\n}\nfunction generate_route_object(route, url, manifest) {\n  const { errors, layouts, leaf } = route;\n  const nodes = [...errors, ...layouts.map((l) => l?.[1]), leaf[1]].filter((n) => typeof n === \"number\").map((n) => `'${n}': () => ${create_client_import(manifest._.client.nodes?.[n], url)}`).join(\",\\n\t\t\");\n  return [\n    `{\n\tid: ${s(route.id)}`,\n    `errors: ${s(route.errors)}`,\n    `layouts: ${s(route.layouts)}`,\n    `leaf: ${s(route.leaf)}`,\n    `nodes: {\n\t\t${nodes}\n\t}\n}`\n  ].join(\",\\n\t\");\n}\nfunction create_client_import(import_path, url) {\n  if (!import_path) return \"Promise.resolve({})\";\n  if (import_path[0] === \"/\") {\n    return `import('${import_path}')`;\n  }\n  if (assets !== \"\") {\n    return `import('${assets}/${import_path}')`;\n  }\n  let path = get_relative_path(url.pathname, `${base}/${import_path}`);\n  if (path[0] !== \".\") path = `./${path}`;\n  return `import('${path}')`;\n}\nasync function resolve_route(resolved_path, url, manifest) {\n  if (!manifest._.client.routes) {\n    return text(\"Server-side route resolution disabled\", { status: 400 });\n  }\n  let route = null;\n  let params = {};\n  const matchers = await manifest._.matchers();\n  for (const candidate of manifest._.client.routes) {\n    const match = candidate.pattern.exec(resolved_path);\n    if (!match) continue;\n    const matched = exec(match, candidate.params, matchers);\n    if (matched) {\n      route = candidate;\n      params = decode_params(matched);\n      break;\n    }\n  }\n  return create_server_routing_response(route, params, url, manifest).response;\n}\nfunction create_server_routing_response(route, params, url, manifest) {\n  const headers2 = new Headers({\n    \"content-type\": \"application/javascript; charset=utf-8\"\n  });\n  if (route) {\n    const csr_route = generate_route_object(route, url, manifest);\n    const body2 = `${create_css_import(route, url, manifest)}\nexport const route = ${csr_route}; export const params = ${JSON.stringify(params)};`;\n    return { response: text(body2, { headers: headers2 }), body: body2 };\n  } else {\n    return { response: text(\"\", { headers: headers2 }), body: \"\" };\n  }\n}\nfunction create_css_import(route, url, manifest) {\n  const { errors, layouts, leaf } = route;\n  let css = \"\";\n  for (const node of [...errors, ...layouts.map((l) => l?.[1]), leaf[1]]) {\n    if (typeof node !== \"number\") continue;\n    const node_css = manifest._.client.css?.[node];\n    for (const css_path of node_css ?? []) {\n      css += `'${assets || base}/${css_path}',`;\n    }\n  }\n  if (!css) return \"\";\n  return `${create_client_import(\n    /** @type {string} */\n    manifest._.client.start,\n    url\n  )}.then(x => x.load_css([${css}]));`;\n}\nconst updated = {\n  ...readable(false),\n  check: () => false\n};\nasync function render_response({\n  branch,\n  fetched,\n  options: options2,\n  manifest,\n  state,\n  page_config,\n  status,\n  error: error2 = null,\n  event,\n  event_state,\n  resolve_opts,\n  action_result,\n  data_serializer\n}) {\n  if (state.prerendering) {\n    if (options2.csp.mode === \"nonce\") {\n      throw new Error('Cannot use prerendering if config.kit.csp.mode === \"nonce\"');\n    }\n    if (options2.app_template_contains_nonce) {\n      throw new Error(\"Cannot use prerendering if page template contains %sveltekit.nonce%\");\n    }\n  }\n  const { client } = manifest._;\n  const modulepreloads = new Set(client.imports);\n  const stylesheets = new Set(client.stylesheets);\n  const fonts = new Set(client.fonts);\n  const link_headers = /* @__PURE__ */ new Set();\n  const link_tags = /* @__PURE__ */ new Set();\n  const inline_styles = /* @__PURE__ */ new Map();\n  let rendered;\n  const form_value = action_result?.type === \"success\" || action_result?.type === \"failure\" ? action_result.data ?? null : null;\n  let base$1 = base;\n  let assets$1 = assets;\n  let base_expression = s(base);\n  {\n    if (!state.prerendering?.fallback) {\n      const segments = event.url.pathname.slice(base.length).split(\"/\").slice(2);\n      base$1 = segments.map(() => \"..\").join(\"/\") || \".\";\n      base_expression = `new URL(${s(base$1)}, location).pathname.slice(0, -1)`;\n      if (!assets || assets[0] === \"/\" && assets !== SVELTE_KIT_ASSETS) {\n        assets$1 = base$1;\n      }\n    } else if (options2.hash_routing) {\n      base_expression = \"new URL('.', location).pathname.slice(0, -1)\";\n    }\n  }\n  if (page_config.ssr) {\n    const props = {\n      stores: {\n        page: writable(null),\n        navigating: writable(null),\n        updated\n      },\n      constructors: await Promise.all(\n        branch.map(({ node }) => {\n          if (!node.component) {\n            throw new Error(`Missing +page.svelte component for route ${event.route.id}`);\n          }\n          return node.component();\n        })\n      ),\n      form: form_value\n    };\n    let data2 = {};\n    for (let i = 0; i < branch.length; i += 1) {\n      data2 = { ...data2, ...branch[i].data };\n      props[`data_${i}`] = data2;\n    }\n    props.page = {\n      error: error2,\n      params: (\n        /** @type {Record<string, any>} */\n        event.params\n      ),\n      route: event.route,\n      status,\n      url: event.url,\n      data: data2,\n      form: form_value,\n      state: {}\n    };\n    const render_opts = {\n      context: /* @__PURE__ */ new Map([\n        [\n          \"__request__\",\n          {\n            page: props.page\n          }\n        ]\n      ])\n    };\n    const fetch2 = globalThis.fetch;\n    try {\n      if (BROWSER) ;\n      rendered = await with_request_store({ event, state: event_state }, async () => {\n        if (relative) override({ base: base$1, assets: assets$1 });\n        const maybe_promise = options2.root.render(props, render_opts);\n        const rendered2 = options2.async && \"then\" in maybe_promise ? (\n          /** @type {ReturnType<typeof options.root.render> & Promise<any>} */\n          maybe_promise.then((r) => r)\n        ) : maybe_promise;\n        if (options2.async) {\n          reset();\n        }\n        const { head: head2, html: html2, css } = options2.async ? await rendered2 : rendered2;\n        return { head: head2, html: html2, css };\n      });\n    } finally {\n      reset();\n    }\n    for (const { node } of branch) {\n      for (const url of node.imports) modulepreloads.add(url);\n      for (const url of node.stylesheets) stylesheets.add(url);\n      for (const url of node.fonts) fonts.add(url);\n      if (node.inline_styles && !client.inline) {\n        Object.entries(await node.inline_styles()).forEach(([k, v]) => inline_styles.set(k, v));\n      }\n    }\n  } else {\n    rendered = { head: \"\", html: \"\", css: { code: \"\", map: null } };\n  }\n  let head = \"\";\n  let body2 = rendered.html;\n  const csp = new Csp(options2.csp, {\n    prerender: !!state.prerendering\n  });\n  const prefixed = (path) => {\n    if (path.startsWith(\"/\")) {\n      return base + path;\n    }\n    return `${assets$1}/${path}`;\n  };\n  const style = client.inline ? client.inline?.style : Array.from(inline_styles.values()).join(\"\\n\");\n  if (style) {\n    const attributes = [];\n    if (csp.style_needs_nonce) attributes.push(` nonce=\"${csp.nonce}\"`);\n    csp.add_style(style);\n    head += `\n\t<style${attributes.join(\"\")}>${style}</style>`;\n  }\n  for (const dep of stylesheets) {\n    const path = prefixed(dep);\n    const attributes = ['rel=\"stylesheet\"'];\n    if (inline_styles.has(dep)) {\n      attributes.push(\"disabled\", 'media=\"(max-width: 0)\"');\n    } else {\n      if (resolve_opts.preload({ type: \"css\", path })) {\n        link_headers.add(`<${encodeURI(path)}>; rel=\"preload\"; as=\"style\"; nopush`);\n      }\n    }\n    head += `\n\t\t<link href=\"${path}\" ${attributes.join(\" \")}>`;\n  }\n  for (const dep of fonts) {\n    const path = prefixed(dep);\n    if (resolve_opts.preload({ type: \"font\", path })) {\n      const ext = dep.slice(dep.lastIndexOf(\".\") + 1);\n      link_tags.add(`<link rel=\"preload\" as=\"font\" type=\"font/${ext}\" href=\"${path}\" crossorigin>`);\n      link_headers.add(\n        `<${encodeURI(path)}>; rel=\"preload\"; as=\"font\"; type=\"font/${ext}\"; crossorigin; nopush`\n      );\n    }\n  }\n  const global = get_global_name(options2);\n  const { data, chunks } = data_serializer.get_data(csp);\n  if (page_config.ssr && page_config.csr) {\n    body2 += `\n\t\t\t${fetched.map(\n      (item) => serialize_data(item, resolve_opts.filterSerializedResponseHeaders, !!state.prerendering)\n    ).join(\"\\n\t\t\t\")}`;\n  }\n  if (page_config.csr) {\n    const route = manifest._.client.routes?.find((r) => r.id === event.route.id) ?? null;\n    if (client.uses_env_dynamic_public && state.prerendering) {\n      modulepreloads.add(`${app_dir}/env.js`);\n    }\n    if (!client.inline) {\n      const included_modulepreloads = Array.from(modulepreloads, (dep) => prefixed(dep)).filter(\n        (path) => resolve_opts.preload({ type: \"js\", path })\n      );\n      for (const path of included_modulepreloads) {\n        link_headers.add(`<${encodeURI(path)}>; rel=\"modulepreload\"; nopush`);\n        if (options2.preload_strategy !== \"modulepreload\") {\n          head += `\n\t\t<link rel=\"preload\" as=\"script\" crossorigin=\"anonymous\" href=\"${path}\">`;\n        } else {\n          link_tags.add(`<link rel=\"modulepreload\" href=\"${path}\">`);\n        }\n      }\n    }\n    if (state.prerendering && link_tags.size > 0) {\n      head += Array.from(link_tags).map((tag) => `\n\t\t${tag}`).join(\"\");\n    }\n    if (manifest._.client.routes && state.prerendering && !state.prerendering.fallback) {\n      const pathname = add_resolution_suffix(event.url.pathname);\n      state.prerendering.dependencies.set(\n        pathname,\n        create_server_routing_response(route, event.params, new URL(pathname, event.url), manifest)\n      );\n    }\n    const blocks = [];\n    const load_env_eagerly = client.uses_env_dynamic_public && state.prerendering;\n    const properties = [`base: ${base_expression}`];\n    if (assets) {\n      properties.push(`assets: ${s(assets)}`);\n    }\n    if (client.uses_env_dynamic_public) {\n      properties.push(`env: ${load_env_eagerly ? \"null\" : s(public_env)}`);\n    }\n    if (chunks) {\n      blocks.push(\"const deferred = new Map();\");\n      properties.push(`defer: (id) => new Promise((fulfil, reject) => {\n\t\t\t\t\t\t\tdeferred.set(id, { fulfil, reject });\n\t\t\t\t\t\t})`);\n      let app_declaration = \"\";\n      if (Object.keys(options2.hooks.transport).length > 0) {\n        if (client.inline) {\n          app_declaration = `const app = __sveltekit_${options2.version_hash}.app.app;`;\n        } else if (client.app) {\n          app_declaration = `const app = await import(${s(prefixed(client.app))});`;\n        } else {\n          app_declaration = `const { app } = await import(${s(prefixed(client.start))});`;\n        }\n      }\n      const prelude = app_declaration ? `${app_declaration}\n\t\t\t\t\t\t\tconst [data, error] = fn(app);` : `const [data, error] = fn();`;\n      properties.push(`resolve: async (id, fn) => {\n\t\t\t\t\t\t\t${prelude}\n\n\t\t\t\t\t\t\tconst try_to_resolve = () => {\n\t\t\t\t\t\t\t\tif (!deferred.has(id)) {\n\t\t\t\t\t\t\t\t\tsetTimeout(try_to_resolve, 0);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst { fulfil, reject } = deferred.get(id);\n\t\t\t\t\t\t\t\tdeferred.delete(id);\n\t\t\t\t\t\t\t\tif (error) reject(error);\n\t\t\t\t\t\t\t\telse fulfil(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry_to_resolve();\n\t\t\t\t\t\t}`);\n    }\n    blocks.push(`${global} = {\n\t\t\t\t\t\t${properties.join(\",\\n\t\t\t\t\t\t\")}\n\t\t\t\t\t};`);\n    const args = [\"element\"];\n    blocks.push(\"const element = document.currentScript.parentElement;\");\n    if (page_config.ssr) {\n      const serialized = { form: \"null\", error: \"null\" };\n      if (form_value) {\n        serialized.form = uneval_action_response(\n          form_value,\n          /** @type {string} */\n          event.route.id,\n          options2.hooks.transport\n        );\n      }\n      if (error2) {\n        serialized.error = uneval(error2);\n      }\n      const hydrate = [\n        `node_ids: [${branch.map(({ node }) => node.index).join(\", \")}]`,\n        `data: ${data}`,\n        `form: ${serialized.form}`,\n        `error: ${serialized.error}`\n      ];\n      if (status !== 200) {\n        hydrate.push(`status: ${status}`);\n      }\n      if (manifest._.client.routes) {\n        if (route) {\n          const stringified = generate_route_object(route, event.url, manifest).replaceAll(\n            \"\\n\",\n            \"\\n\t\t\t\t\t\t\t\"\n          );\n          hydrate.push(`params: ${uneval(event.params)}`, `server_route: ${stringified}`);\n        }\n      } else if (options2.embedded) {\n        hydrate.push(`params: ${uneval(event.params)}`, `route: ${s(event.route)}`);\n      }\n      const indent = \"\t\".repeat(load_env_eagerly ? 7 : 6);\n      args.push(`{\n${indent}\t${hydrate.join(`,\n${indent}\t`)}\n${indent}}`);\n    }\n    const { remote_data: remote_cache } = event_state;\n    let serialized_remote_data = \"\";\n    if (remote_cache) {\n      const remote = {};\n      for (const [info, cache] of remote_cache) {\n        if (!info.id) continue;\n        for (const key2 in cache) {\n          remote[create_remote_cache_key(info.id, key2)] = await cache[key2];\n        }\n      }\n      const replacer = (thing) => {\n        for (const key2 in options2.hooks.transport) {\n          const encoded = options2.hooks.transport[key2].encode(thing);\n          if (encoded) {\n            return `app.decode('${key2}', ${uneval(encoded, replacer)})`;\n          }\n        }\n      };\n      serialized_remote_data = `${global}.data = ${uneval(remote, replacer)};\n\n\t\t\t\t\t\t`;\n    }\n    const boot = client.inline ? `${client.inline.script}\n\n\t\t\t\t\t${serialized_remote_data}${global}.app.start(${args.join(\", \")});` : client.app ? `Promise.all([\n\t\t\t\t\t\timport(${s(prefixed(client.start))}),\n\t\t\t\t\t\timport(${s(prefixed(client.app))})\n\t\t\t\t\t]).then(([kit, app]) => {\n\t\t\t\t\t\t${serialized_remote_data}kit.start(app, ${args.join(\", \")});\n\t\t\t\t\t});` : `import(${s(prefixed(client.start))}).then((app) => {\n\t\t\t\t\t\t${serialized_remote_data}app.start(${args.join(\", \")})\n\t\t\t\t\t});`;\n    if (load_env_eagerly) {\n      blocks.push(`import(${s(`${base$1}/${app_dir}/env.js`)}).then(({ env }) => {\n\t\t\t\t\t\t${global}.env = env;\n\n\t\t\t\t\t\t${boot.replace(/\\n/g, \"\\n\t\")}\n\t\t\t\t\t});`);\n    } else {\n      blocks.push(boot);\n    }\n    if (options2.service_worker) {\n      let opts = \"\";\n      if (options2.service_worker_options != null) {\n        const service_worker_options = { ...options2.service_worker_options };\n        opts = `, ${s(service_worker_options)}`;\n      }\n      blocks.push(`if ('serviceWorker' in navigator) {\n\t\t\t\t\t\taddEventListener('load', function () {\n\t\t\t\t\t\t\tnavigator.serviceWorker.register('${prefixed(\"service-worker.js\")}'${opts});\n\t\t\t\t\t\t});\n\t\t\t\t\t}`);\n    }\n    const init_app = `\n\t\t\t\t{\n\t\t\t\t\t${blocks.join(\"\\n\\n\t\t\t\t\t\")}\n\t\t\t\t}\n\t\t\t`;\n    csp.add_script(init_app);\n    body2 += `\n\t\t\t<script${csp.script_needs_nonce ? ` nonce=\"${csp.nonce}\"` : \"\"}>${init_app}<\\/script>\n\t\t`;\n  }\n  const headers2 = new Headers({\n    \"x-sveltekit-page\": \"true\",\n    \"content-type\": \"text/html\"\n  });\n  if (state.prerendering) {\n    const http_equiv = [];\n    const csp_headers = csp.csp_provider.get_meta();\n    if (csp_headers) {\n      http_equiv.push(csp_headers);\n    }\n    if (state.prerendering.cache) {\n      http_equiv.push(`<meta http-equiv=\"cache-control\" content=\"${state.prerendering.cache}\">`);\n    }\n    if (http_equiv.length > 0) {\n      head = http_equiv.join(\"\\n\") + head;\n    }\n  } else {\n    const csp_header = csp.csp_provider.get_header();\n    if (csp_header) {\n      headers2.set(\"content-security-policy\", csp_header);\n    }\n    const report_only_header = csp.report_only_provider.get_header();\n    if (report_only_header) {\n      headers2.set(\"content-security-policy-report-only\", report_only_header);\n    }\n    if (link_headers.size) {\n      headers2.set(\"link\", Array.from(link_headers).join(\", \"));\n    }\n  }\n  head += rendered.head;\n  const html = options2.templates.app({\n    head,\n    body: body2,\n    assets: assets$1,\n    nonce: (\n      /** @type {string} */\n      csp.nonce\n    ),\n    env: public_env\n  });\n  const transformed = await resolve_opts.transformPageChunk({\n    html,\n    done: true\n  }) || \"\";\n  if (!chunks) {\n    headers2.set(\"etag\", `\"${hash(transformed)}\"`);\n  }\n  return !chunks ? text(transformed, {\n    status,\n    headers: headers2\n  }) : new Response(\n    new ReadableStream({\n      async start(controller) {\n        controller.enqueue(text_encoder.encode(transformed + \"\\n\"));\n        for await (const chunk of chunks) {\n          controller.enqueue(text_encoder.encode(chunk));\n        }\n        controller.close();\n      },\n      type: \"bytes\"\n    }),\n    {\n      headers: headers2\n    }\n  );\n}\nclass PageNodes {\n  data;\n  /**\n   * @param {Array<import('types').SSRNode | undefined>} nodes\n   */\n  constructor(nodes) {\n    this.data = nodes;\n  }\n  layouts() {\n    return this.data.slice(0, -1);\n  }\n  page() {\n    return this.data.at(-1);\n  }\n  validate() {\n    for (const layout of this.layouts()) {\n      if (layout) {\n        validate_layout_server_exports(\n          layout.server,\n          /** @type {string} */\n          layout.server_id\n        );\n        validate_layout_exports(\n          layout.universal,\n          /** @type {string} */\n          layout.universal_id\n        );\n      }\n    }\n    const page = this.page();\n    if (page) {\n      validate_page_server_exports(\n        page.server,\n        /** @type {string} */\n        page.server_id\n      );\n      validate_page_exports(\n        page.universal,\n        /** @type {string} */\n        page.universal_id\n      );\n    }\n  }\n  /**\n   * @template {'prerender' | 'ssr' | 'csr' | 'trailingSlash'} Option\n   * @param {Option} option\n   * @returns {Value | undefined}\n   */\n  #get_option(option) {\n    return this.data.reduce(\n      (value, node) => {\n        return node?.universal?.[option] ?? node?.server?.[option] ?? value;\n      },\n      /** @type {Value | undefined} */\n      void 0\n    );\n  }\n  csr() {\n    return this.#get_option(\"csr\") ?? true;\n  }\n  ssr() {\n    return this.#get_option(\"ssr\") ?? true;\n  }\n  prerender() {\n    return this.#get_option(\"prerender\") ?? false;\n  }\n  trailing_slash() {\n    return this.#get_option(\"trailingSlash\") ?? \"never\";\n  }\n  get_config() {\n    let current2 = {};\n    for (const node of this.data) {\n      if (!node?.universal?.config && !node?.server?.config) continue;\n      current2 = {\n        ...current2,\n        // TODO: should we override the server config value with the universal value similar to other page options?\n        ...node?.universal?.config,\n        ...node?.server?.config\n      };\n    }\n    return Object.keys(current2).length ? current2 : void 0;\n  }\n  should_prerender_data() {\n    return this.data.some(\n      // prerender in case of trailingSlash because the client retrieves that value from the server\n      (node) => node?.server?.load || node?.server?.trailingSlash !== void 0\n    );\n  }\n}\nasync function respond_with_error({\n  event,\n  event_state,\n  options: options2,\n  manifest,\n  state,\n  status,\n  error: error2,\n  resolve_opts\n}) {\n  if (event.request.headers.get(\"x-sveltekit-error\")) {\n    return static_error_page(\n      options2,\n      status,\n      /** @type {Error} */\n      error2.message\n    );\n  }\n  const fetched = [];\n  try {\n    const branch = [];\n    const default_layout = await manifest._.nodes[0]();\n    const nodes = new PageNodes([default_layout]);\n    const ssr = nodes.ssr();\n    const csr = nodes.csr();\n    const data_serializer = server_data_serializer(event, event_state, options2);\n    if (ssr) {\n      state.error = true;\n      const server_data_promise = load_server_data({\n        event,\n        event_state,\n        state,\n        node: default_layout,\n        // eslint-disable-next-line @typescript-eslint/require-await\n        parent: async () => ({})\n      });\n      const server_data = await server_data_promise;\n      data_serializer.add_node(0, server_data);\n      const data = await load_data({\n        event,\n        event_state,\n        fetched,\n        node: default_layout,\n        // eslint-disable-next-line @typescript-eslint/require-await\n        parent: async () => ({}),\n        resolve_opts,\n        server_data_promise,\n        state,\n        csr\n      });\n      branch.push(\n        {\n          node: default_layout,\n          server_data,\n          data\n        },\n        {\n          node: await manifest._.nodes[1](),\n          // 1 is always the root error\n          data: null,\n          server_data: null\n        }\n      );\n    }\n    return await render_response({\n      options: options2,\n      manifest,\n      state,\n      page_config: {\n        ssr,\n        csr\n      },\n      status,\n      error: await handle_error_and_jsonify(event, event_state, options2, error2),\n      branch,\n      fetched,\n      event,\n      event_state,\n      resolve_opts,\n      data_serializer\n    });\n  } catch (e) {\n    if (e instanceof Redirect) {\n      return redirect_response(e.status, e.location);\n    }\n    return static_error_page(\n      options2,\n      get_status(e),\n      (await handle_error_and_jsonify(event, event_state, options2, e)).message\n    );\n  }\n}\nasync function handle_remote_call(event, state, options2, manifest, id) {\n  return record_span({\n    name: \"sveltekit.remote.call\",\n    attributes: {},\n    fn: (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      return with_request_store(\n        { event: traced_event, state },\n        () => handle_remote_call_internal(traced_event, state, options2, manifest, id)\n      );\n    }\n  });\n}\nasync function handle_remote_call_internal(event, state, options2, manifest, id) {\n  const [hash2, name, additional_args] = id.split(\"/\");\n  const remotes = manifest._.remotes;\n  if (!remotes[hash2]) error(404);\n  const module = await remotes[hash2]();\n  const fn = module.default[name];\n  if (!fn) error(404);\n  const info = fn.__;\n  const transport = options2.hooks.transport;\n  event.tracing.current.setAttributes({\n    \"sveltekit.remote.call.type\": info.type,\n    \"sveltekit.remote.call.name\": info.name\n  });\n  let form_client_refreshes;\n  try {\n    if (info.type === \"query_batch\") {\n      if (event.request.method !== \"POST\") {\n        throw new SvelteKitError(\n          405,\n          \"Method Not Allowed\",\n          `\\`query.batch\\` functions must be invoked via POST request, not ${event.request.method}`\n        );\n      }\n      const { payloads } = await event.request.json();\n      const args = payloads.map((payload2) => parse_remote_arg(payload2, transport));\n      const get_result = await with_request_store({ event, state }, () => info.run(args));\n      const results = await Promise.all(\n        args.map(async (arg, i) => {\n          try {\n            return { type: \"result\", data: get_result(arg, i) };\n          } catch (error2) {\n            return {\n              type: \"error\",\n              error: await handle_error_and_jsonify(event, state, options2, error2),\n              status: error2 instanceof HttpError || error2 instanceof SvelteKitError ? error2.status : 500\n            };\n          }\n        })\n      );\n      return json(\n        /** @type {RemoteFunctionResponse} */\n        {\n          type: \"result\",\n          result: stringify$1(results, transport)\n        }\n      );\n    }\n    if (info.type === \"form\") {\n      if (event.request.method !== \"POST\") {\n        throw new SvelteKitError(\n          405,\n          \"Method Not Allowed\",\n          `\\`form\\` functions must be invoked via POST request, not ${event.request.method}`\n        );\n      }\n      if (!is_form_content_type(event.request)) {\n        throw new SvelteKitError(\n          415,\n          \"Unsupported Media Type\",\n          `\\`form\\` functions expect form-encoded data \u2014 received ${event.request.headers.get(\n            \"content-type\"\n          )}`\n        );\n      }\n      const form_data = await event.request.formData();\n      form_client_refreshes = /** @type {string[]} */\n      JSON.parse(\n        /** @type {string} */\n        form_data.get(\"sveltekit:remote_refreshes\") ?? \"[]\"\n      );\n      form_data.delete(\"sveltekit:remote_refreshes\");\n      if (additional_args) {\n        form_data.set(\"sveltekit:id\", decodeURIComponent(additional_args));\n      }\n      const fn2 = info.fn;\n      const data2 = await with_request_store({ event, state }, () => fn2(form_data));\n      return json(\n        /** @type {RemoteFunctionResponse} */\n        {\n          type: \"result\",\n          result: stringify$1(data2, transport),\n          refreshes: data2.issues ? {} : await serialize_refreshes(form_client_refreshes)\n        }\n      );\n    }\n    if (info.type === \"command\") {\n      const { payload: payload2, refreshes } = await event.request.json();\n      const arg = parse_remote_arg(payload2, transport);\n      const data2 = await with_request_store({ event, state }, () => fn(arg));\n      return json(\n        /** @type {RemoteFunctionResponse} */\n        {\n          type: \"result\",\n          result: stringify$1(data2, transport),\n          refreshes: await serialize_refreshes(refreshes)\n        }\n      );\n    }\n    const payload = info.type === \"prerender\" ? additional_args : (\n      /** @type {string} */\n      // new URL(...) necessary because we're hiding the URL from the user in the event object\n      new URL(event.request.url).searchParams.get(\"payload\")\n    );\n    const data = await with_request_store(\n      { event, state },\n      () => fn(parse_remote_arg(payload, transport))\n    );\n    return json(\n      /** @type {RemoteFunctionResponse} */\n      {\n        type: \"result\",\n        result: stringify$1(data, transport)\n      }\n    );\n  } catch (error2) {\n    if (error2 instanceof Redirect) {\n      return json(\n        /** @type {RemoteFunctionResponse} */\n        {\n          type: \"redirect\",\n          location: error2.location,\n          refreshes: await serialize_refreshes(form_client_refreshes ?? [])\n        }\n      );\n    }\n    const status = error2 instanceof HttpError || error2 instanceof SvelteKitError ? error2.status : 500;\n    return json(\n      /** @type {RemoteFunctionResponse} */\n      {\n        type: \"error\",\n        error: await handle_error_and_jsonify(event, state, options2, error2),\n        status\n      },\n      {\n        // By setting a non-200 during prerendering we fail the prerender process (unless handleHttpError handles it).\n        // Errors at runtime will be passed to the client and are handled there\n        status: state.prerendering ? status : void 0,\n        headers: {\n          \"cache-control\": \"private, no-store\"\n        }\n      }\n    );\n  }\n  async function serialize_refreshes(client_refreshes) {\n    const refreshes = state.refreshes ?? {};\n    for (const key2 of client_refreshes) {\n      if (refreshes[key2] !== void 0) continue;\n      const [hash3, name2, payload] = key2.split(\"/\");\n      const loader = manifest._.remotes[hash3];\n      const fn2 = (await loader?.())?.default?.[name2];\n      if (!fn2) error(400, \"Bad Request\");\n      refreshes[key2] = with_request_store(\n        { event, state },\n        () => fn2(parse_remote_arg(payload, transport))\n      );\n    }\n    if (Object.keys(refreshes).length === 0) {\n      return void 0;\n    }\n    return stringify$1(\n      Object.fromEntries(\n        await Promise.all(\n          Object.entries(refreshes).map(async ([key2, promise]) => [key2, await promise])\n        )\n      ),\n      transport\n    );\n  }\n}\nasync function handle_remote_form_post(event, state, manifest, id) {\n  return record_span({\n    name: \"sveltekit.remote.form.post\",\n    attributes: {},\n    fn: (current2) => {\n      const traced_event = merge_tracing(event, current2);\n      return with_request_store(\n        { event: traced_event, state },\n        () => handle_remote_form_post_internal(traced_event, state, manifest, id)\n      );\n    }\n  });\n}\nasync function handle_remote_form_post_internal(event, state, manifest, id) {\n  const [hash2, name, action_id] = id.split(\"/\");\n  const remotes = manifest._.remotes;\n  const module = await remotes[hash2]?.();\n  let form = (\n    /** @type {RemoteForm<any, any>} */\n    module?.default[name]\n  );\n  if (!form) {\n    event.setHeaders({\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n      // \"The server must generate an Allow header field in a 405 status code response\"\n      allow: \"GET\"\n    });\n    return {\n      type: \"error\",\n      error: new SvelteKitError(\n        405,\n        \"Method Not Allowed\",\n        `POST method not allowed. No form actions exist for ${\"this page\"}`\n      )\n    };\n  }\n  if (action_id) {\n    form = with_request_store({ event, state }, () => form.for(JSON.parse(action_id)));\n  }\n  try {\n    const form_data = await event.request.formData();\n    const fn = (\n      /** @type {RemoteInfo & { type: 'form' }} */\n      /** @type {any} */\n      form.__.fn\n    );\n    if (action_id && !form_data.has(\"id\")) {\n      form_data.set(\"sveltekit:id\", decodeURIComponent(action_id));\n    }\n    await with_request_store({ event, state }, () => fn(form_data));\n    return {\n      type: \"success\",\n      status: 200\n    };\n  } catch (e) {\n    const err = normalize_error(e);\n    if (err instanceof Redirect) {\n      return {\n        type: \"redirect\",\n        status: err.status,\n        location: err.location\n      };\n    }\n    return {\n      type: \"error\",\n      error: check_incorrect_fail_use(err)\n    };\n  }\n}\nfunction get_remote_id(url) {\n  return url.pathname.startsWith(`${base}/${app_dir}/remote/`) && url.pathname.replace(`${base}/${app_dir}/remote/`, \"\");\n}\nfunction get_remote_action(url) {\n  return url.searchParams.get(\"/remote\");\n}\nconst MAX_DEPTH = 10;\nasync function render_page(event, event_state, page, options2, manifest, state, nodes, resolve_opts) {\n  if (state.depth > MAX_DEPTH) {\n    return text(`Not found: ${event.url.pathname}`, {\n      status: 404\n      // TODO in some cases this should be 500. not sure how to differentiate\n    });\n  }\n  if (is_action_json_request(event)) {\n    const node = await manifest._.nodes[page.leaf]();\n    return handle_action_json_request(event, event_state, options2, node?.server);\n  }\n  try {\n    const leaf_node = (\n      /** @type {import('types').SSRNode} */\n      nodes.page()\n    );\n    let status = 200;\n    let action_result = void 0;\n    if (is_action_request(event)) {\n      const remote_id = get_remote_action(event.url);\n      if (remote_id) {\n        action_result = await handle_remote_form_post(event, event_state, manifest, remote_id);\n      } else {\n        action_result = await handle_action_request(event, event_state, leaf_node.server);\n      }\n      if (action_result?.type === \"redirect\") {\n        return redirect_response(action_result.status, action_result.location);\n      }\n      if (action_result?.type === \"error\") {\n        status = get_status(action_result.error);\n      }\n      if (action_result?.type === \"failure\") {\n        status = action_result.status;\n      }\n    }\n    const should_prerender = nodes.prerender();\n    if (should_prerender) {\n      const mod = leaf_node.server;\n      if (mod?.actions) {\n        throw new Error(\"Cannot prerender pages with actions\");\n      }\n    } else if (state.prerendering) {\n      return new Response(void 0, {\n        status: 204\n      });\n    }\n    state.prerender_default = should_prerender;\n    const should_prerender_data = nodes.should_prerender_data();\n    const data_pathname = add_data_suffix(event.url.pathname);\n    const fetched = [];\n    const ssr = nodes.ssr();\n    const csr = nodes.csr();\n    if (ssr === false && !(state.prerendering && should_prerender_data)) {\n      if (BROWSER && action_result && !event.request.headers.has(\"x-sveltekit-action\")) ;\n      return await render_response({\n        branch: [],\n        fetched,\n        page_config: {\n          ssr: false,\n          csr\n        },\n        status,\n        error: null,\n        event,\n        event_state,\n        options: options2,\n        manifest,\n        state,\n        resolve_opts,\n        data_serializer: server_data_serializer(event, event_state, options2)\n      });\n    }\n    const branch = [];\n    let load_error = null;\n    const data_serializer = server_data_serializer(event, event_state, options2);\n    const data_serializer_json = state.prerendering && should_prerender_data ? server_data_serializer_json(event, event_state, options2) : null;\n    const server_promises = nodes.data.map((node, i) => {\n      if (load_error) {\n        throw load_error;\n      }\n      return Promise.resolve().then(async () => {\n        try {\n          if (node === leaf_node && action_result?.type === \"error\") {\n            throw action_result.error;\n          }\n          const server_data = await load_server_data({\n            event,\n            event_state,\n            state,\n            node,\n            parent: async () => {\n              const data = {};\n              for (let j = 0; j < i; j += 1) {\n                const parent = await server_promises[j];\n                if (parent) Object.assign(data, parent.data);\n              }\n              return data;\n            }\n          });\n          if (node) {\n            data_serializer.add_node(i, server_data);\n          }\n          data_serializer_json?.add_node(i, server_data);\n          return server_data;\n        } catch (e) {\n          load_error = /** @type {Error} */\n          e;\n          throw load_error;\n        }\n      });\n    });\n    const load_promises = nodes.data.map((node, i) => {\n      if (load_error) throw load_error;\n      return Promise.resolve().then(async () => {\n        try {\n          return await load_data({\n            event,\n            event_state,\n            fetched,\n            node,\n            parent: async () => {\n              const data = {};\n              for (let j = 0; j < i; j += 1) {\n                Object.assign(data, await load_promises[j]);\n              }\n              return data;\n            },\n            resolve_opts,\n            server_data_promise: server_promises[i],\n            state,\n            csr\n          });\n        } catch (e) {\n          load_error = /** @type {Error} */\n          e;\n          throw load_error;\n        }\n      });\n    });\n    for (const p of server_promises) p.catch(() => {\n    });\n    for (const p of load_promises) p.catch(() => {\n    });\n    for (let i = 0; i < nodes.data.length; i += 1) {\n      const node = nodes.data[i];\n      if (node) {\n        try {\n          const server_data = await server_promises[i];\n          const data = await load_promises[i];\n          branch.push({ node, server_data, data });\n        } catch (e) {\n          const err = normalize_error(e);\n          if (err instanceof Redirect) {\n            if (state.prerendering && should_prerender_data) {\n              const body2 = JSON.stringify({\n                type: \"redirect\",\n                location: err.location\n              });\n              state.prerendering.dependencies.set(data_pathname, {\n                response: text(body2),\n                body: body2\n              });\n            }\n            return redirect_response(err.status, err.location);\n          }\n          const status2 = get_status(err);\n          const error2 = await handle_error_and_jsonify(event, event_state, options2, err);\n          while (i--) {\n            if (page.errors[i]) {\n              const index = (\n                /** @type {number} */\n                page.errors[i]\n              );\n              const node2 = await manifest._.nodes[index]();\n              let j = i;\n              while (!branch[j]) j -= 1;\n              data_serializer.set_max_nodes(j + 1);\n              const layouts = compact(branch.slice(0, j + 1));\n              const nodes2 = new PageNodes(layouts.map((layout) => layout.node));\n              return await render_response({\n                event,\n                event_state,\n                options: options2,\n                manifest,\n                state,\n                resolve_opts,\n                page_config: {\n                  ssr: nodes2.ssr(),\n                  csr: nodes2.csr()\n                },\n                status: status2,\n                error: error2,\n                branch: layouts.concat({\n                  node: node2,\n                  data: null,\n                  server_data: null\n                }),\n                fetched,\n                data_serializer\n              });\n            }\n          }\n          return static_error_page(options2, status2, error2.message);\n        }\n      } else {\n        branch.push(null);\n      }\n    }\n    if (state.prerendering && data_serializer_json) {\n      let { data, chunks } = data_serializer_json.get_data();\n      if (chunks) {\n        for await (const chunk of chunks) {\n          data += chunk;\n        }\n      }\n      state.prerendering.dependencies.set(data_pathname, {\n        response: text(data),\n        body: data\n      });\n    }\n    return await render_response({\n      event,\n      event_state,\n      options: options2,\n      manifest,\n      state,\n      resolve_opts,\n      page_config: {\n        csr,\n        ssr\n      },\n      status,\n      error: null,\n      branch: ssr === false ? [] : compact(branch),\n      action_result,\n      fetched,\n      data_serializer: ssr === false ? server_data_serializer(event, event_state, options2) : data_serializer\n    });\n  } catch (e) {\n    return await respond_with_error({\n      event,\n      event_state,\n      options: options2,\n      manifest,\n      state,\n      status: 500,\n      error: e,\n      resolve_opts\n    });\n  }\n}\nfunction once(fn) {\n  let done = false;\n  let result;\n  return () => {\n    if (done) return result;\n    done = true;\n    return result = fn();\n  };\n}\nasync function render_data(event, event_state, route, options2, manifest, state, invalidated_data_nodes, trailing_slash) {\n  if (!route.page) {\n    return new Response(void 0, {\n      status: 404\n    });\n  }\n  try {\n    const node_ids = [...route.page.layouts, route.page.leaf];\n    const invalidated = invalidated_data_nodes ?? node_ids.map(() => true);\n    let aborted = false;\n    const url = new URL(event.url);\n    url.pathname = normalize_path(url.pathname, trailing_slash);\n    const new_event = { ...event, url };\n    const functions = node_ids.map((n, i) => {\n      return once(async () => {\n        try {\n          if (aborted) {\n            return (\n              /** @type {import('types').ServerDataSkippedNode} */\n              {\n                type: \"skip\"\n              }\n            );\n          }\n          const node = n == void 0 ? n : await manifest._.nodes[n]();\n          return load_server_data({\n            event: new_event,\n            event_state,\n            state,\n            node,\n            parent: async () => {\n              const data2 = {};\n              for (let j = 0; j < i; j += 1) {\n                const parent = (\n                  /** @type {import('types').ServerDataNode | null} */\n                  await functions[j]()\n                );\n                if (parent) {\n                  Object.assign(data2, parent.data);\n                }\n              }\n              return data2;\n            }\n          });\n        } catch (e) {\n          aborted = true;\n          throw e;\n        }\n      });\n    });\n    const promises = functions.map(async (fn, i) => {\n      if (!invalidated[i]) {\n        return (\n          /** @type {import('types').ServerDataSkippedNode} */\n          {\n            type: \"skip\"\n          }\n        );\n      }\n      return fn();\n    });\n    let length = promises.length;\n    const nodes = await Promise.all(\n      promises.map(\n        (p, i) => p.catch(async (error2) => {\n          if (error2 instanceof Redirect) {\n            throw error2;\n          }\n          length = Math.min(length, i + 1);\n          return (\n            /** @type {import('types').ServerErrorNode} */\n            {\n              type: \"error\",\n              error: await handle_error_and_jsonify(event, event_state, options2, error2),\n              status: error2 instanceof HttpError || error2 instanceof SvelteKitError ? error2.status : void 0\n            }\n          );\n        })\n      )\n    );\n    const data_serializer = server_data_serializer_json(event, event_state, options2);\n    for (let i = 0; i < nodes.length; i++) data_serializer.add_node(i, nodes[i]);\n    const { data, chunks } = data_serializer.get_data();\n    if (!chunks) {\n      return json_response(data);\n    }\n    return new Response(\n      new ReadableStream({\n        async start(controller) {\n          controller.enqueue(text_encoder.encode(data));\n          for await (const chunk of chunks) {\n            controller.enqueue(text_encoder.encode(chunk));\n          }\n          controller.close();\n        },\n        type: \"bytes\"\n      }),\n      {\n        headers: {\n          // we use a proprietary content type to prevent buffering.\n          // the `text` prefix makes it inspectable\n          \"content-type\": \"text/sveltekit-data\",\n          \"cache-control\": \"private, no-store\"\n        }\n      }\n    );\n  } catch (e) {\n    const error2 = normalize_error(e);\n    if (error2 instanceof Redirect) {\n      return redirect_json_response(error2);\n    } else {\n      return json_response(await handle_error_and_jsonify(event, event_state, options2, error2), 500);\n    }\n  }\n}\nfunction json_response(json2, status = 200) {\n  return text(typeof json2 === \"string\" ? json2 : JSON.stringify(json2), {\n    status,\n    headers: {\n      \"content-type\": \"application/json\",\n      \"cache-control\": \"private, no-store\"\n    }\n  });\n}\nfunction redirect_json_response(redirect) {\n  return json_response(\n    /** @type {import('types').ServerRedirectNode} */\n    {\n      type: \"redirect\",\n      location: redirect.location\n    }\n  );\n}\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar parse_1 = parse$1;\nvar serialize_1 = serialize;\nvar __toString = Object.prototype.toString;\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nfunction parse$1(str, options2) {\n  if (typeof str !== \"string\") {\n    throw new TypeError(\"argument str must be a string\");\n  }\n  var obj = {};\n  var opt = options2 || {};\n  var dec = opt.decode || decode;\n  var index = 0;\n  while (index < str.length) {\n    var eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) {\n      break;\n    }\n    var endIdx = str.indexOf(\";\", index);\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n    var key2 = str.slice(index, eqIdx).trim();\n    if (void 0 === obj[key2]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim();\n      if (val.charCodeAt(0) === 34) {\n        val = val.slice(1, -1);\n      }\n      obj[key2] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  }\n  return obj;\n}\nfunction serialize(name, val, options2) {\n  var opt = options2 || {};\n  var enc = opt.encode || encode;\n  if (typeof enc !== \"function\") {\n    throw new TypeError(\"option encode is invalid\");\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError(\"argument name is invalid\");\n  }\n  var value = enc(val);\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError(\"argument val is invalid\");\n  }\n  var str = name + \"=\" + value;\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError(\"option maxAge is invalid\");\n    }\n    str += \"; Max-Age=\" + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError(\"option domain is invalid\");\n    }\n    str += \"; Domain=\" + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError(\"option path is invalid\");\n    }\n    str += \"; Path=\" + opt.path;\n  }\n  if (opt.expires) {\n    var expires = opt.expires;\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError(\"option expires is invalid\");\n    }\n    str += \"; Expires=\" + expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    str += \"; Secure\";\n  }\n  if (opt.partitioned) {\n    str += \"; Partitioned\";\n  }\n  if (opt.priority) {\n    var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(\"option priority is invalid\");\n    }\n  }\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(\"option sameSite is invalid\");\n    }\n  }\n  return str;\n}\nfunction decode(str) {\n  return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n}\nfunction encode(val) {\n  return encodeURIComponent(val);\n}\nfunction isDate(val) {\n  return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\nfunction tryDecode(str, decode2) {\n  try {\n    return decode2(str);\n  } catch (e) {\n    return str;\n  }\n}\nconst INVALID_COOKIE_CHARACTER_REGEX = /[\\x00-\\x1F\\x7F()<>@,;:\"/[\\]?={} \\t]/;\nfunction validate_options(options2) {\n  if (options2?.path === void 0) {\n    throw new Error(\"You must specify a `path` when setting, deleting or serializing cookies\");\n  }\n}\nfunction generate_cookie_key(domain, path, name) {\n  return `${domain || \"\"}${path}?${encodeURIComponent(name)}`;\n}\nfunction get_cookies(request, url) {\n  const header = request.headers.get(\"cookie\") ?? \"\";\n  const initial_cookies = parse_1(header, { decode: (value) => value });\n  let normalized_url;\n  const new_cookies = /* @__PURE__ */ new Map();\n  const defaults = {\n    httpOnly: true,\n    sameSite: \"lax\",\n    secure: url.hostname === \"localhost\" && url.protocol === \"http:\" ? false : true\n  };\n  const cookies = {\n    // The JSDoc param annotations appearing below for get, set and delete\n    // are necessary to expose the `cookie` library types to\n    // typescript users. `@type {import('@sveltejs/kit').Cookies}` above is not\n    // sufficient to do so.\n    /**\n     * @param {string} name\n     * @param {import('cookie').CookieParseOptions} [opts]\n     */\n    get(name, opts) {\n      const best_match = Array.from(new_cookies.values()).filter((c) => {\n        return c.name === name && domain_matches(url.hostname, c.options.domain) && path_matches(url.pathname, c.options.path);\n      }).sort((a, b) => b.options.path.length - a.options.path.length)[0];\n      if (best_match) {\n        return best_match.options.maxAge === 0 ? void 0 : best_match.value;\n      }\n      const req_cookies = parse_1(header, { decode: opts?.decode });\n      const cookie = req_cookies[name];\n      return cookie;\n    },\n    /**\n     * @param {import('cookie').CookieParseOptions} [opts]\n     */\n    getAll(opts) {\n      const cookies2 = parse_1(header, { decode: opts?.decode });\n      const lookup = /* @__PURE__ */ new Map();\n      for (const c of new_cookies.values()) {\n        if (domain_matches(url.hostname, c.options.domain) && path_matches(url.pathname, c.options.path)) {\n          const existing = lookup.get(c.name);\n          if (!existing || c.options.path.length > existing.options.path.length) {\n            lookup.set(c.name, c);\n          }\n        }\n      }\n      for (const c of lookup.values()) {\n        cookies2[c.name] = c.value;\n      }\n      return Object.entries(cookies2).map(([name, value]) => ({ name, value }));\n    },\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @param {import('./page/types.js').Cookie['options']} options\n     */\n    set(name, value, options2) {\n      const illegal_characters = name.match(INVALID_COOKIE_CHARACTER_REGEX);\n      if (illegal_characters) {\n        console.warn(\n          `The cookie name \"${name}\" will be invalid in SvelteKit 3.0 as it contains ${illegal_characters.join(\n            \" and \"\n          )}. See RFC 2616 for more details https://datatracker.ietf.org/doc/html/rfc2616#section-2.2`\n        );\n      }\n      validate_options(options2);\n      set_internal(name, value, { ...defaults, ...options2 });\n    },\n    /**\n     * @param {string} name\n     *  @param {import('./page/types.js').Cookie['options']} options\n     */\n    delete(name, options2) {\n      validate_options(options2);\n      cookies.set(name, \"\", { ...options2, maxAge: 0 });\n    },\n    /**\n     * @param {string} name\n     * @param {string} value\n     *  @param {import('./page/types.js').Cookie['options']} options\n     */\n    serialize(name, value, options2) {\n      validate_options(options2);\n      let path = options2.path;\n      if (!options2.domain || options2.domain === url.hostname) {\n        if (!normalized_url) {\n          throw new Error(\"Cannot serialize cookies until after the route is determined\");\n        }\n        path = resolve(normalized_url, path);\n      }\n      return serialize_1(name, value, { ...defaults, ...options2, path });\n    }\n  };\n  function get_cookie_header(destination, header2) {\n    const combined_cookies = {\n      // cookies sent by the user agent have lowest precedence\n      ...initial_cookies\n    };\n    for (const cookie of new_cookies.values()) {\n      if (!domain_matches(destination.hostname, cookie.options.domain)) continue;\n      if (!path_matches(destination.pathname, cookie.options.path)) continue;\n      const encoder = cookie.options.encode || encodeURIComponent;\n      combined_cookies[cookie.name] = encoder(cookie.value);\n    }\n    if (header2) {\n      const parsed = parse_1(header2, { decode: (value) => value });\n      for (const name in parsed) {\n        combined_cookies[name] = parsed[name];\n      }\n    }\n    return Object.entries(combined_cookies).map(([name, value]) => `${name}=${value}`).join(\"; \");\n  }\n  const internal_queue = [];\n  function set_internal(name, value, options2) {\n    if (!normalized_url) {\n      internal_queue.push(() => set_internal(name, value, options2));\n      return;\n    }\n    let path = options2.path;\n    if (!options2.domain || options2.domain === url.hostname) {\n      path = resolve(normalized_url, path);\n    }\n    const cookie_key = generate_cookie_key(options2.domain, path, name);\n    const cookie = { name, value, options: { ...options2, path } };\n    new_cookies.set(cookie_key, cookie);\n  }\n  function set_trailing_slash(trailing_slash) {\n    normalized_url = normalize_path(url.pathname, trailing_slash);\n    internal_queue.forEach((fn) => fn());\n  }\n  return { cookies, new_cookies, get_cookie_header, set_internal, set_trailing_slash };\n}\nfunction domain_matches(hostname, constraint) {\n  if (!constraint) return true;\n  const normalized = constraint[0] === \".\" ? constraint.slice(1) : constraint;\n  if (hostname === normalized) return true;\n  return hostname.endsWith(\".\" + normalized);\n}\nfunction path_matches(path, constraint) {\n  if (!constraint) return true;\n  const normalized = constraint.endsWith(\"/\") ? constraint.slice(0, -1) : constraint;\n  if (path === normalized) return true;\n  return path.startsWith(normalized + \"/\");\n}\nfunction add_cookies_to_headers(headers2, cookies) {\n  for (const new_cookie of cookies) {\n    const { name, value, options: options2 } = new_cookie;\n    headers2.append(\"set-cookie\", serialize_1(name, value, options2));\n    if (options2.path.endsWith(\".html\")) {\n      const path = add_data_suffix(options2.path);\n      headers2.append(\"set-cookie\", serialize_1(name, value, { ...options2, path }));\n    }\n  }\n}\nvar setCookie = { exports: {} };\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false\n};\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\nfunction parseString(setCookieValue, options2) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n  options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;\n  try {\n    value = options2.decodeValues ? decodeURIComponent(value) : value;\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n  var cookie = {\n    name,\n    value\n  };\n  parts.forEach(function(part) {\n    var sides = part.split(\"=\");\n    var key2 = sides.shift().trimLeft().toLowerCase();\n    var value2 = sides.join(\"=\");\n    if (key2 === \"expires\") {\n      cookie.expires = new Date(value2);\n    } else if (key2 === \"max-age\") {\n      cookie.maxAge = parseInt(value2, 10);\n    } else if (key2 === \"secure\") {\n      cookie.secure = true;\n    } else if (key2 === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key2 === \"samesite\") {\n      cookie.sameSite = value2;\n    } else if (key2 === \"partitioned\") {\n      cookie.partitioned = true;\n    } else {\n      cookie[key2] = value2;\n    }\n  });\n  return cookie;\n}\nfunction parseNameValuePair(nameValuePairStr) {\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\");\n  } else {\n    value = nameValuePairStr;\n  }\n  return { name, value };\n}\nfunction parse(input, options2) {\n  options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;\n  if (!input) {\n    if (!options2.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      input = input.headers[\"set-cookie\"];\n    } else {\n      var sch = input.headers[Object.keys(input.headers).find(function(key2) {\n        return key2.toLowerCase() === \"set-cookie\";\n      })];\n      if (!sch && input.headers.cookie && !options2.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n  if (!options2.map) {\n    return input.filter(isNonEmptyString).map(function(str) {\n      return parseString(str, options2);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n      var cookie = parseString(str, options2);\n      cookies2[cookie.name] = cookie;\n      return cookies2;\n    }, cookies);\n  }\n}\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\nsetCookie.exports = parse;\nsetCookie.exports.parse = parse;\nvar parseString_1 = setCookie.exports.parseString = parseString;\nvar splitCookiesString_1 = setCookie.exports.splitCookiesString = splitCookiesString;\nfunction create_fetch({ event, options: options2, manifest, state, get_cookie_header, set_internal }) {\n  const server_fetch = async (info, init2) => {\n    const original_request = normalize_fetch_input(info, init2, event.url);\n    let mode = (info instanceof Request ? info.mode : init2?.mode) ?? \"cors\";\n    let credentials = (info instanceof Request ? info.credentials : init2?.credentials) ?? \"same-origin\";\n    return options2.hooks.handleFetch({\n      event,\n      request: original_request,\n      fetch: async (info2, init3) => {\n        const request = normalize_fetch_input(info2, init3, event.url);\n        const url = new URL(request.url);\n        if (!request.headers.has(\"origin\")) {\n          request.headers.set(\"origin\", event.url.origin);\n        }\n        if (info2 !== original_request) {\n          mode = (info2 instanceof Request ? info2.mode : init3?.mode) ?? \"cors\";\n          credentials = (info2 instanceof Request ? info2.credentials : init3?.credentials) ?? \"same-origin\";\n        }\n        if ((request.method === \"GET\" || request.method === \"HEAD\") && (mode === \"no-cors\" && url.origin !== event.url.origin || url.origin === event.url.origin)) {\n          request.headers.delete(\"origin\");\n        }\n        if (url.origin !== event.url.origin) {\n          if (`.${url.hostname}`.endsWith(`.${event.url.hostname}`) && credentials !== \"omit\") {\n            const cookie = get_cookie_header(url, request.headers.get(\"cookie\"));\n            if (cookie) request.headers.set(\"cookie\", cookie);\n          }\n          return fetch(request);\n        }\n        const prefix = assets || base;\n        const decoded = decodeURIComponent(url.pathname);\n        const filename = (decoded.startsWith(prefix) ? decoded.slice(prefix.length) : decoded).slice(1);\n        const filename_html = `${filename}/index.html`;\n        const is_asset = manifest.assets.has(filename) || filename in manifest._.server_assets;\n        const is_asset_html = manifest.assets.has(filename_html) || filename_html in manifest._.server_assets;\n        if (is_asset || is_asset_html) {\n          const file = is_asset ? filename : filename_html;\n          if (state.read) {\n            const type = is_asset ? manifest.mimeTypes[filename.slice(filename.lastIndexOf(\".\"))] : \"text/html\";\n            return new Response(state.read(file), {\n              headers: type ? { \"content-type\": type } : {}\n            });\n          } else if (read_implementation && file in manifest._.server_assets) {\n            const length = manifest._.server_assets[file];\n            const type = manifest.mimeTypes[file.slice(file.lastIndexOf(\".\"))];\n            return new Response(read_implementation(file), {\n              headers: {\n                \"Content-Length\": \"\" + length,\n                \"Content-Type\": type\n              }\n            });\n          }\n          return await fetch(request);\n        }\n        if (has_prerendered_path(manifest, base + decoded)) {\n          return await fetch(request);\n        }\n        if (credentials !== \"omit\") {\n          const cookie = get_cookie_header(url, request.headers.get(\"cookie\"));\n          if (cookie) {\n            request.headers.set(\"cookie\", cookie);\n          }\n          const authorization = event.request.headers.get(\"authorization\");\n          if (authorization && !request.headers.has(\"authorization\")) {\n            request.headers.set(\"authorization\", authorization);\n          }\n        }\n        if (!request.headers.has(\"accept\")) {\n          request.headers.set(\"accept\", \"*/*\");\n        }\n        if (!request.headers.has(\"accept-language\")) {\n          request.headers.set(\n            \"accept-language\",\n            /** @type {string} */\n            event.request.headers.get(\"accept-language\")\n          );\n        }\n        const response = await internal_fetch(request, options2, manifest, state);\n        const set_cookie = response.headers.get(\"set-cookie\");\n        if (set_cookie) {\n          for (const str of splitCookiesString_1(set_cookie)) {\n            const { name, value, ...options3 } = parseString_1(str, {\n              decodeValues: false\n            });\n            const path = options3.path ?? (url.pathname.split(\"/\").slice(0, -1).join(\"/\") || \"/\");\n            set_internal(name, value, {\n              path,\n              encode: (value2) => value2,\n              .../** @type {import('cookie').CookieSerializeOptions} */\n              options3\n            });\n          }\n        }\n        return response;\n      }\n    });\n  };\n  return (input, init2) => {\n    const response = server_fetch(input, init2);\n    response.catch(() => {\n    });\n    return response;\n  };\n}\nfunction normalize_fetch_input(info, init2, url) {\n  if (info instanceof Request) {\n    return info;\n  }\n  return new Request(typeof info === \"string\" ? new URL(info, url) : info, init2);\n}\nasync function internal_fetch(request, options2, manifest, state) {\n  if (request.signal) {\n    if (request.signal.aborted) {\n      throw new DOMException(\"The operation was aborted.\", \"AbortError\");\n    }\n    let remove_abort_listener = () => {\n    };\n    const abort_promise = new Promise((_, reject) => {\n      const on_abort = () => {\n        reject(new DOMException(\"The operation was aborted.\", \"AbortError\"));\n      };\n      request.signal.addEventListener(\"abort\", on_abort, { once: true });\n      remove_abort_listener = () => request.signal.removeEventListener(\"abort\", on_abort);\n    });\n    const result = await Promise.race([\n      respond(request, options2, manifest, {\n        ...state,\n        depth: state.depth + 1\n      }),\n      abort_promise\n    ]);\n    remove_abort_listener();\n    return result;\n  } else {\n    return await respond(request, options2, manifest, {\n      ...state,\n      depth: state.depth + 1\n    });\n  }\n}\nlet body;\nlet etag;\nlet headers;\nfunction get_public_env(request) {\n  body ??= `export const env=${JSON.stringify(public_env)}`;\n  etag ??= `W/${Date.now()}`;\n  headers ??= new Headers({\n    \"content-type\": \"application/javascript; charset=utf-8\",\n    etag\n  });\n  if (request.headers.get(\"if-none-match\") === etag) {\n    return new Response(void 0, { status: 304, headers });\n  }\n  return new Response(body, { headers });\n}\nconst default_transform = ({ html }) => html;\nconst default_filter = () => false;\nconst default_preload = ({ type }) => type === \"js\" || type === \"css\";\nconst page_methods = /* @__PURE__ */ new Set([\"GET\", \"HEAD\", \"POST\"]);\nconst allowed_page_methods = /* @__PURE__ */ new Set([\"GET\", \"HEAD\", \"OPTIONS\"]);\nlet warned_on_devtools_json_request = false;\nconst respond = propagate_context(internal_respond);\nasync function internal_respond(request, options2, manifest, state) {\n  const url = new URL(request.url);\n  const is_route_resolution_request = has_resolution_suffix(url.pathname);\n  const is_data_request = has_data_suffix(url.pathname);\n  const remote_id = get_remote_id(url);\n  {\n    const request_origin = request.headers.get(\"origin\");\n    if (remote_id) {\n      if (request.method !== \"GET\" && request_origin !== url.origin) {\n        const message = \"Cross-site remote requests are forbidden\";\n        return json({ message }, { status: 403 });\n      }\n    } else if (options2.csrf_check_origin) {\n      const forbidden = is_form_content_type(request) && (request.method === \"POST\" || request.method === \"PUT\" || request.method === \"PATCH\" || request.method === \"DELETE\") && request_origin !== url.origin && (!request_origin || !options2.csrf_trusted_origins.includes(request_origin));\n      if (forbidden) {\n        const message = `Cross-site ${request.method} form submissions are forbidden`;\n        const opts = { status: 403 };\n        if (request.headers.get(\"accept\") === \"application/json\") {\n          return json({ message }, opts);\n        }\n        return text(message, opts);\n      }\n    }\n  }\n  if (options2.hash_routing && url.pathname !== base + \"/\" && url.pathname !== \"/[fallback]\") {\n    return text(\"Not found\", { status: 404 });\n  }\n  let invalidated_data_nodes;\n  if (is_route_resolution_request) {\n    url.pathname = strip_resolution_suffix(url.pathname);\n  } else if (is_data_request) {\n    url.pathname = strip_data_suffix(url.pathname) + (url.searchParams.get(TRAILING_SLASH_PARAM) === \"1\" ? \"/\" : \"\") || \"/\";\n    url.searchParams.delete(TRAILING_SLASH_PARAM);\n    invalidated_data_nodes = url.searchParams.get(INVALIDATED_PARAM)?.split(\"\").map((node) => node === \"1\");\n    url.searchParams.delete(INVALIDATED_PARAM);\n  } else if (remote_id) {\n    url.pathname = request.headers.get(\"x-sveltekit-pathname\") ?? base;\n    url.search = request.headers.get(\"x-sveltekit-search\") ?? \"\";\n  }\n  const headers2 = {};\n  const { cookies, new_cookies, get_cookie_header, set_internal, set_trailing_slash } = get_cookies(\n    request,\n    url\n  );\n  const event_state = {\n    prerendering: state.prerendering,\n    transport: options2.hooks.transport,\n    handleValidationError: options2.hooks.handleValidationError,\n    tracing: {\n      record_span\n    },\n    is_in_remote_function: false\n  };\n  const event = {\n    cookies,\n    // @ts-expect-error `fetch` needs to be created after the `event` itself\n    fetch: null,\n    getClientAddress: state.getClientAddress || (() => {\n      throw new Error(\n        `${\"@sveltejs/adapter-cloudflare\"} does not specify getClientAddress. Please raise an issue`\n      );\n    }),\n    locals: {},\n    params: {},\n    platform: state.platform,\n    request,\n    route: { id: null },\n    setHeaders: (new_headers) => {\n      for (const key2 in new_headers) {\n        const lower = key2.toLowerCase();\n        const value = new_headers[key2];\n        if (lower === \"set-cookie\") {\n          throw new Error(\n            \"Use `event.cookies.set(name, value, options)` instead of `event.setHeaders` to set cookies\"\n          );\n        } else if (lower in headers2) {\n          throw new Error(`\"${key2}\" header is already set`);\n        } else {\n          headers2[lower] = value;\n          if (state.prerendering && lower === \"cache-control\") {\n            state.prerendering.cache = /** @type {string} */\n            value;\n          }\n        }\n      }\n    },\n    url,\n    isDataRequest: is_data_request,\n    isSubRequest: state.depth > 0,\n    isRemoteRequest: !!remote_id\n  };\n  event.fetch = create_fetch({\n    event,\n    options: options2,\n    manifest,\n    state,\n    get_cookie_header,\n    set_internal\n  });\n  if (state.emulator?.platform) {\n    event.platform = await state.emulator.platform({\n      config: {},\n      prerender: !!state.prerendering?.fallback\n    });\n  }\n  let resolved_path = url.pathname;\n  if (!remote_id) {\n    const prerendering_reroute_state = state.prerendering?.inside_reroute;\n    try {\n      if (state.prerendering) state.prerendering.inside_reroute = true;\n      resolved_path = await options2.hooks.reroute({ url: new URL(url), fetch: event.fetch }) ?? url.pathname;\n    } catch {\n      return text(\"Internal Server Error\", {\n        status: 500\n      });\n    } finally {\n      if (state.prerendering) state.prerendering.inside_reroute = prerendering_reroute_state;\n    }\n  }\n  try {\n    resolved_path = decode_pathname(resolved_path);\n  } catch {\n    return text(\"Malformed URI\", { status: 400 });\n  }\n  if (resolved_path !== url.pathname && !state.prerendering?.fallback && has_prerendered_path(manifest, resolved_path)) {\n    const url2 = new URL(request.url);\n    url2.pathname = is_data_request ? add_data_suffix(resolved_path) : is_route_resolution_request ? add_resolution_suffix(resolved_path) : resolved_path;\n    const response = await fetch(url2, request);\n    const headers22 = new Headers(response.headers);\n    if (headers22.has(\"content-encoding\")) {\n      headers22.delete(\"content-encoding\");\n      headers22.delete(\"content-length\");\n    }\n    return new Response(response.body, {\n      headers: headers22,\n      status: response.status,\n      statusText: response.statusText\n    });\n  }\n  let route = null;\n  if (base && !state.prerendering?.fallback) {\n    if (!resolved_path.startsWith(base)) {\n      return text(\"Not found\", { status: 404 });\n    }\n    resolved_path = resolved_path.slice(base.length) || \"/\";\n  }\n  if (is_route_resolution_request) {\n    return resolve_route(resolved_path, new URL(request.url), manifest);\n  }\n  if (resolved_path === `/${app_dir}/env.js`) {\n    return get_public_env(request);\n  }\n  if (!remote_id && resolved_path.startsWith(`/${app_dir}`)) {\n    const headers22 = new Headers();\n    headers22.set(\"cache-control\", \"public, max-age=0, must-revalidate\");\n    return text(\"Not found\", { status: 404, headers: headers22 });\n  }\n  if (!state.prerendering?.fallback) {\n    const matchers = await manifest._.matchers();\n    for (const candidate of manifest._.routes) {\n      const match = candidate.pattern.exec(resolved_path);\n      if (!match) continue;\n      const matched = exec(match, candidate.params, matchers);\n      if (matched) {\n        route = candidate;\n        event.route = { id: route.id };\n        event.params = decode_params(matched);\n        break;\n      }\n    }\n  }\n  let resolve_opts = {\n    transformPageChunk: default_transform,\n    filterSerializedResponseHeaders: default_filter,\n    preload: default_preload\n  };\n  let trailing_slash = \"never\";\n  try {\n    const page_nodes = route?.page ? new PageNodes(await load_page_nodes(route.page, manifest)) : void 0;\n    if (route && !remote_id) {\n      if (url.pathname === base || url.pathname === base + \"/\") {\n        trailing_slash = \"always\";\n      } else if (page_nodes) {\n        if (BROWSER) ;\n        trailing_slash = page_nodes.trailing_slash();\n      } else if (route.endpoint) {\n        const node = await route.endpoint();\n        trailing_slash = node.trailingSlash ?? \"never\";\n        if (BROWSER) ;\n      }\n      if (!is_data_request) {\n        const normalized = normalize_path(url.pathname, trailing_slash);\n        if (normalized !== url.pathname && !state.prerendering?.fallback) {\n          return new Response(void 0, {\n            status: 308,\n            headers: {\n              \"x-sveltekit-normalize\": \"1\",\n              location: (\n                // ensure paths starting with '//' are not treated as protocol-relative\n                (normalized.startsWith(\"//\") ? url.origin + normalized : normalized) + (url.search === \"?\" ? \"\" : url.search)\n              )\n            }\n          });\n        }\n      }\n      if (state.before_handle || state.emulator?.platform) {\n        let config = {};\n        let prerender = false;\n        if (route.endpoint) {\n          const node = await route.endpoint();\n          config = node.config ?? config;\n          prerender = node.prerender ?? prerender;\n        } else if (page_nodes) {\n          config = page_nodes.get_config() ?? config;\n          prerender = page_nodes.prerender();\n        }\n        if (state.before_handle) {\n          state.before_handle(event, config, prerender);\n        }\n        if (state.emulator?.platform) {\n          event.platform = await state.emulator.platform({ config, prerender });\n        }\n      }\n    }\n    set_trailing_slash(trailing_slash);\n    if (state.prerendering && !state.prerendering.fallback && !state.prerendering.inside_reroute) {\n      disable_search(url);\n    }\n    const response = await record_span({\n      name: \"sveltekit.handle.root\",\n      attributes: {\n        \"http.route\": event.route.id || \"unknown\",\n        \"http.method\": event.request.method,\n        \"http.url\": event.url.href,\n        \"sveltekit.is_data_request\": is_data_request,\n        \"sveltekit.is_sub_request\": event.isSubRequest\n      },\n      fn: async (root_span) => {\n        const traced_event = {\n          ...event,\n          tracing: {\n            enabled: false,\n            root: root_span,\n            current: root_span\n          }\n        };\n        return await with_request_store(\n          { event: traced_event, state: event_state },\n          () => options2.hooks.handle({\n            event: traced_event,\n            resolve: (event2, opts) => {\n              return record_span({\n                name: \"sveltekit.resolve\",\n                attributes: {\n                  \"http.route\": event2.route.id || \"unknown\"\n                },\n                fn: (resolve_span) => {\n                  return with_request_store(\n                    null,\n                    () => resolve2(merge_tracing(event2, resolve_span), page_nodes, opts).then(\n                      (response2) => {\n                        for (const key2 in headers2) {\n                          const value = headers2[key2];\n                          response2.headers.set(\n                            key2,\n                            /** @type {string} */\n                            value\n                          );\n                        }\n                        add_cookies_to_headers(response2.headers, new_cookies.values());\n                        if (state.prerendering && event2.route.id !== null) {\n                          response2.headers.set(\"x-sveltekit-routeid\", encodeURI(event2.route.id));\n                        }\n                        resolve_span.setAttributes({\n                          \"http.response.status_code\": response2.status,\n                          \"http.response.body.size\": response2.headers.get(\"content-length\") || \"unknown\"\n                        });\n                        return response2;\n                      }\n                    )\n                  );\n                }\n              });\n            }\n          })\n        );\n      }\n    });\n    if (response.status === 200 && response.headers.has(\"etag\")) {\n      let if_none_match_value = request.headers.get(\"if-none-match\");\n      if (if_none_match_value?.startsWith('W/\"')) {\n        if_none_match_value = if_none_match_value.substring(2);\n      }\n      const etag2 = (\n        /** @type {string} */\n        response.headers.get(\"etag\")\n      );\n      if (if_none_match_value === etag2) {\n        const headers22 = new Headers({ etag: etag2 });\n        for (const key2 of [\n          \"cache-control\",\n          \"content-location\",\n          \"date\",\n          \"expires\",\n          \"vary\",\n          \"set-cookie\"\n        ]) {\n          const value = response.headers.get(key2);\n          if (value) headers22.set(key2, value);\n        }\n        return new Response(void 0, {\n          status: 304,\n          headers: headers22\n        });\n      }\n    }\n    if (is_data_request && response.status >= 300 && response.status <= 308) {\n      const location = response.headers.get(\"location\");\n      if (location) {\n        return redirect_json_response(new Redirect(\n          /** @type {any} */\n          response.status,\n          location\n        ));\n      }\n    }\n    return response;\n  } catch (e) {\n    if (e instanceof Redirect) {\n      const response = is_data_request || remote_id ? redirect_json_response(e) : route?.page && is_action_json_request(event) ? action_json_redirect(e) : redirect_response(e.status, e.location);\n      add_cookies_to_headers(response.headers, new_cookies.values());\n      return response;\n    }\n    return await handle_fatal_error(event, event_state, options2, e);\n  }\n  async function resolve2(event2, page_nodes, opts) {\n    try {\n      if (opts) {\n        resolve_opts = {\n          transformPageChunk: opts.transformPageChunk || default_transform,\n          filterSerializedResponseHeaders: opts.filterSerializedResponseHeaders || default_filter,\n          preload: opts.preload || default_preload\n        };\n      }\n      if (options2.hash_routing || state.prerendering?.fallback) {\n        return await render_response({\n          event: event2,\n          event_state,\n          options: options2,\n          manifest,\n          state,\n          page_config: { ssr: false, csr: true },\n          status: 200,\n          error: null,\n          branch: [],\n          fetched: [],\n          resolve_opts,\n          data_serializer: server_data_serializer(event2, event_state, options2)\n        });\n      }\n      if (remote_id) {\n        return await handle_remote_call(event2, event_state, options2, manifest, remote_id);\n      }\n      if (route) {\n        const method = (\n          /** @type {import('types').HttpMethod} */\n          event2.request.method\n        );\n        let response2;\n        if (is_data_request) {\n          response2 = await render_data(\n            event2,\n            event_state,\n            route,\n            options2,\n            manifest,\n            state,\n            invalidated_data_nodes,\n            trailing_slash\n          );\n        } else if (route.endpoint && (!route.page || is_endpoint_request(event2))) {\n          response2 = await render_endpoint(event2, event_state, await route.endpoint(), state);\n        } else if (route.page) {\n          if (!page_nodes) {\n            throw new Error(\"page_nodes not found. This should never happen\");\n          } else if (page_methods.has(method)) {\n            response2 = await render_page(\n              event2,\n              event_state,\n              route.page,\n              options2,\n              manifest,\n              state,\n              page_nodes,\n              resolve_opts\n            );\n          } else {\n            const allowed_methods2 = new Set(allowed_page_methods);\n            const node = await manifest._.nodes[route.page.leaf]();\n            if (node?.server?.actions) {\n              allowed_methods2.add(\"POST\");\n            }\n            if (method === \"OPTIONS\") {\n              response2 = new Response(null, {\n                status: 204,\n                headers: {\n                  allow: Array.from(allowed_methods2.values()).join(\", \")\n                }\n              });\n            } else {\n              const mod = [...allowed_methods2].reduce(\n                (acc, curr) => {\n                  acc[curr] = true;\n                  return acc;\n                },\n                /** @type {Record<string, any>} */\n                {}\n              );\n              response2 = method_not_allowed(mod, method);\n            }\n          }\n        } else {\n          throw new Error(\"Route is neither page nor endpoint. This should never happen\");\n        }\n        if (request.method === \"GET\" && route.page && route.endpoint) {\n          const vary = response2.headers.get(\"vary\")?.split(\",\")?.map((v) => v.trim().toLowerCase());\n          if (!(vary?.includes(\"accept\") || vary?.includes(\"*\"))) {\n            response2 = new Response(response2.body, {\n              status: response2.status,\n              statusText: response2.statusText,\n              headers: new Headers(response2.headers)\n            });\n            response2.headers.append(\"Vary\", \"Accept\");\n          }\n        }\n        return response2;\n      }\n      if (state.error && event2.isSubRequest) {\n        const headers22 = new Headers(request.headers);\n        headers22.set(\"x-sveltekit-error\", \"true\");\n        return await fetch(request, { headers: headers22 });\n      }\n      if (state.error) {\n        return text(\"Internal Server Error\", {\n          status: 500\n        });\n      }\n      if (state.depth === 0) {\n        if (BROWSER && event2.url.pathname === \"/.well-known/appspecific/com.chrome.devtools.json\") ;\n        return await respond_with_error({\n          event: event2,\n          event_state,\n          options: options2,\n          manifest,\n          state,\n          status: 404,\n          error: new SvelteKitError(404, \"Not Found\", `Not found: ${event2.url.pathname}`),\n          resolve_opts\n        });\n      }\n      if (state.prerendering) {\n        return text(\"not found\", { status: 404 });\n      }\n      const response = await fetch(request);\n      return new Response(response.body, response);\n    } catch (e) {\n      return await handle_fatal_error(event2, event_state, options2, e);\n    } finally {\n      event2.cookies.set = () => {\n        throw new Error(\"Cannot use `cookies.set(...)` after the response has been generated\");\n      };\n      event2.setHeaders = () => {\n        throw new Error(\"Cannot use `setHeaders(...)` after the response has been generated\");\n      };\n    }\n  }\n}\nfunction load_page_nodes(page, manifest) {\n  return Promise.all([\n    // we use == here rather than === because [undefined] serializes as \"[null]\"\n    ...page.layouts.map((n) => n == void 0 ? n : manifest._.nodes[n]()),\n    manifest._.nodes[page.leaf]()\n  ]);\n}\nfunction propagate_context(fn) {\n  return async (req, ...rest) => {\n    {\n      return fn(req, ...rest);\n    }\n  };\n}\nfunction filter_env(env, allowed, disallowed) {\n  return Object.fromEntries(\n    Object.entries(env).filter(\n      ([k]) => k.startsWith(allowed) && (disallowed === \"\" || !k.startsWith(disallowed))\n    )\n  );\n}\nfunction set_app(value) {\n}\nlet init_promise;\nlet current = null;\nclass Server {\n  /** @type {import('types').SSROptions} */\n  #options;\n  /** @type {import('@sveltejs/kit').SSRManifest} */\n  #manifest;\n  /** @param {import('@sveltejs/kit').SSRManifest} manifest */\n  constructor(manifest) {\n    this.#options = options;\n    this.#manifest = manifest;\n    if (IN_WEBCONTAINER) {\n      const respond2 = this.respond.bind(this);\n      this.respond = async (...args) => {\n        const { promise, resolve: resolve2 } = (\n          /** @type {PromiseWithResolvers<void>} */\n          with_resolvers()\n        );\n        const previous = current;\n        current = promise;\n        await previous;\n        return respond2(...args).finally(resolve2);\n      };\n    }\n  }\n  /**\n   * @param {import('@sveltejs/kit').ServerInitOptions} opts\n   */\n  async init({ env, read }) {\n    const { env_public_prefix, env_private_prefix } = this.#options;\n    set_private_env(filter_env(env, env_private_prefix, env_public_prefix));\n    set_public_env(filter_env(env, env_public_prefix, env_private_prefix));\n    if (read) {\n      const wrapped_read = (file) => {\n        const result = read(file);\n        if (result instanceof ReadableStream) {\n          return result;\n        } else {\n          return new ReadableStream({\n            async start(controller) {\n              try {\n                const stream = await Promise.resolve(result);\n                if (!stream) {\n                  controller.close();\n                  return;\n                }\n                const reader = stream.getReader();\n                while (true) {\n                  const { done, value } = await reader.read();\n                  if (done) break;\n                  controller.enqueue(value);\n                }\n                controller.close();\n              } catch (error2) {\n                controller.error(error2);\n              }\n            }\n          });\n        }\n      };\n      set_read_implementation(wrapped_read);\n    }\n    await (init_promise ??= (async () => {\n      try {\n        const module = await get_hooks();\n        this.#options.hooks = {\n          handle: module.handle || (({ event, resolve: resolve2 }) => resolve2(event)),\n          handleError: module.handleError || (({ status, error: error2, event }) => {\n            const error_message = format_server_error(\n              status,\n              /** @type {Error} */\n              error2,\n              event\n            );\n            console.error(error_message);\n          }),\n          handleFetch: module.handleFetch || (({ request, fetch: fetch2 }) => fetch2(request)),\n          handleValidationError: module.handleValidationError || (({ issues }) => {\n            console.error(\"Remote function schema validation failed:\", issues);\n            return { message: \"Bad Request\" };\n          }),\n          reroute: module.reroute || (() => {\n          }),\n          transport: module.transport || {}\n        };\n        set_app({\n          decoders: module.transport ? Object.fromEntries(Object.entries(module.transport).map(([k, v]) => [k, v.decode])) : {}\n        });\n        if (module.init) {\n          await module.init();\n        }\n      } catch (e) {\n        {\n          throw e;\n        }\n      }\n    })());\n  }\n  /**\n   * @param {Request} request\n   * @param {import('types').RequestOptions} options\n   */\n  async respond(request, options2) {\n    return respond(request, this.#options, this.#manifest, {\n      ...options2,\n      error: false,\n      depth: 0\n    });\n  }\n}\nexport {\n  Server\n};\n", "import { b as base64_encode, t as text_decoder, c as base64_decode } from \"./utils.js\";\nconst escaped = {\n  \"<\": \"\\\\u003C\",\n  \"\\\\\": \"\\\\\\\\\",\n  \"\\b\": \"\\\\b\",\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nclass DevalueError extends Error {\n  /**\n   * @param {string} message\n   * @param {string[]} keys\n   */\n  constructor(message, keys) {\n    super(message);\n    this.name = \"DevalueError\";\n    this.path = keys.join(\"\");\n  }\n}\nfunction is_primitive(thing) {\n  return Object(thing) !== thing;\n}\nconst object_proto_names = /* @__PURE__ */ Object.getOwnPropertyNames(\n  Object.prototype\n).sort().join(\"\\0\");\nfunction is_plain_object(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getPrototypeOf(proto) === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === object_proto_names;\n}\nfunction get_type(thing) {\n  return Object.prototype.toString.call(thing).slice(8, -1);\n}\nfunction get_escaped_char(char) {\n  switch (char) {\n    case '\"':\n      return '\\\\\"';\n    case \"<\":\n      return \"\\\\u003C\";\n    case \"\\\\\":\n      return \"\\\\\\\\\";\n    case \"\\n\":\n      return \"\\\\n\";\n    case \"\\r\":\n      return \"\\\\r\";\n    case \"\t\":\n      return \"\\\\t\";\n    case \"\\b\":\n      return \"\\\\b\";\n    case \"\\f\":\n      return \"\\\\f\";\n    case \"\\u2028\":\n      return \"\\\\u2028\";\n    case \"\\u2029\":\n      return \"\\\\u2029\";\n    default:\n      return char < \" \" ? `\\\\u${char.charCodeAt(0).toString(16).padStart(4, \"0\")}` : \"\";\n  }\n}\nfunction stringify_string(str) {\n  let result = \"\";\n  let last_pos = 0;\n  const len = str.length;\n  for (let i = 0; i < len; i += 1) {\n    const char = str[i];\n    const replacement = get_escaped_char(char);\n    if (replacement) {\n      result += str.slice(last_pos, i) + replacement;\n      last_pos = i + 1;\n    }\n  }\n  return `\"${last_pos === 0 ? str : result + str.slice(last_pos)}\"`;\n}\nfunction enumerable_symbols(object) {\n  return Object.getOwnPropertySymbols(object).filter(\n    (symbol) => Object.getOwnPropertyDescriptor(object, symbol).enumerable\n  );\n}\nconst is_identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\nfunction stringify_key(key) {\n  return is_identifier.test(key) ? \".\" + key : \"[\" + JSON.stringify(key) + \"]\";\n}\nfunction encode64(arraybuffer) {\n  const dv = new DataView(arraybuffer);\n  let binaryString = \"\";\n  for (let i = 0; i < arraybuffer.byteLength; i++) {\n    binaryString += String.fromCharCode(dv.getUint8(i));\n  }\n  return binaryToAscii(binaryString);\n}\nfunction decode64(string) {\n  const binaryString = asciiToBinary(string);\n  const arraybuffer = new ArrayBuffer(binaryString.length);\n  const dv = new DataView(arraybuffer);\n  for (let i = 0; i < arraybuffer.byteLength; i++) {\n    dv.setUint8(i, binaryString.charCodeAt(i));\n  }\n  return arraybuffer;\n}\nconst KEY_STRING = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfunction asciiToBinary(data) {\n  if (data.length % 4 === 0) {\n    data = data.replace(/==?$/, \"\");\n  }\n  let output = \"\";\n  let buffer = 0;\n  let accumulatedBits = 0;\n  for (let i = 0; i < data.length; i++) {\n    buffer <<= 6;\n    buffer |= KEY_STRING.indexOf(data[i]);\n    accumulatedBits += 6;\n    if (accumulatedBits === 24) {\n      output += String.fromCharCode((buffer & 16711680) >> 16);\n      output += String.fromCharCode((buffer & 65280) >> 8);\n      output += String.fromCharCode(buffer & 255);\n      buffer = accumulatedBits = 0;\n    }\n  }\n  if (accumulatedBits === 12) {\n    buffer >>= 4;\n    output += String.fromCharCode(buffer);\n  } else if (accumulatedBits === 18) {\n    buffer >>= 2;\n    output += String.fromCharCode((buffer & 65280) >> 8);\n    output += String.fromCharCode(buffer & 255);\n  }\n  return output;\n}\nfunction binaryToAscii(str) {\n  let out = \"\";\n  for (let i = 0; i < str.length; i += 3) {\n    const groupsOfSix = [void 0, void 0, void 0, void 0];\n    groupsOfSix[0] = str.charCodeAt(i) >> 2;\n    groupsOfSix[1] = (str.charCodeAt(i) & 3) << 4;\n    if (str.length > i + 1) {\n      groupsOfSix[1] |= str.charCodeAt(i + 1) >> 4;\n      groupsOfSix[2] = (str.charCodeAt(i + 1) & 15) << 2;\n    }\n    if (str.length > i + 2) {\n      groupsOfSix[2] |= str.charCodeAt(i + 2) >> 6;\n      groupsOfSix[3] = str.charCodeAt(i + 2) & 63;\n    }\n    for (let j = 0; j < groupsOfSix.length; j++) {\n      if (typeof groupsOfSix[j] === \"undefined\") {\n        out += \"=\";\n      } else {\n        out += KEY_STRING[groupsOfSix[j]];\n      }\n    }\n  }\n  return out;\n}\nconst UNDEFINED = -1;\nconst HOLE = -2;\nconst NAN = -3;\nconst POSITIVE_INFINITY = -4;\nconst NEGATIVE_INFINITY = -5;\nconst NEGATIVE_ZERO = -6;\nfunction parse(serialized, revivers) {\n  return unflatten(JSON.parse(serialized), revivers);\n}\nfunction unflatten(parsed, revivers) {\n  if (typeof parsed === \"number\") return hydrate(parsed, true);\n  if (!Array.isArray(parsed) || parsed.length === 0) {\n    throw new Error(\"Invalid input\");\n  }\n  const values = (\n    /** @type {any[]} */\n    parsed\n  );\n  const hydrated = Array(values.length);\n  function hydrate(index, standalone = false) {\n    if (index === UNDEFINED) return void 0;\n    if (index === NAN) return NaN;\n    if (index === POSITIVE_INFINITY) return Infinity;\n    if (index === NEGATIVE_INFINITY) return -Infinity;\n    if (index === NEGATIVE_ZERO) return -0;\n    if (standalone || typeof index !== \"number\") {\n      throw new Error(`Invalid input`);\n    }\n    if (index in hydrated) return hydrated[index];\n    const value = values[index];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index] = value;\n    } else if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const type = value[0];\n        const reviver = revivers?.[type];\n        if (reviver) {\n          return hydrated[index] = reviver(hydrate(value[1]));\n        }\n        switch (type) {\n          case \"Date\":\n            hydrated[index] = new Date(value[1]);\n            break;\n          case \"Set\":\n            const set = /* @__PURE__ */ new Set();\n            hydrated[index] = set;\n            for (let i = 1; i < value.length; i += 1) {\n              set.add(hydrate(value[i]));\n            }\n            break;\n          case \"Map\":\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index] = map;\n            for (let i = 1; i < value.length; i += 2) {\n              map.set(hydrate(value[i]), hydrate(value[i + 1]));\n            }\n            break;\n          case \"RegExp\":\n            hydrated[index] = new RegExp(value[1], value[2]);\n            break;\n          case \"Object\":\n            hydrated[index] = Object(value[1]);\n            break;\n          case \"BigInt\":\n            hydrated[index] = BigInt(value[1]);\n            break;\n          case \"null\":\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index] = obj;\n            for (let i = 1; i < value.length; i += 2) {\n              obj[value[i]] = hydrate(value[i + 1]);\n            }\n            break;\n          case \"Int8Array\":\n          case \"Uint8Array\":\n          case \"Uint8ClampedArray\":\n          case \"Int16Array\":\n          case \"Uint16Array\":\n          case \"Int32Array\":\n          case \"Uint32Array\":\n          case \"Float32Array\":\n          case \"Float64Array\":\n          case \"BigInt64Array\":\n          case \"BigUint64Array\": {\n            const TypedArrayConstructor = globalThis[type];\n            const typedArray = new TypedArrayConstructor(hydrate(value[1]));\n            hydrated[index] = value[2] !== void 0 ? typedArray.subarray(value[2], value[3]) : typedArray;\n            break;\n          }\n          case \"ArrayBuffer\": {\n            const base64 = value[1];\n            const arraybuffer = decode64(base64);\n            hydrated[index] = arraybuffer;\n            break;\n          }\n          case \"Temporal.Duration\":\n          case \"Temporal.Instant\":\n          case \"Temporal.PlainDate\":\n          case \"Temporal.PlainTime\":\n          case \"Temporal.PlainDateTime\":\n          case \"Temporal.PlainMonthDay\":\n          case \"Temporal.PlainYearMonth\":\n          case \"Temporal.ZonedDateTime\": {\n            const temporalName = type.slice(9);\n            hydrated[index] = Temporal[temporalName].from(value[1]);\n            break;\n          }\n          case \"URL\": {\n            const url = new URL(value[1]);\n            hydrated[index] = url;\n            break;\n          }\n          case \"URLSearchParams\": {\n            const url = new URLSearchParams(value[1]);\n            hydrated[index] = url;\n            break;\n          }\n          default:\n            throw new Error(`Unknown type ${type}`);\n        }\n      } else {\n        const array = new Array(value.length);\n        hydrated[index] = array;\n        for (let i = 0; i < value.length; i += 1) {\n          const n = value[i];\n          if (n === HOLE) continue;\n          array[i] = hydrate(n);\n        }\n      }\n    } else {\n      const object = {};\n      hydrated[index] = object;\n      for (const key in value) {\n        if (key === \"__proto__\") {\n          throw new Error(\"Cannot parse an object with a `__proto__` property\");\n        }\n        const n = value[key];\n        object[key] = hydrate(n);\n      }\n    }\n    return hydrated[index];\n  }\n  return hydrate(0);\n}\nfunction stringify$1(value, reducers) {\n  const stringified = [];\n  const indexes = /* @__PURE__ */ new Map();\n  const custom = [];\n  if (reducers) {\n    for (const key of Object.getOwnPropertyNames(reducers)) {\n      custom.push({ key, fn: reducers[key] });\n    }\n  }\n  const keys = [];\n  let p = 0;\n  function flatten(thing) {\n    if (typeof thing === \"function\") {\n      throw new DevalueError(`Cannot stringify a function`, keys);\n    }\n    if (thing === void 0) return UNDEFINED;\n    if (Number.isNaN(thing)) return NAN;\n    if (thing === Infinity) return POSITIVE_INFINITY;\n    if (thing === -Infinity) return NEGATIVE_INFINITY;\n    if (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO;\n    if (indexes.has(thing)) return indexes.get(thing);\n    const index2 = p++;\n    indexes.set(thing, index2);\n    for (const { key, fn } of custom) {\n      const value2 = fn(thing);\n      if (value2) {\n        stringified[index2] = `[\"${key}\",${flatten(value2)}]`;\n        return index2;\n      }\n    }\n    let str = \"\";\n    if (is_primitive(thing)) {\n      str = stringify_primitive(thing);\n    } else {\n      const type = get_type(thing);\n      switch (type) {\n        case \"Number\":\n        case \"String\":\n        case \"Boolean\":\n          str = `[\"Object\",${stringify_primitive(thing)}]`;\n          break;\n        case \"BigInt\":\n          str = `[\"BigInt\",${thing}]`;\n          break;\n        case \"Date\":\n          const valid = !isNaN(thing.getDate());\n          str = `[\"Date\",\"${valid ? thing.toISOString() : \"\"}\"]`;\n          break;\n        case \"URL\":\n          str = `[\"URL\",${stringify_string(thing.toString())}]`;\n          break;\n        case \"URLSearchParams\":\n          str = `[\"URLSearchParams\",${stringify_string(thing.toString())}]`;\n          break;\n        case \"RegExp\":\n          const { source, flags } = thing;\n          str = flags ? `[\"RegExp\",${stringify_string(source)},\"${flags}\"]` : `[\"RegExp\",${stringify_string(source)}]`;\n          break;\n        case \"Array\":\n          str = \"[\";\n          for (let i = 0; i < thing.length; i += 1) {\n            if (i > 0) str += \",\";\n            if (i in thing) {\n              keys.push(`[${i}]`);\n              str += flatten(thing[i]);\n              keys.pop();\n            } else {\n              str += HOLE;\n            }\n          }\n          str += \"]\";\n          break;\n        case \"Set\":\n          str = '[\"Set\"';\n          for (const value2 of thing) {\n            str += `,${flatten(value2)}`;\n          }\n          str += \"]\";\n          break;\n        case \"Map\":\n          str = '[\"Map\"';\n          for (const [key, value2] of thing) {\n            keys.push(\n              `.get(${is_primitive(key) ? stringify_primitive(key) : \"...\"})`\n            );\n            str += `,${flatten(key)},${flatten(value2)}`;\n            keys.pop();\n          }\n          str += \"]\";\n          break;\n        case \"Int8Array\":\n        case \"Uint8Array\":\n        case \"Uint8ClampedArray\":\n        case \"Int16Array\":\n        case \"Uint16Array\":\n        case \"Int32Array\":\n        case \"Uint32Array\":\n        case \"Float32Array\":\n        case \"Float64Array\":\n        case \"BigInt64Array\":\n        case \"BigUint64Array\": {\n          const typedArray = thing;\n          str = '[\"' + type + '\",' + flatten(typedArray.buffer);\n          const a = thing.byteOffset;\n          const b = a + thing.byteLength;\n          if (a > 0 || b !== typedArray.buffer.byteLength) {\n            const m = +/(\\d+)/.exec(type)[1] / 8;\n            str += `,${a / m},${b / m}`;\n          }\n          str += \"]\";\n          break;\n        }\n        case \"ArrayBuffer\": {\n          const arraybuffer = thing;\n          const base64 = encode64(arraybuffer);\n          str = `[\"ArrayBuffer\",\"${base64}\"]`;\n          break;\n        }\n        case \"Temporal.Duration\":\n        case \"Temporal.Instant\":\n        case \"Temporal.PlainDate\":\n        case \"Temporal.PlainTime\":\n        case \"Temporal.PlainDateTime\":\n        case \"Temporal.PlainMonthDay\":\n        case \"Temporal.PlainYearMonth\":\n        case \"Temporal.ZonedDateTime\":\n          str = `[\"${type}\",${stringify_string(thing.toString())}]`;\n          break;\n        default:\n          if (!is_plain_object(thing)) {\n            throw new DevalueError(\n              `Cannot stringify arbitrary non-POJOs`,\n              keys\n            );\n          }\n          if (enumerable_symbols(thing).length > 0) {\n            throw new DevalueError(\n              `Cannot stringify POJOs with symbolic keys`,\n              keys\n            );\n          }\n          if (Object.getPrototypeOf(thing) === null) {\n            str = '[\"null\"';\n            for (const key in thing) {\n              keys.push(stringify_key(key));\n              str += `,${stringify_string(key)},${flatten(thing[key])}`;\n              keys.pop();\n            }\n            str += \"]\";\n          } else {\n            str = \"{\";\n            let started = false;\n            for (const key in thing) {\n              if (started) str += \",\";\n              started = true;\n              keys.push(stringify_key(key));\n              str += `${stringify_string(key)}:${flatten(thing[key])}`;\n              keys.pop();\n            }\n            str += \"}\";\n          }\n      }\n    }\n    stringified[index2] = str;\n    return index2;\n  }\n  const index = flatten(value);\n  if (index < 0) return `${index}`;\n  return `[${stringified.join(\",\")}]`;\n}\nfunction stringify_primitive(thing) {\n  const type = typeof thing;\n  if (type === \"string\") return stringify_string(thing);\n  if (thing instanceof String) return stringify_string(thing.toString());\n  if (thing === void 0) return UNDEFINED.toString();\n  if (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO.toString();\n  if (type === \"bigint\") return `[\"BigInt\",\"${thing}\"]`;\n  return String(thing);\n}\nconst INVALIDATED_PARAM = \"x-sveltekit-invalidated\";\nconst TRAILING_SLASH_PARAM = \"x-sveltekit-trailing-slash\";\nfunction stringify(data, transport) {\n  const encoders = Object.fromEntries(Object.entries(transport).map(([k, v]) => [k, v.encode]));\n  return stringify$1(data, encoders);\n}\nfunction stringify_remote_arg(value, transport) {\n  if (value === void 0) return \"\";\n  const json_string = stringify(value, transport);\n  const bytes = new TextEncoder().encode(json_string);\n  return base64_encode(bytes).replaceAll(\"=\", \"\").replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\");\n}\nfunction parse_remote_arg(string, transport) {\n  if (!string) return void 0;\n  const json_string = text_decoder.decode(\n    // no need to add back `=` characters, atob can handle it\n    base64_decode(string.replaceAll(\"-\", \"+\").replaceAll(\"_\", \"/\"))\n  );\n  const decoders = Object.fromEntries(Object.entries(transport).map(([k, v]) => [k, v.decode]));\n  return parse(json_string, decoders);\n}\nfunction create_remote_cache_key(id, payload) {\n  return id + \"/\" + payload;\n}\nexport {\n  DevalueError as D,\n  INVALIDATED_PARAM as I,\n  TRAILING_SLASH_PARAM as T,\n  is_plain_object as a,\n  stringify_string as b,\n  escaped as c,\n  stringify$1 as d,\n  enumerable_symbols as e,\n  create_remote_cache_key as f,\n  get_type as g,\n  stringify as h,\n  is_primitive as i,\n  stringify_remote_arg as j,\n  parse as k,\n  parse_remote_arg as p,\n  stringify_key as s\n};\n", "import { H as HYDRATION_ERROR, C as COMMENT_NODE, a as HYDRATION_END, b as HYDRATION_START, c as HYDRATION_START_ELSE, B as BOUNDARY_EFFECT, E as ERROR_VALUE, d as EFFECT_RAN, e as CLEAN, I as INERT, f as EFFECT, A as ASYNC, g as BLOCK_EFFECT, D as DIRTY, h as BRANCH_EFFECT, R as ROOT_EFFECT, M as MAYBE_DIRTY, i as DESTROYED, j as DERIVED, k as EFFECT_TRANSPARENT, l as EFFECT_PRESERVED, U as UNOWNED, m as INSPECT_EFFECT, S as STATE_SYMBOL, n as UNINITIALIZED, o as HEAD_EFFECT, p as STALE_REACTION, q as RENDER_EFFECT, r as USER_EFFECT, s as DISCONNECTED, t as REACTION_IS_UPDATING, u as is_passive_event, L as LEGACY_PROPS, v as render, w as experimental_async_ssr } from \"./index.js\";\nimport { B as BROWSER } from \"./environment.js\";\nimport { r as run_all, d as define_property, a as deferred, n as noop, o as object_prototype, b as array_prototype, g as get_descriptor, c as get_prototype_of, i as is_array, e as is_extensible, f as index_of, h as array_from } from \"./utils2.js\";\nimport { s as safe_equals, e as equals } from \"./equality.js\";\nimport { s as setContext } from \"./context.js\";\nlet public_env = {};\nfunction set_private_env(environment) {\n}\nfunction set_public_env(environment) {\n  public_env = environment;\n}\nfunction effect_update_depth_exceeded() {\n  {\n    throw new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n  }\n}\nfunction hydration_failed() {\n  {\n    throw new Error(`https://svelte.dev/e/hydration_failed`);\n  }\n}\nfunction state_descriptors_fixed() {\n  {\n    throw new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n  }\n}\nfunction state_prototype_fixed() {\n  {\n    throw new Error(`https://svelte.dev/e/state_prototype_fixed`);\n  }\n}\nfunction state_unsafe_mutation() {\n  {\n    throw new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n  }\n}\nfunction svelte_boundary_reset_onerror() {\n  {\n    throw new Error(`https://svelte.dev/e/svelte_boundary_reset_onerror`);\n  }\n}\nfunction hydration_mismatch(location) {\n  {\n    console.warn(`https://svelte.dev/e/hydration_mismatch`);\n  }\n}\nfunction svelte_boundary_reset_noop() {\n  {\n    console.warn(`https://svelte.dev/e/svelte_boundary_reset_noop`);\n  }\n}\nlet hydrating = false;\nfunction set_hydrating(value) {\n  hydrating = value;\n}\nlet hydrate_node;\nfunction set_hydrate_node(node) {\n  if (node === null) {\n    hydration_mismatch();\n    throw HYDRATION_ERROR;\n  }\n  return hydrate_node = node;\n}\nfunction hydrate_next() {\n  return set_hydrate_node(\n    /** @type {TemplateNode} */\n    /* @__PURE__ */ get_next_sibling(hydrate_node)\n  );\n}\nfunction next(count = 1) {\n  if (hydrating) {\n    var i = count;\n    var node = hydrate_node;\n    while (i--) {\n      node = /** @type {TemplateNode} */\n      /* @__PURE__ */ get_next_sibling(node);\n    }\n    hydrate_node = node;\n  }\n}\nfunction skip_nodes(remove = true) {\n  var depth = 0;\n  var node = hydrate_node;\n  while (true) {\n    if (node.nodeType === COMMENT_NODE) {\n      var data = (\n        /** @type {Comment} */\n        node.data\n      );\n      if (data === HYDRATION_END) {\n        if (depth === 0) return node;\n        depth -= 1;\n      } else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n        depth += 1;\n      }\n    }\n    var next2 = (\n      /** @type {TemplateNode} */\n      /* @__PURE__ */ get_next_sibling(node)\n    );\n    if (remove) node.remove();\n    node = next2;\n  }\n}\nlet tracing_mode_flag = false;\nlet component_context = null;\nfunction set_component_context(context) {\n  component_context = context;\n}\nfunction push(props, runes = false, fn) {\n  component_context = {\n    p: component_context,\n    c: null,\n    e: null,\n    s: props,\n    x: null,\n    l: null\n  };\n}\nfunction pop(component) {\n  var context = (\n    /** @type {ComponentContext} */\n    component_context\n  );\n  var effects = context.e;\n  if (effects !== null) {\n    context.e = null;\n    for (var fn of effects) {\n      create_user_effect(fn);\n    }\n  }\n  component_context = context.p;\n  return (\n    /** @type {T} */\n    {}\n  );\n}\nfunction is_runes() {\n  return true;\n}\nlet micro_tasks = [];\nfunction run_micro_tasks() {\n  var tasks = micro_tasks;\n  micro_tasks = [];\n  run_all(tasks);\n}\nfunction queue_micro_task(fn) {\n  if (micro_tasks.length === 0 && !is_flushing_sync) {\n    var tasks = micro_tasks;\n    queueMicrotask(() => {\n      if (tasks === micro_tasks) run_micro_tasks();\n    });\n  }\n  micro_tasks.push(fn);\n}\nfunction flush_tasks() {\n  while (micro_tasks.length > 0) {\n    run_micro_tasks();\n  }\n}\nconst adjustments = /* @__PURE__ */ new WeakMap();\nfunction handle_error(error) {\n  var effect = active_effect;\n  if (effect === null) {\n    active_reaction.f |= ERROR_VALUE;\n    return error;\n  }\n  if ((effect.f & EFFECT_RAN) === 0) {\n    if ((effect.f & BOUNDARY_EFFECT) === 0) {\n      if (!effect.parent && error instanceof Error) {\n        apply_adjustments(error);\n      }\n      throw error;\n    }\n    effect.b.error(error);\n  } else {\n    invoke_error_boundary(error, effect);\n  }\n}\nfunction invoke_error_boundary(error, effect) {\n  while (effect !== null) {\n    if ((effect.f & BOUNDARY_EFFECT) !== 0) {\n      try {\n        effect.b.error(error);\n        return;\n      } catch (e) {\n        error = e;\n      }\n    }\n    effect = effect.parent;\n  }\n  if (error instanceof Error) {\n    apply_adjustments(error);\n  }\n  throw error;\n}\nfunction apply_adjustments(error) {\n  const adjusted = adjustments.get(error);\n  if (adjusted) {\n    define_property(error, \"message\", {\n      value: adjusted.message\n    });\n    define_property(error, \"stack\", {\n      value: adjusted.stack\n    });\n  }\n}\nconst batches = /* @__PURE__ */ new Set();\nlet current_batch = null;\nlet effect_pending_updates = /* @__PURE__ */ new Set();\nlet queued_root_effects = [];\nlet last_scheduled_effect = null;\nlet is_flushing = false;\nlet is_flushing_sync = false;\nclass Batch {\n  /**\n   * The current values of any sources that are updated in this batch\n   * They keys of this map are identical to `this.#previous`\n   * @type {Map<Source, any>}\n   */\n  current = /* @__PURE__ */ new Map();\n  /**\n   * The values of any sources that are updated in this batch _before_ those updates took place.\n   * They keys of this map are identical to `this.#current`\n   * @type {Map<Source, any>}\n   */\n  #previous = /* @__PURE__ */ new Map();\n  /**\n   * When the batch is committed (and the DOM is updated), we need to remove old branches\n   * and append new ones by calling the functions added inside (if/each/key/etc) blocks\n   * @type {Set<() => void>}\n   */\n  #callbacks = /* @__PURE__ */ new Set();\n  /**\n   * The number of async effects that are currently in flight\n   */\n  #pending = 0;\n  /**\n   * A deferred that resolves when the batch is committed, used with `settled()`\n   * TODO replace with Promise.withResolvers once supported widely enough\n   * @type {{ promise: Promise<void>, resolve: (value?: any) => void, reject: (reason: unknown) => void } | null}\n   */\n  #deferred = null;\n  /**\n   * Async effects inside a newly-created `<svelte:boundary>`\n   * \u2014 these do not prevent the batch from committing\n   * @type {Effect[]}\n   */\n  #boundary_async_effects = [];\n  /**\n   * Template effects and `$effect.pre` effects, which run when\n   * a batch is committed\n   * @type {Effect[]}\n   */\n  #render_effects = [];\n  /**\n   * The same as `#render_effects`, but for `$effect` (which runs after)\n   * @type {Effect[]}\n   */\n  #effects = [];\n  /**\n   * Block effects, which may need to re-run on subsequent flushes\n   * in order to update internal sources (e.g. each block items)\n   * @type {Effect[]}\n   */\n  #block_effects = [];\n  /**\n   * Deferred effects (which run after async work has completed) that are DIRTY\n   * @type {Effect[]}\n   */\n  #dirty_effects = [];\n  /**\n   * Deferred effects that are MAYBE_DIRTY\n   * @type {Effect[]}\n   */\n  #maybe_dirty_effects = [];\n  /**\n   * A set of branches that still exist, but will be destroyed when this batch\n   * is committed \u2014 we skip over these during `process`\n   * @type {Set<Effect>}\n   */\n  skipped_effects = /* @__PURE__ */ new Set();\n  /**\n   *\n   * @param {Effect[]} root_effects\n   */\n  process(root_effects) {\n    queued_root_effects = [];\n    var revert = Batch.apply(this);\n    for (const root2 of root_effects) {\n      this.#traverse_effect_tree(root2);\n    }\n    if (this.#pending === 0) {\n      this.#commit();\n      var render_effects = this.#render_effects;\n      var effects = this.#effects;\n      this.#render_effects = [];\n      this.#effects = [];\n      this.#block_effects = [];\n      current_batch = null;\n      flush_queued_effects(render_effects);\n      flush_queued_effects(effects);\n      this.#deferred?.resolve();\n    } else {\n      this.#defer_effects(this.#render_effects);\n      this.#defer_effects(this.#effects);\n      this.#defer_effects(this.#block_effects);\n    }\n    revert();\n    for (const effect of this.#boundary_async_effects) {\n      update_effect(effect);\n    }\n    this.#boundary_async_effects = [];\n  }\n  /**\n   * Traverse the effect tree, executing effects or stashing\n   * them for later execution as appropriate\n   * @param {Effect} root\n   */\n  #traverse_effect_tree(root2) {\n    root2.f ^= CLEAN;\n    var effect = root2.first;\n    while (effect !== null) {\n      var flags2 = effect.f;\n      var is_branch = (flags2 & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n      var is_skippable_branch = is_branch && (flags2 & CLEAN) !== 0;\n      var skip = is_skippable_branch || (flags2 & INERT) !== 0 || this.skipped_effects.has(effect);\n      if (!skip && effect.fn !== null) {\n        if (is_branch) {\n          effect.f ^= CLEAN;\n        } else if ((flags2 & EFFECT) !== 0) {\n          this.#effects.push(effect);\n        } else if ((flags2 & CLEAN) === 0) {\n          if ((flags2 & ASYNC) !== 0 && effect.b?.is_pending()) {\n            this.#boundary_async_effects.push(effect);\n          } else if (is_dirty(effect)) {\n            if ((effect.f & BLOCK_EFFECT) !== 0) this.#block_effects.push(effect);\n            update_effect(effect);\n          }\n        }\n        var child = effect.first;\n        if (child !== null) {\n          effect = child;\n          continue;\n        }\n      }\n      var parent = effect.parent;\n      effect = effect.next;\n      while (effect === null && parent !== null) {\n        effect = parent.next;\n        parent = parent.parent;\n      }\n    }\n  }\n  /**\n   * @param {Effect[]} effects\n   */\n  #defer_effects(effects) {\n    for (const e of effects) {\n      const target = (e.f & DIRTY) !== 0 ? this.#dirty_effects : this.#maybe_dirty_effects;\n      target.push(e);\n      set_signal_status(e, CLEAN);\n    }\n    effects.length = 0;\n  }\n  /**\n   * Associate a change to a given source with the current\n   * batch, noting its previous and current values\n   * @param {Source} source\n   * @param {any} value\n   */\n  capture(source2, value) {\n    if (!this.#previous.has(source2)) {\n      this.#previous.set(source2, value);\n    }\n    this.current.set(source2, source2.v);\n  }\n  activate() {\n    current_batch = this;\n  }\n  deactivate() {\n    current_batch = null;\n  }\n  flush() {\n    if (queued_root_effects.length > 0) {\n      this.activate();\n      flush_effects();\n      if (current_batch !== null && current_batch !== this) {\n        return;\n      }\n    } else if (this.#pending === 0) {\n      this.#commit();\n    }\n    this.deactivate();\n    for (const update of effect_pending_updates) {\n      effect_pending_updates.delete(update);\n      update();\n      if (current_batch !== null) {\n        break;\n      }\n    }\n  }\n  /**\n   * Append and remove branches to/from the DOM\n   */\n  #commit() {\n    for (const fn of this.#callbacks) {\n      fn();\n    }\n    this.#callbacks.clear();\n    if (batches.size > 1) {\n      this.#previous.clear();\n      let is_earlier = true;\n      for (const batch of batches) {\n        if (batch === this) {\n          is_earlier = false;\n          continue;\n        }\n        for (const [source2, value] of this.current) {\n          if (batch.current.has(source2)) {\n            if (is_earlier) {\n              batch.current.set(source2, value);\n            } else {\n              continue;\n            }\n          }\n          mark_effects(source2);\n        }\n        if (queued_root_effects.length > 0) {\n          current_batch = batch;\n          const revert = Batch.apply(batch);\n          for (const root2 of queued_root_effects) {\n            batch.#traverse_effect_tree(root2);\n          }\n          queued_root_effects = [];\n          revert();\n        }\n      }\n      current_batch = null;\n    }\n    batches.delete(this);\n  }\n  increment() {\n    this.#pending += 1;\n  }\n  decrement() {\n    this.#pending -= 1;\n    for (const e of this.#dirty_effects) {\n      set_signal_status(e, DIRTY);\n      schedule_effect(e);\n    }\n    for (const e of this.#maybe_dirty_effects) {\n      set_signal_status(e, MAYBE_DIRTY);\n      schedule_effect(e);\n    }\n    this.flush();\n  }\n  /** @param {() => void} fn */\n  add_callback(fn) {\n    this.#callbacks.add(fn);\n  }\n  settled() {\n    return (this.#deferred ??= deferred()).promise;\n  }\n  static ensure() {\n    if (current_batch === null) {\n      const batch = current_batch = new Batch();\n      batches.add(current_batch);\n      if (!is_flushing_sync) {\n        Batch.enqueue(() => {\n          if (current_batch !== batch) {\n            return;\n          }\n          batch.flush();\n        });\n      }\n    }\n    return current_batch;\n  }\n  /** @param {() => void} task */\n  static enqueue(task) {\n    queue_micro_task(task);\n  }\n  /**\n   * @param {Batch} current_batch\n   */\n  static apply(current_batch2) {\n    {\n      return noop;\n    }\n  }\n}\nfunction flushSync(fn) {\n  var was_flushing_sync = is_flushing_sync;\n  is_flushing_sync = true;\n  try {\n    var result;\n    if (fn) ;\n    while (true) {\n      flush_tasks();\n      if (queued_root_effects.length === 0) {\n        current_batch?.flush();\n        if (queued_root_effects.length === 0) {\n          last_scheduled_effect = null;\n          return (\n            /** @type {T} */\n            result\n          );\n        }\n      }\n      flush_effects();\n    }\n  } finally {\n    is_flushing_sync = was_flushing_sync;\n  }\n}\nfunction flush_effects() {\n  var was_updating_effect = is_updating_effect;\n  is_flushing = true;\n  try {\n    var flush_count = 0;\n    set_is_updating_effect(true);\n    while (queued_root_effects.length > 0) {\n      var batch = Batch.ensure();\n      if (flush_count++ > 1e3) {\n        var updates, entry;\n        if (BROWSER) ;\n        infinite_loop_guard();\n      }\n      batch.process(queued_root_effects);\n      old_values.clear();\n    }\n  } finally {\n    is_flushing = false;\n    set_is_updating_effect(was_updating_effect);\n    last_scheduled_effect = null;\n  }\n}\nfunction infinite_loop_guard() {\n  try {\n    effect_update_depth_exceeded();\n  } catch (error) {\n    invoke_error_boundary(error, last_scheduled_effect);\n  }\n}\nlet eager_block_effects = null;\nfunction flush_queued_effects(effects) {\n  var length = effects.length;\n  if (length === 0) return;\n  var i = 0;\n  while (i < length) {\n    var effect = effects[i++];\n    if ((effect.f & (DESTROYED | INERT)) === 0 && is_dirty(effect)) {\n      eager_block_effects = [];\n      update_effect(effect);\n      if (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n        if (effect.teardown === null && effect.ac === null) {\n          unlink_effect(effect);\n        } else {\n          effect.fn = null;\n        }\n      }\n      if (eager_block_effects?.length > 0) {\n        old_values.clear();\n        for (const e of eager_block_effects) {\n          update_effect(e);\n        }\n        eager_block_effects = [];\n      }\n    }\n  }\n  eager_block_effects = null;\n}\nfunction mark_effects(value) {\n  if (value.reactions !== null) {\n    for (const reaction of value.reactions) {\n      const flags2 = reaction.f;\n      if ((flags2 & DERIVED) !== 0) {\n        mark_effects(\n          /** @type {Derived} */\n          reaction\n        );\n      } else if ((flags2 & (ASYNC | BLOCK_EFFECT)) !== 0) {\n        set_signal_status(reaction, DIRTY);\n        schedule_effect(\n          /** @type {Effect} */\n          reaction\n        );\n      }\n    }\n  }\n}\nfunction schedule_effect(signal) {\n  var effect = last_scheduled_effect = signal;\n  while (effect.parent !== null) {\n    effect = effect.parent;\n    var flags2 = effect.f;\n    if (is_flushing && effect === active_effect && (flags2 & BLOCK_EFFECT) !== 0) {\n      return;\n    }\n    if ((flags2 & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n      if ((flags2 & CLEAN) === 0) return;\n      effect.f ^= CLEAN;\n    }\n  }\n  queued_root_effects.push(effect);\n}\nfunction createSubscriber(start) {\n  let subscribers = 0;\n  let version = source(0);\n  let stop;\n  return () => {\n    if (effect_tracking()) {\n      get(version);\n      render_effect(() => {\n        if (subscribers === 0) {\n          stop = untrack(() => start(() => increment(version)));\n        }\n        subscribers += 1;\n        return () => {\n          queue_micro_task(() => {\n            subscribers -= 1;\n            if (subscribers === 0) {\n              stop?.();\n              stop = void 0;\n              increment(version);\n            }\n          });\n        };\n      });\n    }\n  };\n}\nvar flags = EFFECT_TRANSPARENT | EFFECT_PRESERVED | BOUNDARY_EFFECT;\nfunction boundary(node, props, children) {\n  new Boundary(node, props, children);\n}\nclass Boundary {\n  /** @type {Boundary | null} */\n  parent;\n  #pending = false;\n  /** @type {TemplateNode} */\n  #anchor;\n  /** @type {TemplateNode | null} */\n  #hydrate_open = hydrating ? hydrate_node : null;\n  /** @type {BoundaryProps} */\n  #props;\n  /** @type {((anchor: Node) => void)} */\n  #children;\n  /** @type {Effect} */\n  #effect;\n  /** @type {Effect | null} */\n  #main_effect = null;\n  /** @type {Effect | null} */\n  #pending_effect = null;\n  /** @type {Effect | null} */\n  #failed_effect = null;\n  /** @type {DocumentFragment | null} */\n  #offscreen_fragment = null;\n  #local_pending_count = 0;\n  #pending_count = 0;\n  #is_creating_fallback = false;\n  /**\n   * A source containing the number of pending async deriveds/expressions.\n   * Only created if `$effect.pending()` is used inside the boundary,\n   * otherwise updating the source results in needless `Batch.ensure()`\n   * calls followed by no-op flushes\n   * @type {Source<number> | null}\n   */\n  #effect_pending = null;\n  #effect_pending_update = () => {\n    if (this.#effect_pending) {\n      internal_set(this.#effect_pending, this.#local_pending_count);\n    }\n  };\n  #effect_pending_subscriber = createSubscriber(() => {\n    this.#effect_pending = source(this.#local_pending_count);\n    return () => {\n      this.#effect_pending = null;\n    };\n  });\n  /**\n   * @param {TemplateNode} node\n   * @param {BoundaryProps} props\n   * @param {((anchor: Node) => void)} children\n   */\n  constructor(node, props, children) {\n    this.#anchor = node;\n    this.#props = props;\n    this.#children = children;\n    this.parent = /** @type {Effect} */\n    active_effect.b;\n    this.#pending = !!this.#props.pending;\n    this.#effect = block(() => {\n      active_effect.b = this;\n      if (hydrating) {\n        const comment = this.#hydrate_open;\n        hydrate_next();\n        const server_rendered_pending = (\n          /** @type {Comment} */\n          comment.nodeType === COMMENT_NODE && /** @type {Comment} */\n          comment.data === HYDRATION_START_ELSE\n        );\n        if (server_rendered_pending) {\n          this.#hydrate_pending_content();\n        } else {\n          this.#hydrate_resolved_content();\n        }\n      } else {\n        try {\n          this.#main_effect = branch(() => children(this.#anchor));\n        } catch (error) {\n          this.error(error);\n        }\n        if (this.#pending_count > 0) {\n          this.#show_pending_snippet();\n        } else {\n          this.#pending = false;\n        }\n      }\n    }, flags);\n    if (hydrating) {\n      this.#anchor = hydrate_node;\n    }\n  }\n  #hydrate_resolved_content() {\n    try {\n      this.#main_effect = branch(() => this.#children(this.#anchor));\n    } catch (error) {\n      this.error(error);\n    }\n    this.#pending = false;\n  }\n  #hydrate_pending_content() {\n    const pending = this.#props.pending;\n    if (!pending) {\n      return;\n    }\n    this.#pending_effect = branch(() => pending(this.#anchor));\n    Batch.enqueue(() => {\n      this.#main_effect = this.#run(() => {\n        Batch.ensure();\n        return branch(() => this.#children(this.#anchor));\n      });\n      if (this.#pending_count > 0) {\n        this.#show_pending_snippet();\n      } else {\n        pause_effect(\n          /** @type {Effect} */\n          this.#pending_effect,\n          () => {\n            this.#pending_effect = null;\n          }\n        );\n        this.#pending = false;\n      }\n    });\n  }\n  /**\n   * Returns `true` if the effect exists inside a boundary whose pending snippet is shown\n   * @returns {boolean}\n   */\n  is_pending() {\n    return this.#pending || !!this.parent && this.parent.is_pending();\n  }\n  has_pending_snippet() {\n    return !!this.#props.pending;\n  }\n  /**\n   * @param {() => Effect | null} fn\n   */\n  #run(fn) {\n    var previous_effect = active_effect;\n    var previous_reaction = active_reaction;\n    var previous_ctx = component_context;\n    set_active_effect(this.#effect);\n    set_active_reaction(this.#effect);\n    set_component_context(this.#effect.ctx);\n    try {\n      return fn();\n    } catch (e) {\n      handle_error(e);\n      return null;\n    } finally {\n      set_active_effect(previous_effect);\n      set_active_reaction(previous_reaction);\n      set_component_context(previous_ctx);\n    }\n  }\n  #show_pending_snippet() {\n    const pending = (\n      /** @type {(anchor: Node) => void} */\n      this.#props.pending\n    );\n    if (this.#main_effect !== null) {\n      this.#offscreen_fragment = document.createDocumentFragment();\n      move_effect(this.#main_effect, this.#offscreen_fragment);\n    }\n    if (this.#pending_effect === null) {\n      this.#pending_effect = branch(() => pending(this.#anchor));\n    }\n  }\n  /**\n   * Updates the pending count associated with the currently visible pending snippet,\n   * if any, such that we can replace the snippet with content once work is done\n   * @param {1 | -1} d\n   */\n  #update_pending_count(d) {\n    if (!this.has_pending_snippet()) {\n      if (this.parent) {\n        this.parent.#update_pending_count(d);\n      }\n      return;\n    }\n    this.#pending_count += d;\n    if (this.#pending_count === 0) {\n      this.#pending = false;\n      if (this.#pending_effect) {\n        pause_effect(this.#pending_effect, () => {\n          this.#pending_effect = null;\n        });\n      }\n      if (this.#offscreen_fragment) {\n        this.#anchor.before(this.#offscreen_fragment);\n        this.#offscreen_fragment = null;\n      }\n      queue_micro_task(() => {\n        Batch.ensure().flush();\n      });\n    }\n  }\n  /**\n   * Update the source that powers `$effect.pending()` inside this boundary,\n   * and controls when the current `pending` snippet (if any) is removed.\n   * Do not call from inside the class\n   * @param {1 | -1} d\n   */\n  update_pending_count(d) {\n    this.#update_pending_count(d);\n    this.#local_pending_count += d;\n    effect_pending_updates.add(this.#effect_pending_update);\n  }\n  get_effect_pending() {\n    this.#effect_pending_subscriber();\n    return get(\n      /** @type {Source<number>} */\n      this.#effect_pending\n    );\n  }\n  /** @param {unknown} error */\n  error(error) {\n    var onerror = this.#props.onerror;\n    let failed = this.#props.failed;\n    if (this.#is_creating_fallback || !onerror && !failed) {\n      throw error;\n    }\n    if (this.#main_effect) {\n      destroy_effect(this.#main_effect);\n      this.#main_effect = null;\n    }\n    if (this.#pending_effect) {\n      destroy_effect(this.#pending_effect);\n      this.#pending_effect = null;\n    }\n    if (this.#failed_effect) {\n      destroy_effect(this.#failed_effect);\n      this.#failed_effect = null;\n    }\n    if (hydrating) {\n      set_hydrate_node(\n        /** @type {TemplateNode} */\n        this.#hydrate_open\n      );\n      next();\n      set_hydrate_node(skip_nodes());\n    }\n    var did_reset = false;\n    var calling_on_error = false;\n    const reset = () => {\n      if (did_reset) {\n        svelte_boundary_reset_noop();\n        return;\n      }\n      did_reset = true;\n      if (calling_on_error) {\n        svelte_boundary_reset_onerror();\n      }\n      Batch.ensure();\n      this.#local_pending_count = 0;\n      if (this.#failed_effect !== null) {\n        pause_effect(this.#failed_effect, () => {\n          this.#failed_effect = null;\n        });\n      }\n      this.#pending = this.has_pending_snippet();\n      this.#main_effect = this.#run(() => {\n        this.#is_creating_fallback = false;\n        return branch(() => this.#children(this.#anchor));\n      });\n      if (this.#pending_count > 0) {\n        this.#show_pending_snippet();\n      } else {\n        this.#pending = false;\n      }\n    };\n    var previous_reaction = active_reaction;\n    try {\n      set_active_reaction(null);\n      calling_on_error = true;\n      onerror?.(error, reset);\n      calling_on_error = false;\n    } catch (error2) {\n      invoke_error_boundary(error2, this.#effect && this.#effect.parent);\n    } finally {\n      set_active_reaction(previous_reaction);\n    }\n    if (failed) {\n      queue_micro_task(() => {\n        this.#failed_effect = this.#run(() => {\n          this.#is_creating_fallback = true;\n          try {\n            return branch(() => {\n              failed(\n                this.#anchor,\n                () => error,\n                () => reset\n              );\n            });\n          } catch (error2) {\n            invoke_error_boundary(\n              error2,\n              /** @type {Effect} */\n              this.#effect.parent\n            );\n            return null;\n          } finally {\n            this.#is_creating_fallback = false;\n          }\n        });\n      });\n    }\n  }\n}\nfunction move_effect(effect, fragment) {\n  var node = effect.nodes_start;\n  var end = effect.nodes_end;\n  while (node !== null) {\n    var next2 = node === end ? null : (\n      /** @type {TemplateNode} */\n      /* @__PURE__ */ get_next_sibling(node)\n    );\n    fragment.append(node);\n    node = next2;\n  }\n}\nfunction destroy_derived_effects(derived) {\n  var effects = derived.effects;\n  if (effects !== null) {\n    derived.effects = null;\n    for (var i = 0; i < effects.length; i += 1) {\n      destroy_effect(\n        /** @type {Effect} */\n        effects[i]\n      );\n    }\n  }\n}\nfunction get_derived_parent_effect(derived) {\n  var parent = derived.parent;\n  while (parent !== null) {\n    if ((parent.f & DERIVED) === 0) {\n      return (\n        /** @type {Effect} */\n        parent\n      );\n    }\n    parent = parent.parent;\n  }\n  return null;\n}\nfunction execute_derived(derived) {\n  var value;\n  var prev_active_effect = active_effect;\n  set_active_effect(get_derived_parent_effect(derived));\n  {\n    try {\n      destroy_derived_effects(derived);\n      value = update_reaction(derived);\n    } finally {\n      set_active_effect(prev_active_effect);\n    }\n  }\n  return value;\n}\nfunction update_derived(derived) {\n  var value = execute_derived(derived);\n  if (!derived.equals(value)) {\n    derived.v = value;\n    derived.wv = increment_write_version();\n  }\n  if (is_destroying_effect) {\n    return;\n  }\n  {\n    var status = (skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n    set_signal_status(derived, status);\n  }\n}\nconst old_values = /* @__PURE__ */ new Map();\nfunction source(v, stack) {\n  var signal = {\n    f: 0,\n    // TODO ideally we could skip this altogether, but it causes type errors\n    v,\n    reactions: null,\n    equals,\n    rv: 0,\n    wv: 0\n  };\n  return signal;\n}\n// @__NO_SIDE_EFFECTS__\nfunction state(v, stack) {\n  const s = source(v);\n  push_reaction_value(s);\n  return s;\n}\n// @__NO_SIDE_EFFECTS__\nfunction mutable_source(initial_value, immutable = false, trackable = true) {\n  const s = source(initial_value);\n  if (!immutable) {\n    s.equals = safe_equals;\n  }\n  return s;\n}\nfunction set(source2, value, should_proxy = false) {\n  if (active_reaction !== null && // since we are untracking the function inside `$inspect.with` we need to add this check\n  // to ensure we error if state is set inside an inspect effect\n  (!untracking || (active_reaction.f & INSPECT_EFFECT) !== 0) && is_runes() && (active_reaction.f & (DERIVED | BLOCK_EFFECT | ASYNC | INSPECT_EFFECT)) !== 0 && !current_sources?.includes(source2)) {\n    state_unsafe_mutation();\n  }\n  let new_value = should_proxy ? proxy(value) : value;\n  return internal_set(source2, new_value);\n}\nfunction internal_set(source2, value) {\n  if (!source2.equals(value)) {\n    var old_value = source2.v;\n    if (is_destroying_effect) {\n      old_values.set(source2, value);\n    } else {\n      old_values.set(source2, old_value);\n    }\n    source2.v = value;\n    var batch = Batch.ensure();\n    batch.capture(source2, old_value);\n    if ((source2.f & DERIVED) !== 0) {\n      if ((source2.f & DIRTY) !== 0) {\n        execute_derived(\n          /** @type {Derived} */\n          source2\n        );\n      }\n      set_signal_status(source2, (source2.f & UNOWNED) === 0 ? CLEAN : MAYBE_DIRTY);\n    }\n    source2.wv = increment_write_version();\n    mark_reactions(source2, DIRTY);\n    if (active_effect !== null && (active_effect.f & CLEAN) !== 0 && (active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\n      if (untracked_writes === null) {\n        set_untracked_writes([source2]);\n      } else {\n        untracked_writes.push(source2);\n      }\n    }\n  }\n  return value;\n}\nfunction increment(source2) {\n  set(source2, source2.v + 1);\n}\nfunction mark_reactions(signal, status) {\n  var reactions = signal.reactions;\n  if (reactions === null) return;\n  var length = reactions.length;\n  for (var i = 0; i < length; i++) {\n    var reaction = reactions[i];\n    var flags2 = reaction.f;\n    var not_dirty = (flags2 & DIRTY) === 0;\n    if (not_dirty) {\n      set_signal_status(reaction, status);\n    }\n    if ((flags2 & DERIVED) !== 0) {\n      mark_reactions(\n        /** @type {Derived} */\n        reaction,\n        MAYBE_DIRTY\n      );\n    } else if (not_dirty) {\n      if ((flags2 & BLOCK_EFFECT) !== 0) {\n        if (eager_block_effects !== null) {\n          eager_block_effects.push(\n            /** @type {Effect} */\n            reaction\n          );\n        }\n      }\n      schedule_effect(\n        /** @type {Effect} */\n        reaction\n      );\n    }\n  }\n}\nfunction proxy(value) {\n  if (typeof value !== \"object\" || value === null || STATE_SYMBOL in value) {\n    return value;\n  }\n  const prototype = get_prototype_of(value);\n  if (prototype !== object_prototype && prototype !== array_prototype) {\n    return value;\n  }\n  var sources = /* @__PURE__ */ new Map();\n  var is_proxied_array = is_array(value);\n  var version = /* @__PURE__ */ state(0);\n  var parent_version = update_version;\n  var with_parent = (fn) => {\n    if (update_version === parent_version) {\n      return fn();\n    }\n    var reaction = active_reaction;\n    var version2 = update_version;\n    set_active_reaction(null);\n    set_update_version(parent_version);\n    var result = fn();\n    set_active_reaction(reaction);\n    set_update_version(version2);\n    return result;\n  };\n  if (is_proxied_array) {\n    sources.set(\"length\", /* @__PURE__ */ state(\n      /** @type {any[]} */\n      value.length\n    ));\n  }\n  return new Proxy(\n    /** @type {any} */\n    value,\n    {\n      defineProperty(_, prop, descriptor) {\n        if (!(\"value\" in descriptor) || descriptor.configurable === false || descriptor.enumerable === false || descriptor.writable === false) {\n          state_descriptors_fixed();\n        }\n        var s = sources.get(prop);\n        if (s === void 0) {\n          s = with_parent(() => {\n            var s2 = /* @__PURE__ */ state(descriptor.value);\n            sources.set(prop, s2);\n            return s2;\n          });\n        } else {\n          set(s, descriptor.value, true);\n        }\n        return true;\n      },\n      deleteProperty(target, prop) {\n        var s = sources.get(prop);\n        if (s === void 0) {\n          if (prop in target) {\n            const s2 = with_parent(() => /* @__PURE__ */ state(UNINITIALIZED));\n            sources.set(prop, s2);\n            increment(version);\n          }\n        } else {\n          set(s, UNINITIALIZED);\n          increment(version);\n        }\n        return true;\n      },\n      get(target, prop, receiver) {\n        if (prop === STATE_SYMBOL) {\n          return value;\n        }\n        var s = sources.get(prop);\n        var exists = prop in target;\n        if (s === void 0 && (!exists || get_descriptor(target, prop)?.writable)) {\n          s = with_parent(() => {\n            var p = proxy(exists ? target[prop] : UNINITIALIZED);\n            var s2 = /* @__PURE__ */ state(p);\n            return s2;\n          });\n          sources.set(prop, s);\n        }\n        if (s !== void 0) {\n          var v = get(s);\n          return v === UNINITIALIZED ? void 0 : v;\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        var descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n        if (descriptor && \"value\" in descriptor) {\n          var s = sources.get(prop);\n          if (s) descriptor.value = get(s);\n        } else if (descriptor === void 0) {\n          var source2 = sources.get(prop);\n          var value2 = source2?.v;\n          if (source2 !== void 0 && value2 !== UNINITIALIZED) {\n            return {\n              enumerable: true,\n              configurable: true,\n              value: value2,\n              writable: true\n            };\n          }\n        }\n        return descriptor;\n      },\n      has(target, prop) {\n        if (prop === STATE_SYMBOL) {\n          return true;\n        }\n        var s = sources.get(prop);\n        var has = s !== void 0 && s.v !== UNINITIALIZED || Reflect.has(target, prop);\n        if (s !== void 0 || active_effect !== null && (!has || get_descriptor(target, prop)?.writable)) {\n          if (s === void 0) {\n            s = with_parent(() => {\n              var p = has ? proxy(target[prop]) : UNINITIALIZED;\n              var s2 = /* @__PURE__ */ state(p);\n              return s2;\n            });\n            sources.set(prop, s);\n          }\n          var value2 = get(s);\n          if (value2 === UNINITIALIZED) {\n            return false;\n          }\n        }\n        return has;\n      },\n      set(target, prop, value2, receiver) {\n        var s = sources.get(prop);\n        var has = prop in target;\n        if (is_proxied_array && prop === \"length\") {\n          for (var i = value2; i < /** @type {Source<number>} */\n          s.v; i += 1) {\n            var other_s = sources.get(i + \"\");\n            if (other_s !== void 0) {\n              set(other_s, UNINITIALIZED);\n            } else if (i in target) {\n              other_s = with_parent(() => /* @__PURE__ */ state(UNINITIALIZED));\n              sources.set(i + \"\", other_s);\n            }\n          }\n        }\n        if (s === void 0) {\n          if (!has || get_descriptor(target, prop)?.writable) {\n            s = with_parent(() => /* @__PURE__ */ state(void 0));\n            set(s, proxy(value2));\n            sources.set(prop, s);\n          }\n        } else {\n          has = s.v !== UNINITIALIZED;\n          var p = with_parent(() => proxy(value2));\n          set(s, p);\n        }\n        var descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n        if (descriptor?.set) {\n          descriptor.set.call(receiver, value2);\n        }\n        if (!has) {\n          if (is_proxied_array && typeof prop === \"string\") {\n            var ls = (\n              /** @type {Source<number>} */\n              sources.get(\"length\")\n            );\n            var n = Number(prop);\n            if (Number.isInteger(n) && n >= ls.v) {\n              set(ls, n + 1);\n            }\n          }\n          increment(version);\n        }\n        return true;\n      },\n      ownKeys(target) {\n        get(version);\n        var own_keys = Reflect.ownKeys(target).filter((key2) => {\n          var source3 = sources.get(key2);\n          return source3 === void 0 || source3.v !== UNINITIALIZED;\n        });\n        for (var [key, source2] of sources) {\n          if (source2.v !== UNINITIALIZED && !(key in target)) {\n            own_keys.push(key);\n          }\n        }\n        return own_keys;\n      },\n      setPrototypeOf() {\n        state_prototype_fixed();\n      }\n    }\n  );\n}\nvar $window;\nvar first_child_getter;\nvar next_sibling_getter;\nfunction init_operations() {\n  if ($window !== void 0) {\n    return;\n  }\n  $window = window;\n  var element_prototype = Element.prototype;\n  var node_prototype = Node.prototype;\n  var text_prototype = Text.prototype;\n  first_child_getter = get_descriptor(node_prototype, \"firstChild\").get;\n  next_sibling_getter = get_descriptor(node_prototype, \"nextSibling\").get;\n  if (is_extensible(element_prototype)) {\n    element_prototype.__click = void 0;\n    element_prototype.__className = void 0;\n    element_prototype.__attributes = null;\n    element_prototype.__style = void 0;\n    element_prototype.__e = void 0;\n  }\n  if (is_extensible(text_prototype)) {\n    text_prototype.__t = void 0;\n  }\n}\nfunction create_text(value = \"\") {\n  return document.createTextNode(value);\n}\n// @__NO_SIDE_EFFECTS__\nfunction get_first_child(node) {\n  return first_child_getter.call(node);\n}\n// @__NO_SIDE_EFFECTS__\nfunction get_next_sibling(node) {\n  return next_sibling_getter.call(node);\n}\nfunction clear_text_content(node) {\n  node.textContent = \"\";\n}\nfunction without_reactive_context(fn) {\n  var previous_reaction = active_reaction;\n  var previous_effect = active_effect;\n  set_active_reaction(null);\n  set_active_effect(null);\n  try {\n    return fn();\n  } finally {\n    set_active_reaction(previous_reaction);\n    set_active_effect(previous_effect);\n  }\n}\nfunction push_effect(effect, parent_effect) {\n  var parent_last = parent_effect.last;\n  if (parent_last === null) {\n    parent_effect.last = parent_effect.first = effect;\n  } else {\n    parent_last.next = effect;\n    effect.prev = parent_last;\n    parent_effect.last = effect;\n  }\n}\nfunction create_effect(type, fn, sync, push2 = true) {\n  var parent = active_effect;\n  if (parent !== null && (parent.f & INERT) !== 0) {\n    type |= INERT;\n  }\n  var effect = {\n    ctx: component_context,\n    deps: null,\n    nodes_start: null,\n    nodes_end: null,\n    f: type | DIRTY,\n    first: null,\n    fn,\n    last: null,\n    next: null,\n    parent,\n    b: parent && parent.b,\n    prev: null,\n    teardown: null,\n    transitions: null,\n    wv: 0,\n    ac: null\n  };\n  if (sync) {\n    try {\n      update_effect(effect);\n      effect.f |= EFFECT_RAN;\n    } catch (e2) {\n      destroy_effect(effect);\n      throw e2;\n    }\n  } else if (fn !== null) {\n    schedule_effect(effect);\n  }\n  if (push2) {\n    var e = effect;\n    if (sync && e.deps === null && e.teardown === null && e.nodes_start === null && e.first === e.last && // either `null`, or a singular child\n    (e.f & EFFECT_PRESERVED) === 0) {\n      e = e.first;\n    }\n    if (e !== null) {\n      e.parent = parent;\n      if (parent !== null) {\n        push_effect(e, parent);\n      }\n      if (active_reaction !== null && (active_reaction.f & DERIVED) !== 0 && (type & ROOT_EFFECT) === 0) {\n        var derived = (\n          /** @type {Derived} */\n          active_reaction\n        );\n        (derived.effects ??= []).push(e);\n      }\n    }\n  }\n  return effect;\n}\nfunction effect_tracking() {\n  return active_reaction !== null && !untracking;\n}\nfunction create_user_effect(fn) {\n  return create_effect(EFFECT | USER_EFFECT, fn, false);\n}\nfunction component_root(fn) {\n  Batch.ensure();\n  const effect = create_effect(ROOT_EFFECT | EFFECT_PRESERVED, fn, true);\n  return (options2 = {}) => {\n    return new Promise((fulfil) => {\n      if (options2.outro) {\n        pause_effect(effect, () => {\n          destroy_effect(effect);\n          fulfil(void 0);\n        });\n      } else {\n        destroy_effect(effect);\n        fulfil(void 0);\n      }\n    });\n  };\n}\nfunction render_effect(fn, flags2 = 0) {\n  return create_effect(RENDER_EFFECT | flags2, fn, true);\n}\nfunction block(fn, flags2 = 0) {\n  var effect = create_effect(BLOCK_EFFECT | flags2, fn, true);\n  return effect;\n}\nfunction branch(fn, push2 = true) {\n  return create_effect(BRANCH_EFFECT | EFFECT_PRESERVED, fn, true, push2);\n}\nfunction execute_effect_teardown(effect) {\n  var teardown = effect.teardown;\n  if (teardown !== null) {\n    const previously_destroying_effect = is_destroying_effect;\n    const previous_reaction = active_reaction;\n    set_is_destroying_effect(true);\n    set_active_reaction(null);\n    try {\n      teardown.call(null);\n    } finally {\n      set_is_destroying_effect(previously_destroying_effect);\n      set_active_reaction(previous_reaction);\n    }\n  }\n}\nfunction destroy_effect_children(signal, remove_dom = false) {\n  var effect = signal.first;\n  signal.first = signal.last = null;\n  while (effect !== null) {\n    const controller = effect.ac;\n    if (controller !== null) {\n      without_reactive_context(() => {\n        controller.abort(STALE_REACTION);\n      });\n    }\n    var next2 = effect.next;\n    if ((effect.f & ROOT_EFFECT) !== 0) {\n      effect.parent = null;\n    } else {\n      destroy_effect(effect, remove_dom);\n    }\n    effect = next2;\n  }\n}\nfunction destroy_block_effect_children(signal) {\n  var effect = signal.first;\n  while (effect !== null) {\n    var next2 = effect.next;\n    if ((effect.f & BRANCH_EFFECT) === 0) {\n      destroy_effect(effect);\n    }\n    effect = next2;\n  }\n}\nfunction destroy_effect(effect, remove_dom = true) {\n  var removed = false;\n  if ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null && effect.nodes_end !== null) {\n    remove_effect_dom(\n      effect.nodes_start,\n      /** @type {TemplateNode} */\n      effect.nodes_end\n    );\n    removed = true;\n  }\n  destroy_effect_children(effect, remove_dom && !removed);\n  remove_reactions(effect, 0);\n  set_signal_status(effect, DESTROYED);\n  var transitions = effect.transitions;\n  if (transitions !== null) {\n    for (const transition of transitions) {\n      transition.stop();\n    }\n  }\n  execute_effect_teardown(effect);\n  var parent = effect.parent;\n  if (parent !== null && parent.first !== null) {\n    unlink_effect(effect);\n  }\n  effect.next = effect.prev = effect.teardown = effect.ctx = effect.deps = effect.fn = effect.nodes_start = effect.nodes_end = effect.ac = null;\n}\nfunction remove_effect_dom(node, end) {\n  while (node !== null) {\n    var next2 = node === end ? null : (\n      /** @type {TemplateNode} */\n      /* @__PURE__ */ get_next_sibling(node)\n    );\n    node.remove();\n    node = next2;\n  }\n}\nfunction unlink_effect(effect) {\n  var parent = effect.parent;\n  var prev = effect.prev;\n  var next2 = effect.next;\n  if (prev !== null) prev.next = next2;\n  if (next2 !== null) next2.prev = prev;\n  if (parent !== null) {\n    if (parent.first === effect) parent.first = next2;\n    if (parent.last === effect) parent.last = prev;\n  }\n}\nfunction pause_effect(effect, callback) {\n  var transitions = [];\n  pause_children(effect, transitions, true);\n  run_out_transitions(transitions, () => {\n    destroy_effect(effect);\n    if (callback) callback();\n  });\n}\nfunction run_out_transitions(transitions, fn) {\n  var remaining = transitions.length;\n  if (remaining > 0) {\n    var check = () => --remaining || fn();\n    for (var transition of transitions) {\n      transition.out(check);\n    }\n  } else {\n    fn();\n  }\n}\nfunction pause_children(effect, transitions, local) {\n  if ((effect.f & INERT) !== 0) return;\n  effect.f ^= INERT;\n  if (effect.transitions !== null) {\n    for (const transition of effect.transitions) {\n      if (transition.is_global || local) {\n        transitions.push(transition);\n      }\n    }\n  }\n  var child = effect.first;\n  while (child !== null) {\n    var sibling = child.next;\n    var transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n    pause_children(child, transitions, transparent ? local : false);\n    child = sibling;\n  }\n}\nlet is_updating_effect = false;\nfunction set_is_updating_effect(value) {\n  is_updating_effect = value;\n}\nlet is_destroying_effect = false;\nfunction set_is_destroying_effect(value) {\n  is_destroying_effect = value;\n}\nlet active_reaction = null;\nlet untracking = false;\nfunction set_active_reaction(reaction) {\n  active_reaction = reaction;\n}\nlet active_effect = null;\nfunction set_active_effect(effect) {\n  active_effect = effect;\n}\nlet current_sources = null;\nfunction push_reaction_value(value) {\n  if (active_reaction !== null && true) {\n    if (current_sources === null) {\n      current_sources = [value];\n    } else {\n      current_sources.push(value);\n    }\n  }\n}\nlet new_deps = null;\nlet skipped_deps = 0;\nlet untracked_writes = null;\nfunction set_untracked_writes(value) {\n  untracked_writes = value;\n}\nlet write_version = 1;\nlet read_version = 0;\nlet update_version = read_version;\nfunction set_update_version(value) {\n  update_version = value;\n}\nlet skip_reaction = false;\nfunction increment_write_version() {\n  return ++write_version;\n}\nfunction is_dirty(reaction) {\n  var flags2 = reaction.f;\n  if ((flags2 & DIRTY) !== 0) {\n    return true;\n  }\n  if ((flags2 & MAYBE_DIRTY) !== 0) {\n    var dependencies = reaction.deps;\n    var is_unowned = (flags2 & UNOWNED) !== 0;\n    if (dependencies !== null) {\n      var i;\n      var dependency;\n      var is_disconnected = (flags2 & DISCONNECTED) !== 0;\n      var is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n      var length = dependencies.length;\n      if ((is_disconnected || is_unowned_connected) && (active_effect === null || (active_effect.f & DESTROYED) === 0)) {\n        var derived = (\n          /** @type {Derived} */\n          reaction\n        );\n        var parent = derived.parent;\n        for (i = 0; i < length; i++) {\n          dependency = dependencies[i];\n          if (is_disconnected || !dependency?.reactions?.includes(derived)) {\n            (dependency.reactions ??= []).push(derived);\n          }\n        }\n        if (is_disconnected) {\n          derived.f ^= DISCONNECTED;\n        }\n        if (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n          derived.f ^= UNOWNED;\n        }\n      }\n      for (i = 0; i < length; i++) {\n        dependency = dependencies[i];\n        if (is_dirty(\n          /** @type {Derived} */\n          dependency\n        )) {\n          update_derived(\n            /** @type {Derived} */\n            dependency\n          );\n        }\n        if (dependency.wv > reaction.wv) {\n          return true;\n        }\n      }\n    }\n    if (!is_unowned || active_effect !== null && !skip_reaction) {\n      set_signal_status(reaction, CLEAN);\n    }\n  }\n  return false;\n}\nfunction schedule_possible_effect_self_invalidation(signal, effect, root2 = true) {\n  var reactions = signal.reactions;\n  if (reactions === null) return;\n  if (current_sources?.includes(signal)) {\n    return;\n  }\n  for (var i = 0; i < reactions.length; i++) {\n    var reaction = reactions[i];\n    if ((reaction.f & DERIVED) !== 0) {\n      schedule_possible_effect_self_invalidation(\n        /** @type {Derived} */\n        reaction,\n        effect,\n        false\n      );\n    } else if (effect === reaction) {\n      if (root2) {\n        set_signal_status(reaction, DIRTY);\n      } else if ((reaction.f & CLEAN) !== 0) {\n        set_signal_status(reaction, MAYBE_DIRTY);\n      }\n      schedule_effect(\n        /** @type {Effect} */\n        reaction\n      );\n    }\n  }\n}\nfunction update_reaction(reaction) {\n  var previous_deps = new_deps;\n  var previous_skipped_deps = skipped_deps;\n  var previous_untracked_writes = untracked_writes;\n  var previous_reaction = active_reaction;\n  var previous_skip_reaction = skip_reaction;\n  var previous_sources = current_sources;\n  var previous_component_context = component_context;\n  var previous_untracking = untracking;\n  var previous_update_version = update_version;\n  var flags2 = reaction.f;\n  new_deps = /** @type {null | Value[]} */\n  null;\n  skipped_deps = 0;\n  untracked_writes = null;\n  skip_reaction = (flags2 & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n  active_reaction = (flags2 & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n  current_sources = null;\n  set_component_context(reaction.ctx);\n  untracking = false;\n  update_version = ++read_version;\n  if (reaction.ac !== null) {\n    without_reactive_context(() => {\n      reaction.ac.abort(STALE_REACTION);\n    });\n    reaction.ac = null;\n  }\n  try {\n    reaction.f |= REACTION_IS_UPDATING;\n    var fn = (\n      /** @type {Function} */\n      reaction.fn\n    );\n    var result = fn();\n    var deps = reaction.deps;\n    if (new_deps !== null) {\n      var i;\n      remove_reactions(reaction, skipped_deps);\n      if (deps !== null && skipped_deps > 0) {\n        deps.length = skipped_deps + new_deps.length;\n        for (i = 0; i < new_deps.length; i++) {\n          deps[skipped_deps + i] = new_deps[i];\n        }\n      } else {\n        reaction.deps = deps = new_deps;\n      }\n      if (!skip_reaction || // Deriveds that already have reactions can cleanup, so we still add them as reactions\n      (flags2 & DERIVED) !== 0 && /** @type {import('#client').Derived} */\n      reaction.reactions !== null) {\n        for (i = skipped_deps; i < deps.length; i++) {\n          (deps[i].reactions ??= []).push(reaction);\n        }\n      }\n    } else if (deps !== null && skipped_deps < deps.length) {\n      remove_reactions(reaction, skipped_deps);\n      deps.length = skipped_deps;\n    }\n    if (is_runes() && untracked_writes !== null && !untracking && deps !== null && (reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0) {\n      for (i = 0; i < /** @type {Source[]} */\n      untracked_writes.length; i++) {\n        schedule_possible_effect_self_invalidation(\n          untracked_writes[i],\n          /** @type {Effect} */\n          reaction\n        );\n      }\n    }\n    if (previous_reaction !== null && previous_reaction !== reaction) {\n      read_version++;\n      if (untracked_writes !== null) {\n        if (previous_untracked_writes === null) {\n          previous_untracked_writes = untracked_writes;\n        } else {\n          previous_untracked_writes.push(.../** @type {Source[]} */\n          untracked_writes);\n        }\n      }\n    }\n    if ((reaction.f & ERROR_VALUE) !== 0) {\n      reaction.f ^= ERROR_VALUE;\n    }\n    return result;\n  } catch (error) {\n    return handle_error(error);\n  } finally {\n    reaction.f ^= REACTION_IS_UPDATING;\n    new_deps = previous_deps;\n    skipped_deps = previous_skipped_deps;\n    untracked_writes = previous_untracked_writes;\n    active_reaction = previous_reaction;\n    skip_reaction = previous_skip_reaction;\n    current_sources = previous_sources;\n    set_component_context(previous_component_context);\n    untracking = previous_untracking;\n    update_version = previous_update_version;\n  }\n}\nfunction remove_reaction(signal, dependency) {\n  let reactions = dependency.reactions;\n  if (reactions !== null) {\n    var index = index_of.call(reactions, signal);\n    if (index !== -1) {\n      var new_length = reactions.length - 1;\n      if (new_length === 0) {\n        reactions = dependency.reactions = null;\n      } else {\n        reactions[index] = reactions[new_length];\n        reactions.pop();\n      }\n    }\n  }\n  if (reactions === null && (dependency.f & DERIVED) !== 0 && // Destroying a child effect while updating a parent effect can cause a dependency to appear\n  // to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n  // allows us to skip the expensive work of disconnecting and immediately reconnecting it\n  (new_deps === null || !new_deps.includes(dependency))) {\n    set_signal_status(dependency, MAYBE_DIRTY);\n    if ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n      dependency.f ^= DISCONNECTED;\n    }\n    destroy_derived_effects(\n      /** @type {Derived} **/\n      dependency\n    );\n    remove_reactions(\n      /** @type {Derived} **/\n      dependency,\n      0\n    );\n  }\n}\nfunction remove_reactions(signal, start_index) {\n  var dependencies = signal.deps;\n  if (dependencies === null) return;\n  for (var i = start_index; i < dependencies.length; i++) {\n    remove_reaction(signal, dependencies[i]);\n  }\n}\nfunction update_effect(effect) {\n  var flags2 = effect.f;\n  if ((flags2 & DESTROYED) !== 0) {\n    return;\n  }\n  set_signal_status(effect, CLEAN);\n  var previous_effect = active_effect;\n  var was_updating_effect = is_updating_effect;\n  active_effect = effect;\n  is_updating_effect = true;\n  try {\n    if ((flags2 & BLOCK_EFFECT) !== 0) {\n      destroy_block_effect_children(effect);\n    } else {\n      destroy_effect_children(effect);\n    }\n    execute_effect_teardown(effect);\n    var teardown = update_reaction(effect);\n    effect.teardown = typeof teardown === \"function\" ? teardown : null;\n    effect.wv = write_version;\n    var dep;\n    if (BROWSER && tracing_mode_flag && (effect.f & DIRTY) !== 0 && effect.deps !== null) ;\n  } finally {\n    is_updating_effect = was_updating_effect;\n    active_effect = previous_effect;\n  }\n}\nfunction get(signal) {\n  var flags2 = signal.f;\n  var is_derived = (flags2 & DERIVED) !== 0;\n  if (active_reaction !== null && !untracking) {\n    var destroyed = active_effect !== null && (active_effect.f & DESTROYED) !== 0;\n    if (!destroyed && !current_sources?.includes(signal)) {\n      var deps = active_reaction.deps;\n      if ((active_reaction.f & REACTION_IS_UPDATING) !== 0) {\n        if (signal.rv < read_version) {\n          signal.rv = read_version;\n          if (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n            skipped_deps++;\n          } else if (new_deps === null) {\n            new_deps = [signal];\n          } else if (!skip_reaction || !new_deps.includes(signal)) {\n            new_deps.push(signal);\n          }\n        }\n      } else {\n        (active_reaction.deps ??= []).push(signal);\n        var reactions = signal.reactions;\n        if (reactions === null) {\n          signal.reactions = [active_reaction];\n        } else if (!reactions.includes(active_reaction)) {\n          reactions.push(active_reaction);\n        }\n      }\n    }\n  } else if (is_derived && /** @type {Derived} */\n  signal.deps === null && /** @type {Derived} */\n  signal.effects === null) {\n    var derived = (\n      /** @type {Derived} */\n      signal\n    );\n    var parent = derived.parent;\n    if (parent !== null && (parent.f & UNOWNED) === 0) {\n      derived.f ^= UNOWNED;\n    }\n  }\n  if (is_destroying_effect) {\n    if (old_values.has(signal)) {\n      return old_values.get(signal);\n    }\n    if (is_derived) {\n      derived = /** @type {Derived} */\n      signal;\n      var value = derived.v;\n      if ((derived.f & CLEAN) === 0 && derived.reactions !== null || depends_on_old_values(derived)) {\n        value = execute_derived(derived);\n      }\n      old_values.set(derived, value);\n      return value;\n    }\n  } else if (is_derived) {\n    derived = /** @type {Derived} */\n    signal;\n    if (is_dirty(derived)) {\n      update_derived(derived);\n    }\n  }\n  if ((signal.f & ERROR_VALUE) !== 0) {\n    throw signal.v;\n  }\n  return signal.v;\n}\nfunction depends_on_old_values(derived) {\n  if (derived.v === UNINITIALIZED) return true;\n  if (derived.deps === null) return false;\n  for (const dep of derived.deps) {\n    if (old_values.has(dep)) {\n      return true;\n    }\n    if ((dep.f & DERIVED) !== 0 && depends_on_old_values(\n      /** @type {Derived} */\n      dep\n    )) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction untrack(fn) {\n  var previous_untracking = untracking;\n  try {\n    untracking = true;\n    return fn();\n  } finally {\n    untracking = previous_untracking;\n  }\n}\nconst STATUS_MASK = -7169;\nfunction set_signal_status(signal, status) {\n  signal.f = signal.f & STATUS_MASK | status;\n}\nconst all_registered_events = /* @__PURE__ */ new Set();\nconst root_event_handles = /* @__PURE__ */ new Set();\nlet last_propagated_event = null;\nfunction handle_event_propagation(event) {\n  var handler_element = this;\n  var owner_document = (\n    /** @type {Node} */\n    handler_element.ownerDocument\n  );\n  var event_name = event.type;\n  var path = event.composedPath?.() || [];\n  var current_target = (\n    /** @type {null | Element} */\n    path[0] || event.target\n  );\n  last_propagated_event = event;\n  var path_idx = 0;\n  var handled_at = last_propagated_event === event && event.__root;\n  if (handled_at) {\n    var at_idx = path.indexOf(handled_at);\n    if (at_idx !== -1 && (handler_element === document || handler_element === /** @type {any} */\n    window)) {\n      event.__root = handler_element;\n      return;\n    }\n    var handler_idx = path.indexOf(handler_element);\n    if (handler_idx === -1) {\n      return;\n    }\n    if (at_idx <= handler_idx) {\n      path_idx = at_idx;\n    }\n  }\n  current_target = /** @type {Element} */\n  path[path_idx] || event.target;\n  if (current_target === handler_element) return;\n  define_property(event, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return current_target || owner_document;\n    }\n  });\n  var previous_reaction = active_reaction;\n  var previous_effect = active_effect;\n  set_active_reaction(null);\n  set_active_effect(null);\n  try {\n    var throw_error;\n    var other_errors = [];\n    while (current_target !== null) {\n      var parent_element = current_target.assignedSlot || current_target.parentNode || /** @type {any} */\n      current_target.host || null;\n      try {\n        var delegated = current_target[\"__\" + event_name];\n        if (delegated != null && (!/** @type {any} */\n        current_target.disabled || // DOM could've been updated already by the time this is reached, so we check this as well\n        // -> the target could not have been disabled because it emits the event in the first place\n        event.target === current_target)) {\n          if (is_array(delegated)) {\n            var [fn, ...data] = delegated;\n            fn.apply(current_target, [event, ...data]);\n          } else {\n            delegated.call(current_target, event);\n          }\n        }\n      } catch (error) {\n        if (throw_error) {\n          other_errors.push(error);\n        } else {\n          throw_error = error;\n        }\n      }\n      if (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n        break;\n      }\n      current_target = parent_element;\n    }\n    if (throw_error) {\n      for (let error of other_errors) {\n        queueMicrotask(() => {\n          throw error;\n        });\n      }\n      throw throw_error;\n    }\n  } finally {\n    event.__root = handler_element;\n    delete event.currentTarget;\n    set_active_reaction(previous_reaction);\n    set_active_effect(previous_effect);\n  }\n}\nfunction assign_nodes(start, end) {\n  var effect = (\n    /** @type {Effect} */\n    active_effect\n  );\n  if (effect.nodes_start === null) {\n    effect.nodes_start = start;\n    effect.nodes_end = end;\n  }\n}\nfunction mount(component, options2) {\n  return _mount(component, options2);\n}\nfunction hydrate(component, options2) {\n  init_operations();\n  options2.intro = options2.intro ?? false;\n  const target = options2.target;\n  const was_hydrating = hydrating;\n  const previous_hydrate_node = hydrate_node;\n  try {\n    var anchor = (\n      /** @type {TemplateNode} */\n      /* @__PURE__ */ get_first_child(target)\n    );\n    while (anchor && (anchor.nodeType !== COMMENT_NODE || /** @type {Comment} */\n    anchor.data !== HYDRATION_START)) {\n      anchor = /** @type {TemplateNode} */\n      /* @__PURE__ */ get_next_sibling(anchor);\n    }\n    if (!anchor) {\n      throw HYDRATION_ERROR;\n    }\n    set_hydrating(true);\n    set_hydrate_node(\n      /** @type {Comment} */\n      anchor\n    );\n    const instance = _mount(component, { ...options2, anchor });\n    set_hydrating(false);\n    return (\n      /**  @type {Exports} */\n      instance\n    );\n  } catch (error) {\n    if (error instanceof Error && error.message.split(\"\\n\").some((line) => line.startsWith(\"https://svelte.dev/e/\"))) {\n      throw error;\n    }\n    if (error !== HYDRATION_ERROR) {\n      console.warn(\"Failed to hydrate: \", error);\n    }\n    if (options2.recover === false) {\n      hydration_failed();\n    }\n    init_operations();\n    clear_text_content(target);\n    set_hydrating(false);\n    return mount(component, options2);\n  } finally {\n    set_hydrating(was_hydrating);\n    set_hydrate_node(previous_hydrate_node);\n  }\n}\nconst document_listeners = /* @__PURE__ */ new Map();\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n  init_operations();\n  var registered_events = /* @__PURE__ */ new Set();\n  var event_handle = (events2) => {\n    for (var i = 0; i < events2.length; i++) {\n      var event_name = events2[i];\n      if (registered_events.has(event_name)) continue;\n      registered_events.add(event_name);\n      var passive = is_passive_event(event_name);\n      target.addEventListener(event_name, handle_event_propagation, { passive });\n      var n = document_listeners.get(event_name);\n      if (n === void 0) {\n        document.addEventListener(event_name, handle_event_propagation, { passive });\n        document_listeners.set(event_name, 1);\n      } else {\n        document_listeners.set(event_name, n + 1);\n      }\n    }\n  };\n  event_handle(array_from(all_registered_events));\n  root_event_handles.add(event_handle);\n  var component = void 0;\n  var unmount2 = component_root(() => {\n    var anchor_node = anchor ?? target.appendChild(create_text());\n    boundary(\n      /** @type {TemplateNode} */\n      anchor_node,\n      {\n        pending: () => {\n        }\n      },\n      (anchor_node2) => {\n        if (context) {\n          push({});\n          var ctx = (\n            /** @type {ComponentContext} */\n            component_context\n          );\n          ctx.c = context;\n        }\n        if (events) {\n          props.$$events = events;\n        }\n        if (hydrating) {\n          assign_nodes(\n            /** @type {TemplateNode} */\n            anchor_node2,\n            null\n          );\n        }\n        component = Component(anchor_node2, props) || {};\n        if (hydrating) {\n          active_effect.nodes_end = hydrate_node;\n          if (hydrate_node === null || hydrate_node.nodeType !== COMMENT_NODE || /** @type {Comment} */\n          hydrate_node.data !== HYDRATION_END) {\n            hydration_mismatch();\n            throw HYDRATION_ERROR;\n          }\n        }\n        if (context) {\n          pop();\n        }\n      }\n    );\n    return () => {\n      for (var event_name of registered_events) {\n        target.removeEventListener(event_name, handle_event_propagation);\n        var n = (\n          /** @type {number} */\n          document_listeners.get(event_name)\n        );\n        if (--n === 0) {\n          document.removeEventListener(event_name, handle_event_propagation);\n          document_listeners.delete(event_name);\n        } else {\n          document_listeners.set(event_name, n);\n        }\n      }\n      root_event_handles.delete(event_handle);\n      if (anchor_node !== anchor) {\n        anchor_node.parentNode?.removeChild(anchor_node);\n      }\n    };\n  });\n  mounted_components.set(component, unmount2);\n  return component;\n}\nlet mounted_components = /* @__PURE__ */ new WeakMap();\nfunction unmount(component, options2) {\n  const fn = mounted_components.get(component);\n  if (fn) {\n    mounted_components.delete(component);\n    return fn(options2);\n  }\n  return Promise.resolve();\n}\nfunction asClassComponent$1(component) {\n  return class extends Svelte4Component {\n    /** @param {any} options */\n    constructor(options2) {\n      super({\n        component,\n        ...options2\n      });\n    }\n  };\n}\nclass Svelte4Component {\n  /** @type {any} */\n  #events;\n  /** @type {Record<string, any>} */\n  #instance;\n  /**\n   * @param {ComponentConstructorOptions & {\n   *  component: any;\n   * }} options\n   */\n  constructor(options2) {\n    var sources = /* @__PURE__ */ new Map();\n    var add_source = (key, value) => {\n      var s = /* @__PURE__ */ mutable_source(value, false, false);\n      sources.set(key, s);\n      return s;\n    };\n    const props = new Proxy(\n      { ...options2.props || {}, $$events: {} },\n      {\n        get(target, prop) {\n          return get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n        },\n        has(target, prop) {\n          if (prop === LEGACY_PROPS) return true;\n          get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n          return Reflect.has(target, prop);\n        },\n        set(target, prop, value) {\n          set(sources.get(prop) ?? add_source(prop, value), value);\n          return Reflect.set(target, prop, value);\n        }\n      }\n    );\n    this.#instance = (options2.hydrate ? hydrate : mount)(options2.component, {\n      target: options2.target,\n      anchor: options2.anchor,\n      props,\n      context: options2.context,\n      intro: options2.intro ?? false,\n      recover: options2.recover\n    });\n    if (!options2?.props?.$$host || options2.sync === false) {\n      flushSync();\n    }\n    this.#events = props.$$events;\n    for (const key of Object.keys(this.#instance)) {\n      if (key === \"$set\" || key === \"$destroy\" || key === \"$on\") continue;\n      define_property(this, key, {\n        get() {\n          return this.#instance[key];\n        },\n        /** @param {any} value */\n        set(value) {\n          this.#instance[key] = value;\n        },\n        enumerable: true\n      });\n    }\n    this.#instance.$set = /** @param {Record<string, any>} next */\n    (next2) => {\n      Object.assign(props, next2);\n    };\n    this.#instance.$destroy = () => {\n      unmount(this.#instance);\n    };\n  }\n  /** @param {Record<string, any>} props */\n  $set(props) {\n    this.#instance.$set(props);\n  }\n  /**\n   * @param {string} event\n   * @param {(...args: any[]) => any} callback\n   * @returns {any}\n   */\n  $on(event, callback) {\n    this.#events[event] = this.#events[event] || [];\n    const cb = (...args) => callback.call(this, ...args);\n    this.#events[event].push(cb);\n    return () => {\n      this.#events[event] = this.#events[event].filter(\n        /** @param {any} fn */\n        (fn) => fn !== cb\n      );\n    };\n  }\n  $destroy() {\n    this.#instance.$destroy();\n  }\n}\nlet read_implementation = null;\nfunction set_read_implementation(fn) {\n  read_implementation = fn;\n}\nfunction set_manifest(_) {\n}\nfunction asClassComponent(component) {\n  const component_constructor = asClassComponent$1(component);\n  const _render = (props, { context } = {}) => {\n    const result = render(component, { props, context });\n    const munged = Object.defineProperties(\n      /** @type {LegacyRenderResult & PromiseLike<LegacyRenderResult>} */\n      {},\n      {\n        css: {\n          value: { code: \"\", map: null }\n        },\n        head: {\n          get: () => result.head\n        },\n        html: {\n          get: () => result.body\n        },\n        then: {\n          /**\n           * this is not type-safe, but honestly it's the best I can do right now, and it's a straightforward function.\n           *\n           * @template TResult1\n           * @template [TResult2=never]\n           * @param { (value: LegacyRenderResult) => TResult1 } onfulfilled\n           * @param { (reason: unknown) => TResult2 } onrejected\n           */\n          value: (onfulfilled, onrejected) => {\n            {\n              experimental_async_ssr();\n              const user_result = onfulfilled({\n                css: munged.css,\n                head: munged.head,\n                html: munged.html\n              });\n              return Promise.resolve(user_result);\n            }\n          }\n        }\n      }\n    );\n    return munged;\n  };\n  component_constructor.render = _render;\n  return component_constructor;\n}\nfunction Root($$renderer, $$props) {\n  $$renderer.component(($$renderer2) => {\n    let {\n      stores,\n      page,\n      constructors,\n      components = [],\n      form,\n      data_0 = null,\n      data_1 = null\n    } = $$props;\n    {\n      setContext(\"__svelte__\", stores);\n    }\n    {\n      stores.page.set(page);\n    }\n    const Pyramid_1 = constructors[1];\n    if (constructors[1]) {\n      $$renderer2.push(\"<!--[-->\");\n      const Pyramid_0 = constructors[0];\n      $$renderer2.push(`<!---->`);\n      Pyramid_0($$renderer2, {\n        data: data_0,\n        form,\n        params: page.params,\n        children: ($$renderer3) => {\n          $$renderer3.push(`<!---->`);\n          Pyramid_1($$renderer3, { data: data_1, form, params: page.params });\n          $$renderer3.push(`<!---->`);\n        },\n        $$slots: { default: true }\n      });\n      $$renderer2.push(`<!---->`);\n    } else {\n      $$renderer2.push(\"<!--[!-->\");\n      const Pyramid_0 = constructors[0];\n      $$renderer2.push(`<!---->`);\n      Pyramid_0($$renderer2, { data: data_0, form, params: page.params });\n      $$renderer2.push(`<!---->`);\n    }\n    $$renderer2.push(`<!--]--> `);\n    {\n      $$renderer2.push(\"<!--[!-->\");\n    }\n    $$renderer2.push(`<!--]-->`);\n  });\n}\nconst root = asClassComponent(Root);\nconst options = {\n  app_template_contains_nonce: false,\n  async: false,\n  csp: { \"mode\": \"auto\", \"directives\": { \"upgrade-insecure-requests\": false, \"block-all-mixed-content\": false }, \"reportOnly\": { \"upgrade-insecure-requests\": false, \"block-all-mixed-content\": false } },\n  csrf_check_origin: true,\n  csrf_trusted_origins: [],\n  embedded: false,\n  env_public_prefix: \"PUBLIC_\",\n  env_private_prefix: \"\",\n  hash_routing: false,\n  hooks: null,\n  // added lazily, via `get_hooks`\n  preload_strategy: \"modulepreload\",\n  root,\n  service_worker: false,\n  service_worker_options: void 0,\n  templates: {\n    app: ({ head, body, assets, nonce, env }) => '<!DOCTYPE html>\\n<html lang=\"en\">\\n  <head>\\n    <meta charset=\"utf-8\" />\\n    <link rel=\"icon\" href=\"' + assets + '/favicon.png\" />\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\\n    ' + head + \"\\n  </head>\\n  <body>\\n    \" + body + \"\\n  </body>\\n</html>\\n\",\n    error: ({ status, message }) => '<!doctype html>\\n<html lang=\"en\">\\n\t<head>\\n\t\t<meta charset=\"utf-8\" />\\n\t\t<title>' + message + `</title>\n\n\t\t<style>\n\t\t\tbody {\n\t\t\t\t--bg: white;\n\t\t\t\t--fg: #222;\n\t\t\t\t--divider: #ccc;\n\t\t\t\tbackground: var(--bg);\n\t\t\t\tcolor: var(--fg);\n\t\t\t\tfont-family:\n\t\t\t\t\tsystem-ui,\n\t\t\t\t\t-apple-system,\n\t\t\t\t\tBlinkMacSystemFont,\n\t\t\t\t\t'Segoe UI',\n\t\t\t\t\tRoboto,\n\t\t\t\t\tOxygen,\n\t\t\t\t\tUbuntu,\n\t\t\t\t\tCantarell,\n\t\t\t\t\t'Open Sans',\n\t\t\t\t\t'Helvetica Neue',\n\t\t\t\t\tsans-serif;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 100vh;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t.error {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tmax-width: 32rem;\n\t\t\t\tmargin: 0 1rem;\n\t\t\t}\n\n\t\t\t.status {\n\t\t\t\tfont-weight: 200;\n\t\t\t\tfont-size: 3rem;\n\t\t\t\tline-height: 1;\n\t\t\t\tposition: relative;\n\t\t\t\ttop: -0.05rem;\n\t\t\t}\n\n\t\t\t.message {\n\t\t\t\tborder-left: 1px solid var(--divider);\n\t\t\t\tpadding: 0 0 0 1rem;\n\t\t\t\tmargin: 0 0 0 1rem;\n\t\t\t\tmin-height: 2.5rem;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t}\n\n\t\t\t.message h1 {\n\t\t\t\tfont-weight: 400;\n\t\t\t\tfont-size: 1em;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t@media (prefers-color-scheme: dark) {\n\t\t\t\tbody {\n\t\t\t\t\t--bg: #222;\n\t\t\t\t\t--fg: #ddd;\n\t\t\t\t\t--divider: #666;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"error\">\n\t\t\t<span class=\"status\">` + status + '</span>\\n\t\t\t<div class=\"message\">\\n\t\t\t\t<h1>' + message + \"</h1>\\n\t\t\t</div>\\n\t\t</div>\\n\t</body>\\n</html>\\n\"\n  },\n  version_hash: \"18iy9dc\"\n};\nasync function get_hooks() {\n  let handle;\n  let handleFetch;\n  let handleError;\n  let handleValidationError;\n  let init;\n  ({ handle, handleFetch, handleError, handleValidationError, init } = await import(\"./hooks.server.js\"));\n  let reroute;\n  let transport;\n  return {\n    handle,\n    handleFetch,\n    handleError,\n    handleValidationError,\n    init,\n    reroute,\n    transport\n  };\n}\nexport {\n  set_public_env as a,\n  set_read_implementation as b,\n  set_manifest as c,\n  get_hooks as g,\n  options as o,\n  public_env as p,\n  read_implementation as r,\n  set_private_env as s\n};\n", "export const manifest = (() => {\nfunction __memo(fn) {\n\tlet value;\n\treturn () => value ??= (value = fn());\n}\n\nreturn {\n\tappDir: \"_app\",\n\tappPath: \"_app\",\n\tassets: new Set([]),\n\tmimeTypes: {},\n\t_: {\n\t\tclient: {start:\"_app/immutable/entry/start.eCpOeaoY.js\",app:\"_app/immutable/entry/app.NGxsE6VI.js\",imports:[\"_app/immutable/entry/start.eCpOeaoY.js\",\"_app/immutable/chunks/C222IYg3.js\",\"_app/immutable/chunks/BuNyUiBZ.js\",\"_app/immutable/chunks/D4DQbwrw.js\",\"_app/immutable/entry/app.NGxsE6VI.js\",\"_app/immutable/chunks/D4DQbwrw.js\",\"_app/immutable/chunks/BuNyUiBZ.js\",\"_app/immutable/chunks/NZTpNUN0.js\",\"_app/immutable/chunks/8HJfsTjg.js\"],stylesheets:[],fonts:[],uses_env_dynamic_public:false},\n\t\tnodes: [\n\t\t\t__memo(() => import('../output/server/nodes/0.js')),\n\t\t\t__memo(() => import('../output/server/nodes/1.js')),\n\t\t\t__memo(() => import('../output/server/nodes/2.js'))\n\t\t],\n\t\tremotes: {\n\t\t\t\n\t\t},\n\t\troutes: [\n\t\t\t{\n\t\t\t\tid: \"/\",\n\t\t\t\tpattern: /^\\/$/,\n\t\t\t\tparams: [],\n\t\t\t\tpage: { layouts: [0,], errors: [1,], leaf: 2 },\n\t\t\t\tendpoint: null\n\t\t\t}\n\t\t],\n\t\tprerendered_routes: new Set([]),\n\t\tmatchers: async () => {\n\t\t\t\n\t\t\treturn {  };\n\t\t},\n\t\tserver_assets: {}\n\t}\n}\n})();\n\nexport const prerendered = new Set([]);\n\nexport const base_path = \"\";\n", "// src/worker.js\nimport { Server } from \"../output/server/index.js\";\nimport { manifest, prerendered, base_path } from \"./manifest.js\";\n\n// ../../node_modules/.pnpm/worktop@0.8.0-next.18/node_modules/worktop/cache/index.mjs\nasync function e(e3, t2) {\n  let n2 = \"string\" != typeof t2 && \"HEAD\" === t2.method;\n  n2 && (t2 = new Request(t2, { method: \"GET\" }));\n  let r3 = await e3.match(t2);\n  return n2 && r3 && (r3 = new Response(null, r3)), r3;\n}\nfunction t(e3, t2, n2, o2) {\n  return (\"string\" == typeof t2 || \"GET\" === t2.method) && r(n2) && (n2.headers.has(\"Set-Cookie\") && (n2 = new Response(n2.body, n2)).headers.append(\"Cache-Control\", \"private=Set-Cookie\"), o2.waitUntil(e3.put(t2, n2.clone()))), n2;\n}\nvar n = /* @__PURE__ */ new Set([200, 203, 204, 300, 301, 404, 405, 410, 414, 501]);\nfunction r(e3) {\n  if (!n.has(e3.status)) return false;\n  if (~(e3.headers.get(\"Vary\") || \"\").indexOf(\"*\")) return false;\n  let t2 = e3.headers.get(\"Cache-Control\") || \"\";\n  return !/(private|no-cache|no-store)/i.test(t2);\n}\nfunction o(n2) {\n  return async function(r3, o2) {\n    let a = await e(n2, r3);\n    if (a) return a;\n    o2.defer((e3) => {\n      t(n2, r3, e3, o2);\n    });\n  };\n}\n\n// ../../node_modules/.pnpm/worktop@0.8.0-next.18/node_modules/worktop/cfw.cache/index.mjs\nvar s = caches.default;\nvar c = t.bind(0, s);\nvar r2 = e.bind(0, s);\nvar e2 = o.bind(0, s);\n\n// src/worker.js\nvar server = new Server(manifest);\nvar app_path = `/${manifest.appPath}`;\nvar immutable = `${app_path}/immutable/`;\nvar version_file = `${app_path}/version.json`;\nvar worker = {\n  async fetch(req, env, context) {\n    await server.init({ env });\n    let pragma = req.headers.get(\"cache-control\") || \"\";\n    let res = !pragma.includes(\"no-cache\") && await r2(req);\n    if (res) return res;\n    let { pathname, search } = new URL(req.url);\n    try {\n      pathname = decodeURIComponent(pathname);\n    } catch {\n    }\n    const stripped_pathname = pathname.replace(/\\/$/, \"\");\n    let is_static_asset = false;\n    const filename = stripped_pathname.slice(base_path.length + 1);\n    if (filename) {\n      is_static_asset = manifest.assets.has(filename) || manifest.assets.has(filename + \"/index.html\") || filename in manifest._.server_assets || filename + \"/index.html\" in manifest._.server_assets;\n    }\n    let location = pathname.at(-1) === \"/\" ? stripped_pathname : pathname + \"/\";\n    if (is_static_asset || prerendered.has(pathname) || pathname === version_file || pathname.startsWith(immutable)) {\n      res = await env.ASSETS.fetch(req);\n    } else if (location && prerendered.has(location)) {\n      if (search) location += search;\n      res = new Response(\"\", {\n        status: 308,\n        headers: {\n          location\n        }\n      });\n    } else {\n      res = await server.respond(req, {\n        // @ts-ignore\n        platform: { env, context, caches, cf: req.cf },\n        getClientAddress() {\n          return req.headers.get(\"cf-connecting-ip\");\n        }\n      });\n    }\n    pragma = res.headers.get(\"cache-control\") || \"\";\n    return pragma && res.status < 400 ? c(req, res, context) : res;\n  }\n};\nvar worker_default = worker;\nexport {\n  worker_default as default\n};\n", "// Shared security headers used across the Cloudflare worker and server hooks.\n/** @type {Record<string, string>} */\nexport const SECURITY_HEADERS = {\n\t'Cross-Origin-Opener-Policy': 'same-origin',\n\t'Cross-Origin-Embedder-Policy': 'require-corp',\n\t'Cross-Origin-Resource-Policy': 'same-origin',\n\t'Origin-Agent-Cluster': '?1'\n};\n\n/** @type {Array<[string, string]>} */\nexport const SECURITY_HEADER_ENTRIES = Object.entries(SECURITY_HEADERS);\n", "let wasm;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder();\n\nif (!('encodeInto' in cachedTextEncoder)) {\n    cachedTextEncoder.encodeInto = function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    }\n}\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = cachedTextEncoder.encodeInto(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nconst CLOSURE_DTORS = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(\nstate => {\n    wasm.__wbindgen_export_5.get(state.dtor)(state.a, state.b);\n}\n);\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_5.get(state.dtor)(a, state.b);\n                CLOSURE_DTORS.unregister(state);\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\n/**\n * @returns {MemoryStorageAdapter}\n */\nexport function createMemoryStorageAdapter() {\n    const ret = wasm.createMemoryStorageAdapter();\n    return MemoryStorageAdapter.__wrap(ret);\n}\n\nfunction __wbg_adapter_14(arg0, arg1, arg2) {\n    wasm.closure50_externref_shim(arg0, arg1, arg2);\n}\n\nfunction __wbg_adapter_79(arg0, arg1, arg2, arg3) {\n    wasm.closure96_externref_shim(arg0, arg1, arg2, arg3);\n}\n\nconst BeelayFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_beelay_free(ptr >>> 0, 1));\n\nexport class Beelay {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Beelay.prototype);\n        obj.__wbg_ptr = ptr;\n        BeelayFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        BeelayFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_beelay_free(ptr, 0);\n    }\n    /**\n     * Mimics the original `Beelay.load` entrypoint and returns a handle to the runtime.\n     * @param {any} _config\n     * @returns {Promise<Beelay>}\n     */\n    static load(_config) {\n        const ret = wasm.beelay_load(_config);\n        return ret;\n    }\n    /**\n     * Create a new document with the provided initial commit.\n     * @param {any} args\n     * @returns {Promise<any>}\n     */\n    createDoc(args) {\n        const ret = wasm.beelay_createDoc(this.__wbg_ptr, args);\n        return ret;\n    }\n    /**\n     * Load all commits for a document.\n     * @param {string} doc_id\n     * @returns {Promise<any>}\n     */\n    loadDocument(doc_id) {\n        const ptr0 = passStringToWasm0(doc_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.beelay_loadDocument(this.__wbg_ptr, ptr0, len0);\n        return ret;\n    }\n    /**\n     * Add commits produced by a client.\n     * @param {any} args\n     * @returns {Promise<any>}\n     */\n    addCommits(args) {\n        const ret = wasm.beelay_addCommits(this.__wbg_ptr, args);\n        return ret;\n    }\n    /**\n     * Graceful shutdown.\n     */\n    stop() {\n        wasm.beelay_stop(this.__wbg_ptr);\n    }\n    /**\n     * Mock contact card support for compatibility with existing worker code.\n     * @returns {string}\n     */\n    createContactCard() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.beelay_createContactCard(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * Wait until synced \u2013 no-op in the single-node WASM runtime.\n     * @param {string} _peer_id\n     * @returns {Promise<any>}\n     */\n    waitUntilSynced(_peer_id) {\n        const ptr0 = passStringToWasm0(_peer_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.beelay_waitUntilSynced(this.__wbg_ptr, ptr0, len0);\n        return ret;\n    }\n}\nif (Symbol.dispose) Beelay.prototype[Symbol.dispose] = Beelay.prototype.free;\n\nconst MemorySignerFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_memorysigner_free(ptr >>> 0, 1));\n/**\n * Simple in-memory signer placeholder to reduce TypeScript churn.\n */\nexport class MemorySigner {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        MemorySignerFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_memorysigner_free(ptr, 0);\n    }\n    constructor() {\n        const ret = wasm.createMemoryStorageAdapter();\n        this.__wbg_ptr = ret >>> 0;\n        MemorySignerFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    /**\n     * @returns {Uint8Array}\n     */\n    verifyingKey() {\n        const ret = wasm.memorysigner_verifyingKey(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {Uint8Array} message\n     * @returns {Promise<Uint8Array>}\n     */\n    sign(message) {\n        const ret = wasm.memorysigner_sign(this.__wbg_ptr, message);\n        return ret;\n    }\n}\nif (Symbol.dispose) MemorySigner.prototype[Symbol.dispose] = MemorySigner.prototype.free;\n\nconst MemoryStorageAdapterFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_memorystorageadapter_free(ptr >>> 0, 1));\n/**\n * Minimal storage adapter placeholder for compatibility with the worker code.\n */\nexport class MemoryStorageAdapter {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(MemoryStorageAdapter.prototype);\n        obj.__wbg_ptr = ptr;\n        MemoryStorageAdapterFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        MemoryStorageAdapterFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_memorystorageadapter_free(ptr, 0);\n    }\n    constructor() {\n        const ret = wasm.createMemoryStorageAdapter();\n        this.__wbg_ptr = ret >>> 0;\n        MemoryStorageAdapterFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n}\nif (Symbol.dispose) MemoryStorageAdapter.prototype[Symbol.dispose] = MemoryStorageAdapter.prototype.free;\n\nconst EXPECTED_RESPONSE_TYPES = new Set(['basic', 'cors', 'default']);\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                const validResponse = module.ok && EXPECTED_RESPONSE_TYPES.has(module.type);\n\n                if (validResponse && module.headers.get('Content-Type') !== 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_Error_e17e777aac105295 = function(arg0, arg1) {\n        const ret = Error(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_Number_998bea33bd87c3e0 = function(arg0) {\n        const ret = Number(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_beelay_new = function(arg0) {\n        const ret = Beelay.__wrap(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_call_13410aac570ffff7 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.call(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_call_a5400b25a865cfd8 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = arg0.call(arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_done_75ed0ee6dd243d9d = function(arg0) {\n        const ret = arg0.done;\n        return ret;\n    };\n    imports.wbg.__wbg_entries_2be2f15bd5554996 = function(arg0) {\n        const ret = Object.entries(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_get_0da715ceaecea5c8 = function(arg0, arg1) {\n        const ret = arg0[arg1 >>> 0];\n        return ret;\n    };\n    imports.wbg.__wbg_get_458e874b43b18b25 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(arg0, arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_getwithrefkey_1dc361bd10053bfe = function(arg0, arg1) {\n        const ret = arg0[arg1];\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_67f3012529f6a2dd = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof ArrayBuffer;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Map_ebb01a5b6b5ffd0b = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof Map;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_9a8378d955933db7 = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof Uint8Array;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_isArray_030cce220591fb41 = function(arg0) {\n        const ret = Array.isArray(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_isSafeInteger_1c0d1af5542e102a = function(arg0) {\n        const ret = Number.isSafeInteger(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_iterator_f370b34483c71a1c = function() {\n        const ret = Symbol.iterator;\n        return ret;\n    };\n    imports.wbg.__wbg_length_186546c51cd61acd = function(arg0) {\n        const ret = arg0.length;\n        return ret;\n    };\n    imports.wbg.__wbg_length_6bb7e81f9d7713e4 = function(arg0) {\n        const ret = arg0.length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_19c25a3f2fa63a02 = function() {\n        const ret = new Object();\n        return ret;\n    };\n    imports.wbg.__wbg_new_1f3a344cf3123716 = function() {\n        const ret = new Array();\n        return ret;\n    };\n    imports.wbg.__wbg_new_2e3c58a15f39f5f9 = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_79(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return ret;\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_new_2ff1f68f3676ea53 = function() {\n        const ret = new Map();\n        return ret;\n    };\n    imports.wbg.__wbg_new_638ebfaedbf32a5e = function(arg0) {\n        const ret = new Uint8Array(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_254190557c45b4ec = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_a167dcc7aaa3ba77 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_next_5b3530e612fde77d = function(arg0) {\n        const ret = arg0.next;\n        return ret;\n    };\n    imports.wbg.__wbg_next_692e82279131b03c = function() { return handleError(function (arg0) {\n        const ret = arg0.next();\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_prototypesetcall_3d4a26c1ed734349 = function(arg0, arg1, arg2) {\n        Uint8Array.prototype.set.call(getArrayU8FromWasm0(arg0, arg1), arg2);\n    };\n    imports.wbg.__wbg_queueMicrotask_25d0739ac89e8c88 = function(arg0) {\n        queueMicrotask(arg0);\n    };\n    imports.wbg.__wbg_queueMicrotask_4488407636f5bf24 = function(arg0) {\n        const ret = arg0.queueMicrotask;\n        return ret;\n    };\n    imports.wbg.__wbg_random_7ed63a0b38ee3b75 = function() {\n        const ret = Math.random();\n        return ret;\n    };\n    imports.wbg.__wbg_resolve_4055c623acdd6a1b = function(arg0) {\n        const ret = Promise.resolve(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n        arg0[arg1] = arg2;\n    };\n    imports.wbg.__wbg_set_90f6c0f7bd8c0415 = function(arg0, arg1, arg2) {\n        arg0[arg1 >>> 0] = arg2;\n    };\n    imports.wbg.__wbg_set_b7f1cf4fae26fe2a = function(arg0, arg1, arg2) {\n        const ret = arg0.set(arg1, arg2);\n        return ret;\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_8921f820c2ce3f12 = function() {\n        const ret = typeof global === 'undefined' ? null : global;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_f0a4409105898184 = function() {\n        const ret = typeof globalThis === 'undefined' ? null : globalThis;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_SELF_995b214ae681ff99 = function() {\n        const ret = typeof self === 'undefined' ? null : self;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_WINDOW_cde3890479c675ea = function() {\n        const ret = typeof window === 'undefined' ? null : window;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_then_e22500defe16819f = function(arg0, arg1) {\n        const ret = arg0.then(arg1);\n        return ret;\n    };\n    imports.wbg.__wbg_value_dd9372230531eade = function(arg0) {\n        const ret = arg0.value;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenbigintgetasi64_ac743ece6ab9bba1 = function(arg0, arg1) {\n        const v = arg1;\n        const ret = typeof(v) === 'bigint' ? v : undefined;\n        getDataViewMemory0().setBigInt64(arg0 + 8 * 1, isLikeNone(ret) ? BigInt(0) : ret, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n    };\n    imports.wbg.__wbg_wbindgenbooleanget_3fe6f642c7d97746 = function(arg0) {\n        const v = arg0;\n        const ret = typeof(v) === 'boolean' ? v : undefined;\n        return isLikeNone(ret) ? 0xFFFFFF : ret ? 1 : 0;\n    };\n    imports.wbg.__wbg_wbindgencbdrop_eb10308566512b88 = function(arg0) {\n        const obj = arg0.original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgendebugstring_99ef257a3ddda34d = function(arg0, arg1) {\n        const ret = debugString(arg1);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_wbindgenin_d7a1ee10933d2d55 = function(arg0, arg1) {\n        const ret = arg0 in arg1;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisbigint_ecb90cc08a5a9154 = function(arg0) {\n        const ret = typeof(arg0) === 'bigint';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisfunction_8cee7dce3725ae74 = function(arg0) {\n        const ret = typeof(arg0) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisobject_307a53c6bd97fbf8 = function(arg0) {\n        const val = arg0;\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisstring_d4fa939789f003b0 = function(arg0) {\n        const ret = typeof(arg0) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisundefined_c4b71d073b92f3c5 = function(arg0) {\n        const ret = arg0 === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenjsvaleq_e6f2ad59ccae1b58 = function(arg0, arg1) {\n        const ret = arg0 === arg1;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenjsvallooseeq_9bec8c9be826bed1 = function(arg0, arg1) {\n        const ret = arg0 == arg1;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgennumberget_f74b4c7525ac05cb = function(arg0, arg1) {\n        const obj = arg1;\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getDataViewMemory0().setFloat64(arg0 + 8 * 1, isLikeNone(ret) ? 0 : ret, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n    };\n    imports.wbg.__wbg_wbindgenstringget_0f16a6ddddef376f = function(arg0, arg1) {\n        const obj = arg1;\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_wbindgenthrow_451ec1a8469d7eb6 = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_cast_2241b6af4c4b2941 = function(arg0, arg1) {\n        // Cast intrinsic for `Ref(String) -> Externref`.\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_4625c577ab2ec9ee = function(arg0) {\n        // Cast intrinsic for `U64 -> Externref`.\n        const ret = BigInt.asUintN(64, arg0);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_9ae0607507abb057 = function(arg0) {\n        // Cast intrinsic for `I64 -> Externref`.\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_cfd578dc132ebaa8 = function(arg0, arg1) {\n        // Cast intrinsic for `Closure(Closure { dtor_idx: 49, function: Function { arguments: [Externref], shim_idx: 50, ret: Unit, inner_ret: Some(Unit) }, mutable: true }) -> Externref`.\n        const ret = makeMutClosure(arg0, arg1, 49, __wbg_adapter_14);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_d6cd19b81560fd6e = function(arg0) {\n        // Cast intrinsic for `F64 -> Externref`.\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_2;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('subduction_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n", "import init, { initSync } from \"../test-wasm/subduction_wasm.js\";\nimport wasmModule from \"../test-wasm/subduction_wasm_bg.wasm\";\nimport {\n  Beelay,\n  MemorySigner,\n  MemoryStorageAdapter,\n} from \"../test-wasm/subduction_wasm.js\";\nimport { RpcTarget, newWebSocketRpcSession } from \"../capnweb/dist/index.js\";\n\ntype StorageKey = string[];\n\ninterface StorageAdapter {\n  load(key: StorageKey): Promise<Uint8Array | undefined>;\n  loadRange(prefix: StorageKey): Promise<Map<StorageKey, Uint8Array>>;\n  save(key: StorageKey, data: Uint8Array): Promise<void>;\n  remove(key: StorageKey): Promise<void>;\n  listOneLevel(prefix: StorageKey): Promise<StorageKey[]>;\n}\n\ntype CommitMessage = {\n  type: string;\n  parents?: string[];\n  hash?: string;\n  contents?: Uint8Array;\n  [key: string]: unknown;\n};\n\n// Declare WebSocketPair for TypeScript\ndeclare const WebSocketPair: any;\n\n// Check WebAssembly support on module load\ncheckWebAssemblySupport();\n\n// Also log WebAssembly initialization status\nconsole.log('WebAssembly module imported, will initialize lazily on first use');\n\n// Lazy initialization of WebAssembly module\nlet wasmInitialized = false;\nlet wasmInitPromise: Promise<void> | null = null;\n\n// Check if we're in an environment that supports WebAssembly\nfunction checkWebAssemblySupport() {\n  const isCFWorker = typeof navigator === 'object' && navigator?.userAgent === 'Cloudflare-Workers';\n  const hasImportMetaUrl = typeof import.meta !== 'undefined' && typeof import.meta.url === 'string';\n\n  if (isCFWorker && !hasImportMetaUrl) {\n    console.log('\u26A0\uFE0F  Cloudflare Worker environment detected without import.meta.url support');\n    console.log('WebAssembly will be disabled - this is expected behavior');\n  }\n\n  return { isCFWorker, hasImportMetaUrl };\n}\n\nasync function ensureWasmInitialized() {\n  if (wasmInitialized) return;\n\n  if (!wasmInitPromise) {\n    wasmInitPromise = (async () => {\n      console.log('=== WebAssembly Initialization ===');\n\n      try {\n        // Check if we're in Cloudflare Workers\n        const isCFWorker = typeof navigator === 'object' && navigator?.userAgent === 'Cloudflare-Workers';\n        console.log('Environment:', isCFWorker ? 'Cloudflare Worker' : 'Other');\n\n        // In Cloudflare Workers, use the bundled WASM module directly\n        if (isCFWorker) {\n          console.log('Using bundled WASM module for Cloudflare Workers');\n          // The WASM module is imported and bundled by Wrangler\n          initSync(wasmModule);\n          console.log('\u2705 WebAssembly initialized successfully with bundled module');\n        } else {\n          // In other environments (like Node.js), try the standard initialization\n          console.log('Using standard WebAssembly initialization');\n          const hasImportMetaUrl = typeof import.meta !== 'undefined' && typeof import.meta.url === 'string';\n          if (hasImportMetaUrl) {\n            await init();\n            console.log('\u2705 WebAssembly initialized successfully with import.meta.url');\n          } else {\n            // Fallback: try to use the bundled module even in non-CF environments\n            console.log('Falling back to bundled WASM module');\n            initSync(wasmModule);\n            console.log('\u2705 WebAssembly initialized successfully with fallback bundled module');\n          }\n        }\n\n        wasmInitialized = true;\n        console.log('\u2705 WebAssembly initialization complete');\n\n      } catch (error) {\n        console.error('\u274C WebAssembly initialization failed:', error);\n        console.error('This means WebAssembly features will not be available');\n\n        // Set a flag to indicate WASM is disabled\n        (globalThis as any).__WASM_DISABLED__ = true;\n        wasmInitialized = true; // Mark as initialized to avoid retrying\n\n        console.log('Application will continue without WebAssembly features');\n      }\n    })();\n  }\n\n  await wasmInitPromise;\n}\n\n// Implement StorageAdapter using Durable Object storage\nconst KEY_DELIM = \"|\";\n\nfunction encodeStorageKey(key: StorageKey): string {\n  if (key.length === 0) {\n    return \"\";\n  }\n  return key.map((part) => `${part.length}:${part}`).join(KEY_DELIM);\n}\n\nfunction encodeStoragePrefix(prefix: StorageKey): string | undefined {\n  if (prefix.length === 0) {\n    return undefined;\n  }\n  const encoded = encodeStorageKey(prefix);\n  return encoded.length ? `${encoded}${KEY_DELIM}` : undefined;\n}\n\nfunction decodeStorageKey(encoded: string): StorageKey {\n  if (!encoded) {\n    return [];\n  }\n\n  const parts: string[] = [];\n  let index = 0;\n  while (index < encoded.length) {\n    const colonIndex = encoded.indexOf(\":\", index);\n    if (colonIndex === -1) {\n      throw new Error(`Invalid encoded storage key: ${encoded}`);\n    }\n\n    const lengthPart = encoded.slice(index, colonIndex);\n    const length = Number(lengthPart);\n    if (!Number.isFinite(length)) {\n      throw new Error(`Invalid segment length in storage key: ${lengthPart}`);\n    }\n\n    const start = colonIndex + 1;\n    const end = start + length;\n    const segment = encoded.slice(start, end);\n    parts.push(segment);\n    index = end;\n\n    if (index === encoded.length) {\n      break;\n    }\n\n    if (encoded[index] !== KEY_DELIM) {\n      throw new Error(`Invalid storage key separator in: ${encoded}`);\n    }\n    index += 1;\n  }\n\n  return parts;\n}\n\nfunction toUint8Array(value: unknown): Uint8Array {\n  if (value instanceof Uint8Array) {\n    return value;\n  }\n\n  if (value instanceof ArrayBuffer) {\n    return new Uint8Array(value);\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    const view = value as ArrayBufferView;\n    return new Uint8Array(view.buffer.slice(view.byteOffset, view.byteOffset + view.byteLength));\n  }\n\n  throw new Error(\"Unexpected stored value type; expected binary data\");\n}\n\nasync function listEntries(storage: any, prefix: string | undefined) {\n  if (prefix === undefined) {\n    return await storage.list();\n  }\n  return await storage.list({ prefix });\n}\n\nfunction encodeBase64(bytes: Uint8Array): string {\n  let binary = \"\";\n  const chunkSize = 0x8000;\n  for (let i = 0; i < bytes.length; i += chunkSize) {\n    const chunk = bytes.subarray(i, i + chunkSize);\n    binary += String.fromCharCode(...chunk);\n  }\n  return btoa(binary);\n}\n\nclass DurableObjectStorageAdapter implements StorageAdapter {\n  constructor(private storage: any) {}\n\n  async load(key: StorageKey): Promise<Uint8Array | undefined> {\n    const stored = await this.storage.get(encodeStorageKey(key));\n    return stored === undefined ? undefined : toUint8Array(stored);\n  }\n\n  async loadRange(prefix: StorageKey): Promise<Map<StorageKey, Uint8Array>> {\n    const result = new Map<StorageKey, Uint8Array>();\n    const exactKey = encodeStorageKey(prefix);\n    const exact = await this.storage.get(exactKey);\n    if (exact !== undefined) {\n      result.set(prefix, toUint8Array(exact));\n    }\n\n    const prefixString = encodeStoragePrefix(prefix);\n    const entries = await listEntries(this.storage, prefixString);\n    for (const [rawKey, rawValue] of entries) {\n      const decodedKey = decodeStorageKey(rawKey);\n      result.set(decodedKey, toUint8Array(rawValue));\n    }\n\n    return result;\n  }\n\n  async save(key: StorageKey, data: Uint8Array): Promise<void> {\n    await this.storage.put(encodeStorageKey(key), data);\n  }\n\n  async remove(key: StorageKey): Promise<void> {\n    await this.storage.delete(encodeStorageKey(key));\n  }\n\n  async listOneLevel(prefix: StorageKey): Promise<StorageKey[]> {\n    const results: StorageKey[] = [];\n    const seen = new Set<string>();\n    const prefixString = encodeStoragePrefix(prefix);\n    const entries = await listEntries(this.storage, prefixString);\n\n    for (const [rawKey] of entries) {\n      const decoded = decodeStorageKey(rawKey);\n      if (decoded.length <= prefix.length) {\n        continue;\n      }\n      const child = decoded.slice(0, prefix.length + 1);\n      const encodedChild = encodeStorageKey(child);\n      if (!seen.has(encodedChild)) {\n        seen.add(encodedChild);\n        results.push(child);\n      }\n    }\n\n    return results;\n  }\n}\n\n// function encodeStoragePrefix(prefix: StorageKey): string | undefined {\n//   if (prefix.length === 0) {\n//     return undefined;\n//   }\n//   const encoded = encodeStorageKey(prefix);\n//   return encoded.length ? `${encoded}${KEY_DELIM}` : undefined;\n// }\n\n// function decodeStorageKey(encoded: string): StorageKey {\n//   if (!encoded) {\n//     return [];\n//   }\n\n//   const parts: string[] = [];\n//   let index = 0;\n//   while (index < encoded.length) {\n//     const colonIndex = encoded.indexOf(\":\", index);\n//     if (colonIndex === -1) {\n//       throw new Error(`Invalid encoded storage key: ${encoded}`);\n//     }\n\n//     const lengthPart = encoded.slice(index, colonIndex);\n//     const length = Number(lengthPart);\n//     if (!Number.isFinite(length)) {\n//       throw new Error(`Invalid segment length in storage key: ${lengthPart}`);\n//     }\n\n//     const start = colonIndex + 1;\n//     const end = start + length;\n//     const segment = encoded.slice(start, end);\n//     parts.push(segment);\n//     index = end;\n\n//     if (index === encoded.length) {\n//       break;\n//     }\n\n//     if (encoded[index] !== KEY_DELIM) {\n//       throw new Error(`Invalid storage key separator in: ${encoded}`);\n//     }\n//     index += 1;\n//   }\n\n//   return parts;\n// }\n\n// function toUint8Array(value: unknown): Uint8Array {\n//   if (value instanceof Uint8Array) {\n//     return value;\n//   }\n\n//   if (value instanceof ArrayBuffer) {\n//     return new Uint8Array(value);\n//   }\n\n//   if (ArrayBuffer.isView(value)) {\n//     const view = value as ArrayBufferView;\n//     return new Uint8Array(view.buffer.slice(view.byteOffset, view.byteOffset + view.byteLength));\n//   }\n\n//   throw new Error(\"Unexpected stored value type; expected binary data\");\n// }\n\n// async function listEntries(storage: any, prefix: string | undefined) {\n//   if (prefix === undefined) {\n//     return await storage.list();\n//   }\n//   return await storage.list({ prefix });\n// }\n\n// class DurableObjectStorageAdapter implements StorageAdapter {\n//   constructor(private storage: any) {}\n\n//   async load(key: StorageKey): Promise<Uint8Array | undefined> {\n//     const stored = await this.storage.get(encodeStorageKey(key));\n//     return stored === undefined ? undefined : toUint8Array(stored);\n//   }\n\n//   async loadRange(prefix: StorageKey): Promise<Map<StorageKey, Uint8Array>> {\n//     const result = new Map<StorageKey, Uint8Array>();\n//     const exactKey = encodeStorageKey(prefix);\n//     const exact = await this.storage.get(exactKey);\n//     if (exact !== undefined) {\n//       result.set(prefix, toUint8Array(exact));\n//     }\n\n//     const prefixString = encodeStoragePrefix(prefix);\n//     const entries = await listEntries(this.storage, prefixString);\n//     for (const [rawKey, rawValue] of entries) {\n//       const decodedKey = decodeStorageKey(rawKey);\n//       result.set(decodedKey, toUint8Array(rawValue));\n//     }\n\n//     return result;\n//   }\n\n//   async save(key: StorageKey, data: Uint8Array): Promise<void> {\n//     await this.storage.put(encodeStorageKey(key), data);\n//   }\n\n//   async remove(key: StorageKey): Promise<void> {\n//     await this.storage.delete(encodeStorageKey(key));\n//   }\n\n//   async listOneLevel(prefix: StorageKey): Promise<string[][]> {\n//     const results: StorageKey[] = [];\n//     const seen = new Set<string>();\n//     const prefixString = encodeStoragePrefix(prefix);\n//     const entries = await listEntries(this.storage, prefixString);\n\n//     for (const [rawKey] of entries) {\n//       const decoded = decodeStorageKey(rawKey);\n//       if (decoded.length <= prefix.length) {\n//         continue;\n//       }\n//       const child = decoded.slice(0, prefix.length + 1);\n//       const encodedChild = encodeStorageKey(child);\n//       if (!seen.has(encodedChild)) {\n//         seen.add(encodedChild);\n//         results.push(child);\n//       }\n//     }\n\n//     return results;\n//   }\n// }\n\n// Beelay handler class\ntype BeelayFactory = () => Promise<{ storage: StorageAdapter; signer: MemorySigner }>;\n\ntype ClientRegistration = {\n  target: any;\n  originalTarget: any;\n  docId?: string;\n};\n\nfunction toBase64(data: Uint8Array): string {\n  if (data.length === 0) return \"\";\n  let binary = \"\";\n  const chunkSize = 0x8000;\n  for (let i = 0; i < data.length; i += chunkSize) {\n    const chunk = data.subarray(i, i + chunkSize);\n    binary += String.fromCharCode(...chunk);\n  }\n  return btoa(binary);\n}\n\nclass BeelayHandler extends RpcTarget {\n  private beelay?: Beelay;\n  private beelayPromise?: Promise<Beelay>;\n  private readonly clientTargets = new Set<ClientRegistration>();\n\n  constructor(private readonly factory?: BeelayFactory) {\n    super();\n  }\n\n  sendToAll?: (message: any) => void;\n\n  private async getBeelay() {\n    if (this.beelay) {\n      return this.beelay;\n    }\n\n    if (!this.beelayPromise) {\n      this.beelayPromise = (async () => {\n        // Ensure WebAssembly module is initialized (may be skipped in some environments)\n        await ensureWasmInitialized();\n\n        // Check if WebAssembly is disabled\n        if ((globalThis as any).__WASM_DISABLED__) {\n          console.log('WebAssembly disabled - cannot create Beelay instance');\n          throw new Error('WebAssembly not available in this environment - Beelay requires WebAssembly');\n        }\n\n        const { storage, signer } = this.factory\n          ? await this.factory()\n          : { storage: new MemoryStorageAdapter(), signer: new MemorySigner() };\n        const instance = await Beelay.load({ storage, signer });\n        this.beelay = instance;\n        return instance;\n      })();\n    }\n\n    return this.beelayPromise;\n  }\n\n  private serializeCommit(commit: any) {\n    let contents: Uint8Array;\n    const value = commit.contents;\n    if (value instanceof Uint8Array) {\n      contents = value;\n    } else if (value instanceof ArrayBuffer) {\n      contents = new Uint8Array(value);\n    } else if (ArrayBuffer.isView(value)) {\n      contents = new Uint8Array(value.buffer.slice(value.byteOffset, value.byteOffset + value.byteLength));\n    } else if (typeof value === \"string\") {\n      const decoded = Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\n      contents = decoded;\n    } else if (Array.isArray(value)) {\n      contents = new Uint8Array(value);\n    } else {\n      throw new Error(\"Unsupported commit contents type for serialization\");\n    }\n\n    return {\n      parents: commit.parents,\n      hash: commit.hash,\n      contents: toBase64(contents)\n    };\n  }\n\n  private async broadcast(event: any, docId?: string) {\n    console.log('\uD83D\uDCE3 broadcast', {\n      type: event?.type,\n      docId,\n      totalTargets: this.clientTargets.size,\n      filteredTargets: [...this.clientTargets].filter((registration) => !docId || !registration.docId || registration.docId === docId).length,\n    });\n\n    if (this.clientTargets.size === 0 && !this.sendToAll) {\n      console.log('\u2139\uFE0F broadcast: no registered targets');\n    }\n\n    if (this.sendToAll) {\n      this.sendToAll(event);\n    }\n\n    for (const registration of [...this.clientTargets]) {\n      if (docId && registration.docId && registration.docId !== docId) {\n        continue;\n      }\n\n      try {\n        const result = registration.target.handleServerEvent(event);\n        if (result && typeof result.then === \"function\") {\n          await result;\n        }\n      } catch (error) {\n        console.error(\"Error delivering event to client target:\", error);\n        if (typeof registration.target?.[Symbol.dispose] === \"function\") {\n          try {\n            registration.target[Symbol.dispose]();\n          } catch (disposeError) {\n            console.warn('broadcast dispose failed', disposeError);\n          }\n        }\n        this.clientTargets.delete(registration);\n        console.log('\uD83E\uDDF9 removed client target after delivery failure', {\n          remaining: this.clientTargets.size,\n          docId: registration.docId,\n        });\n      }\n    }\n  }\n\n  async registerClientTarget(target: any, docId?: string) {\n    let retainedTarget = target;\n    try {\n      if (typeof target?.dup === \"function\") {\n        retainedTarget = target.dup();\n      } else {\n        const rawSymbol = Object.getOwnPropertySymbols(target).find((symbol) => symbol.description === \"realStub\");\n        if (rawSymbol) {\n          const rawStub = (target as any)[rawSymbol];\n          if (typeof rawStub?.dup === \"function\") {\n            retainedTarget = rawStub.dup();\n          }\n        }\n      }\n    } catch (error) {\n      console.warn(\"registerClientTarget: failed to duplicate stub\", error);\n    }\n\n    const registration: ClientRegistration = { target: retainedTarget, originalTarget: target, docId };\n    this.clientTargets.add(registration);\n    console.log('\u2705 registered client target', {\n      total: this.clientTargets.size,\n      docId,\n    });\n\n    if (retainedTarget && typeof retainedTarget.onRpcBroken === \"function\") {\n      retainedTarget.onRpcBroken(() => {\n        if (typeof registration.target?.[Symbol.dispose] === \"function\") {\n          try {\n            registration.target[Symbol.dispose]();\n          } catch (disposeError) {\n            console.warn('onRpcBroken dispose failed', disposeError);\n          }\n        }\n        this.clientTargets.delete(registration);\n      });\n    }\n\n    return { success: true };\n  }\n\n  async unregisterClientTarget(target: any, docId?: string) {\n    for (const registration of this.clientTargets) {\n      if (registration.originalTarget === target && (!docId || registration.docId === docId)) {\n        if (typeof registration.target?.[Symbol.dispose] === \"function\") {\n          try {\n            registration.target[Symbol.dispose]();\n          } catch (disposeError) {\n            console.warn('unregisterClientTarget dispose failed', disposeError);\n          }\n        }\n        this.clientTargets.delete(registration);\n        console.log('\uD83E\uDDF9 unregistered client target', { total: this.clientTargets.size, docId });\n        break;\n      }\n    }\n    return { success: true };\n  }\n\n  async createDoc(options: any) {\n    // Convert contents to Uint8Array and compute hash\n    const contents = new Uint8Array(options.initialCommit.contents);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', contents);\n    const hash = Array.from(new Uint8Array(hashBuffer)).map(b => b.toString(16).padStart(2, '0')).join('');\n    options.initialCommit.contents = contents;\n    options.initialCommit.hash = hash;\n    const beelay = await this.getBeelay();\n    const doc = await beelay.createDoc(options);\n    // Send direct message to all clients\n  await this.broadcast({ type: 'docCreated', id: String(doc) }, String(doc));\n    // Wrap: return plain JSON\n    return { id: String(doc) };\n  }\n\n  async loadDocument(docId: string) {\n    const beelay = await this.getBeelay();\n    const commits = (await beelay.loadDocument(docId)) as CommitMessage[] | undefined;\n\n    // Convert commits to plain JSON with base64 for binary contents\n    if (!commits) return [];\n\n    return commits.map((commit) => {\n      if (\n        commit.type === \"commit\" &&\n        Array.isArray(commit.parents) &&\n        typeof commit.hash === \"string\" &&\n        commit.contents instanceof Uint8Array\n      ) {\n        return {\n          parents: commit.parents,\n          hash: commit.hash,\n          contents: encodeBase64(commit.contents),\n        };\n      }\n      // Handle bundle types if needed\n      return commit;\n    });\n  }\n\n  async addCommits(options: any) {\n    const beelay = await this.getBeelay();\n    await beelay.addCommits(options);\n    await this.broadcast(\n      {\n        type: 'commitsAdded',\n        docId: options.docId,\n        commits: options.commits.map((commit: any) => this.serializeCommit(commit))\n      },\n      options.docId\n    );\n    return { success: true };\n  }\n\n  async addWorkerCommit(docId: string, content: string) {\n    const beelay = await this.getBeelay();\n\n    // Get current document state to create a proper commit\n    const currentCommits = await beelay.loadDocument(docId);\n    if (!currentCommits || currentCommits.length === 0) {\n      throw new Error('Document not found or empty');\n    }\n\n    // Find the latest commit hash\n    const latestCommit = currentCommits[currentCommits.length - 1];\n    if (latestCommit.type !== 'commit') {\n      throw new Error('Latest item is not a commit');\n    }\n\n    // Create a new commit (use TextEncoder instead of Buffer)\n    const contents = new TextEncoder().encode(content);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', contents) as ArrayBuffer;\n    const hash = Array.from(new Uint8Array(hashBuffer)).map(b => b.toString(16).padStart(2, '0')).join('');\n\n    const newCommit = {\n      parents: [latestCommit.hash],\n      hash,\n      contents\n    };\n\n    await beelay.addCommits({ docId, commits: [newCommit] });\n    await this.broadcast(\n      {\n        type: 'commitAdded',\n        docId,\n        commit: this.serializeCommit(newCommit)\n      },\n      docId\n    );\n    return { success: true, commitHash: hash };\n  }\n\n  async createContactCard() {\n    const beelay = await this.getBeelay();\n    const card = await beelay.createContactCard();\n    return { card: String(card) };\n  }\n\n  async createStream(options: any) {\n    return { streamId: \"placeholder\" };\n  }\n\n  async waitUntilSynced(peerId: string) {\n    const beelay = await this.getBeelay();\n    await beelay.waitUntilSynced(peerId);\n    return { synced: true };\n  }\n\n  async stop() {\n    if (this.beelay) {\n      await this.beelay.stop();\n      this.beelay = undefined;\n      this.beelayPromise = undefined;\n    }\n  }\n\n  async hello(name: string) {\n    return `Hello, ${name}!`;\n  }\n\n  async [Symbol.asyncDispose]() {\n    await this.stop();\n  }\n}\n\nexport class BeelayDO {\n  private readonly handler: BeelayHandler;\n\n  constructor(private readonly state: any, private readonly env: any) {\n    // Note: WebAssembly initialization will happen lazily in BeelayHandler.getBeelay()\n    this.handler = new BeelayHandler(async () => {\n      // Ensure WebAssembly module is initialized before creating signer\n      await ensureWasmInitialized();\n\n      // Check if WebAssembly is disabled\n      if ((globalThis as any).__WASM_DISABLED__) {\n        console.log('WebAssembly disabled in Durable Object - cannot create signer');\n        throw new Error('WebAssembly not available - cannot create MemorySigner');\n      }\n\n      return {\n        storage: new DurableObjectStorageAdapter(this.state.storage),\n        signer: new MemorySigner(),\n      };\n    });\n\n    // Legacy broadcast path is unused when clients register RPC targets\n    this.handler.sendToAll = undefined;\n  }\n\n  async fetch(request: Request) {\n    if (request.headers.get(\"Upgrade\")?.toLowerCase() === \"websocket\") {\n      const webSocketPair = new WebSocketPair();\n      const client = webSocketPair[0];\n      const server = webSocketPair[1];\n\n      server.accept();\n      newWebSocketRpcSession(server, this.handler);\n\n      return new Response(null, {\n        status: 101,\n        webSocket: client,\n      } as any);\n    }\n\n    return new Response(\"WebSocket required\", { status: 400 });\n  }\n}\n\n// Worker fetch handler\nexport default {\n  async fetch(request: Request, env: any) {\n    if (request.headers.get(\"Upgrade\")?.toLowerCase() === \"websocket\") {\n      const id = env.BEELAY_DO.idFromName(\"global\");\n      const stub = env.BEELAY_DO.get(id);\n      return stub.fetch(request);\n    }\n\n    return new Response(\"WebSocket required\", { status: 400 });\n  }\n};\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport type { RpcTargetBranded, __RPC_TARGET_BRAND } from \"./types.js\";\n\n// Polyfill Symbol.dispose for browsers that don't support it yet\nif (!Symbol.dispose) {\n  (Symbol as any).dispose = Symbol.for('dispose');\n}\nif (!Symbol.asyncDispose) {\n  (Symbol as any).asyncDispose = Symbol.for('asyncDispose');\n}\n\nlet workersModuleName = navigator.userAgent === \"Cloudflare-Workers\" ? \"cloudflare:workers\" : null;\nlet workersModule: any;\nif (workersModuleName) {\n  workersModule = await import(/* @vite-ignore */workersModuleName);\n}\n\nexport interface RpcTarget {\n  [__RPC_TARGET_BRAND]: never;\n};\n\nexport let RpcTarget = workersModule ? workersModule.RpcTarget : class {};\n\nexport type PropertyPath = (string | number)[];\n\ntype TypeForRpc = \"unsupported\" | \"primitive\" | \"object\" | \"function\" | \"array\" | \"date\" |\n    \"bigint\" | \"bytes\" | \"stub\" | \"rpc-promise\" | \"rpc-target\" | \"rpc-thenable\" | \"error\" |\n    \"undefined\";\n\nexport function typeForRpc(value: unknown): TypeForRpc {\n  switch (typeof value) {\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n      return \"primitive\";\n\n    case \"undefined\":\n      return \"undefined\";\n\n    case \"object\":\n    case \"function\":\n      // Test by prototype, below.\n      break;\n\n    case \"bigint\":\n      return \"bigint\";\n\n    default:\n      return \"unsupported\";\n  }\n\n  // Ugh JavaScript, why is `typeof null` equal to \"object\" but null isn't otherwise anything like\n  // an object?\n  if (value === null) {\n    return \"primitive\";\n  }\n\n  // Aside from RpcTarget, we generally don't support serializing *subclasses* of serializable\n  // types, so we switch on the exact prototype rather than use `instanceof` here.\n  let prototype = Object.getPrototypeOf(value);\n  switch (prototype) {\n    case Object.prototype:\n      return \"object\";\n\n    case Function.prototype:\n      return \"function\";\n\n    case Array.prototype:\n      return \"array\";\n\n    case Date.prototype:\n      return \"date\";\n\n    case Uint8Array.prototype:\n      return \"bytes\";\n\n    // TODO: All other structured clone types.\n\n    case RpcStub.prototype:\n      return \"stub\";\n\n    case RpcPromise.prototype:\n      return \"rpc-promise\";\n\n    // TODO: Promise<T> or thenable\n\n    default:\n      if (workersModule) {\n        // TODO: We also need to match `RpcPromise` and `RpcProperty`, but they currently aren't\n        //   exported by cloudflare:workers.\n        if (prototype == workersModule.RpcStub.prototype ||\n            value instanceof workersModule.ServiceStub) {\n          return \"rpc-target\";\n        } else if (prototype == workersModule.RpcPromise.prototype ||\n                   prototype == workersModule.RpcProperty.prototype) {\n          // Like rpc-target, but should be wrapped in RpcPromise, so that it can be pull()ed,\n          // which will await the thenable.\n          return \"rpc-thenable\";\n        }\n      }\n\n      if (value instanceof RpcTarget) {\n        return \"rpc-target\";\n      }\n\n      if (value instanceof Error) {\n        return \"error\";\n      }\n\n      return \"unsupported\";\n  }\n}\n\nfunction mapNotLoaded(): never {\n  throw new Error(\"RPC map() implementation was not loaded.\");\n}\n\n// map() is implemented in `map.ts`. We can't import it here because it would create an import\n// cycle, so instead we define two hook functions that map.ts will overwrite when it is imported.\nexport let mapImpl: MapImpl = { applyMap: mapNotLoaded, sendMap: mapNotLoaded };\n\ntype MapImpl = {\n  // Applies a map function to an input value (usually an array).\n  applyMap(input: unknown, parent: object | undefined, owner: RpcPayload | null,\n           captures: StubHook[], instructions: unknown[])\n          : StubHook;\n\n  // Implements the .map() method of RpcStub.\n  sendMap(hook: StubHook, path: PropertyPath, func: (value: RpcPromise) => unknown)\n         : RpcPromise;\n}\n\n// Inner interface backing an RpcStub or RpcPromise.\n//\n// A hook may eventually resolve to a \"payload\".\n//\n// Declared as `abstract class` to allow `instanceof StubHook`, used by `RpcStub` constructor.\n//\n// This is conceptually similar to the Cap'n Proto C++ class `ClientHook`.\nexport abstract class StubHook {\n  // Call a function at the given property path with the given arguments. Returns a hook for the\n  // promise for the result.\n  abstract call(path: PropertyPath, args: RpcPayload): StubHook;\n\n  // Apply a map operation.\n  //\n  // `captures` is a list of external stubs which are used as part of the mapper function.\n  // NOTE: The callee takes ownership of `captures`.\n  //\n  // `instructions` is a JSON-serializable value describing the mapper function as a series of\n  // steps. Each step is an expression to evaluate, in the usual RPC expression format. The last\n  // instruction is the return value.\n  //\n  // Each instruction can refer to the results of any of the instructions before it, as well as to\n  // the captures, as if they were imports on the import table. In particular:\n  // * The value 0 is the input to the mapper function (e.g. one element of the array being mapped).\n  // * Positive values are 1-based indexes into the instruction table, representing the results of\n  //   previous instructions.\n  // * Negative values are -1-based indexes into the capture list.\n  abstract map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook;\n\n  // Read the property at the given path. Returns a StubHook representing a promise for that\n  // property. This behaves very similarly to call(), except that no actual function is invoked\n  // on the remote end, the property is simply returned. (Well, if the property has a getter, then\n  // that will be invoked...)\n  //\n  // (In the case that this stub is a promise with a resolution payload, get() implies cloning\n  // a branch of the payload, making a deep copy of any pass-by-value content.)\n  abstract get(path: PropertyPath): StubHook;\n\n  // Create a clone of this StubHook, which can be disposed independently.\n  //\n  // The returned hook is NOT considered a promise, so will not resolve to a payload (you can use\n  // `get([])` to get a promise for a cloned payload).\n  abstract dup(): StubHook;\n\n  // Requests resolution of a StubHook that represents a promise, and eventually produces the\n  // payload.\n  //\n  // pull() should not be called on capabilities that aren't promises. It may never resolve or it\n  // may throw an exception.\n  //\n  // If pull() is never called (on a remote promise), the RPC system will not transmit the\n  // resolution at all. This allows a promise to be used strictly for pipelining.\n  //\n  // If the payload is already available, pull() returns it immediately, instead of returning a\n  // promise. This allows the caller to skip the microtask queue which is sometimes necessary to\n  // maintain e-order guarantees.\n  //\n  // The returned RpcPayload is the same one backing the StubHook itself. If the caller delivers\n  // or disposes the payload directly, then it should not call dispose() on the hook. If the caller\n  // does not intend to consume the StubHook, the caller must take responsibility for cloning the\n  // payload.\n  //\n  // You can call pull() multiple times, but it will return the same RpcPayload every time, and\n  // that payload should only be disposed once.\n  //\n  // If pull() returns a promise which rejects, the StubHook does not need to be disposed.\n  abstract pull(): RpcPayload | Promise<RpcPayload>;\n\n  // Called to prevent this stub from generating unhandled rejection events if it throws without\n  // having been pulled. Without this, if a client \"push\"es a call that immediately throws before\n  // the client manages to \"pull\" it or use it in a pipeline, this may be treated by the system as\n  // an unhandled rejection. Unfortunately, this unhandled rejection would be reported in the\n  // callee rather than the caller, possibly causing the callee to crash or log spurious errors,\n  // even though it's really up to the caller to deal with the exception!\n  abstract ignoreUnhandledRejections(): void;\n\n  // Attempts to cancel any outstanding promise backing this hook, and disposes the payload that\n  // pull() would return (if any). If a pull() promise is outstanding, it may still resolve (with\n  // a disposed payload) or it may reject. It's safe to call dispose() multiple times.\n  abstract dispose(): void;\n\n  abstract onBroken(callback: (error: any) => void): void;\n}\n\nexport class ErrorStubHook extends StubHook {\n  constructor(private error: any) { super(); }\n\n  call(path: PropertyPath, args: RpcPayload): StubHook { return this; }\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook { return this; }\n  get(path: PropertyPath): StubHook { return this; }\n  dup(): StubHook { return this; }\n  pull(): RpcPayload | Promise<RpcPayload> { return Promise.reject(this.error); }\n  ignoreUnhandledRejections(): void {}\n  dispose(): void {}\n  onBroken(callback: (error: any) => void): void {\n    try {\n      callback(this.error);\n    } catch (err) {\n      // Don't throw back into the RPC system. Treat this as an unhandled rejection.\n      Promise.resolve(err);\n    }\n  }\n};\n\nconst DISPOSED_HOOK: StubHook = new ErrorStubHook(\n    new Error(\"Attempted to use RPC stub after it has been disposed.\"));\n\n// A call interceptor can be used to intercept all RPC stub invocations within some synchronous\n// scope. This is used to implement record/replay\ntype CallInterceptor = (hook: StubHook, path: PropertyPath, params: RpcPayload) => StubHook;\nlet doCall: CallInterceptor = (hook: StubHook, path: PropertyPath, params: RpcPayload) => {\n  return hook.call(path, params);\n}\n\nexport function withCallInterceptor<T>(interceptor: CallInterceptor, callback: () => T): T {\n  let oldValue = doCall;\n  doCall = interceptor;\n  try {\n    return callback();\n  } finally {\n    doCall = oldValue;\n  }\n}\n\n// Private symbol which may be used to unwrap the real stub through the Proxy.\nlet RAW_STUB = Symbol(\"realStub\");\n\nexport interface RpcStub extends Disposable {\n  // Declare magic `RAW_STUB` key that unwraps the proxy.\n  [RAW_STUB]: this;\n}\n\nconst PROXY_HANDLERS: ProxyHandler<{raw: RpcStub}> = {\n  apply(target: {raw: RpcStub}, thisArg: any, argumentsList: any[]) {\n    let stub = target.raw;\n    return new RpcPromise(doCall(stub.hook,\n        stub.pathIfPromise || [], RpcPayload.fromAppParams(argumentsList)), []);\n  },\n\n  get(target: {raw: RpcStub}, prop: string | symbol, receiver: any) {\n    let stub = target.raw;\n    if (prop === RAW_STUB) {\n      return stub;\n    } else if (prop in RpcPromise.prototype) {\n      // Any method or property declared on RpcPromise (including inherited from RpcStub or\n      // Object) should pass through to the target object, as trying to turn these into RPCs will\n      // likely be problematic.\n      //\n      // Note we don't just check `prop in target` because we intentionally want to hide the\n      // properties `hook` and `path`.\n      return (<any>stub)[prop];\n    } else if (typeof prop === \"string\") {\n      // Return promise for property.\n      return new RpcPromise(stub.hook,\n          stub.pathIfPromise ? [...stub.pathIfPromise, prop] : [prop]);\n    } else if (prop === Symbol.dispose &&\n          (!stub.pathIfPromise || stub.pathIfPromise.length == 0)) {\n      // We only advertise Symbol.dispose on stubs and root promises, not properties.\n      return () => {\n        stub.hook.dispose();\n        stub.hook = DISPOSED_HOOK;\n      };\n    } else {\n      return undefined;\n    }\n  },\n\n  has(target: {raw: RpcStub}, prop: string | symbol) {\n    let stub = target.raw;\n    if (prop === RAW_STUB) {\n      return true;\n    } else if (prop in RpcPromise.prototype) {\n      return prop in stub;\n    } else if (typeof prop === \"string\") {\n      return true;\n    } else if (prop === Symbol.dispose &&\n          (!stub.pathIfPromise || stub.pathIfPromise.length == 0)) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  construct(target: {raw: RpcStub}, args: any) {\n    throw new Error(\"An RPC stub cannot be used as a constructor.\");\n  },\n\n  defineProperty(target: {raw: RpcStub}, property: string | symbol, attributes: PropertyDescriptor)\n      : boolean {\n    throw new Error(\"Can't define properties on RPC stubs.\");\n  },\n\n  deleteProperty(target: {raw: RpcStub}, p: string | symbol): boolean {\n    throw new Error(\"Can't delete properties on RPC stubs.\");\n  },\n\n  getOwnPropertyDescriptor(target: {raw: RpcStub}, p: string | symbol): PropertyDescriptor | undefined {\n    // Treat all properties as prototype properties. That's probably fine?\n    return undefined;\n  },\n\n  getPrototypeOf(target: {raw: RpcStub}): object | null {\n    return Object.getPrototypeOf(target.raw);\n  },\n\n  isExtensible(target: {raw: RpcStub}): boolean {\n    return false;\n  },\n\n  ownKeys(target: {raw: RpcStub}): ArrayLike<string | symbol> {\n    return [];\n  },\n\n  preventExtensions(target: {raw: RpcStub}): boolean {\n    // Extensions are not possible anyway.\n    return true;\n  },\n\n  set(target: {raw: RpcStub}, p: string | symbol, newValue: any, receiver: any): boolean {\n    throw new Error(\"Can't assign properties on RPC stubs.\");\n  },\n\n  setPrototypeOf(target: {raw: RpcStub}, v: object | null): boolean {\n    throw new Error(\"Can't override prototype of RPC stubs.\");\n  },\n};\n\n// Implementation of RpcStub.\n//\n// Note that the in the public API, we override the type of RpcStub to reflect the interface\n// exposed by the proxy. That happens in index.ts. But for internal purposes, it's easier to just\n// omit the type parameter.\nexport class RpcStub extends RpcTarget {\n  // Although `hook` and `path` are declared `public` here, they are effectively hidden by the\n  // proxy.\n  constructor(hook: StubHook, pathIfPromise?: PropertyPath) {\n    super();\n\n    if (!(hook instanceof StubHook)) {\n      // Application invoked the constructor to explicitly construct a stub backed by some value\n      // (usually an RpcTarget). (Note we override the types as seen by the app, which is why\n      // the app can pass something that isn't a StubHook -- within the implementation, though,\n      // we always pass StubHook.)\n      let value = <any>hook;\n      if (value instanceof RpcTarget || value instanceof Function) {\n        hook = TargetStubHook.create(value, undefined);\n      } else {\n        // We adopt the value with \"return\" semantics since we want to take ownership of any stubs\n        // within.\n        hook = new PayloadStubHook(RpcPayload.fromAppReturn(value));\n      }\n\n      // Don't let app set this.\n      if (pathIfPromise) {\n        throw new TypeError(\"RpcStub constructor expected one argument, received two.\");\n      }\n    }\n\n    this.hook = hook;\n    this.pathIfPromise = pathIfPromise;\n\n    // Proxy has an unfortunate rule that it will only be considered callable if the underlying\n    // `target` is callable, i.e. a function. So our target *must* be callable. So we use a\n    // dummy function.\n    let func: any = () => {};\n    func.raw = this;\n    return new Proxy(func, PROXY_HANDLERS);\n  }\n\n  public hook: StubHook;\n  public pathIfPromise?: PropertyPath;\n\n  dup(): RpcStub {\n    // Unfortunately the method will be invoked with `this` being the Proxy, not the `RpcPromise`\n    // itself, so we have to unwrap it.\n\n    // Note dup() intentionally resets the path to empty and turns the result into a stub.\n    // TODO: Maybe it should actually return the same type? But I think that's not what it does\n    //   in Workers RPC today? (Need to check.) Alternatively, should there be an optional\n    //   parameter to specify promise vs. stub?\n    let target = this[RAW_STUB];\n    if (target.pathIfPromise) {\n      return new RpcStub(target.hook.get(target.pathIfPromise));\n    } else {\n      return new RpcStub(target.hook.dup());\n    }\n  }\n\n  onRpcBroken(callback: (error: any) => void) {\n    this[RAW_STUB].hook.onBroken(callback);\n  }\n\n  map(func: (value: RpcPromise) => unknown): RpcPromise {\n    let {hook, pathIfPromise} = this[RAW_STUB];\n    return mapImpl.sendMap(hook, pathIfPromise || [], func);\n  }\n}\n\nexport class RpcPromise extends RpcStub {\n  // TODO: Support passing target value or promise to constructor.\n  constructor(hook: StubHook, pathIfPromise: PropertyPath) {\n    super(hook, pathIfPromise);\n  }\n\n  then(onfulfilled?: ((value: unknown) => unknown) | undefined | null,\n       onrejected?: ((reason: any) => unknown) | undefined | null)\n       : Promise<unknown> {\n    return pullPromise(this).then(...arguments);\n  }\n\n  catch(onrejected?: ((reason: any) => unknown) | undefined | null): Promise<unknown> {\n    return pullPromise(this).catch(...arguments);\n  }\n\n  finally(onfinally?: (() => void) | undefined | null): Promise<unknown> {\n    return pullPromise(this).finally(...arguments);\n  }\n}\n\n// Given a stub (still wrapped in a Proxy), extract the underlying `StubHook`.\n//\n// The caller takes ownership, meaning it's expected that the original stub will never be disposed\n// itself, but the caller is responsible for calling `dispose()` on the returned hook.\n//\n// However, if the stub points to a property of some other stub or promise, then no ownership is\n// \"transferred\" because properties do not actually have disposers. However, the returned hook is\n// a new hook that aliases that property, but does actually need to be disposed.\n//\n// The result is a promise (i.e. can be pull()ed) if and only if the input is a promise.\nexport function unwrapStubTakingOwnership(stub: RpcStub): StubHook {\n  let {hook, pathIfPromise} = stub[RAW_STUB];\n\n  if (pathIfPromise && pathIfPromise.length > 0) {\n    return hook.get(pathIfPromise);\n  } else {\n    return hook;\n  }\n}\n\n// Given a stub (still wrapped in a Proxy), extract the underlying `StubHook`, and duplicate it,\n// returning the duplicate.\n//\n// The caller is responsible for disposing the returned hook, but the original stub also still\n// needs to be disposed by its owner (unless it is a property, which never needs disposal).\n//\n// The result is a promise (i.e. can be pull()ed) if and only if the input is a promise. Note that\n// this differs from the semantics of the actual `dup()` method.\nexport function unwrapStubAndDup(stub: RpcStub): StubHook {\n  let {hook, pathIfPromise} = stub[RAW_STUB];\n\n  if (pathIfPromise) {\n    return hook.get(pathIfPromise);\n  } else {\n    return hook.dup();\n  }\n}\n\n// Unwrap a stub returning the underlying `StubHook`, returning `undefined` if it is a property\n// stub.\n//\n// This function is agnostic to ownership transfer. Exactly one of `stub` or the return `hook` must\n// eventually be disposed (unless `undefined` is returned, in which case neither need to be\n// disposed, as properties are not normally disposable).\nexport function unwrapStubNoProperties(stub: RpcStub): StubHook | undefined {\n  let {hook, pathIfPromise} = stub[RAW_STUB];\n\n  if (pathIfPromise && pathIfPromise.length > 0) {\n    return undefined;\n  }\n\n  return hook;\n}\n\n// Unwrap a stub returning the underlying `StubHook`. If it's a property, return the `StubHook`\n// representing the stub or promise of which is is a property.\n//\n// This function is agnostic to ownership transfer. Exactly one of `stub` or the return `hook` must\n// eventually be disposed.\nexport function unwrapStubOrParent(stub: RpcStub): StubHook {\n  return stub[RAW_STUB].hook;\n}\n\n// Given a stub (still wrapped in a Proxy), extract the `hook` and `pathIfPromise` properties.\n//\n// This function is agnostic to ownership transfer. Exactly one of `stub` or the return `hook` must\n// eventually be disposed.\nexport function unwrapStubAndPath(stub: RpcStub): {hook: StubHook, pathIfPromise?: PropertyPath} {\n  return stub[RAW_STUB];\n}\n\n// Given a promise stub (still wrapped in a Proxy), pull the remote promise and deliver the\n// payload. This is a helper used to implement the then/catch/finally methods of RpcPromise.\nasync function pullPromise(promise: RpcPromise): Promise<unknown> {\n  let {hook, pathIfPromise} = promise[RAW_STUB];\n  if (pathIfPromise!.length > 0) {\n    // If this isn't the root promise, we have to clone it and pull the clone. This is a little\n    // weird in terms of disposal: There's no way for the app to dispose/cancel the promise while\n    // waiting because it never actually got a direct disposable reference. It has to dispose\n    // the result.\n    hook = hook.get(pathIfPromise!);\n  }\n  let payload = await hook.pull();\n  return payload.deliverResolve();\n}\n\n// =======================================================================================\n// RpcPayload\n\nexport type LocatedPromise = {parent: object, property: string | number, promise: RpcPromise};\n\n// Represents the params to an RPC call, or the resolution of an RPC promise, as it passes\n// through the system.\n//\n// `RpcPayload` is a linear type -- it is passed to or returned from a call, ownership is being\n// transferred. The payload in turn owns all the stubs within it. Disposing the payload disposes\n// the stubs.\n//\n// Hypothetically, when an `RpcPayload` is first constructed from a message structure passed from\n// the app, it ought to be deep-copied, for a few reasons:\n// - To ensure subsequent modifications of the data structure by the app aren't reflected in the\n//   already-sent message.\n// - To find all stubs in the message tree, to take ownership of them.\n// - To find all RpcTargets in the message tree, to wrap them in stubs.\n//\n// However, most payloads are immediately serialized to send across the wire. Said serialization\n// *also* has to make a deep copy, and takes ownership of all stubs found within. In the case that\n// the payload is immediately serialized, then making a deep copy first is wasteful.\n//\n// So, as an optimization, RpcPayload does not necessarily make a copy right away. Instead, it\n// keeps track of whether it's still pointing at the message structure received directly from the\n// app. In that case, the serializer can operate on the original structure directly, making it\n// more efficient.\n//\n// On the receiving end, when an RpcPayload is deserialized from the wire, the payload can safely\n// be delivered directly to the app without a copy. However, if the app makes a loopback call to\n// itself, the payload may never cross the wire. In this case, a deep copy must be made before\n// delivering the final message to the app. There are really two reasons for this copy:\n// - We obviously don't want the caller and callee sharing in-memory mutable data structures, as\n//   this would lead to vasty different behavior than what you'd see when doing RPC across a\n//   network connection.\n// - Before delivering the message to the application, all promises embedded in the message must\n//   be resolved. This is what makes pipelining possible: the sender of a message can place\n//   `RpcPromise`s in it that refer back to values in the recipient's process. These will be filled\n//   in just before delivering the message to the recipient, so that there's no need to transmit\n//   these values back and forth across the wire. It would be unreasonable to expect the\n//   application itself to check the message for promises and resolve them all, so instead the\n//   system automatically resolves all promises upfront, replacing them with their resolutions.\n//   This modifies the payload in-place -- but this of course requires that the payload is\n//   operating on a copy of the message, not the original provided from the sending app.\n//\n// For both the purposes of disposal and substituting promises with their resolutions, it is\n// necessary at some point to make a list of all the stubs (including promise stubs) present in\n// the message. Again, `RpcPayload` tries to minimize the number of times that the whole message\n// needs to be walked, so it implements the following policy:\n// * When constructing a payload from an app-provided message object, the message is not walked\n//   upfront. We do not know yet what stubs it contains.\n// * When deserializing a payload from the wire, we build a list of stubs as part of the\n//   deserialization process.\n// * If we need to deep-copy an app-provided message, we make a list of stubs then.\n// * Hence, we have a list of stubs if and only if the message structure was NOT provided directly\n//   by the application.\n// * If an app-provided payload is serialized, the serializer finds the stubs. (It also typically\n//   takes ownership of the stubs, effectively consuming the payload, so there's no need to build\n//   a list of the stubs.)\n// * If an app-provided payload is disposed, then we have to walk the message at that time to\n//   dispose all stubs within. But, note that when a payload is serialized -- with the serializer\n//   taking ownership of stubs -- then the payload will NOT be disposed explicitly, so this step\n//   will not be needed.\nexport class RpcPayload {\n  // Create a payload from a value passed as params to an RPC from the app.\n  //\n  // The payload does NOT take ownership of any stubs in `value`, and but promises not to modify\n  // `value`. If the payload is delivered locally, `value` will be deep-copied first, so as not\n  // to have the sender and recipient end up sharing the same mutable object. `value` will not be\n  // touched again after the call returns synchronously (returns a promise) -- by that point,\n  // the value has either been copied or serialized to the wire.\n  public static fromAppParams(value: unknown): RpcPayload {\n    return new RpcPayload(value, \"params\");\n  }\n\n  // Create a payload from a value return from an RPC implementation by the app.\n  //\n  // Unlike fromAppParams(), in this case the payload takes ownership of all stubs in `value`, and\n  // may hold onto `value` for an arbitrarily long time (e.g. to serve pipelined requests). It\n  // will still avoid modifying `value` and will make a deep copy if it is delivered locally.\n  public static fromAppReturn(value: unknown): RpcPayload {\n    return new RpcPayload(value, \"return\");\n  }\n\n  // Combine an array of payloads into a single payload whose value is an array. Ownership of all\n  // stubs is transferred from the inputs to the outputs, hence if the output is disposed, the\n  // inputs should not be. (In case of exception, nothing is disposed, though.)\n  public static fromArray(array: RpcPayload[]): RpcPayload {\n    let stubs: RpcStub[] = [];\n    let promises: LocatedPromise[] = [];\n\n    let resultArray: unknown[] = [];\n\n    for (let payload of array) {\n      payload.ensureDeepCopied();\n      for (let stub of payload.stubs!) {\n        stubs.push(stub);\n      }\n      for (let promise of payload.promises!) {\n        if (promise.parent === payload) {\n          // This promise is the root of the source payload. We need to reparent it to its proper\n          // location in the result array.\n          promise = {\n            parent: resultArray,\n            property: resultArray.length,\n            promise: promise.promise\n          };\n        }\n        promises.push(promise);\n      }\n      resultArray.push(payload.value);\n    }\n\n    return new RpcPayload(resultArray, \"owned\", stubs, promises);\n  }\n\n  // Create a payload from a value parsed off the wire using Evaluator.evaluate().\n  //\n  // A payload is constructed with a null value and the given stubs and promises arrays. The value\n  // is expected to be filled in by the evaluator, and the stubs and promises arrays are expected\n  // to be extended with stubs found during parsing. (This weird usage model is necessary so that\n  // if the root value turns out to be a promise, its `parent` in `promises` can be the payload\n  // object itself.)\n  //\n  // When done, the payload takes ownership of the final value and all the stubs within. It may\n  // modify the value in preparation for delivery, and may deliver the value directly to the app\n  // without copying.\n  public static forEvaluate(stubs: RpcStub[], promises: LocatedPromise[]) {\n    return new RpcPayload(null, \"owned\", stubs, promises);\n  }\n\n  // Deep-copy the given value, including dup()ing all stubs.\n  //\n  // If `value` is a function, it should be bound to `oldParent` as its `this`.\n  //\n  // If deep-copying from a branch of some other RpcPayload, it must be provided, to make sure\n  // RpcTargets found within don't get duplicate stubs.\n  public static deepCopyFrom(\n      value: unknown, oldParent: object | undefined, owner: RpcPayload | null): RpcPayload {\n    let result = new RpcPayload(null, \"owned\", [], []);\n    result.value = result.deepCopy(value, oldParent, \"value\", result, /*dupStubs=*/true, owner);\n    return result;\n  }\n\n  // Private constructor; use factory functions above to construct.\n  private constructor(\n    // The payload value.\n    public value: unknown,\n\n    // What is the provenance of `value`?\n    // \"params\": It came from the app, in params to a call. We must dupe any stubs within.\n    // \"return\": It came from the app, returned from a call. We take ownership of all stubs within.\n    // \"owned\": This value belongs fully to us, either because it was deserialized from the wire\n    //   or because we deep-copied a value from the app.\n    private source: \"params\" | \"return\" | \"owned\",\n\n    // `stubs` and `promises` are filled in only if `value` belongs to us (`source` is \"owned\") and\n    // so can safely be delivered to the app. If `value` came from then app in the first place,\n    // then it cannot be delivered back to the app nor modified by us without first deep-copying\n    // it. `stubs` and `promises` will be computed as part of the deep-copy.\n\n    // All non-promise stubs found in `value`. Provided so that they can easily be disposed.\n    private stubs?: RpcStub[],\n\n    // All promises found in `value`. The locations of each promise are provided to allow\n    // substitutions later.\n    private promises?: LocatedPromise[]\n  ) {}\n\n  // For `source === \"return\"` payloads only, this tracks any StubHooks created around RpcTargets\n  // found in the payload at the time that it is serialized (or deep-copied) for return, so that we\n  // can make sure they are not disposed before the pipeline ends.\n  //\n  // This is initialized on first use.\n  private rpcTargets?: Map<RpcTarget | Function, StubHook>;\n\n  // Get the StubHook representing the given RpcTarget found inside this payload.\n  public getHookForRpcTarget(target: RpcTarget | Function, parent: object | undefined,\n                             dupStubs: boolean = true): StubHook {\n    if (this.source === \"params\") {\n      return TargetStubHook.create(target, parent);\n    } else if (this.source === \"return\") {\n      // If dupStubs is true, we want to both make sure the map contains the stub, and also return\n      // a dup of that stub.\n      //\n      // If dupStubs is false, then we are being called as part of ensureDeepCopy(), i.e. replacing\n      // ourselves with a deep copy. In this case we actually want the copy to end up owning all\n      // the hooks, and the map to be left empty. So what we do in this case is:\n      // * If the target is not in the map, we just create it, but don't populate the map.\n      // * If the target *is* in the map, we *remove* the hook from the map, and return it.\n\n      let hook = this.rpcTargets?.get(target);\n      if (hook) {\n        if (dupStubs) {\n          return hook.dup();\n        } else {\n          this.rpcTargets?.delete(target);\n          return hook;\n        }\n      } else {\n        hook = TargetStubHook.create(target, parent);\n        if (dupStubs) {\n          if (!this.rpcTargets) {\n            this.rpcTargets = new Map;\n          }\n          this.rpcTargets.set(target, hook);\n          return hook.dup();\n        } else {\n          return hook;\n        }\n      }\n    } else {\n      throw new Error(\"owned payload shouldn't contain raw RpcTargets\");\n    }\n  }\n\n  private deepCopy(\n      value: unknown, oldParent: object | undefined, property: string | number, parent: object,\n      dupStubs: boolean, owner: RpcPayload | null): unknown {\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"unsupported\":\n        // This will throw later on when someone tries to do something with it.\n        return value;\n\n      case \"primitive\":\n      case \"bigint\":\n      case \"date\":\n      case \"bytes\":\n      case \"error\":\n      case \"undefined\":\n        // immutable, no need to copy\n        // TODO: Should errors be copied if they have own properties?\n        return value;\n\n      case \"array\": {\n        // We have to construct the new array first, then fill it in, so we can pass it as the\n        // parent.\n        let array = <Array<unknown>>value;\n        let len = array.length;\n        let result = new Array(len);\n        for (let i = 0; i < len; i++) {\n          result[i] = this.deepCopy(array[i], array, i, result, dupStubs, owner);\n        }\n        return result;\n      }\n\n      case \"object\": {\n        // Plain object. Unfortunately there's no way to pre-allocate the right shape.\n        let result: Record<string, unknown> = {};\n        let object = <Record<string, unknown>>value;\n        for (let i in object) {\n          result[i] = this.deepCopy(object[i], object, i, result, dupStubs, owner);\n        }\n        return result;\n      }\n\n      case \"stub\":\n      case \"rpc-promise\": {\n        let stub = <RpcStub>value;\n        let hook: StubHook;\n        if (dupStubs) {\n          hook = unwrapStubAndDup(stub);\n        } else {\n          hook = unwrapStubTakingOwnership(stub);\n        }\n        if (stub instanceof RpcPromise) {\n          let promise = new RpcPromise(hook, []);\n          this.promises!.push({parent, property, promise});\n          return promise;\n        } else {\n          let newStub = new RpcStub(hook);\n          this.stubs!.push(newStub);\n          return newStub;\n        }\n      }\n\n      case \"function\":\n      case \"rpc-target\": {\n        let target = <RpcTarget | Function>value;\n        let stub: RpcStub;\n        if (owner) {\n          stub = new RpcStub(owner.getHookForRpcTarget(target, oldParent, dupStubs));\n        } else {\n          stub = new RpcStub(TargetStubHook.create(target, oldParent));\n        }\n        this.stubs!.push(stub);\n        return stub;\n      }\n\n      case \"rpc-thenable\": {\n        let target = <RpcTarget>value;\n        let promise: RpcPromise;\n        if (owner) {\n          promise = new RpcPromise(owner.getHookForRpcTarget(target, oldParent, dupStubs), []);\n        } else {\n          promise = new RpcPromise(TargetStubHook.create(target, oldParent), []);\n        }\n        this.promises!.push({parent, property, promise});\n        return promise;\n      }\n\n      default:\n        kind satisfies never;\n        throw new Error(\"unreachable\");\n    }\n  }\n\n  // Ensures that if the value originally came from an unowned source, we have replaced it with a\n  // deep copy.\n  public ensureDeepCopied() {\n    if (this.source !== \"owned\") {\n      // If we came from call params, we need to dupe any stubs. Otherwise (we came from a return),\n      // we take ownership of all stubs.\n      let dupStubs = this.source === \"params\";\n\n      this.stubs = [];\n      this.promises = [];\n\n      // Deep-copy the value.\n      try {\n        this.value = this.deepCopy(this.value, undefined, \"value\", this, dupStubs, this);\n      } catch (err) {\n        // Roll back the change.\n        this.stubs = undefined;\n        this.promises = undefined;\n        throw err;\n      }\n\n      // We now own the value.\n      this.source = \"owned\";\n\n      // `rpcTargets` should have been left empty. We can throw it out.\n      if (this.rpcTargets && this.rpcTargets.size > 0) {\n        throw new Error(\"Not all rpcTargets were accounted for in deep-copy?\");\n      }\n      this.rpcTargets = undefined;\n    }\n  }\n\n  // Resolve all promises in this payload and then assign the final value into `parent[property]`.\n  private deliverTo(parent: object, property: string | number, promises: Promise<any>[]): void {\n    this.ensureDeepCopied();\n\n    if (this.value instanceof RpcPromise) {\n      RpcPayload.deliverRpcPromiseTo(this.value, parent, property, promises);\n    } else {\n      (<any>parent)[property] = this.value;\n\n      for (let record of this.promises!) {\n        // Note that because we already did ensureDeepCopied(), replacing each promise with its\n        // resolution does not interfere with disposal later on -- disposal will be based on the\n        // `promises` list, so will still properly dispose each promise, which in turn disposes\n        // the promise's eventual payload.\n        RpcPayload.deliverRpcPromiseTo(record.promise, record.parent, record.property, promises);\n      }\n    }\n  }\n\n  private static deliverRpcPromiseTo(\n      promise: RpcPromise, parent: object, property: string | number,\n      promises: Promise<unknown>[]) {\n    // deepCopy() should have replaced any property stubs with normal promise stubs.\n    let hook = unwrapStubNoProperties(promise);\n    if (!hook) {\n      throw new Error(\"property promises should have been resolved earlier\");\n    }\n\n    let inner = hook.pull();\n    if (inner instanceof RpcPayload) {\n      // Immediately resolved to payload.\n      inner.deliverTo(parent, property, promises);\n    } else {\n      // It's a promise.\n      promises.push(inner.then(payload => {\n        let subPromises: Promise<unknown>[] = [];\n        payload.deliverTo(parent, property, subPromises);\n        if (subPromises.length > 0) {\n          return Promise.all(subPromises);\n        }\n      }));\n    }\n  }\n\n  // Call the given function with the payload as an argument. The call is made synchronously if\n  // possible, in order to maintain e-order. However, if any RpcPromises exist in the payload,\n  // they are awaited and substituted before calling the function. The result of the call is\n  // wrapped into another payload.\n  //\n  // The payload is automatically disposed after the call completes. The caller should not call\n  // dispose().\n  public async deliverCall(func: Function, thisArg: object | undefined): Promise<RpcPayload> {\n    try {\n      let promises: Promise<void>[] = [];\n      this.deliverTo(this, \"value\", promises);\n\n      // WARNING: It is critical that if the promises list is empty, we do not await anything, so\n      //   that the function is called immediately and synchronously. Otherwise, we might violate\n      //   e-order.\n      if (promises.length > 0) {\n        await Promise.all(promises);\n      }\n\n      // Call the function.\n      let result = Function.prototype.apply.call(func, thisArg, this.value);\n\n      if (result instanceof RpcPromise) {\n        // Special case: If the function immediately returns RpcPromise, we don't want to await it,\n        // since that will actually wait for the promise. Instead we want to construct a payload\n        // around it directly.\n        return RpcPayload.fromAppReturn(result);\n      } else {\n        // In all other cases, await the result (which may or may not be a promise, but `await`\n        // will just pass through non-promises).\n        return RpcPayload.fromAppReturn(await result);\n      }\n    } finally {\n      this.dispose();\n    }\n  }\n\n  // Produce a promise for this payload for return to the application. Any RpcPromises in the\n  // payload are awaited and substituted with their results first.\n  //\n  // The returned object will have a disposer which disposes the payload. The caller should not\n  // separately dispose it.\n  public async deliverResolve(): Promise<unknown> {\n    try {\n      let promises: Promise<void>[] = [];\n      this.deliverTo(this, \"value\", promises);\n\n      if (promises.length > 0) {\n        await Promise.all(promises);\n      }\n\n      let result = this.value;\n\n      // Add disposer to result.\n      if (result instanceof Object) {\n        if (!(Symbol.dispose in result)) {\n          // We want the disposer to be non-enumerable as otherwise it gets in the way of things\n          // like unit tests trying to deep-compare the result to an object.\n          Object.defineProperty(result, Symbol.dispose, {\n            // NOTE: Using `this.dispose.bind(this)` here causes Playwright's build of\n            //   Chromium 140.0.7339.16 to fail when the object is assigned to a `using` variable,\n            //   with the error:\n            //       TypeError: Symbol(Symbol.dispose) is not a function\n            //   I cannot reproduce this problem in Chrome 140.0.7339.127 nor in Node or workerd,\n            //   so maybe it was a short-lived V8 bug or something. To be safe, though, we use\n            //   `() => this.dispose()`, which seems to always work.\n            value: () => this.dispose(),\n            writable: true,\n            enumerable: false,\n            configurable: true,\n          });\n        }\n      }\n\n      return result;\n    } catch (err) {\n      // Automatically dispose since the application will never receive the disposable...\n      this.dispose();\n      throw err;\n    }\n  }\n\n  public dispose() {\n    if (this.source === \"owned\") {\n      // Oh good, we can just run through them.\n      this.stubs!.forEach(stub => stub[Symbol.dispose]());\n      this.promises!.forEach(promise => promise.promise[Symbol.dispose]());\n    } else if (this.source === \"return\") {\n      // Value received directly from app as a return value. We take ownership of all stubs, so we\n      // must recursively scan it for things to dispose.\n      this.disposeImpl(this.value, undefined);\n      if (this.rpcTargets && this.rpcTargets.size > 0) {\n        throw new Error(\"Not all rpcTargets were accounted for in disposeImpl()?\");\n      }\n    } else {\n      // this.source is \"params\". We don't own the stubs within.\n    }\n\n    // Make dispose() idempotent.\n    this.source = \"owned\";\n    this.stubs = [];\n    this.promises = [];\n  }\n\n  // Recursive dispose, called only when `source` is \"return\".\n  private disposeImpl(value: unknown, parent: object | undefined) {\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"unsupported\":\n      case \"primitive\":\n      case \"bigint\":\n      case \"bytes\":\n      case \"date\":\n      case \"error\":\n      case \"undefined\":\n        return;\n\n      case \"array\": {\n        let array = <Array<unknown>>value;\n        let len = array.length;\n        for (let i = 0; i < len; i++) {\n          this.disposeImpl(array[i], array);\n        }\n        return;\n      }\n\n      case \"object\": {\n        let object = <Record<string, unknown>>value;\n        for (let i in object) {\n          this.disposeImpl(object[i], object);\n        }\n        return;\n      }\n\n      case \"stub\":\n      case \"rpc-promise\": {\n        let stub = <RpcStub>value;\n        let hook = unwrapStubNoProperties(stub);\n        if (hook) {\n          hook.dispose();\n        }\n        return;\n      }\n\n      case \"function\":\n      case \"rpc-target\": {\n        let target = <RpcTarget | Function>value;\n        let hook = this.rpcTargets?.get(target);\n        if (hook) {\n          // We created a hook around this target earlier. Dispose it now.\n          hook.dispose();\n          this.rpcTargets!.delete(target);\n        } else {\n          // There never was a stub pointing at this target. This could be because:\n          // * The call was used only for promise pipelining, so the result was never serialized,\n          //   so it never got added to `rpcTargets`.\n          // * The same RpcTarget appears in the results twice, and we already disposed the hook\n          //   when we saw it earlier. Note that it's intentional that we should call the disposer\n          //   twice if the same object appears twice.\n          disposeRpcTarget(target);\n        }\n        return;\n      }\n\n      case \"rpc-thenable\":\n        // Since thenables are promises, we don't own them, so we don't dispose them.\n        return;\n\n      default:\n        kind satisfies never;\n        return;\n    }\n  }\n\n  // Ignore unhandled rejections in all promises in this payload -- that is, all promises that\n  // *would* be awaited if this payload were to be delivered. See the similarly-named method of\n  // StubHook for explanation.\n  ignoreUnhandledRejections(): void {\n    if (this.stubs) {\n      // Propagate to all stubs and promises.\n      this.stubs.forEach(stub => {\n        unwrapStubOrParent(stub).ignoreUnhandledRejections();\n      });\n      this.promises!.forEach(\n          promise => unwrapStubOrParent(promise.promise).ignoreUnhandledRejections());\n    } else {\n      // Ugh we have to walk the tree.\n      this.ignoreUnhandledRejectionsImpl(this.value);\n    }\n  }\n\n  private ignoreUnhandledRejectionsImpl(value: unknown) {\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"unsupported\":\n      case \"primitive\":\n      case \"bigint\":\n      case \"bytes\":\n      case \"date\":\n      case \"error\":\n      case \"undefined\":\n      case \"function\":\n      case \"rpc-target\":\n        return;\n\n      case \"array\": {\n        let array = <Array<unknown>>value;\n        let len = array.length;\n        for (let i = 0; i < len; i++) {\n          this.ignoreUnhandledRejectionsImpl(array[i]);\n        }\n        return;\n      }\n\n      case \"object\": {\n        let object = <Record<string, unknown>>value;\n        for (let i in object) {\n          this.ignoreUnhandledRejectionsImpl(object[i]);\n        }\n        return;\n      }\n\n      case \"stub\":\n      case \"rpc-promise\":\n        unwrapStubOrParent(<RpcStub>value).ignoreUnhandledRejections();\n        return;\n\n      case \"rpc-thenable\":\n        (<any>value).then((_: any) => {}, (_: any) => {});\n        return;\n\n      default:\n        kind satisfies never;\n        return;\n    }\n  }\n};\n\n// =======================================================================================\n// Local StubHook implementations\n\n// Result of followPath().\ntype FollowPathResult = {\n  // Path led to a regular value.\n\n  value: unknown,              // the value\n  parent: object | undefined,  // the immediate parent (useful as `this` if making a call)\n  owner: RpcPayload | null,    // RpcPayload that owns the value, if any\n\n  hook?: never,\n  remainingPath?: never,\n} | {\n  // Path leads into another stub, which needs to be called recursively.\n\n  hook: StubHook,               // StubHook of the inner stub.\n  remainingPath: PropertyPath,  // Path to pass to `hook` when recursing.\n\n  value?: never,\n  parent?: never,\n  owner?: never,\n};\n\nfunction followPath(value: unknown, parent: object | undefined,\n                    path: PropertyPath, owner: RpcPayload | null): FollowPathResult {\n  for (let i = 0; i < path.length; i++) {\n    parent = <object>value;\n\n    let part = path[i];\n    if (part in Object.prototype) {\n      // Don't allow messing with Object.prototype properties over RPC. We block these even if\n      // the specific object has overridden them for consistency with the deserialization code,\n      // which will refuse to deserialize an object containing such properties. Anyway, it's\n      // impossible for a normal client to even request these because accessing Object prototype\n      // properties on a stub will resolve to the local prototype property, not making an RPC at\n      // all.\n      value = undefined;\n      continue;\n    }\n\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"object\":\n      case \"function\":\n        // Must be own property, NOT inherited from a prototype.\n        if (Object.hasOwn(<object>value, part)) {\n          value = (<any>value)[part];\n        } else {\n          value = undefined;\n        }\n        break;\n\n      case \"array\":\n        // For arrays, restrict specifically to numeric indexes, to be consistent with\n        // serialization, which only sends a flat list.\n        if (Number.isInteger(part) && <number>part >= 0) {\n          value = (<any>value)[part];\n        } else {\n          value = undefined;\n        }\n        break;\n\n      case \"rpc-target\":\n      case \"rpc-thenable\": {\n        // Must be prototype property, and must NOT be inherited from `Object`.\n        if (Object.hasOwn(<object>value, part)) {\n          value = undefined;\n        } else {\n          value = (<any>value)[part];\n        }\n\n        // Since we're descending into the RpcTarget, the rest of the path is not \"owned\" by any\n        // RpcPayload.\n        owner = null;\n        break;\n      }\n\n      case \"stub\":\n      case \"rpc-promise\": {\n        let {hook: hook, pathIfPromise} = unwrapStubAndPath(<RpcStub>value);\n        return { hook, remainingPath:\n            pathIfPromise ? pathIfPromise.concat(path.slice(i)) : path.slice(i) };\n      }\n\n      case \"primitive\":\n      case \"bigint\":\n      case \"bytes\":\n      case \"date\":\n      case \"error\":\n        // These have no properties that can be accessed remotely.\n        value = undefined;\n        break;\n\n      case \"undefined\":\n        // Intentionally produce TypeError.\n        value = (value as any)[part];\n        break;\n\n      case \"unsupported\": {\n        if (i === 0) {\n          throw new TypeError(`RPC stub points at a non-serializable type.`);\n        } else {\n          let prefix = path.slice(0, i).join(\".\");\n          let remainder = path.slice(0, i).join(\".\");\n          throw new TypeError(\n              `'${prefix}' is not a serializable type, so property ${remainder} cannot ` +\n              `be accessed.`);\n        }\n      }\n\n      default:\n        kind satisfies never;\n        throw new TypeError(\"unreachable\");\n    }\n  }\n\n  // If we reached a promise, we actually want the caller to forward to the promise, not return\n  // the promise itself.\n  if (value instanceof RpcPromise) {\n    let {hook: hook, pathIfPromise} = unwrapStubAndPath(<RpcStub>value);\n    return { hook, remainingPath: pathIfPromise || [] };\n  }\n\n  // We don't validate the final value itself because we don't know the intended use yet. If it's\n  // for a call, any callable is valid. If it's for get(), then any serializable value is valid.\n  return {\n    value,\n    parent,\n    owner,\n  };\n}\n\n// Shared base class for PayloadStubHook and TargetStubHook.\nabstract class ValueStubHook extends StubHook {\n  protected abstract getValue(): {value: unknown, owner: RpcPayload | null};\n\n  call(path: PropertyPath, args: RpcPayload): StubHook {\n    try {\n      let {value, owner} = this.getValue();\n      let followResult = followPath(value, undefined, path, owner);\n\n      if (followResult.hook) {\n        return followResult.hook.call(followResult.remainingPath, args);\n      }\n\n      // It's a local function.\n      if (typeof followResult.value != \"function\") {\n        throw new TypeError(`'${path.join('.')}' is not a function.`);\n      }\n      let promise = args.deliverCall(followResult.value, followResult.parent);\n      return new PromiseStubHook(promise.then(payload => {\n        return new PayloadStubHook(payload);\n      }));\n    } catch (err) {\n      return new ErrorStubHook(err);\n    }\n  }\n\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook {\n    try {\n      let followResult: FollowPathResult;\n      try {\n        let {value, owner} = this.getValue();\n        followResult = followPath(value, undefined, path, owner);;\n      } catch (err) {\n        // Oops, we need to dispose the captures of which we took ownership.\n        for (let cap of captures) {\n          cap.dispose();\n        }\n        throw err;\n      }\n\n      if (followResult.hook) {\n        return followResult.hook.map(followResult.remainingPath, captures, instructions);\n      }\n\n      return mapImpl.applyMap(\n          followResult.value, followResult.parent, followResult.owner, captures, instructions);\n    } catch (err) {\n      return new ErrorStubHook(err);\n    }\n  }\n\n  get(path: PropertyPath): StubHook {\n    try {\n      let {value, owner} = this.getValue();\n\n      if (path.length === 0 && owner === null) {\n        // The only way this happens is if someone sends \"pipeline\" and references a\n        // TargetStubHook, but they shouldn't do that, because TargetStubHook never backs a\n        // promise, and a non-promise cannot be converted to a promise.\n        // TODO: Is this still correct for rpc-thenable?\n        throw new Error(\"Can't dup an RpcTarget stub as a promise.\");\n      }\n\n      let followResult = followPath(value, undefined, path, owner);\n\n      if (followResult.hook) {\n        return followResult.hook.get(followResult.remainingPath);\n      }\n\n      // Note that if `followResult.owner` is null, then we've descended into the contents of an\n      // RpcTarget. In that case, if this deep copy discovers an RpcTarget embedded in the result,\n      // it will create a new stub for it. If that RpcTarget has a disposer, it'll be disposed when\n      // that stub is disposed. If the same RpcTarget is returned in *another* get(), it create\n      // *another* stub, which calls the disposer *another* time. This can be quite weird -- the\n      // disposer may be called any number of times, including zero if the property is never read\n      // at all. Unfortunately, that's just the way it is. The application can avoid this problem by\n      // wrapping the RpcTarget in an RpcStub itself, proactively, and using that as the property --\n      // then, each time the property is get()ed, a dup() of that stub is returned.\n      return new PayloadStubHook(RpcPayload.deepCopyFrom(\n          followResult.value, followResult.parent, followResult.owner));\n    } catch (err) {\n      return new ErrorStubHook(err);\n    }\n  }\n}\n\n// StubHook wrapping an RpcPayload in local memory.\n//\n// This is used for:\n// - Resolution of a promise.\n//   - Initially on the server side, where it can be pull()ed and used in pipelining.\n//   - On the client side, after pull() has transmitted the payload.\n// - Implementing RpcTargets, on the server side.\n//   - Since the payload's root is an RpcTarget, pull()ing it will just duplicate the stub.\nexport class PayloadStubHook extends ValueStubHook {\n  constructor(payload: RpcPayload) {\n    super();\n    this.payload = payload;\n  }\n\n  private payload?: RpcPayload;  // cleared when disposed\n\n  private getPayload(): RpcPayload {\n    if (this.payload) {\n      return this.payload;\n    } else {\n      throw new Error(\"Attempted to use an RPC StubHook after it was disposed.\");\n    }\n  }\n\n  protected getValue() {\n    let payload = this.getPayload();\n    return {value: payload.value, owner: payload};\n  }\n\n  dup(): StubHook {\n    // Although dup() is documented as not copying the payload, what this really means is that\n    // you aren't expected to be able to pull() from a dup()ed hook if it is remote. However,\n    // PayloadStubHook already has the value locally, and there's nothing we can do except clone\n    // it here.\n    //\n    // TODO: Should we prohibit pull()ing from the clone? The fact that it'll be wrapped as\n    //   RpcStub instead of RpcPromise should already prevent this...\n    let thisPayload = this.getPayload();\n    return new PayloadStubHook(RpcPayload.deepCopyFrom(\n        thisPayload.value, undefined, thisPayload));\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    // Reminder: pull() intentionally returns the hook's own payload and not a clone. The caller\n    // only needs to dispose one of the hook or the payload. It is the caller's responsibility\n    // to not dispose the payload if they intend to keep the hook around.\n    return this.getPayload();\n  }\n\n  ignoreUnhandledRejections(): void {\n    if (this.payload) {\n      this.payload.ignoreUnhandledRejections();\n    }\n  }\n\n  dispose(): void {\n    if (this.payload) {\n      this.payload.dispose();\n      this.payload = undefined;\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    if (this.payload) {\n      if (this.payload.value instanceof RpcStub) {\n        // Payload is a single stub, we should forward onRpcBroken to it.\n        // TODO: Consider prohibiting PayloadStubHook created around a single stub; should always\n        //   use the underlying stub's hook instead?\n        this.payload.value.onRpcBroken(callback);\n      }\n\n      // TODO: Should native stubs be able to implement onRpcBroken?\n    }\n  }\n}\n\nfunction disposeRpcTarget(target: RpcTarget | Function) {\n  if (Symbol.dispose in target) {\n    try {\n      ((<Disposable><any>target)[Symbol.dispose])();\n    } catch (err) {\n      // We don't actually want to throw from dispose() as this will create trouble for\n      // the RPC state machine. Instead, treat the application's error as an unhandled\n      // rejection.\n      Promise.reject(err);\n    }\n  }\n}\n\n// Many TargetStubHooks could point at the same RpcTarget. We store a refcount in a separate\n// object that they all share.\n//\n// We can't store the refcount on the RpcTarget itself because if the application chooses to pass\n// the same RpcTarget into the RPC system multiple times, we need to call this disposer multiple\n// times for consistency.\ntype BoxedRefcount = { count: number };\n\n// StubHook which wraps an RpcTarget. This has similarities to PayloadStubHook (especially when\n// the root of the payload happens to be an RpcTarget), but there can only be one RpcPayload\n// pointing at an RpcTarget whereas there can be several TargetStubHooks pointing at it. Also,\n// TargetStubHook cannot be pull()ed, because it always backs an RpcStub, not an RpcPromise.\nclass TargetStubHook extends ValueStubHook {\n  // Constructs a TargetStubHook that is not duplicated from an existing hook.\n  //\n  // If `value` is a function, `parent` is bound as its \"this\".\n  static create(value: RpcTarget | Function, parent: object | undefined) {\n    if (typeof value !== \"function\") {\n      // If the target isn't callable, we don't need to pass a `this` to it, so drop `parent`.\n      // NOTE: `typeof value === \"function\"` checks if the value is callable. This technically\n      //   works even for `RpcTarget` implementations that are callable, not just plain functions.\n      parent = undefined;\n    }\n    return new TargetStubHook(value, parent);\n  }\n\n  private constructor(target: RpcTarget | Function,\n                      parent?: object | undefined,\n                      dupFrom?: TargetStubHook) {\n    super();\n    this.target = target;\n    this.parent = parent;\n    if (dupFrom) {\n      if (dupFrom.refcount) {\n        this.refcount = dupFrom.refcount;\n        ++this.refcount.count;\n      }\n    } else if (Symbol.dispose in target) {\n      // Disposer present, so we need to refcount.\n      this.refcount = {count: 1};\n    }\n  }\n\n  private target?: RpcTarget | Function;  // cleared when disposed\n  private parent?: object | undefined;  // `this` parameter when calling `target`\n  private refcount?: BoxedRefcount;  // undefined if not needed (because target has no disposer)\n\n  private getTarget(): RpcTarget | Function {\n    if (this.target) {\n      return this.target;\n    } else {\n      throw new Error(\"Attempted to use an RPC StubHook after it was disposed.\");\n    }\n  }\n\n  protected getValue() {\n    return {value: this.getTarget(), owner: null};\n  }\n\n  dup(): StubHook {\n    return new TargetStubHook(this.getTarget(), this.parent, this);\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    let target = this.getTarget();\n    if (\"then\" in target) {\n      // If the target is itself thenable, we allow it to be treated as a promise. This is used\n      // in particular to support wrapping a workerd-native RpcPromise or RpcProperty.\n      return Promise.resolve(target).then(resolution => {\n        return RpcPayload.fromAppReturn(resolution);\n      });\n    } else {\n      // This shouldn't be called since RpcTarget always becomes RpcStub, not RpcPromise, and you\n      // can only pull a promise.\n      return Promise.reject(new Error(\"Tried to resolve a non-promise stub.\"));\n    }\n  }\n\n  ignoreUnhandledRejections(): void {\n    // Nothing to do.\n  }\n\n  dispose(): void {\n    if (this.target) {\n      if (this.refcount) {\n        if (--this.refcount.count == 0) {\n          disposeRpcTarget(this.target);\n        }\n      }\n\n      this.target = undefined;\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    // TODO: Should RpcTargets be able to implement onRpcBroken?\n  }\n}\n\n// StubHook derived from a Promise for some other StubHook. Waits for the promise and then\n// forward calls, being careful to honor e-order.\nclass PromiseStubHook extends StubHook {\n  private promise: Promise<StubHook>;\n  private resolution: StubHook | undefined;\n\n  constructor(promise: Promise<StubHook>) {\n    super();\n\n    this.promise = promise.then(res => { this.resolution = res; return res; });\n  }\n\n  call(path: PropertyPath, args: RpcPayload): StubHook {\n    // Note: We can't use `resolution` even if it's available because it could technically break\n    //   e-order: A call() that arrives just after the resolution could be delivered faster than\n    //   a call() that arrives just before. Keeping the promise around and always waiting on it\n    //   avoids the problem.\n    // TODO: Is there a way around this?\n\n    // Once call() returns (synchronously), we can no longer touch the original args. Since we\n    // can't serialize them yet, we have to deep-copy them now.\n    args.ensureDeepCopied();\n\n    return new PromiseStubHook(this.promise.then(hook => hook.call(path, args)));\n  }\n\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook {\n    return new PromiseStubHook(this.promise.then(\n        hook => hook.map(path, captures, instructions),\n        err => {\n          for (let cap of captures) {\n            cap.dispose();\n          }\n          throw err;\n        }));\n  }\n\n  get(path: PropertyPath): StubHook {\n    // Note: e-order matters for get(), just like call(), in case the property has a getter.\n    return new PromiseStubHook(this.promise.then(hook => hook.get(path)));\n  }\n\n  dup(): StubHook {\n    if (this.resolution) {\n      return this.resolution.dup();\n    } else {\n      return new PromiseStubHook(this.promise.then(hook => hook.dup()));\n    }\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    // Luckily, resolutions are not subject to e-order, so it's safe to use `this.resolution`\n    // here. In fact, it is required to maintain e-order elsewhere: If this promise is being used\n    // as the input to some other local call (via promise pipelining), we need to make sure that\n    // other call is not delayed at all when this promise is already resolved.\n    if (this.resolution) {\n      return this.resolution.pull();\n    } else {\n      return this.promise.then(hook => hook.pull());\n    }\n  }\n\n  ignoreUnhandledRejections(): void {\n    if (this.resolution) {\n      this.resolution.ignoreUnhandledRejections();\n    } else {\n      this.promise.then(res => {\n        res.ignoreUnhandledRejections();\n      }, err => {\n        // Ignore the error!\n      });\n    }\n  }\n\n  dispose(): void {\n    if (this.resolution) {\n      this.resolution.dispose();\n    } else {\n      this.promise.then(hook => {\n        hook.dispose();\n      }, err => {\n        // nothing to dispose\n      });\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    if (this.resolution) {\n      this.resolution.onBroken(callback);\n    } else {\n      this.promise.then(hook => {\n        hook.onBroken(callback);\n      }, callback);\n    }\n  }\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { StubHook, RpcPayload, typeForRpc, RpcStub, RpcPromise, LocatedPromise, RpcTarget, PropertyPath, unwrapStubAndPath } from \"./core.js\";\n\nexport type ImportId = number;\nexport type ExportId = number;\n\n// =======================================================================================\n\nexport interface Exporter {\n  exportStub(hook: StubHook): ExportId;\n  exportPromise(hook: StubHook): ExportId;\n  getImport(hook: StubHook): ImportId | undefined;\n\n  // If a serialization error occurs after having exported some capabilities, this will be called\n  // to roll back the exports.\n  unexport(ids: Array<ExportId>): void;\n\n  onSendError(error: Error): Error | void;\n}\n\nclass NullExporter implements Exporter {\n  exportStub(stub: StubHook): never {\n    throw new Error(\"Cannot serialize RPC stubs without an RPC session.\");\n  }\n  exportPromise(stub: StubHook): never {\n    throw new Error(\"Cannot serialize RPC stubs without an RPC session.\");\n  }\n  getImport(hook: StubHook): ImportId | undefined {\n    return undefined;\n  }\n  unexport(ids: Array<ExportId>): void {}\n\n  onSendError(error: Error): Error | void {}\n}\n\nconst NULL_EXPORTER = new NullExporter();\n\n// Maps error name to error class for deserialization.\nconst ERROR_TYPES: Record<string, any> = {\n  Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError, AggregateError,\n  // TODO: DOMError? Others?\n};\n\n// Polyfill type for UInt8Array.toBase64(), which has started landing in JS runtimes but is not\n// supported everywhere just yet.\ninterface Uint8Array {\n  toBase64?(options?: {\n    alphabet?: \"base64\" | \"base64url\",\n    omitPadding?: boolean\n  }): string;\n};\n\ninterface FromBase64 {\n  fromBase64?(text: string, options?: {\n    alphabet?: \"base64\" | \"base64url\",\n    lastChunkHandling?: \"loose\" | \"strict\" | \"stop-before-partial\"\n  }): Uint8Array;\n}\n\n// Converts fully-hydrated messages into object trees that are JSON-serializable for sending over\n// the wire. This is used to implement serialization -- but it doesn't take the last step of\n// actually converting to a string. (The name is meant to be the opposite of \"Evaluator\", which\n// implements the opposite direction.)\nexport class Devaluator {\n  private constructor(private exporter: Exporter, private source: RpcPayload | undefined) {}\n\n  // Devaluate the given value.\n  // * value: The value to devaluate.\n  // * parent: The value's parent object, which would be used as `this` if the value were called\n  //     as a function.\n  // * exporter: Callbacks to the RPC session for exporting capabilities found in this message.\n  // * source: The RpcPayload which contains the value, and therefore owns stubs within.\n  //\n  // Returns: The devaluated value, ready to be JSON-serialized.\n  public static devaluate(\n      value: unknown, parent?: object, exporter: Exporter = NULL_EXPORTER, source?: RpcPayload)\n      : unknown {\n    let devaluator = new Devaluator(exporter, source);\n    try {\n      return devaluator.devaluateImpl(value, parent, 0);\n    } catch (err) {\n      if (devaluator.exports) {\n        try {\n          exporter.unexport(devaluator.exports);\n        } catch (err) {\n          // probably a side effect of the original error, ignore it\n        }\n      }\n      throw err;\n    }\n  }\n\n  private exports?: Array<ExportId>;\n\n  private devaluateImpl(value: unknown, parent: object | undefined, depth: number): unknown {\n    if (depth >= 64) {\n      throw new Error(\n          \"Serialization exceeded maximum allowed depth. (Does the message contain cycles?)\");\n    }\n\n    let kind = typeForRpc(value);\n    switch (kind) {\n      case \"unsupported\": {\n        let msg;\n        try {\n          msg = `Cannot serialize value: ${value}`;\n        } catch (err) {\n          msg = \"Cannot serialize value: (couldn't stringify value)\";\n        }\n        throw new TypeError(msg);\n      }\n\n      case \"primitive\":\n        // Supported directly by JSON.\n        return value;\n\n      case \"object\": {\n        let object = <Record<string, unknown>>value;\n        let result: Record<string, unknown> = {};\n        for (let key in object) {\n          result[key] = this.devaluateImpl(object[key], object, depth + 1);\n        }\n        return result;\n      }\n\n      case \"array\": {\n        let array = <Array<unknown>>value;\n        let len = array.length;\n        let result = new Array(len);\n        for (let i = 0; i < len; i++) {\n          result[i] = this.devaluateImpl(array[i], array, depth + 1);\n        }\n        // Wrap literal arrays in an outer one-element array, to \"escape\" them.\n        return [result];\n      }\n\n      case \"bigint\":\n        return [\"bigint\", (<bigint>value).toString()];\n\n      case \"date\":\n        return [\"date\", (<Date>value).getTime()];\n\n      case \"bytes\": {\n        let bytes = value as Uint8Array;\n        if (bytes.toBase64) {\n          return [\"bytes\", bytes.toBase64({omitPadding: true})];\n        } else {\n          return [\"bytes\",\n              btoa(String.fromCharCode.apply(null, bytes as number[]).replace(/=*$/, \"\"))];\n        }\n      }\n\n      case \"error\": {\n        let e = <Error>value;\n\n        // TODO:\n        // - Determine type by checking prototype rather than `name`, which can be overridden?\n        // - Serialize cause / suppressed error / etc.\n        // - Serialize added properties.\n\n        let rewritten = this.exporter.onSendError(e);\n        if (rewritten) {\n          e = rewritten;\n        }\n\n        let result = [\"error\", e.name, e.message];\n        if (rewritten && rewritten.stack) {\n          result.push(rewritten.stack);\n        }\n        return result;\n      }\n\n      case \"undefined\":\n        return [\"undefined\"];\n\n      case \"stub\":\n      case \"rpc-promise\": {\n        if (!this.source) {\n          throw new Error(\"Can't serialize RPC stubs in this context.\");\n        }\n\n        let {hook, pathIfPromise} = unwrapStubAndPath(<RpcStub>value);\n        let importId = this.exporter.getImport(hook);\n        if (importId !== undefined) {\n          if (pathIfPromise) {\n            // It's a promise pointing back to the peer, so we are doing pipelining here.\n            if (pathIfPromise.length > 0) {\n              return [\"pipeline\", importId, pathIfPromise];\n            } else {\n              return [\"pipeline\", importId];\n            }\n          } else {\n            return [\"import\", importId];\n          }\n        }\n\n        if (pathIfPromise) {\n          hook = hook.get(pathIfPromise);\n        } else {\n          hook = hook.dup();\n        }\n\n        return this.devaluateHook(pathIfPromise ? \"promise\" : \"export\", hook);\n      }\n\n      case \"function\":\n      case \"rpc-target\": {\n        if (!this.source) {\n          throw new Error(\"Can't serialize RPC stubs in this context.\");\n        }\n\n        let hook = this.source.getHookForRpcTarget(<RpcTarget|Function>value, parent);\n        return this.devaluateHook(\"export\", hook);\n      }\n\n      case \"rpc-thenable\": {\n        if (!this.source) {\n          throw new Error(\"Can't serialize RPC stubs in this context.\");\n        }\n\n        let hook = this.source.getHookForRpcTarget(<RpcTarget>value, parent);\n        return this.devaluateHook(\"promise\", hook);\n      }\n\n      default:\n        kind satisfies never;\n        throw new Error(\"unreachable\");\n    }\n  }\n\n  private devaluateHook(type: \"export\" | \"promise\", hook: StubHook): unknown {\n    if (!this.exports) this.exports = [];\n    let exportId = type === \"promise\" ? this.exporter.exportPromise(hook)\n                                      : this.exporter.exportStub(hook);\n    this.exports.push(exportId);\n    return [type, exportId];\n  }\n}\n\n/**\n * Serialize a value, using Cap'n Web's underlying serialization. This won't be able to serialize\n * RPC stubs, but it will support basic data types.\n */\nexport function serialize(value: unknown): string {\n  return JSON.stringify(Devaluator.devaluate(value));\n}\n\n// =======================================================================================\n\nexport interface Importer {\n  importStub(idx: ImportId): StubHook;\n  importPromise(idx: ImportId): StubHook;\n  getExport(idx: ExportId): StubHook | undefined;\n}\n\nclass NullImporter implements Importer {\n  importStub(idx: ImportId): never {\n    throw new Error(\"Cannot deserialize RPC stubs without an RPC session.\");\n  }\n  importPromise(idx: ImportId): never {\n    throw new Error(\"Cannot deserialize RPC stubs without an RPC session.\");\n  }\n  getExport(idx: ExportId): StubHook | undefined {\n    return undefined;\n  }\n}\n\nconst NULL_IMPORTER = new NullImporter();\n\n// Takes object trees parse from JSON and converts them into fully-hydrated JavaScript objects for\n// delivery to the app. This is used to implement deserialization, except that it doesn't actually\n// start from a raw string.\nexport class Evaluator {\n  constructor(private importer: Importer) {}\n\n  private stubs: RpcStub[] = [];\n  private promises: LocatedPromise[] = [];\n\n  public evaluate(value: unknown): RpcPayload {\n    let payload = RpcPayload.forEvaluate(this.stubs, this.promises);\n    try {\n      payload.value = this.evaluateImpl(value, payload, \"value\");\n      return payload;\n    } catch (err) {\n      payload.dispose();\n      throw err;\n    }\n  }\n\n  // Evaluate the value without destroying it.\n  public evaluateCopy(value: unknown): RpcPayload {\n    return this.evaluate(structuredClone(value));\n  }\n\n  private evaluateImpl(value: unknown, parent: object, property: string | number): unknown {\n    if (value instanceof Array) {\n      if (value.length == 1 && value[0] instanceof Array) {\n        // Escaped array. Evaluate the contents.\n        let result = value[0];\n        for (let i = 0; i < result.length; i++) {\n          result[i] = this.evaluateImpl(result[i], result, i);\n        }\n        return result;\n      } else switch (value[0]) {\n        case \"bigint\":\n          if (typeof value[1] == \"string\") {\n            return BigInt(value[1]);\n          }\n          break;\n        case \"date\":\n          if (typeof value[1] == \"number\") {\n            return new Date(value[1]);\n          }\n          break;\n        case \"bytes\": {\n          let b64 = Uint8Array as FromBase64;\n          if (typeof value[1] == \"string\") {\n            if (b64.fromBase64) {\n              return b64.fromBase64(value[1]);\n            } else {\n              let bs = atob(value[1]);\n              let len = bs.length;\n              let bytes = new Uint8Array(len);\n              for (let i = 0; i < len; i++) {\n                bytes[i] = bs.charCodeAt(i);\n              }\n              return bytes;\n            }\n          }\n          break;\n        }\n        case \"error\":\n          if (value.length >= 3 && typeof value[1] === \"string\" && typeof value[2] === \"string\") {\n            let cls = ERROR_TYPES[value[1]] || Error;\n            let result = new cls(value[2]);\n            if (typeof value[3] === \"string\") {\n              result.stack = value[3];\n            }\n            return result;\n          }\n          break;\n        case \"undefined\":\n          if (value.length === 1) {\n            return undefined;\n          }\n          break;\n\n        case \"import\":\n        case \"pipeline\": {\n          // It's an \"import\" from the perspective of the sender, so it's an export from our\n          // side. In other words, the sender is passing our own object back to us.\n\n          if (value.length < 2 || value.length > 4) {\n            break;   // report error below\n          }\n\n          // First parameter is import ID (from the sender's perspective, so export ID from\n          // ours).\n          if (typeof value[1] != \"number\") {\n            break;   // report error below\n          }\n\n          let hook = this.importer.getExport(value[1]);\n          if (!hook) {\n            throw new Error(`no such entry on exports table: ${value[1]}`);\n          }\n\n          let isPromise = value[0] == \"pipeline\";\n\n          let addStub = (hook: StubHook) => {\n            if (isPromise) {\n              let promise = new RpcPromise(hook, []);\n              this.promises.push({promise, parent, property});\n              return promise;\n            } else {\n              let stub = new RpcPromise(hook, []);\n              this.stubs.push(stub);\n              return stub;\n            }\n          };\n\n          if (value.length == 2) {\n            // Just referencing the export itself.\n            if (isPromise) {\n              // We need to use hook.get([]) to make sure we get a promise hook.\n              return addStub(hook.get([]));\n            } else {\n              // dup() returns a stub hook.\n              return addStub(hook.dup());\n            }\n          }\n\n          // Second parameter, if given, is a property path.\n          let path = value[2];\n          if (!(path instanceof Array)) {\n            break;  // report error below\n          }\n          if (!path.every(\n              part => { return typeof part == \"string\" || typeof part == \"number\"; })) {\n            break;  // report error below\n          }\n\n          if (value.length == 3) {\n            // Just referencing the path, not a call.\n            return addStub(hook.get(path));\n          }\n\n          // Third parameter, if given, is call arguments. The sender has identified a function\n          // and wants us to call it.\n          //\n          // Usually this is used with \"pipeline\", in which case we evaluate to an\n          // RpcPromise. However, this can be used with \"import\", in which case the caller is\n          // asking that the result be coerced to RpcStub. This distinction matters if the\n          // result of this evaluation is to be passed as arguments to another call -- promises\n          // must be resolved in advance, but stubs can be passed immediately.\n          let args = value[3];\n          if (!(args instanceof Array)) {\n            break;  // report error below\n          }\n\n          // We need a new evaluator for the args, to build a separate payload.\n          let subEval = new Evaluator(this.importer);\n          args = subEval.evaluate([args]);\n\n          return addStub(hook.call(path, args));\n        }\n\n        case \"remap\": {\n          if (value.length !== 5 ||\n              typeof value[1] !== \"number\" ||\n              !(value[2] instanceof Array) ||\n              !(value[3] instanceof Array) ||\n              !(value[4] instanceof Array)) {\n            break;   // report error below\n          }\n\n          let hook = this.importer.getExport(value[1]);\n          if (!hook) {\n            throw new Error(`no such entry on exports table: ${value[1]}`);\n          }\n\n          let path = value[2];\n          if (!path.every(\n              part => { return typeof part == \"string\" || typeof part == \"number\"; })) {\n            break;  // report error below\n          }\n\n          let captures: StubHook[] = value[3].map(cap => {\n            if (!(cap instanceof Array) ||\n                cap.length !== 2 ||\n                (cap[0] !== \"import\" && cap[0] !== \"export\") ||\n                typeof cap[1] !== \"number\") {\n              throw new TypeError(`unknown map capture: ${JSON.stringify(cap)}`);\n            }\n\n            if (cap[0] === \"export\") {\n              return this.importer.importStub(cap[1]);\n            } else {\n              let exp = this.importer.getExport(cap[1]);\n              if (!exp) {\n                throw new Error(`no such entry on exports table: ${cap[1]}`);\n              }\n              return exp.dup();\n            }\n          });\n\n          let instructions = value[4];\n\n          let resultHook = hook.map(path, captures, instructions);\n\n          let promise = new RpcPromise(resultHook, []);\n          this.promises.push({promise, parent, property});\n          return promise;\n        }\n\n        case \"export\":\n        case \"promise\":\n          // It's an \"export\" from the perspective of the sender, i.e. they sent us a new object\n          // which we want to import.\n          //\n          // \"promise\" is same as \"export\" but should not be delivered to the application. If any\n          // promises appear in a value, they must be resolved and substituted with their results\n          // before delivery. Note that if the value being evaluated appeared in call params, or\n          // appeared in a resolve message for a promise that is being pulled, then the new promise\n          // is automatically also being pulled, otherwise it is not.\n          if (typeof value[1] == \"number\") {\n            if (value[0] == \"promise\") {\n              let hook = this.importer.importPromise(value[1]);\n              let promise = new RpcPromise(hook, []);\n              this.promises.push({parent, property, promise});\n              return promise;\n            } else {\n              let hook = this.importer.importStub(value[1]);\n              let stub = new RpcStub(hook);\n              this.stubs.push(stub);\n              return stub;\n            }\n          }\n          break;\n      }\n      throw new TypeError(`unknown special value: ${JSON.stringify(value)}`);\n    } else if (value instanceof Object) {\n      let result = <Record<string, unknown>>value;\n      for (let key in result) {\n        if (key in Object.prototype || key === \"toJSON\") {\n          // Out of an abundance of caution, we will ignore properties that override properties\n          // of Object.prototype. It's especially important that we don't allow `__proto__` as it\n          // may lead to prototype pollution. We also would rather not allow, e.g., `toString()`,\n          // as overriding this could lead to various mischief.\n          //\n          // We also block `toJSON()` for similar reasons -- even though Object.prototype doesn't\n          // actually define it, `JSON.stringify()` treats it specially and we don't want someone\n          // snooping on JSON calls.\n          //\n          // We do still evaluate the inner value so that we can properly release any stubs.\n          this.evaluateImpl(result[key], result, key);\n          delete result[key];\n        } else {\n          result[key] = this.evaluateImpl(result[key], result, key);\n        }\n      }\n      return result;\n    } else {\n      // Other JSON types just pass through.\n      return value;\n    }\n  }\n}\n\n/**\n * Deserialize a value serialized using serialize().\n */\nexport function deserialize(value: string): unknown {\n  let payload = new Evaluator(NULL_IMPORTER).evaluate(JSON.parse(value));\n  payload.dispose();  // should be no-op but just in case\n  return payload.value;\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { StubHook, RpcPayload, RpcStub, PropertyPath, PayloadStubHook, ErrorStubHook, RpcTarget, unwrapStubAndPath } from \"./core.js\";\nimport { Devaluator, Evaluator, ExportId, ImportId, Exporter, Importer, serialize } from \"./serialize.js\";\n\n/**\n * Interface for an RPC transport, which is a simple bidirectional message stream. Implement this\n * interface if the built-in transports (e.g. for HTTP batch and WebSocket) don't meet your needs.\n */\nexport interface RpcTransport {\n  /**\n   * Sends a message to the other end.\n   */\n  send(message: string): Promise<void>;\n\n  /**\n   * Receives a message sent by the other end.\n   *\n   * If and when the transport becomes disconnected, this will reject. The thrown error will be\n   * propagated to all outstanding calls and future calls on any stubs associated with the session.\n   * If there are no outstanding calls (and none are made in the future), then the error does not\n   * propagate anywhere -- this is considered a \"clean\" shutdown.\n   */\n  receive(): Promise<string>;\n\n  /**\n   * Indicates that the RPC system has suffered an error that prevents the session from continuing.\n   * The transport should ideally try to send any queued messages if it can, and then close the\n   * connection. (It's not strictly necessary to deliver queued messages, but the last message sent\n   * before abort() is called is often an \"abort\" message, which communicates the error to the\n   * peer, so if that is dropped, the peer may have less information about what happened.)\n   */\n  abort?(reason: any): void;\n}\n\n// Entry on the exports table.\ntype ExportTableEntry = {\n  hook: StubHook,\n  refcount: number,\n  pull?: Promise<void>\n};\n\n// Entry on the imports table.\nclass ImportTableEntry {\n  constructor(public session: RpcSessionImpl, public importId: number, pulling: boolean) {\n    if (pulling) {\n      this.activePull = Promise.withResolvers<void>();\n    }\n  }\n\n  public localRefcount: number = 0;\n  public remoteRefcount: number = 1;\n\n  private activePull?: PromiseWithResolvers<void>;\n  public resolution?: StubHook;\n\n  // List of integer indexes into session.onBrokenCallbacks which are callbacks registered on\n  // this import. Initialized on first use (so `undefined` is the same as an empty list).\n  private onBrokenRegistrations?: number[];\n\n  resolve(resolution: StubHook) {\n    // TODO: Need embargo handling here? PayloadStubHook needs to be wrapped in a\n    // PromiseStubHook awaiting the embargo I suppose. Previous notes on embargoes:\n    // - Resolve message specifies last call that was received before the resolve. The introducer is\n    //   responsible for any embargoes up to that point.\n    // - Any further calls forwarded by the introducer after that point MUST immediately resolve to\n    //   a forwarded call. The caller is responsible for ensuring the last of these is handed off\n    //   before direct calls can be delivered.\n\n    if (this.localRefcount == 0) {\n      // Already disposed (canceled), so ignore the resolution and don't send a redundant release.\n      resolution.dispose();\n      return;\n    }\n\n    this.resolution = resolution;\n    this.sendRelease();\n\n    if (this.onBrokenRegistrations) {\n      // Delete all our callback registrations from this session and re-register them on the\n      // target stub.\n      for (let i of this.onBrokenRegistrations) {\n        let callback = this.session.onBrokenCallbacks[i];\n        let endIndex = this.session.onBrokenCallbacks.length;\n        resolution.onBroken(callback);\n        if (this.session.onBrokenCallbacks[endIndex] === callback) {\n          // Oh, calling onBroken() just registered the callback back on this connection again.\n          // But when the connection dies, we want all the callbacks to be called in the order in\n          // which they were registered. So we don't want this one pushed to the back of the line\n          // here. So, let's remove the newly-added registration and keep the original.\n          // TODO: This is quite hacky, think about whether this is really the right answer.\n          delete this.session.onBrokenCallbacks[endIndex];\n        } else {\n          // The callback is now registered elsewhere, so delete it from our session.\n          delete this.session.onBrokenCallbacks[i];\n        }\n      }\n      this.onBrokenRegistrations = undefined;\n    }\n\n    if (this.activePull) {\n      this.activePull.resolve();\n      this.activePull = undefined;\n    }\n  }\n\n  async awaitResolution(): Promise<RpcPayload> {\n    if (!this.activePull) {\n      this.session.sendPull(this.importId);\n      this.activePull = Promise.withResolvers<void>();\n    }\n    await this.activePull.promise;\n    return this.resolution!.pull();\n  }\n\n  dispose() {\n    if (this.resolution) {\n      this.resolution.dispose();\n    } else {\n      this.abort(new Error(\"RPC was canceled because the RpcPromise was disposed.\"));\n      this.sendRelease();\n    }\n  }\n\n  abort(error: any) {\n    if (!this.resolution) {\n      this.resolution = new ErrorStubHook(error);\n\n      if (this.activePull) {\n        this.activePull.reject(error);\n        this.activePull = undefined;\n      }\n\n      // The RpcSession itself will have called all our callbacks so we don't need to track the\n      // registrations anymore.\n      this.onBrokenRegistrations = undefined;\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    if (this.resolution) {\n      this.resolution.onBroken(callback);\n    } else {\n      let index = this.session.onBrokenCallbacks.length;\n      this.session.onBrokenCallbacks.push(callback);\n\n      if (!this.onBrokenRegistrations) this.onBrokenRegistrations = [];\n      this.onBrokenRegistrations.push(index);\n    }\n  }\n\n  private sendRelease() {\n    if (this.remoteRefcount > 0) {\n      this.session.sendRelease(this.importId, this.remoteRefcount);\n      this.remoteRefcount = 0;\n    }\n  }\n};\n\nclass RpcImportHook extends StubHook {\n  public entry?: ImportTableEntry;  // undefined when we're disposed\n\n  // `pulling` is true if we already expect that this import is going to be resolved later, and\n  // null if this import is not allowed to be pulled (i.e. it's a stub not a promise).\n  constructor(public isPromise: boolean, entry: ImportTableEntry) {\n    super();\n    ++entry.localRefcount;\n    this.entry = entry;\n  }\n\n  collectPath(path: PropertyPath): RpcImportHook {\n    return this;\n  }\n\n  getEntry(): ImportTableEntry {\n    if (this.entry) {\n      return this.entry;\n    } else {\n      // Shouldn't get here in practice since the holding stub should have replaced the hook when\n      // disposed.\n      throw new Error(\"This RpcImportHook was already disposed.\");\n    }\n  }\n\n  // -------------------------------------------------------------------------------------\n  // implements StubHook\n\n  call(path: PropertyPath, args: RpcPayload): StubHook {\n    let entry = this.getEntry();\n    if (entry.resolution) {\n      return entry.resolution.call(path, args);\n    } else {\n      return entry.session.sendCall(entry.importId, path, args);\n    }\n  }\n\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook {\n    let entry: ImportTableEntry;\n    try {\n      entry = this.getEntry();\n    } catch (err) {\n      for (let cap of captures) {\n        cap.dispose();\n      }\n      throw err;\n    }\n\n    if (entry.resolution) {\n      return entry.resolution.map(path, captures, instructions);\n    } else {\n      return entry.session.sendMap(entry.importId, path, captures, instructions);\n    }\n  }\n\n  get(path: PropertyPath): StubHook {\n    let entry = this.getEntry();\n    if (entry.resolution) {\n      return entry.resolution.get(path);\n    } else {\n      return entry.session.sendCall(entry.importId, path);\n    }\n  }\n\n  dup(): RpcImportHook {\n    return new RpcImportHook(false, this.getEntry());\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    let entry = this.getEntry();\n\n    if (!this.isPromise) {\n      throw new Error(\"Can't pull this hook because it's not a promise hook.\");\n    }\n\n    if (entry.resolution) {\n      return entry.resolution.pull();\n    }\n\n    return entry.awaitResolution();\n  }\n\n  ignoreUnhandledRejections(): void {\n    // We don't actually have to do anything here because this method only has to ignore rejections\n    // if pull() is *not* called, and if pull() is not called then we won't generate any rejections\n    // anyway.\n  }\n\n  dispose(): void {\n    let entry = this.entry;\n    this.entry = undefined;\n    if (entry) {\n      if (--entry.localRefcount === 0) {\n        entry.dispose();\n      }\n    }\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    if (this.entry) {\n      this.entry.onBroken(callback);\n    }\n  }\n}\n\nclass RpcMainHook extends RpcImportHook {\n  private session?: RpcSessionImpl;\n\n  constructor(entry: ImportTableEntry) {\n    super(false, entry);\n    this.session = entry.session;\n  }\n\n  dispose(): void {\n    if (this.session) {\n      let session = this.session;\n      this.session = undefined;\n      session.shutdown();\n    }\n  }\n}\n\n/**\n * Options to customize behavior of an RPC session. All functions which start a session should\n * optionally accept this.\n */\nexport type RpcSessionOptions = {\n  /**\n   * If provided, this function will be called whenever an `Error` object is serialized (for any\n   * reason, not just because it was thrown). This can be used to log errors, and also to redact\n   * them.\n   *\n   * If `onSendError` returns an Error object, than object will be substituted in place of the\n   * original. If it has a stack property, the stack will be sent to the client.\n   *\n   * If `onSendError` doesn't return anything (or is not provided at all), the default behavior is\n   * to serialize the error with the stack omitted.\n   */\n  onSendError?: (error: Error) => Error | void;\n};\n\nclass RpcSessionImpl implements Importer, Exporter {\n  private exports: Array<ExportTableEntry> = [];\n  private reverseExports: Map<StubHook, ExportId> = new Map();\n  private imports: Array<ImportTableEntry> = [];\n  private abortReason?: any;\n  private cancelReadLoop: (error: any) => void;\n\n  // We assign positive numbers to imports we initiate, and negative numbers to exports we\n  // initiate. So the next import ID is just `imports.length`, but the next export ID needs\n  // to be tracked explicitly.\n  private nextExportId = -1;\n\n  // If set, call this when all incoming calls are complete.\n  private onBatchDone?: Omit<PromiseWithResolvers<void>, \"promise\">;\n\n  // How many promises is our peer expecting us to resolve?\n  private pullCount = 0;\n\n  // Sparse array of onBrokenCallback registrations. Items are strictly appended to the end but\n  // may be deleted from the middle (hence leaving the array sparse).\n  onBrokenCallbacks: ((error: any) => void)[] = [];\n\n  constructor(private transport: RpcTransport, mainHook: StubHook,\n      private options: RpcSessionOptions) {\n    // Export zero is automatically the bootstrap object.\n    this.exports.push({hook: mainHook, refcount: 1});\n\n    // Import zero is the other side's bootstrap object.\n    this.imports.push(new ImportTableEntry(this, 0, false));\n\n    let rejectFunc: (error: any) => void;;\n    let abortPromise = new Promise<never>((resolve, reject) => { rejectFunc = reject; });\n    this.cancelReadLoop = rejectFunc!;\n\n    this.readLoop(abortPromise).catch(err => this.abort(err));\n  }\n\n  // Should only be called once immediately after construction.\n  getMainImport(): RpcImportHook {\n    return new RpcMainHook(this.imports[0]);\n  }\n\n  shutdown(): void {\n    // TODO(someday): Should we add some sort of \"clean shutdown\" mechanism? This gets the job\n    //   done just fine for the moment.\n    this.abort(new Error(\"RPC session was shut down by disposing the main stub\"), false);\n  }\n\n  exportStub(hook: StubHook): ExportId {\n    if (this.abortReason) throw this.abortReason;\n\n    let existingExportId = this.reverseExports.get(hook);\n    if (existingExportId !== undefined) {\n      ++this.exports[existingExportId].refcount;\n      return existingExportId;\n    } else {\n      let exportId = this.nextExportId--;\n      this.exports[exportId] = { hook, refcount: 1 };\n      this.reverseExports.set(hook, exportId);\n      // TODO: Use onBroken().\n      return exportId;\n    }\n  }\n\n  exportPromise(hook: StubHook): ExportId {\n    if (this.abortReason) throw this.abortReason;\n\n    // Promises always use a new ID because otherwise the recipient could miss the resolution.\n    let exportId = this.nextExportId--;\n    this.exports[exportId] = { hook, refcount: 1 };\n    this.reverseExports.set(hook, exportId);\n\n    // Automatically start resolving any promises we send.\n    this.ensureResolvingExport(exportId);\n    return exportId;\n  }\n\n  unexport(ids: Array<ExportId>): void {\n    for (let id of ids) {\n      this.releaseExport(id, 1);\n    }\n  }\n\n  private releaseExport(exportId: ExportId, refcount: number) {\n    let entry = this.exports[exportId];\n    if (!entry) {\n      throw new Error(`no such export ID: ${exportId}`);\n    }\n    if (entry.refcount < refcount) {\n      throw new Error(`refcount would go negative: ${entry.refcount} < ${refcount}`);\n    }\n    entry.refcount -= refcount;\n    if (entry.refcount === 0) {\n      delete this.exports[exportId];\n      this.reverseExports.delete(entry.hook);\n      entry.hook.dispose();\n    }\n  }\n\n  onSendError(error: Error): Error | void {\n    if (this.options.onSendError) {\n      return this.options.onSendError(error);\n    }\n  }\n\n  private ensureResolvingExport(exportId: ExportId) {\n    let exp = this.exports[exportId];\n    if (!exp) {\n      throw new Error(`no such export ID: ${exportId}`);\n    }\n    if (!exp.pull) {\n      let resolve = async () => {\n        let hook = exp.hook;\n        for (;;) {\n          let payload = await hook.pull();\n          if (payload.value instanceof RpcStub) {\n            let {hook: inner, pathIfPromise} = unwrapStubAndPath(payload.value);\n            if (pathIfPromise && pathIfPromise.length == 0) {\n              if (this.getImport(hook) === undefined) {\n                // Optimization: The resolution is just another promise, and it is not a promise\n                // pointing back to the peer. So if we send a resolve message, it's just going to\n                // resolve to another new promise export, which is just going to have to wait for\n                // another resolve message later. This intermediate resolve message gives the peer\n                // no useful information, so let's skip it and just wait for the chained\n                // resolution.\n                hook = inner;\n                continue;\n              }\n            }\n          }\n\n          return payload;\n        }\n      };\n\n      ++this.pullCount;\n      exp.pull = resolve().then(\n        payload => {\n          // We don't transfer ownership of stubs in the payload since the payload\n          // belongs to the hook which sticks around to handle pipelined requests.\n          let value = Devaluator.devaluate(payload.value, undefined, this, payload);\n          this.send([\"resolve\", exportId, value]);\n        },\n        error => {\n          this.send([\"reject\", exportId, Devaluator.devaluate(error, undefined, this)]);\n        }\n      ).catch(\n        error => {\n          // If serialization failed, report the serialization error, which should\n          // itself always be serializable.\n          try {\n            this.send([\"reject\", exportId, Devaluator.devaluate(error, undefined, this)]);\n          } catch (error2) {\n            // TODO: Shouldn't happen, now what?\n            this.abort(error2);\n          }\n        }\n      ).finally(() => {\n        if (--this.pullCount === 0) {\n          if (this.onBatchDone) {\n            this.onBatchDone.resolve();\n          }\n        }\n      });\n    }\n  }\n\n  getImport(hook: StubHook): ImportId | undefined {\n    if (hook instanceof RpcImportHook && hook.entry && hook.entry.session === this) {\n      return hook.entry.importId;\n    } else {\n      return undefined;\n    }\n  }\n\n  importStub(idx: ImportId): RpcImportHook {\n    if (this.abortReason) throw this.abortReason;\n\n    let entry = this.imports[idx];\n    if (!entry) {\n      entry = new ImportTableEntry(this, idx, false);\n      this.imports[idx] = entry;\n    }\n    return new RpcImportHook(/*isPromise=*/false, entry);\n  }\n\n  importPromise(idx: ImportId): StubHook {\n    if (this.abortReason) throw this.abortReason;\n\n    if (this.imports[idx]) {\n      // Can't reuse an existing ID for a promise!\n      return new ErrorStubHook(new Error(\n          \"Bug in RPC system: The peer sent a promise reusing an existing export ID.\"));\n    }\n\n    // Create an already-pulling hook.\n    let entry = new ImportTableEntry(this, idx, true);\n    this.imports[idx] = entry;\n    return new RpcImportHook(/*isPromise=*/true, entry);\n  }\n\n  getExport(idx: ExportId): StubHook | undefined {\n    return this.exports[idx]?.hook;\n  }\n\n  private send(msg: any) {\n    if (this.abortReason !== undefined) {\n      // Ignore sends after we've aborted.\n      return;\n    }\n\n    let msgText: string;\n    try {\n      msgText = JSON.stringify(msg);\n    } catch (err) {\n      // If JSON stringification failed, there's something wrong with the devaluator, as it should\n      // not allow non-JSONable values to be injected in the first place.\n      try { this.abort(err); } catch (err2) {}\n      throw err;\n    }\n\n    this.transport.send(msgText)\n        // If send fails, abort the connection, but don't try to send an abort message since\n        // that'll probably also fail.\n        .catch(err => this.abort(err, false));\n  }\n\n  sendCall(id: ImportId, path: PropertyPath, args?: RpcPayload): RpcImportHook {\n    if (this.abortReason) throw this.abortReason;\n\n    let value: Array<any> = [\"pipeline\", id, path];\n    if (args) {\n      let devalue = Devaluator.devaluate(args.value, undefined, this, args);\n\n      // HACK: Since the args is an array, devaluator will wrap in a second array. Need to unwrap.\n      // TODO: Clean this up somehow.\n      value.push((<Array<unknown>>devalue)[0]);\n\n      // Serializing the payload takes ownership of all stubs within, so the payload itself does\n      // not need to be disposed.\n    }\n    this.send([\"push\", value]);\n\n    let entry = new ImportTableEntry(this, this.imports.length, false);\n    this.imports.push(entry);\n    return new RpcImportHook(/*isPromise=*/true, entry);\n  }\n\n  sendMap(id: ImportId, path: PropertyPath, captures: StubHook[], instructions: unknown[])\n      : RpcImportHook {\n    if (this.abortReason) {\n      for (let cap of captures) {\n        cap.dispose();\n      }\n      throw this.abortReason;\n    }\n\n    let devaluedCaptures = captures.map(hook => {\n      let importId = this.getImport(hook);\n      if (importId !== undefined) {\n        return [\"import\", importId];\n      } else {\n        return [\"export\", this.exportStub(hook)];\n      }\n    });\n\n    let value = [\"remap\", id, path, devaluedCaptures, instructions];\n\n    this.send([\"push\", value]);\n\n    let entry = new ImportTableEntry(this, this.imports.length, false);\n    this.imports.push(entry);\n    return new RpcImportHook(/*isPromise=*/true, entry);\n  }\n\n  sendPull(id: ImportId) {\n    if (this.abortReason) throw this.abortReason;\n\n    this.send([\"pull\", id]);\n  }\n\n  sendRelease(id: ImportId, remoteRefcount: number) {\n    if (this.abortReason) return;\n\n    this.send([\"release\", id, remoteRefcount]);\n    delete this.imports[id];\n  }\n\n  abort(error: any, trySendAbortMessage: boolean = true) {\n    // Don't double-abort.\n    if (this.abortReason !== undefined) return;\n\n    this.cancelReadLoop(error);\n\n    if (trySendAbortMessage) {\n      try {\n        this.transport.send(JSON.stringify([\"abort\", Devaluator\n            .devaluate(error, undefined, this)]))\n            .catch(err => {});\n      } catch (err) {\n        // ignore, probably the whole reason we're aborting is because the transport is broken\n      }\n    }\n\n    if (error === undefined) {\n      // Shouldn't happen, but if it does, avoid setting `abortReason` to `undefined`.\n      error = \"undefined\";\n    }\n\n    this.abortReason = error;\n    if (this.onBatchDone) {\n      this.onBatchDone.reject(error);\n    }\n\n    if (this.transport.abort) {\n      // Call transport's abort handler, but guard against buggy app code.\n      try {\n        this.transport.abort(error);\n      } catch (err) {\n        // Treat as unhandled rejection.\n        Promise.resolve(err);\n      }\n    }\n\n    // WATCH OUT: these are sparse arrays. `for/let/of` will iterate only positive indexes\n    // including deleted indexes -- bad. We need to use `for/let/in` instead.\n    for (let i in this.onBrokenCallbacks) {\n      try {\n        this.onBrokenCallbacks[i](error);\n      } catch (err) {\n        // Treat as unhandled rejection.\n        Promise.resolve(err);\n      }\n    }\n    for (let i in this.imports) {\n      this.imports[i].abort(error);\n    }\n    for (let i in this.exports) {\n      this.exports[i].hook.dispose();\n    }\n  }\n\n  private async readLoop(abortPromise: Promise<never>) {\n    while (!this.abortReason) {\n      let msg = JSON.parse(await Promise.race([this.transport.receive(), abortPromise]));\n      if (this.abortReason) break;  // check again before processing\n\n      if (msg instanceof Array) {\n        switch (msg[0]) {\n          case \"push\":  // [\"push\", Expression]\n            if (msg.length > 1) {\n              let payload = new Evaluator(this).evaluate(msg[1]);\n              let hook = new PayloadStubHook(payload);\n\n              // It's possible for a rejection to occur before the client gets a chance to send\n              // a \"pull\" message or to use the promise in a pipeline. We don't want that to be\n              // treated as an unhandled rejection on our end.\n              hook.ignoreUnhandledRejections();\n\n              this.exports.push({ hook, refcount: 1 });\n              continue;\n            }\n            break;\n\n          case \"pull\": {  // [\"pull\", ImportId]\n            let exportId = msg[1];\n            if (typeof exportId == \"number\") {\n              this.ensureResolvingExport(exportId);\n              continue;\n            }\n            break;\n          }\n\n          case \"resolve\":   // [\"resolve\", ExportId, Expression]\n          case \"reject\": {  // [\"reject\", ExportId, Expression]\n            let importId = msg[1];\n            if (typeof importId == \"number\" && msg.length > 2) {\n              let imp = this.imports[importId];\n              if (imp) {\n                if (msg[0] == \"resolve\") {\n                  imp.resolve(new PayloadStubHook(new Evaluator(this).evaluate(msg[2])));\n                } else {\n                  // HACK: We expect errors are always simple values (no stubs) so we can just\n                  //   pull the value out of the payload.\n                  let payload = new Evaluator(this).evaluate(msg[2]);\n                  payload.dispose();  // just in case -- should be no-op\n                  imp.resolve(new ErrorStubHook(payload.value));\n                }\n              } else {\n                // Import ID is not found on the table. Probably we released it already, in which\n                // case we do not care about the resolution, so whatever.\n\n                if (msg[0] == \"resolve\") {\n                  // We need to evaluate the resolution and immediately dispose it so that we\n                  // release any stubs it contains.\n                  new Evaluator(this).evaluate(msg[2]).dispose();\n                }\n              }\n              continue;\n            }\n            break;\n          }\n\n          case \"release\": {\n            let exportId = msg[1];\n            let refcount = msg[2];\n            if (typeof exportId == \"number\" && typeof refcount == \"number\") {\n              this.releaseExport(exportId, refcount);\n              continue;\n            }\n            break;\n          }\n\n          case \"abort\": {\n            let payload = new Evaluator(this).evaluate(msg[1]);\n            payload.dispose();  // just in case -- should be no-op\n            this.abort(payload, false);\n            break;\n          }\n        }\n      }\n\n      throw new Error(`bad RPC message: ${JSON.stringify(msg)}`);\n    }\n  }\n\n  async drain(): Promise<void> {\n    if (this.abortReason) {\n      throw this.abortReason;\n    }\n\n    if (this.pullCount > 0) {\n      let {promise, resolve, reject} = Promise.withResolvers<void>();\n      this.onBatchDone = {resolve, reject};\n      await promise;\n    }\n  }\n\n  getStats(): {imports: number, exports: number} {\n    let result = {imports: 0, exports: 0};\n    // We can't just use `.length` because the arrays can be sparse and can have negative indexes.\n    for (let i in this.imports) {\n      ++result.imports;\n    }\n    for (let i in this.exports) {\n      ++result.exports;\n    }\n    return result;\n  }\n}\n\n// Public interface that wraps RpcSession and hides private implementation details (even from\n// JavaScript with no type enforcement).\nexport class RpcSession {\n  #session: RpcSessionImpl;\n  #mainStub: RpcStub;\n\n  constructor(transport: RpcTransport, localMain?: any, options: RpcSessionOptions = {}) {\n    let mainHook: StubHook;\n    if (localMain) {\n      mainHook = new PayloadStubHook(RpcPayload.fromAppReturn(localMain));\n    } else {\n      mainHook = new ErrorStubHook(new Error(\"This connection has no main object.\"));\n    }\n    this.#session = new RpcSessionImpl(transport, mainHook, options);\n    this.#mainStub = new RpcStub(this.#session.getMainImport());\n  }\n\n  getRemoteMain(): RpcStub {\n    return this.#mainStub;\n  }\n\n  getStats(): {imports: number, exports: number} {\n    return this.#session.getStats();\n  }\n\n  drain(): Promise<void> {\n    return this.#session.drain();\n  }\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\n/// <reference types=\"@cloudflare/workers-types\" />\n\nimport { RpcStub } from \"./core.js\";\nimport { RpcTransport, RpcSession, RpcSessionOptions } from \"./rpc.js\";\n\nexport function newWebSocketRpcSession(\n    webSocket: WebSocket | string, localMain?: any, options?: RpcSessionOptions): RpcStub {\n  if (typeof webSocket === \"string\") {\n    webSocket = new WebSocket(webSocket);\n  }\n\n  let transport = new WebSocketTransport(webSocket);\n  let rpc = new RpcSession(transport, localMain, options);\n  return rpc.getRemoteMain();\n}\n\n/**\n * For use in Cloudflare Workers: Construct an HTTP response that starts a WebSocket RPC session\n * with the given `localMain`.\n */\nexport function newWorkersWebSocketRpcResponse(\n    request: Request, localMain?: any, options?: RpcSessionOptions): Response {\n  if (request.headers.get(\"Upgrade\")?.toLowerCase() !== \"websocket\") {\n    return new Response(\"This endpoint only accepts WebSocket requests.\", { status: 400 });\n  }\n\n  let pair = new WebSocketPair();\n  let server = pair[0];\n  server.accept()\n  newWebSocketRpcSession(server, localMain, options);\n  return new Response(null, {\n    status: 101,\n    webSocket: pair[1],\n  });\n}\n\nclass WebSocketTransport implements RpcTransport {\n  constructor (webSocket: WebSocket) {\n    this.#webSocket = webSocket;\n\n    if (webSocket.readyState === WebSocket.CONNECTING) {\n      this.#sendQueue = [];\n      webSocket.addEventListener(\"open\", event => {\n        try {\n          for (let message of this.#sendQueue!) {\n            webSocket.send(message);\n          }\n        } catch (err) {\n          this.#receivedError(err);\n        }\n        this.#sendQueue = undefined;\n      });\n    }\n\n    webSocket.addEventListener(\"message\", (event: MessageEvent<any>) => {\n      if (this.#error) {\n        // Ignore further messages.\n      } else if (typeof event.data === \"string\") {\n        if (this.#receiveResolver) {\n          this.#receiveResolver(event.data);\n          this.#receiveResolver = undefined;\n          this.#receiveRejecter = undefined;\n        } else {\n          this.#receiveQueue.push(event.data);\n        }\n      } else {\n        this.#receivedError(new TypeError(\"Received non-string message from WebSocket.\"));\n      }\n    });\n\n    webSocket.addEventListener(\"close\", (event: CloseEvent) => {\n      this.#receivedError(new Error(`Peer closed WebSocket: ${event.code} ${event.reason}`));\n    });\n\n    webSocket.addEventListener(\"error\", (event: Event) => {\n      this.#receivedError(new Error(`WebSocket connection failed.`));\n    });\n  }\n\n  #webSocket: WebSocket;\n  #sendQueue?: string[];  // only if not opened yet\n  #receiveResolver?: (message: string) => void;\n  #receiveRejecter?: (err: any) => void;\n  #receiveQueue: string[] = [];\n  #error?: any;\n\n  async send(message: string): Promise<void> {\n    if (this.#sendQueue === undefined) {\n      this.#webSocket.send(message);\n    } else {\n      // Not open yet, queue for later.\n      this.#sendQueue.push(message);\n    }\n  }\n\n  async receive(): Promise<string> {\n    if (this.#receiveQueue.length > 0) {\n      return this.#receiveQueue.shift()!;\n    } else if (this.#error) {\n      throw this.#error;\n    } else {\n      return new Promise<string>((resolve, reject) => {\n        this.#receiveResolver = resolve;\n        this.#receiveRejecter = reject;\n      });\n    }\n  }\n\n  abort?(reason: any): void {\n    let message: string;\n    if (reason instanceof Error) {\n      message = reason.message;\n    } else {\n      message = `${reason}`;\n    }\n    this.#webSocket.close(3000, message);\n\n    if (!this.#error) {\n      this.#error = reason;\n      // No need to call receiveRejecter(); RPC implementation will stop listening anyway.\n    }\n  }\n\n  #receivedError(reason: any) {\n    if (!this.#error) {\n      this.#error = reason;\n      if (this.#receiveRejecter) {\n        this.#receiveRejecter(reason);\n        this.#receiveResolver = undefined;\n        this.#receiveRejecter = undefined;\n      }\n    }\n  }\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { RpcStub } from \"./core.js\";\nimport { RpcTransport, RpcSession, RpcSessionOptions } from \"./rpc.js\";\nimport type { IncomingMessage, ServerResponse, OutgoingHttpHeader, OutgoingHttpHeaders } from \"node:http\";\n\ntype SendBatchFunc = (batch: string[]) => Promise<string[]>;\n\nclass BatchClientTransport implements RpcTransport {\n  constructor(sendBatch: SendBatchFunc) {\n    this.#promise = this.#scheduleBatch(sendBatch);\n  }\n\n  #promise: Promise<void>;\n  #aborted: any;\n\n  #batchToSend: string[] | null = [];\n  #batchToReceive: string[] | null = null;\n\n  async send(message: string): Promise<void> {\n    // If the batch was already sent, we just ignore the message, because throwing may cause the\n    // RPC system to abort prematurely. Once the last receive() is done then we'll throw an error\n    // that aborts the RPC system at the right time and will propagate to all other requests.\n    if (this.#batchToSend !== null) {\n      this.#batchToSend.push(message);\n    }\n  }\n\n  async receive(): Promise<string> {\n    if (!this.#batchToReceive) {\n      await this.#promise;\n    }\n\n    let msg = this.#batchToReceive!.shift();\n    if (msg !== undefined) {\n      return msg;\n    } else {\n      // No more messages. An error thrown here will propagate out of any calls that are still\n      // open.\n      throw new Error(\"Batch RPC request ended.\");\n    }\n  }\n\n  abort?(reason: any): void {\n    this.#aborted = reason;\n  }\n\n  async #scheduleBatch(sendBatch: SendBatchFunc) {\n    // Wait for microtask queue to clear before sending a batch.\n    //\n    // Note that simply waiting for one turn of the microtask queue (await Promise.resolve()) is\n    // not good enough here as the application needs a chance to call `.then()` on every RPC\n    // promise in order to explicitly indicate they want the results. Unfortunately, `await`ing\n    // a thenable does not call `.then()` immediately -- for some reason it waits for a turn of\n    // the microtask queue first, *then* calls `.then()`.\n    await new Promise(resolve => setTimeout(resolve, 0));\n\n    if (this.#aborted !== undefined) {\n      throw this.#aborted;\n    }\n\n    let batch = this.#batchToSend!;\n    this.#batchToSend = null;\n    this.#batchToReceive = await sendBatch(batch);\n  }\n}\n\nexport function newHttpBatchRpcSession(\n    urlOrRequest: string | Request, options?: RpcSessionOptions): RpcStub {\n  let sendBatch: SendBatchFunc = async (batch: string[]) => {\n    let response = await fetch(urlOrRequest, {\n      method: \"POST\",\n      body: batch.join(\"\\n\"),\n    });\n\n    if (!response.ok) {\n      response.body?.cancel();\n      throw new Error(`RPC request failed: ${response.status} ${response.statusText}`);\n    }\n\n    let body = await response.text();\n    return body == \"\" ? [] : body.split(\"\\n\");\n  };\n\n  let transport = new BatchClientTransport(sendBatch);\n  let rpc = new RpcSession(transport, undefined, options);\n  return rpc.getRemoteMain();\n}\n\nclass BatchServerTransport implements RpcTransport {\n  constructor(batch: string[]) {\n    this.#batchToReceive = batch;\n  }\n\n  #batchToSend: string[] = [];\n  #batchToReceive: string[];\n  #allReceived: PromiseWithResolvers<void> = Promise.withResolvers<void>();\n\n  async send(message: string): Promise<void> {\n    this.#batchToSend.push(message);\n  }\n\n  async receive(): Promise<string> {\n    let msg = this.#batchToReceive!.shift();\n    if (msg !== undefined) {\n      return msg;\n    } else {\n      // No more messages.\n      this.#allReceived.resolve();\n      return new Promise(r => {});\n    }\n  }\n\n  abort?(reason: any): void {\n    this.#allReceived.reject(reason);\n  }\n\n  whenAllReceived() {\n    return this.#allReceived.promise;\n  }\n\n  getResponseBody(): string {\n    return this.#batchToSend.join(\"\\n\");\n  }\n}\n\n/**\n * Implements the server end of an HTTP batch session, using standard Fetch API types to represent\n * HTTP requests and responses.\n *\n * @param request The request received from the client initiating the session.\n * @param localMain The main stub or RpcTarget which the server wishes to expose to the client.\n * @param options Optional RPC session options.\n * @returns The HTTP response to return to the client. Note that the returned object has mutable\n *     headers, so you can modify them using e.g. `response.headers.set(\"Foo\", \"bar\")`.\n */\nexport async function newHttpBatchRpcResponse(\n    request: Request, localMain: any, options?: RpcSessionOptions): Promise<Response> {\n  if (request.method !== \"POST\") {\n    return new Response(\"This endpoint only accepts POST requests.\", { status: 405 });\n  }\n\n  let body = await request.text();\n  let batch = body === \"\" ? [] : body.split(\"\\n\");\n\n  let transport = new BatchServerTransport(batch);\n  let rpc = new RpcSession(transport, localMain, options);\n\n  // TODO: Arguably we should arrange so any attempts to pull promise resolutions from the client\n  //   will reject rather than just hang. But it IS valid to make server->client calls in order to\n  //   then pipeline the result into something returned to the client. We don't want the errors to\n  //   prematurely cancel anything that would eventually complete. So for now we just say, it's the\n  //   app's responsibility to not wait on any server -> client calls since they will never\n  //   complete.\n\n  await transport.whenAllReceived();\n  await rpc.drain();\n\n  // TODO: Ask RpcSession to dispose everything it is still holding on to?\n\n  return new Response(transport.getResponseBody());\n}\n\n/**\n * Implements the server end of an HTTP batch session using traditional Node.js HTTP APIs.\n *\n * @param request The request received from the client initiating the session.\n * @param response The response object, to which the response should be written.\n * @param localMain The main stub or RpcTarget which the server wishes to expose to the client.\n * @param options Optional RPC session options. You can also pass headers to set on the response.\n */\nexport async function nodeHttpBatchRpcResponse(\n    request: IncomingMessage, response: ServerResponse,\n    localMain: any,\n    options?: RpcSessionOptions & {\n      headers?: OutgoingHttpHeaders | OutgoingHttpHeader[],\n    }): Promise<void> {\n  if (request.method !== \"POST\") {\n    response.writeHead(405, \"This endpoint only accepts POST requests.\");\n  }\n\n  let body = await new Promise<string>((resolve, reject) => {\n    let chunks: Buffer[] = [];\n    request.on(\"data\", chunk => {\n      chunks.push(chunk);\n    });\n    request.on(\"end\", () => {\n      resolve(Buffer.concat(chunks).toString());\n    });\n    request.on(\"error\", reject);\n  });\n  let batch = body === \"\" ? [] : body.split(\"\\n\");\n\n  let transport = new BatchServerTransport(batch);\n  let rpc = new RpcSession(transport, localMain, options);\n\n  await transport.whenAllReceived();\n  await rpc.drain();\n\n  response.writeHead(200, options?.headers);\n  response.end(transport.getResponseBody());\n}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { RpcStub } from \"./core.js\";\nimport { RpcTransport, RpcSession, RpcSessionOptions } from \"./rpc.js\";\n\n// Start a MessagePort session given a MessagePort or a pair of MessagePorts.\n//\n// `localMain` is the main RPC interface to expose to the peer. Returns a stub for the main\n// interface exposed from the peer.\nexport function newMessagePortRpcSession(\n    port: MessagePort, localMain?: any, options?: RpcSessionOptions): RpcStub {\n  let transport = new MessagePortTransport(port);\n  let rpc = new RpcSession(transport, localMain, options);\n  return rpc.getRemoteMain();\n}\n\nclass MessagePortTransport implements RpcTransport {\n  constructor (port: MessagePort) {\n    this.#port = port;\n\n    // Start listening for messages\n    port.start();\n\n    port.addEventListener(\"message\", (event: MessageEvent<any>) => {\n      if (this.#error) {\n        // Ignore further messages.\n      } else if (event.data === null) {\n        // Peer is signaling that they're closing the connection\n        this.#receivedError(new Error(\"Peer closed MessagePort connection.\"));\n      } else if (typeof event.data === \"string\") {\n        if (this.#receiveResolver) {\n          this.#receiveResolver(event.data);\n          this.#receiveResolver = undefined;\n          this.#receiveRejecter = undefined;\n        } else {\n          this.#receiveQueue.push(event.data);\n        }\n      } else {\n        this.#receivedError(new TypeError(\"Received non-string message from MessagePort.\"));\n      }\n    });\n\n    port.addEventListener(\"messageerror\", (event: MessageEvent) => {\n      this.#receivedError(new Error(\"MessagePort message error.\"));\n    });\n  }\n\n  #port: MessagePort;\n  #receiveResolver?: (message: string) => void;\n  #receiveRejecter?: (err: any) => void;\n  #receiveQueue: string[] = [];\n  #error?: any;\n\n  async send(message: string): Promise<void> {\n    if (this.#error) {\n      throw this.#error;\n    }\n    this.#port.postMessage(message);\n  }\n\n  async receive(): Promise<string> {\n    if (this.#receiveQueue.length > 0) {\n      return this.#receiveQueue.shift()!;\n    } else if (this.#error) {\n      throw this.#error;\n    } else {\n      return new Promise<string>((resolve, reject) => {\n        this.#receiveResolver = resolve;\n        this.#receiveRejecter = reject;\n      });\n    }\n  }\n\n  abort?(reason: any): void {\n    // Send close signal to peer before closing\n    try {\n      this.#port.postMessage(null);\n    } catch (err) {\n      // Ignore errors when sending close signal - port might already be closed\n    }\n\n    this.#port.close();\n\n    if (!this.#error) {\n      this.#error = reason;\n      // No need to call receiveRejecter(); RPC implementation will stop listening anyway.\n    }\n  }\n\n  #receivedError(reason: any) {\n    if (!this.#error) {\n      this.#error = reason;\n      if (this.#receiveRejecter) {\n        this.#receiveRejecter(reason);\n        this.#receiveResolver = undefined;\n        this.#receiveRejecter = undefined;\n      }\n    }\n  }\n}", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { StubHook, PropertyPath, RpcPayload, RpcStub, RpcPromise, withCallInterceptor, ErrorStubHook, mapImpl, PayloadStubHook, unwrapStubAndPath, unwrapStubNoProperties } from \"./core.js\";\nimport { Devaluator, Exporter, Importer, ExportId, ImportId, Evaluator } from \"./serialize.js\";\n\nlet currentMapBuilder: MapBuilder | undefined;\n\n// We use this type signature when building the instructions for type checking purposes. It\n// describes a subset of the overall RPC protocol.\nexport type MapInstruction =\n    | [\"pipeline\", number, PropertyPath]\n    | [\"pipeline\", number, PropertyPath, unknown]\n    | [\"remap\", number, PropertyPath, [\"import\", number][], MapInstruction[]]\n\nclass MapBuilder implements Exporter {\n  private context:\n    | {parent: undefined, captures: StubHook[], subject: StubHook, path: PropertyPath}\n    | {parent: MapBuilder, captures: number[], subject: number, path: PropertyPath};\n  private captureMap: Map<StubHook, number> = new Map();\n\n  private instructions: MapInstruction[] = [];\n\n  constructor(subject: StubHook, path: PropertyPath) {\n    if (currentMapBuilder) {\n      this.context = {\n        parent: currentMapBuilder,\n        captures: [],\n        subject: currentMapBuilder.capture(subject),\n        path\n      };\n    } else {\n      this.context = {\n        parent: undefined,\n        captures: [],\n        subject,\n        path\n      };\n    }\n\n    currentMapBuilder = this;\n  }\n\n  unregister() {\n    currentMapBuilder = this.context.parent;\n  }\n\n  makeInput(): MapVariableHook {\n    return new MapVariableHook(this, 0);\n  }\n\n  makeOutput(result: RpcPayload): StubHook {\n    let devalued: unknown;\n    try {\n      devalued = Devaluator.devaluate(result.value, undefined, this, result);\n    } finally {\n      result.dispose();\n    }\n\n    // The result is the final instruction. This doesn't actually fit our MapInstruction type\n    // signature, so we cheat a bit.\n    this.instructions.push(<any>devalued);\n\n    if (this.context.parent) {\n      this.context.parent.instructions.push(\n        [\"remap\", this.context.subject, this.context.path,\n                  this.context.captures.map(cap => [\"import\", cap]),\n                  this.instructions]\n      );\n      return new MapVariableHook(this.context.parent, this.context.parent.instructions.length);\n    } else {\n      return this.context.subject.map(this.context.path, this.context.captures, this.instructions);\n    }\n  }\n\n  pushCall(hook: StubHook, path: PropertyPath, params: RpcPayload): StubHook {\n    let devalued = Devaluator.devaluate(params.value, undefined, this, params);\n    // HACK: Since the args is an array, devaluator will wrap in a second array. Need to unwrap.\n    // TODO: Clean this up somehow.\n    devalued = (<Array<unknown>>devalued)[0];\n\n    let subject = this.capture(hook.dup());\n    this.instructions.push([\"pipeline\", subject, path, devalued]);\n    return new MapVariableHook(this, this.instructions.length);\n  }\n\n  pushGet(hook: StubHook, path: PropertyPath): StubHook {\n    let subject = this.capture(hook.dup());\n    this.instructions.push([\"pipeline\", subject, path]);\n    return new MapVariableHook(this, this.instructions.length);\n  }\n\n  capture(hook: StubHook): number {\n    if (hook instanceof MapVariableHook && hook.mapper === this) {\n      // Oh, this is already our own hook.\n      return hook.idx;\n    }\n\n    // TODO: Well, the hooks passed in are always unique, so they'll never exist in captureMap.\n    //   I suppose this is a problem with RPC as well. We need a way to identify hooks that are\n    //   dupes of the same target.\n    let result = this.captureMap.get(hook);\n    if (result === undefined) {\n      if (this.context.parent) {\n        let parentIdx = this.context.parent.capture(hook);\n        this.context.captures.push(parentIdx);\n      } else {\n        this.context.captures.push(hook);\n      }\n      result = -this.context.captures.length;\n      this.captureMap.set(hook, result);\n    }\n    return result;\n  }\n\n  // ---------------------------------------------------------------------------\n  // implements Exporter\n\n  exportStub(hook: StubHook): ExportId {\n    // It appears someone did something like:\n    //\n    //     stub.map(x => { return x.doSomething(new MyRpcTarget()); })\n    //\n    // That... won't work. They need to do this instead:\n    //\n    //     using myTargetStub = new RpcStub(new MyRpcTarget());\n    //     stub.map(x => { return x.doSomething(myTargetStub.dup()); })\n    //\n    // TODO(someday): Consider carefully if the inline syntax is maybe OK. If so, perhaps the\n    //   serializer could try calling `getImport()` even for known-local hooks.\n    // TODO(someday): Do we need to support rpc-thenable somehow?\n    throw new Error(\n        \"Can't construct an RpcTarget or RPC callback inside a mapper function. Try creating a \" +\n        \"new RpcStub outside the callback first, then using it inside the callback.\");\n  }\n  exportPromise(hook: StubHook): ExportId {\n    return this.exportStub(hook);\n  }\n  getImport(hook: StubHook): ImportId | undefined {\n    return this.capture(hook);\n  }\n\n  unexport(ids: Array<ExportId>): void {\n    // Presumably this MapBuilder is cooked anyway, so we don't really have to release anything.\n  }\n\n  onSendError(error: Error): Error | void {\n    // TODO(someday): Can we use the error-sender hook from the RPC system somehow?\n  }\n};\n\nmapImpl.sendMap = (hook: StubHook, path: PropertyPath, func: (promise: RpcPromise) => unknown) => {\n  let builder = new MapBuilder(hook, path);\n  let result: RpcPayload;\n  try {\n    result = RpcPayload.fromAppReturn(withCallInterceptor(builder.pushCall.bind(builder), () => {\n      return func(new RpcPromise(builder.makeInput(), []));\n    }));\n  } finally {\n    builder.unregister();\n  }\n\n  // Detect misuse: Map callbacks cannot be async.\n  if (result instanceof Promise) {\n    // Squelch unhandled rejections from the map function itself -- it'll probably just throw\n    // something about pulling a MapVariableHook.\n    result.catch(err => {});\n\n    // Throw an understandable error.\n    throw new Error(\"RPC map() callbacks cannot be async.\");\n  }\n\n  return new RpcPromise(builder.makeOutput(result), []);\n}\n\nfunction throwMapperBuilderUseError(): never {\n  throw new Error(\n      \"Attempted to use an abstract placeholder from a mapper function. Please make sure your \" +\n      \"map function has no side effects.\");\n}\n\n// StubHook which represents a variable in a map function.\nclass MapVariableHook extends StubHook {\n  constructor(public mapper: MapBuilder, public idx: number) {\n    super();\n  }\n\n  // We don't have anything we actually need to dispose, so dup() can just return the same hook.\n  dup(): StubHook { return this; }\n  dispose(): void {}\n\n  get(path: PropertyPath): StubHook {\n    // This can actually be invoked as part of serialization, so we'll need to support it.\n    if (path.length == 0) {\n      // Since this hook cannot be pulled anyway, and dispose() is a no-op, we can actually just\n      // return the same hook again to represent getting the empty path.\n      return this;\n    } else if (currentMapBuilder) {\n      return currentMapBuilder.pushGet(this, path);\n    } else {\n      throwMapperBuilderUseError();\n    }\n  }\n\n  // Other methods should never be called.\n  call(path: PropertyPath, args: RpcPayload): StubHook {\n    // Can't be called; all calls are intercepted.\n    throwMapperBuilderUseError();\n  }\n\n  map(path: PropertyPath, captures: StubHook[], instructions: unknown[]): StubHook {\n    // Can't be called; all map()s are intercepted.\n    throwMapperBuilderUseError();\n  }\n\n  pull(): RpcPayload | Promise<RpcPayload> {\n    // Map functions cannot await.\n    throwMapperBuilderUseError();\n  }\n\n  ignoreUnhandledRejections(): void {\n    // Probably never called but whatever.\n  }\n\n  onBroken(callback: (error: any) => void): void {\n    throwMapperBuilderUseError();\n  }\n}\n\n// =======================================================================================\n\nclass MapApplicator implements Importer {\n  private variables: StubHook[];\n\n  constructor(private captures: StubHook[], input: StubHook) {\n    this.variables = [input];\n  }\n\n  dispose() {\n    for (let variable of this.variables) {\n      variable.dispose();\n    }\n  }\n\n  apply(instructions: unknown[]): RpcPayload {\n    try {\n      if (instructions.length < 1) {\n        throw new Error(\"Invalid empty mapper function.\");\n      }\n\n      for (let instruction of instructions.slice(0, -1)) {\n        let payload = new Evaluator(this).evaluateCopy(instruction);\n\n        // The payload almost always contains a single stub. As an optimization, unwrap it.\n        if (payload.value instanceof RpcStub) {\n          let hook = unwrapStubNoProperties(payload.value);\n          if (hook) {\n            this.variables.push(hook);\n            continue;\n          }\n        }\n\n        this.variables.push(new PayloadStubHook(payload));\n      }\n\n      return new Evaluator(this).evaluateCopy(instructions[instructions.length - 1]);\n    } finally {\n      for (let variable of this.variables) {\n        variable.dispose();\n      }\n    }\n  }\n\n  importStub(idx: ImportId): StubHook {\n    // This implies we saw an \"export\" appear inside the body of a mapper function. This should be\n    // impossible because exportStub()/exportPromise() throw exceptions in MapBuilder.\n    throw new Error(\"A mapper function cannot refer to exports.\");\n  }\n  importPromise(idx: ImportId): StubHook {\n    return this.importStub(idx);\n  }\n\n  getExport(idx: ExportId): StubHook | undefined {\n    if (idx < 0) {\n      return this.captures[-idx - 1];\n    } else {\n      return this.variables[idx];\n    }\n  }\n}\n\nfunction applyMapToElement(input: unknown, parent: object | undefined, owner: RpcPayload | null,\n                           captures: StubHook[], instructions: unknown[]): RpcPayload {\n  // TODO(perf): I wonder if we could use .fromAppParams() instead of .deepCopyFrom()? It\n  //   maybe wouldn't correctly handle the case of RpcTargets in the input, so we need a variant\n  //   which takes an `owner`, which does add some complexity.\n  let inputHook = new PayloadStubHook(RpcPayload.deepCopyFrom(input, parent, owner));\n  let mapper = new MapApplicator(captures, inputHook);\n  try {\n    return mapper.apply(instructions);\n  } finally {\n    mapper.dispose();\n  }\n}\n\nmapImpl.applyMap = (input: unknown, parent: object | undefined, owner: RpcPayload | null,\n                    captures: StubHook[], instructions: unknown[]) => {\n  try {\n    let result: RpcPayload;\n    if (input instanceof RpcPromise) {\n      // The caller is responsible for making sure the input is not a promise, since we can't\n      // then know if it would resolve to an array later.\n      throw new Error(\"applyMap() can't be called on RpcPromise\");\n    } else if (input instanceof Array) {\n      let payloads: RpcPayload[] = [];\n      try {\n        for (let elem of input) {\n          payloads.push(applyMapToElement(elem, input, owner, captures, instructions));\n        }\n      } catch (err) {\n        for (let payload of payloads) {\n          payload.dispose();\n        }\n        throw err;\n      }\n\n      result = RpcPayload.fromArray(payloads);\n    } else if (input === null || input === undefined) {\n      result = RpcPayload.fromAppReturn(input);\n    } else {\n      result = applyMapToElement(input, parent, owner, captures, instructions);\n    }\n\n    // TODO(perf): We should probably return a hook that allows pipelining but whose pull() doesn't\n    //   resolve until all promises in the payload have been substituted.\n    return new PayloadStubHook(result);\n  } finally {\n    for (let cap of captures) {\n      cap.dispose();\n    }\n  }\n}\n\nexport function forceInitMap() {}\n", "// Copyright (c) 2025 Cloudflare, Inc.\n// Licensed under the MIT license found in the LICENSE.txt file or at:\n//     https://opensource.org/license/mit\n\nimport { RpcTarget as RpcTargetImpl, RpcStub as RpcStubImpl, RpcPromise as RpcPromiseImpl } from \"./core.js\";\nimport { serialize, deserialize } from \"./serialize.js\";\nimport { RpcTransport, RpcSession as RpcSessionImpl, RpcSessionOptions } from \"./rpc.js\";\nimport { RpcTargetBranded, Serializable, Stub, Stubify, __RPC_TARGET_BRAND } from \"./types.js\";\nimport { newWebSocketRpcSession as newWebSocketRpcSessionImpl,\n         newWorkersWebSocketRpcResponse } from \"./websocket.js\";\nimport { newHttpBatchRpcSession as newHttpBatchRpcSessionImpl,\n         newHttpBatchRpcResponse, nodeHttpBatchRpcResponse } from \"./batch.js\";\nimport { newMessagePortRpcSession as newMessagePortRpcSessionImpl } from \"./messageport.js\";\nimport { forceInitMap } from \"./map.js\";\n\nforceInitMap();\n\n// Re-export public API types.\nexport { serialize, deserialize, newWorkersWebSocketRpcResponse, newHttpBatchRpcResponse,\n         nodeHttpBatchRpcResponse };\nexport type { RpcTransport, RpcSessionOptions };\n\n// Hack the type system to make RpcStub's types work nicely!\n/**\n * Represents a reference to a remote object, on which methods may be remotely invoked via RPC.\n *\n * `RpcStub` can represent any interface (when using TypeScript, you pass the specific interface\n * type as `T`, but this isn't known at runtime). The way this works is, `RpcStub` is actually a\n * `Proxy`. It makes itself appear as if every possible method / property name is defined. You can\n * invoke any method name, and the invocation will be sent to the server. If it turns out that no\n * such method exists on the remote object, an exception is thrown back. But the client does not\n * actually know, until that point, what methods exist.\n */\nexport type RpcStub<T extends Serializable<T>> = Stub<T>;\nexport const RpcStub: {\n  new <T extends Serializable<T>>(value: T): RpcStub<T>;\n} = <any>RpcStubImpl;\n\n/**\n * Represents the result of an RPC call.\n *\n * Also used to represent properties. That is, `stub.foo` evaluates to an `RpcPromise` for the\n * value of `foo`.\n *\n * This isn't actually a JavaScript `Promise`. It does, however, have `then()`, `catch()`, and\n * `finally()` methods, like `Promise` does, and because it has a `then()` method, JavaScript will\n * allow you to treat it like a promise, e.g. you can `await` it.\n *\n * An `RpcPromise` is also a proxy, just like `RpcStub`, where calling methods or awaiting\n * properties will make a pipelined network request.\n *\n * Note that and `RpcPromise` is \"lazy\": the actual final result is not requested from the server\n * until you actually `await` the promise (or call `then()`, etc. on it). This is an optimization:\n * if you only intend to use the promise for pipelining and you never await it, then there's no\n * need to transmit the resolution!\n */\nexport type RpcPromise<T extends Serializable<T>> = Stub<T> & Promise<Stubify<T>>;\nexport const RpcPromise: {\n  // Note: Cannot construct directly!\n} = <any>RpcPromiseImpl;\n\n/**\n * Use to construct an `RpcSession` on top of a custom `RpcTransport`.\n *\n * Most people won't use this. You only need it if you've implemented your own `RpcTransport`.\n */\nexport interface RpcSession<T extends Serializable<T> = undefined> {\n  getRemoteMain(): RpcStub<T>;\n  getStats(): {imports: number, exports: number};\n\n  // Waits until the peer is not waiting on any more promise resolutions from us. This is useful\n  // in particular to decide when a batch is complete.\n  drain(): Promise<void>;\n}\nexport const RpcSession: {\n  new <T extends Serializable<T> = undefined>(\n      transport: RpcTransport, localMain?: any, options?: RpcSessionOptions): RpcSession<T>;\n} = <any>RpcSessionImpl;\n\n// RpcTarget needs some hackage too to brand it properly and account for the implementation\n// conditionally being imported from \"cloudflare:workers\".\n/**\n * Classes which are intended to be passed by reference and called over RPC must extend\n * `RpcTarget`. A class which does not extend `RpcTarget` (and which doesn't have built-in support\n * from the RPC system) cannot be passed in an RPC message at all; an exception will be thrown.\n *\n * Note that on Cloudflare Workers, this `RpcTarget` is an alias for the one exported from the\n * \"cloudflare:workers\" module, so they can be used interchangably.\n */\nexport interface RpcTarget extends RpcTargetBranded {};\nexport const RpcTarget: {\n  new(): RpcTarget;\n} = RpcTargetImpl;\n\n/**\n * Empty interface used as default type parameter for sessions where the other side doesn't\n * necessarily export a main interface.\n */\ninterface Empty {}\n\n/**\n * Start a WebSocket session given either an already-open WebSocket or a URL.\n *\n * @param webSocket Either the `wss://` URL to connect to, or an already-open WebSocket object to\n * use.\n * @param localMain The main RPC interface to expose to the peer. Returns a stub for the main\n * interface exposed from the peer.\n */\nexport let newWebSocketRpcSession:<T extends Serializable<T> = Empty>\n    (webSocket: WebSocket | string, localMain?: any, options?: RpcSessionOptions) => RpcStub<T> =\n    <any>newWebSocketRpcSessionImpl;\n\n/**\n * Initiate an HTTP batch session from the client side.\n *\n * The parameters to this method have exactly the same signature as `fetch()`, but the return\n * value is an RpcStub. You can customize anything about the request except for the method\n * (it will always be set to POST) and the body (which the RPC system will fill in).\n */\nexport let newHttpBatchRpcSession:<T extends Serializable<T>>\n    (urlOrRequest: string | Request, init?: RequestInit) => RpcStub<T> =\n    <any>newHttpBatchRpcSessionImpl;\n\n/**\n * Initiate an RPC session over a MessagePort, which is particularly useful for communicating\n * between an iframe and its parent frame in a browser context. Each side should call this function\n * on its own end of the MessageChannel.\n */\nexport let newMessagePortRpcSession:<T extends Serializable<T> = Empty>\n    (port: MessagePort, localMain?: any, options?: RpcSessionOptions) => RpcStub<T> =\n    <any>newMessagePortRpcSessionImpl;\n\n/**\n * Implements unified handling of HTTP-batch and WebSocket responses for the Cloudflare Workers\n * Runtime.\n *\n * SECURITY WARNING: This function accepts cross-origin requests. If you do not want this, you\n * should validate the `Origin` header before calling this, or use `newHttpBatchRpcSession()` and\n * `newWebSocketRpcSession()` directly with appropriate security measures for each type of request.\n * But if your API uses in-band authorization (i.e. it has an RPC method that takes the user's\n * credentials as parameters and returns the authorized API), then cross-origin requests should\n * be safe.\n */\nexport async function newWorkersRpcResponse(request: Request, localMain: any) {\n  if (request.method === \"POST\") {\n    let response = await newHttpBatchRpcResponse(request, localMain);\n    // Since we're exposing the same API over WebSocket, too, and WebSocket always allows\n    // cross-origin requests, the API necessarily must be safe for cross-origin use (e.g. because\n    // it uses in-band authorization, as recommended in the readme). So, we might as well allow\n    // batch requests to be made cross-origin as well.\n    response.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n    return response;\n  } else if (request.headers.get(\"Upgrade\")?.toLowerCase() === \"websocket\") {\n    return newWorkersWebSocketRpcResponse(request, localMain);\n  } else {\n    return new Response(\"This endpoint only accepts POST or WebSocket requests.\", { status: 400 });\n  }\n}\n", "import sveltekit_worker from '../.svelte-kit/cloudflare/_worker.js';\nimport { SECURITY_HEADER_ENTRIES } from './lib/security-headers.js';\nimport beelayBackend, { BeelayDO as BaseBeelayDO } from '../../beelay-worker/worker';\n\nexport class BeelayDO extends BaseBeelayDO {\n\tconstructor(state: any, env: any) {\n\t\tsuper(state, env);\n\t}\n}\n\nconst UPGRADE_HEADER = 'websocket';\n\nconst applySecurityHeaders = (response: Response): Response => {\n\tconst headers = new Headers(response.headers);\n\n\tfor (const [key, value] of SECURITY_HEADER_ENTRIES) {\n\t\theaders.set(key, value);\n\t}\n\n\treturn new Response(response.body, {\n\t\tstatus: response.status,\n\t\tstatusText: response.statusText,\n\t\theaders\n\t});\n};\n\nexport default {\n\tasync fetch(request: Request, env: any, ctx: unknown): Promise<Response> {\n\t\tconst upgradeHeader = request.headers.get('Upgrade')?.toLowerCase();\n\t\tif (upgradeHeader === UPGRADE_HEADER) {\n\t\t\treturn beelayBackend.fetch(request, env);\n\t\t}\n\n\t\tif (env.ASSETS && typeof env.ASSETS === 'object' && env.ASSETS !== null && 'fetch' in env.ASSETS) {\n\t\t\tconst originalAssets = env.ASSETS as { fetch: (req: Request) => Promise<Response> };\n\t\t\tenv.ASSETS = {\n\t\t\t\tasync fetch(req: Request) {\n\t\t\t\t\tconst assetResponse = await originalAssets.fetch(req);\n\t\t\t\t\treturn applySecurityHeaders(assetResponse);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst response = await (sveltekit_worker as any).fetch(request, env, ctx);\n\t\treturn applySecurityHeaders(response);\n\t}\n};\n"],
  "mappings": ";;;;;AAuBO,SAAS,0BAA0B,MAAM;AAC/C,SAAO,IAAI,MAAM,WAAW,IAAI,0BAA0B;AAC3D;AAFgB;AAAA;AAIT,SAAS,eAAe,MAAM;AACpC,QAAM,KAAK,6BAAM;AAChB,UAAM,0CAA0B,IAAI;AAAA,EACrC,GAFW;AAGX,SAAO,OAAO,OAAO,IAAI,EAAE,WAAW,KAAK,CAAC;AAC7C;AALgB;;AAcT,SAAS,oBAAoB,MAAM;AACzC,SAAO,MAAM;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AACb,YAAM,IAAI,MAAM,WAAW,IAAI,0BAA0B;AAAA,IAC1D;AAAA,EACD;AACD;AAPgB;;;ACxChB,IAAM,cAAc,WAAW,aAAa,cAAc,KAAK,IAAI;AACnE,IAAM,kBAAkB,WAAW,aAAa,MAAM,WAAW,YAAY,IAAI,KAAK,WAAW,WAAW,IAAI,MAAM,KAAK,IAAI,IAAI;AACnI,IAAM,aAAa;AAAA,EAClB,MAAM;AAAA,EACN,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AAAA,EACV,WAAW;AAAA,EACX,SAAS;AAAA,EACT,mBAAmB;AAAA,EACnB,aAAa;AAAA,EACb,WAAW;AAAA,EACX,UAAU;AAAA,EACV,UAAU;AAAA,EACV,eAAe;AAAA,IACd,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,eAAe;AAAA,EAChB;AAAA,EACA,QAAQ;AAAA,EACR,SAAS;AACR,WAAO;AAAA,EACR;AACD;AAEO,IAAM,mBAAN,MAAuB;AAAA,EA1B9B,OA0B8B;AAAA;AAAA;AAAA,EAC7B,YAAY;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,YAAY,MAAMA,UAAS;AAC1B,SAAK,OAAO;AACZ,SAAK,YAAYA,UAAS,aAAa,gBAAgB;AACvD,SAAK,SAASA,UAAS;AAAA,EACxB;AAAA,EACA,IAAI,WAAW;AACd,WAAO,gBAAgB,IAAI,KAAK;AAAA,EACjC;AAAA,EACA,SAAS;AACR,WAAO;AAAA,MACN,MAAM,KAAK;AAAA,MACX,WAAW,KAAK;AAAA,MAChB,WAAW,KAAK;AAAA,MAChB,UAAU,KAAK;AAAA,MACf,QAAQ,KAAK;AAAA,IACd;AAAA,EACD;AACD;AAEO,IAAM,kBAAkB,MAAMC,yBAAwB,iBAAiB;AAAA,EAnD9E,OAmD8E;AAAA;AAAA;AAAA,EAC7E,YAAY;AAAA,EACZ,cAAc;AAEb,UAAM,GAAG,SAAS;AAAA,EACnB;AAAA,EACA,IAAI,WAAW;AACd,WAAO;AAAA,EACR;AACD;AAEO,IAAM,qBAAN,cAAiC,iBAAiB;AAAA,EA9DzD,OA8DyD;AAAA;AAAA;AAAA,EACxD,YAAY;AACb;AAEO,IAAM,4BAAN,cAAwC,iBAAiB;AAAA,EAlEhE,OAkEgE;AAAA;AAAA;AAAA,EAC/D,YAAY;AAAA,EACZ,eAAe,CAAC;AAAA,EAChB,aAAa;AAAA,EACb,eAAe;AAAA,EACf,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB,OAAO;AAAA,EACP,kBAAkB;AAAA,EAClB,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,eAAe;AAAA,EACf,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,wBAAwB;AAAA,EACxB,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,cAAc;AAAA,EACd,iBAAiB;AAClB;AAEO,IAAM,+BAAN,MAAmC;AAAA,EA3F1C,OA2F0C;AAAA;AAAA;AAAA,EACzC,YAAY;AAAA,EACZ,aAAa;AACZ,WAAO,CAAC;AAAA,EACT;AAAA,EACA,iBAAiB,OAAO,OAAO;AAC9B,WAAO,CAAC;AAAA,EACT;AAAA,EACA,iBAAiB,MAAM;AACtB,WAAO,CAAC;AAAA,EACT;AACD;AAEO,IAAM,cAAN,MAAkB;AAAA,EAxGzB,OAwGyB;AAAA;AAAA;AAAA,EACxB,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,cAAc,oBAAI,IAAI;AAAA,EACtB,WAAW,CAAC;AAAA,EACZ,4BAA4B;AAAA,EAC5B,aAAa;AAAA,EACb,SAAS;AAAA,EACT,SAAS,KAAK,UAAU;AACvB,UAAM,0BAA0B,sBAAsB;AAAA,EACvD;AAAA,EACA,IAAI,aAAa;AAChB,WAAO;AAAA,EACR;AAAA,EACA,uBAAuB;AACtB,WAAO,CAAC;AAAA,EACT;AAAA,EACA,qBAAqB;AAIpB,WAAO,IAAI,0BAA0B,EAAE;AAAA,EACxC;AAAA,EACA,6BAA6B;AAAA,EAC7B,MAAM;AAEL,QAAI,KAAK,eAAe,aAAa;AACpC,aAAO,gBAAgB;AAAA,IACxB;AACA,WAAO,KAAK,IAAI,IAAI,KAAK;AAAA,EAC1B;AAAA,EACA,WAAW,UAAU;AACpB,SAAK,WAAW,WAAW,KAAK,SAAS,OAAO,CAACC,OAAMA,GAAE,SAAS,QAAQ,IAAI,KAAK,SAAS,OAAO,CAACA,OAAMA,GAAE,cAAc,MAAM;AAAA,EACjI;AAAA,EACA,cAAc,aAAa;AAC1B,SAAK,WAAW,cAAc,KAAK,SAAS,OAAO,CAACA,OAAMA,GAAE,SAAS,WAAW,IAAI,KAAK,SAAS,OAAO,CAACA,OAAMA,GAAE,cAAc,SAAS;AAAA,EAC1I;AAAA,EACA,uBAAuB;AACtB,SAAK,WAAW,KAAK,SAAS,OAAO,CAACA,OAAMA,GAAE,cAAc,cAAcA,GAAE,cAAc,YAAY;AAAA,EACvG;AAAA,EACA,aAAa;AACZ,WAAO,KAAK;AAAA,EACb;AAAA,EACA,iBAAiB,MAAM,MAAM;AAC5B,WAAO,KAAK,SAAS,OAAO,CAACA,OAAMA,GAAE,SAAS,SAAS,CAAC,QAAQA,GAAE,cAAc,KAAK;AAAA,EACtF;AAAA,EACA,iBAAiB,MAAM;AACtB,WAAO,KAAK,SAAS,OAAO,CAACA,OAAMA,GAAE,cAAc,IAAI;AAAA,EACxD;AAAA,EACA,KAAK,MAAMF,UAAS;AAEnB,UAAM,QAAQ,IAAI,gBAAgB,MAAMA,QAAO;AAC/C,SAAK,SAAS,KAAK,KAAK;AACxB,WAAO;AAAA,EACR;AAAA,EACA,QAAQ,aAAa,uBAAuB,SAAS;AACpD,QAAI;AACJ,QAAI;AACJ,QAAI,OAAO,0BAA0B,UAAU;AAC9C,cAAQ,KAAK,iBAAiB,uBAAuB,MAAM,EAAE,CAAC,GAAG;AACjE,YAAM,KAAK,iBAAiB,SAAS,MAAM,EAAE,CAAC,GAAG;AAAA,IAClD,OAAO;AACN,cAAQ,OAAO,WAAW,uBAAuB,KAAK,KAAK,KAAK,IAAI;AACpE,YAAM,OAAO,WAAW,uBAAuB,GAAG,KAAK,KAAK,IAAI;AAAA,IACjE;AACA,UAAM,QAAQ,IAAI,mBAAmB,aAAa;AAAA,MACjD,WAAW;AAAA,MACX,QAAQ;AAAA,QACP;AAAA,QACA;AAAA,MACD;AAAA,IACD,CAAC;AACD,SAAK,SAAS,KAAK,KAAK;AACxB,WAAO;AAAA,EACR;AAAA,EACA,4BAA4B,SAAS;AACpC,SAAK,4BAA4B;AAAA,EAClC;AAAA,EACA,iBAAiB,MAAM,UAAUA,UAAS;AACzC,UAAM,0BAA0B,8BAA8B;AAAA,EAC/D;AAAA,EACA,oBAAoB,MAAM,UAAUA,UAAS;AAC5C,UAAM,0BAA0B,iCAAiC;AAAA,EAClE;AAAA,EACA,cAAc,OAAO;AACpB,UAAM,0BAA0B,2BAA2B;AAAA,EAC5D;AAAA,EACA,SAAS;AACR,WAAO;AAAA,EACR;AACD;AAEO,IAAM,sBAAN,MAA0B;AAAA,EApMjC,OAoMiC;AAAA;AAAA;AAAA,EAChC,YAAY;AAAA,EACZ,OAAO,sBAAsB,CAAC;AAAA,EAC9B,YAAY;AAAA,EACZ,YAAY,UAAU;AACrB,SAAK,YAAY;AAAA,EAClB;AAAA,EACA,cAAc;AACb,WAAO,CAAC;AAAA,EACT;AAAA,EACA,aAAa;AACZ,UAAM,0BAA0B,gCAAgC;AAAA,EACjE;AAAA,EACA,QAAQA,UAAS;AAChB,UAAM,0BAA0B,6BAA6B;AAAA,EAC9D;AAAA,EACA,KAAK,IAAI;AACR,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB,IAAI,YAAY,MAAM;AACrC,WAAO,GAAG,KAAK,SAAS,GAAG,IAAI;AAAA,EAChC;AAAA,EACA,UAAU;AACT,WAAO;AAAA,EACR;AAAA,EACA,iBAAiB;AAChB,WAAO;AAAA,EACR;AAAA,EACA,cAAc;AACb,WAAO;AAAA,EACR;AACD;AAIO,IAAMG,eAAc,WAAW,eAAe,sBAAsB,WAAW,cAAc,WAAW,cAAc,IAAI,YAAY;;;AC7N7I,WAAW,cAAcC;AACzB,WAAW,cAAc;AACzB,WAAW,mBAAmB;AAC9B,WAAW,kBAAkB;AAC7B,WAAW,qBAAqB;AAChC,WAAW,sBAAsB;AACjC,WAAW,+BAA+B;AAC1C,WAAW,4BAA4B;;;ACjBvC,SAAS,gBAAgB;;;ACAzB,IAAO,eAAQ,OAAO,OAAO,MAAM;AAAC,GAAG,EAAE,WAAW,KAAK,CAAC;;;ADG1D,IAAM,WAAW,WAAW;AAErB,IAAM,gBAAgB;AACtB,IAAM,UAAU,IAAI,SAAS;AAC7B,IAAM,UAAU,IAAI,SAAS;AAC7B,IAAM,MAAM,UAAU,OAAO;AAC7B,IAAM,OAAO,UAAU,QAAQ;AAC/B,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,OAAO,UAAU,QAAQ;AAE/B,IAAM,aAAa,UAAU,cAA8B,+BAAe,oBAAoB;AAG9F,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,aAAa,UAAU,cAAc;AAC3C,IAAM,MAAM,UAAU,OAAO;AAC7B,IAAM,SAAS,UAAU,UAAU;AACnC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,WAAW,UAAU,YAAY;AACvC,IAAM,iBAAiB,UAAU,kBAAkB;AACnD,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,aAAa,UAAU,cAAc;AAC3C,IAAM,OAAO,UAAU,QAAQ;AAC/B,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,YAAY,UAAU,aAAa;AACzC,IAAM,UAAU,UAAU,WAA2B,oCAAoB,iBAAiB;AAC1F,IAAM,SAAyB,oBAAI,IAAI;AAKvC,IAAM,sBAAsB;AAC5B,IAAM,sBAAsB;;;AEtBnC,IAAM,iBAAiB,WAAW,SAAS;AACpC,IAAM;AAAA,EACX;AAAA,EACA,OAAAC;AAAA;AAAA,EAEA;AAAA,EACA,OAAAC;AAAA,EACA,YAAAC;AAAA;AAAA,EAEA,YAAAC;AAAA,EACA,OAAAC;AAAA,EACA,KAAAC;AAAA,EACA,QAAAC;AAAA,EACA,OAAAC;AAAA,EACA,OAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,MAAAC;AAAA,EACA,KAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,OAAAC;AAAA,EACA,MAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,EACA,OAAAC;AAAA,EACA,MAAAC;AACF,IAAI;AACJ,OAAO,OAAO,gBAAgB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AACD,IAAO,kBAAQ;;;ACvDf,WAAW,UAAU;;;ACAd,IAAM,SAAyB,uBAAO,OAAO,gCAASC,QAAO,WAAW;AAC9E,QAAM,MAAM,KAAK,IAAI;AAErB,QAAM,UAAU,KAAK,MAAM,MAAM,GAAG;AAEpC,QAAM,QAAQ,MAAM,MAAM;AAC1B,MAAI,WAAW;AACd,QAAI,cAAc,UAAU,UAAU,CAAC;AACvC,QAAI,YAAY,QAAQ,UAAU,CAAC;AACnC,QAAI,YAAY,GAAG;AAClB,oBAAc,cAAc;AAC5B,kBAAY,MAAM;AAAA,IACnB;AACA,WAAO,CAAC,aAAa,SAAS;AAAA,EAC/B;AACA,SAAO,CAAC,SAAS,KAAK;AACvB,GAhBoD,WAgBjD,EAAE,QAAQ,gCAAS,SAAS;AAE9B,SAAO,OAAO,KAAK,IAAI,IAAI,GAAG;AAC/B,GAHa,UAGX,CAAC;;;ACpBH,SAAS,oBAAoB;;;ACAtB,IAAM,aAAN,MAAiB;AAAA,EAAxB,OAAwB;AAAA;AAAA;AAAA,EACvB;AAAA,EACA,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,YAAY,IAAI;AACf,SAAK,KAAK;AAAA,EACX;AAAA,EACA,WAAW,MAAM;AAChB,SAAK,QAAQ;AACb,WAAO;AAAA,EACR;AACD;;;ACXO,IAAM,cAAN,MAAkB;AAAA,EAAzB,OAAyB;AAAA;AAAA;AAAA,EACxB;AAAA,EACA,UAAU;AAAA,EACV,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY,IAAI;AACf,SAAK,KAAK;AAAA,EACX;AAAA,EACA,UAAUC,MAAK,UAAU;AACxB,gBAAY,SAAS;AACrB,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB,UAAU;AACzB,gBAAY,SAAS;AACrB,WAAO;AAAA,EACR;AAAA,EACA,SAAS,GAAG,GAAG,UAAU;AACxB,gBAAY,OAAO,aAAa,cAAc,SAAS;AACvD,WAAO;AAAA,EACR;AAAA,EACA,WAAW,IAAI,IAAI,UAAU;AAC5B,gBAAY,SAAS;AACrB,WAAO;AAAA,EACR;AAAA,EACA,cAAcC,MAAK;AAClB,WAAO;AAAA,EACR;AAAA,EACA,UAAUC,QAAOD,MAAK;AACrB,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB;AACf,WAAO,CAAC,KAAK,SAAS,KAAK,IAAI;AAAA,EAChC;AAAA,EACA,MAAM,KAAK,UAAU,IAAI;AACxB,QAAI,eAAe,YAAY;AAC9B,YAAM,IAAI,YAAY,EAAE,OAAO,GAAG;AAAA,IACnC;AACA,QAAI;AACH,cAAQ,IAAI,GAAG;AAAA,IAChB,QAAQ;AAAA,IAAC;AACT,UAAM,OAAO,OAAO,cAAc,GAAG;AACrC,WAAO;AAAA,EACR;AACD;;;AC1CO,IAAM,eAAe;;;AHIrB,IAAM,UAAN,MAAM,iBAAgB,aAAa;AAAA,EAL1C,OAK0C;AAAA;AAAA;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,MAAM;AACjB,UAAM;AACN,SAAK,MAAM,KAAK;AAChB,SAAK,SAAS,KAAK;AACnB,SAAK,WAAW,KAAK;AACrB,eAAW,QAAQ,CAAC,GAAG,OAAO,oBAAoB,SAAQ,SAAS,GAAG,GAAG,OAAO,oBAAoB,aAAa,SAAS,CAAC,GAAG;AAC7H,YAAM,QAAQ,KAAK,IAAI;AACvB,UAAI,OAAO,UAAU,YAAY;AAChC,aAAK,IAAI,IAAI,MAAM,KAAK,IAAI;AAAA,MAC7B;AAAA,IACD;AAAA,EACD;AAAA;AAAA,EAEA,YAAY,SAAS,MAAM,MAAM;AAChC,YAAQ,KAAK,GAAG,OAAO,IAAI,IAAI,OAAO,EAAE,GAAG,OAAO,GAAG,IAAI,OAAO,EAAE,GAAG,OAAO,EAAE;AAAA,EAC/E;AAAA,EACA,QAAQ,MAAM;AAEb,WAAO,MAAM,KAAK,GAAG,IAAI;AAAA,EAC1B;AAAA,EACA,UAAU,WAAW;AACpB,WAAO,MAAM,UAAU,SAAS;AAAA,EACjC;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA,IAAI,QAAQ;AACX,WAAO,KAAK,WAAW,IAAI,WAAW,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,SAAS;AACZ,WAAO,KAAK,YAAY,IAAI,YAAY,CAAC;AAAA,EAC1C;AAAA,EACA,IAAI,SAAS;AACZ,WAAO,KAAK,YAAY,IAAI,YAAY,CAAC;AAAA,EAC1C;AAAA;AAAA,EAEA,OAAO;AAAA,EACP,MAAME,MAAK;AACV,SAAK,OAAOA;AAAA,EACb;AAAA,EACA,MAAM;AACL,WAAO,KAAK;AAAA,EACb;AAAA;AAAA,EAEA,OAAO;AAAA,EACP,WAAW;AAAA,EACX,OAAO,CAAC;AAAA,EACR,QAAQ;AAAA,EACR,WAAW,CAAC;AAAA,EACZ,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,IAAI,UAAU;AACb,WAAO,IAAI,YAAY;AAAA,EACxB;AAAA,EACA,IAAI,WAAW;AACd,WAAO,EAAE,MAAM,aAAa;AAAA,EAC7B;AAAA,EACA,IAAI,8BAA8B;AACjC,WAAO,oBAAI,IAAI;AAAA,EAChB;AAAA,EACA,IAAI,oBAAoB;AACvB,WAAO;AAAA,EACR;AAAA,EACA,IAAI,YAAY;AACf,WAAO;AAAA,EACR;AAAA,EACA,IAAI,mBAAmB;AACtB,WAAO;AAAA,EACR;AAAA,EACA,IAAI,mBAAmB;AACtB,WAAO;AAAA,EACR;AAAA,EACA,IAAI,WAAW;AACd,WAAO,CAAC;AAAA,EACT;AAAA,EACA,IAAI,UAAU;AACb,WAAO,CAAC;AAAA,EACT;AAAA,EACA,IAAI,YAAY;AACf,WAAO;AAAA,EACR;AAAA,EACA,IAAI,SAAS;AACZ,WAAO,CAAC;AAAA,EACT;AAAA,EACA,IAAI,iBAAiB;AACpB,WAAO,CAAC;AAAA,EACT;AAAA,EACA,oBAAoB;AACnB,WAAO;AAAA,EACR;AAAA,EACA,kBAAkB;AACjB,WAAO;AAAA,EACR;AAAA,EACA,SAAS;AACR,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB;AACf,WAAO,CAAC;AAAA,EACT;AAAA;AAAA,EAEA,MAAM;AAAA,EAEN;AAAA,EACA,QAAQ;AAAA,EAER;AAAA;AAAA,EAEA,QAAQ;AACP,UAAM,0BAA0B,eAAe;AAAA,EAChD;AAAA,EACA,mBAAmB;AAClB,WAAO;AAAA,EACR;AAAA,EACA,yBAAyB;AACxB,UAAM,0BAA0B,gCAAgC;AAAA,EACjE;AAAA,EACA,OAAO;AACN,UAAM,0BAA0B,cAAc;AAAA,EAC/C;AAAA,EACA,aAAa;AACZ,UAAM,0BAA0B,oBAAoB;AAAA,EACrD;AAAA,EACA,OAAO;AACN,UAAM,0BAA0B,cAAc;AAAA,EAC/C;AAAA,EACA,QAAQ;AACP,UAAM,0BAA0B,eAAe;AAAA,EAChD;AAAA,EACA,SAAS;AACR,UAAM,0BAA0B,gBAAgB;AAAA,EACjD;AAAA,EACA,uBAAuB;AACtB,UAAM,0BAA0B,8BAA8B;AAAA,EAC/D;AAAA,EACA,cAAc;AACb,UAAM,0BAA0B,qBAAqB;AAAA,EACtD;AAAA,EACA,aAAa;AACZ,UAAM,0BAA0B,oBAAoB;AAAA,EACrD;AAAA,EACA,WAAW;AACV,UAAM,0BAA0B,kBAAkB;AAAA,EACnD;AAAA,EACA,sCAAsC;AACrC,UAAM,0BAA0B,6CAA6C;AAAA,EAC9E;AAAA,EACA,sCAAsC;AACrC,UAAM,0BAA0B,6CAA6C;AAAA,EAC9E;AAAA,EACA,aAAa;AACZ,UAAM,0BAA0B,oBAAoB;AAAA,EACrD;AAAA,EACA,YAAY;AACX,UAAM,0BAA0B,mBAAmB;AAAA,EACpD;AAAA,EACA,SAAS;AACR,UAAM,0BAA0B,gBAAgB;AAAA,EACjD;AAAA,EACA,UAAU;AACT,UAAM,0BAA0B,iBAAiB;AAAA,EAClD;AAAA;AAAA,EAEA,aAAa,EAAE,KAAqB,+BAAe,wBAAwB,EAAE;AAAA,EAC7E,SAAS;AAAA,IACR,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,oBAAoB;AAAA,IACpB,gBAAgB;AAAA,IAChB,2BAA2B;AAAA,IAC3B,WAA2B,+BAAe,0BAA0B;AAAA,IACpE,aAA6B,+BAAe,4BAA4B;AAAA,EACzE;AAAA,EACA,eAAe;AAAA,IACd,UAA0B,+BAAe,+BAA+B;AAAA,IACxE,YAA4B,+BAAe,iCAAiC;AAAA,IAC5E,oBAAoC,+BAAe,yCAAyC;AAAA,EAC7F;AAAA,EACA,cAAc,OAAO,OAAO,OAAO;AAAA,IAClC,cAAc;AAAA,IACd,KAAK;AAAA,IACL,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,EACX,IAAI,EAAE,KAAK,6BAAM,GAAN,OAAQ,CAAC;AAAA;AAAA,EAEpB,aAAa;AAAA,EACb,SAAS;AAAA;AAAA,EAET,OAAO;AAAA,EACP,WAAW;AAAA,EACX,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,SAAS;AAAA;AAAA,EAET,UAAU;AAAA,EACV,eAAe;AAAA,EACf,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,qBAAqB;AAAA,EACrB,QAAQ;AAAA,EACR,mBAAmB;AAAA,EACnB,YAAY;AAAA,EACZ,6BAA6B;AAAA,EAC7B,4BAA4B;AAAA,EAC5B,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAe;AAAA,EACf,kBAAkB;AAAA,EAClB,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,iBAAiB;AAClB;;;AI3OA,IAAM,gBAAgB,WAAW,SAAS;AACnC,IAAM,mBAAmB,cAAc;AAC9C,IAAM,iBAAiB,iBAAiB,cAAc;AACtD,IAAM,qBAAqB,WAAW,WAAW,mBAAmB;AACpE,IAAM,eAAe,IAAI,QAAa;AAAA,EACpC,KAAK,cAAc;AAAA;AAAA,EAEnB,QAAQ,qBAAqB,eAAe,SAAS;AAAA;AAAA,EAErD,UAAU,eAAe;AAC3B,CAAC;AACM,IAAM,EAAE,MAAM,UAAU,SAAS,IAAI;AACrC,IAAM;AAAA;AAAA,EAEX;AAAA;AAAA,EAEA,QAAAC;AAAA;AAAA,EAEA;AACF,IAAI;AACG,IAAM;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA;AACF,IAAI;AACG,IAAM;AAAA;AAAA,EAEX;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI,qBAAqB,iBAAiB;AAC1C,IAAM,WAAW;AAAA,EACfkBAAQ;;;AChQf,WAAW,UAAU;;;;;;;;;;;;ACDrB,IAAA,wBAAA,MAAA;EAAA,oNAAA;EAAA;AAAA,CAAA;ACAA,IAAa;AAAb,IAqBa;AArBb,IAqCa;AArCb,IAqDa;AArDb,IAAA,gBAAA,MAAA;EAAA,yMAAA;AAgEA,0BAAA;AAhEa,gBAAN,MAAgB;aAAA;;;;;;;MAKtB,YAAY,QAAQC,OAAM;AACzB,aAAK,SAAS;AACd,YAAI,OAAOA,UAAS,UAAU;AAC7B,eAAK,OAAO,EAAE,SAASA,MAAK;QAC7B,WAAWA,OAAM;AAChB,eAAK,OAAOA;QACb,OAAO;AACN,eAAK,OAAO,EAAE,SAAS,UAAU,MAAM,GAAG;QAC3C;MACD;MAEA,WAAW;AACV,eAAO,KAAK,UAAU,KAAK,IAAI;MAChC;IACD;AAEa,eAAN,MAAe;aAAA;;;;;;;MAKrB,YAAY,QAAQ,UAAU;AAC7B,aAAK,SAAS;AACd,aAAK,WAAW;MACjB;IACD;AAOa,qBAAN,cAA6B,MAAM;aAAA;;;;;;;;MAMzC,YAAY,QAAQC,OAAM,SAAS;AAClC,cAAM,OAAO;AACb,aAAK,SAAS;AACd,aAAK,OAAOA;MACb;IACD;AAKa,oBAAN,MAAoB;aAAA;;;;;;;MAK1B,YAAY,QAAQ,MAAM;AACzB,aAAK,SAAS;AACd,aAAK,OAAO;MACb;IACD;EAAA;AAAA,CAAA;AC9DA,IAGa;AAHb,IAAA,iBAAA,MAAA;EAAA,2MAAA;AAGa,sBAAkB,CAAC,CAAC,WAAW,SAAS,UAAU;EAAA;AAAA,CAAA;ACsExD,SAAS,mBAAmB,OAAO,IAAI;AAC7C,MAAI;AACH,iBAAa;AACb,WAAO,MAAM,IAAI,IAAI,OAAO,EAAE,IAAI,GAAG;EACtC,UAAA;AAGC,QAAI,CAAC,iBAAiB;AACrB,mBAAa;IACd;EACD;AACD;AAXgB;AAzEhB,IAOI;AAPJ,IAUI;AAVJ,IAAA,aAAA,MAAA;EAAA,yMAAA;AAIA,mBAAA;AAGI,iBAAa;AAKjB,WAAO,kBAAkB,EACvB,KAAK,CAAC,UAAW,MAAM,IAAI,MAAM,kBAAkB,CAAE,EACrD,MAAM,MAAM;IAIb,CAAC;EAAA;AAAA,CAAA;ACZK,SAAS,cAAc,YAAYC,UAAS;AAClD,SAAO;IACN,GAAG;IACH,SAAS;MACR,GAAG,WAAW;MACd,SAAAA;IACD;EACD;AACD;AARgB;AANhB,IAAA,cAAA,MAAA;EAAA,0MAAA;AAgBA,eAAA;EAAA;AAAA,CAAA;ACdA,SAAS,kBAAkB,MAAM,IAAI;AACnC,QAAM,aAAa,KAAK,MAAM,OAAO;AACrC,QAAM,WAAW,GAAG,MAAM,OAAO;AACjC,aAAW,IAAI;AACf,SAAO,WAAW,CAAC,MAAM,SAAS,CAAC,GAAG;AACpC,eAAW,MAAM;AACjB,aAAS,MAAM;EACjB;AACA,MAAI,IAAI,WAAW;AACnB,SAAO,IAAK,YAAW,CAAC,IAAI;AAC5B,SAAO,WAAW,OAAO,QAAQ,EAAE,KAAK,GAAG;AAC7C;AAXS;AAYT,SAAS,cAAc,OAAO;AAC5B,MAAI,WAAW,QAAQ;AACrB,WAAO,WAAW,OAAO,KAAK,KAAK,EAAE,SAAS,QAAQ;EACxD;AACA,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAU,OAAO,aAAa,MAAM,CAAC,CAAC;EACxC;AACA,SAAO,KAAK,MAAM;AACpB;AATS;AAUT,SAAS,cAAc,SAAS;AAC9B,MAAI,WAAW,QAAQ;AACrB,UAAM,SAAS,WAAW,OAAO,KAAK,SAAS,QAAQ;AACvD,WAAO,IAAI,WAAW,MAAM;EAC9B;AACA,QAAM,SAAS,KAAK,OAAO;AAC3B,QAAM,QAAQ,IAAI,WAAW,OAAO,MAAM;AAC1C,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAM,CAAC,IAAI,OAAO,WAAW,CAAC;EAChC;AACA,SAAO;AACT;AAXS;AAxBT,IAAMC;AAAN,IACMC;AADN,IAAA,aAAA,MAAA;EAAA,8CAAA;AAAMD,oBAAe,IAAI,YAAY;AAC/BC,oBAAe,IAAI,YAAY;EAAA;AAAA,CAAA;ACarC,SAAS,QAAQ,KAAK;AACpB,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,QAAI,CAAC,EAAE;EACT;AACF;AAJS;AAKT,SAAS,WAAW;AAClB,MAAIC;AACJ,MAAI;AACJ,MAAI,UAAU,IAAI,QAAQ,CAAC,KAAK,QAAQ;AACtCA,eAAU;AACV,aAAS;EACX,CAAC;AACD,SAAO,EAAE,SAAS,SAAAA,UAAS,OAAO;AACpC;AARS;AAnBT,IAAI;AAAJ,IACI;AADJ,IAEI;AAFJ,IAGI;AAHJ,IAII;AAJJ,IAKI;AALJ,IAMI;AANJ,IAOI;AAPJ,IAQI;AARJ,IASM;AATN,IAAA,cAAA,MAAA;EAAA,+CAAA;AAAI,eAAW,MAAM;AACjB,eAAW,MAAM,UAAU;AAC3B,iBAAa,MAAM;AACnB,sBAAkB,OAAO;AACzB,qBAAiB,OAAO;AACxB,uBAAmB,OAAO;AAC1B,sBAAkB,MAAM;AACxB,uBAAmB,OAAO;AAC1B,oBAAgB,OAAO;AACrB,WAAO,6BAAM;IACnB,GADa;EACb;AAAA,CAAA;ACVA,SAAS,OAAO,OAAO;AACrB,SAAO,UAAU,KAAK;AACxB;AAFS;AAGT,SAAS,eAAe,GAAG,GAAG;AAC5B,SAAO,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,MAAM,QAAQ,OAAO,MAAM,YAAY,OAAO,MAAM;AAC1F;AAFS;AAGT,SAAS,YAAY,OAAO;AAC1B,SAAO,CAAC,eAAe,OAAO,KAAK,CAAC;AACtC;AAFS;AANT,IAAA,gBAAA,MAAA;EAAA,iDAAA;EAAA;AAAA,CAAA;ACIA,SAAS,QAAQC,OAAM,MAAM;AAC3B,MAAI,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,IAAK,QAAO;AAC/C,MAAI,MAAM,IAAI,IAAIA,OAAM,QAAQ;AAChC,QAAM,IAAI,IAAI,MAAM,GAAG;AACvB,SAAO,IAAI,aAAa,SAAS,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,OAAO,IAAI;AACzF;AALS;AAMT,SAAS,eAAe,MAAM,gBAAgB;AAC5C,MAAI,SAAS,OAAO,mBAAmB,SAAU,QAAO;AACxD,MAAI,mBAAmB,SAAS;AAC9B,WAAO,KAAK,SAAS,GAAG,IAAI,KAAK,MAAM,GAAG,EAAE,IAAI;EAClD,WAAW,mBAAmB,YAAY,CAAC,KAAK,SAAS,GAAG,GAAG;AAC7D,WAAO,OAAO;EAChB;AACA,SAAO;AACT;AARS;AAST,SAAS,gBAAgB,UAAU;AACjC,SAAO,SAAS,MAAM,KAAK,EAAE,IAAI,SAAS,EAAE,KAAK,KAAK;AACxD;AAFS;AAGT,SAAS,cAAc,QAAQ;AAC7B,aAAWC,QAAO,QAAQ;AACxB,WAAOA,IAAG,IAAI,mBAAmB,OAAOA,IAAG,CAAC;EAC9C;AACA,SAAO;AACT;AALS;AAMT,SAAS,eAAe,KAAK,UAAU,wBAAwB,aAAa,OAAO;AACjF,QAAM,UAAU,IAAI,IAAI,GAAG;AAC3B,SAAO,eAAe,SAAS,gBAAgB;IAC7C,OAAO,IAAI,MAAM,QAAQ,cAAc;MACrC,IAAI,KAAKA,MAAK;AACZ,YAAIA,SAAQ,SAASA,SAAQ,YAAYA,SAAQ,OAAO;AACtD,iBAAO,CAAC,UAAU;AAChB,mCAAuB,KAAK;AAC5B,mBAAO,IAAIA,IAAG,EAAE,KAAK;UACvB;QACF;AACA,iBAAS;AACT,cAAM,QAAQ,QAAQ,IAAI,KAAKA,IAAG;AAClC,eAAO,OAAO,UAAU,aAAa,MAAM,KAAK,GAAG,IAAI;MACzD;IACF,CAAC;IACD,YAAY;IACZ,cAAc;EAChB,CAAC;AACD,QAAM,yBAAyB,CAAC,QAAQ,YAAY,UAAU,YAAY,QAAQ;AAClF,MAAI,WAAY,wBAAuB,KAAK,MAAM;AAClD,aAAW,YAAY,wBAAwB;AAC7C,WAAO,eAAe,SAAS,UAAU;MACvC,MAAM;AACJ,iBAAS;AACT,eAAO,IAAI,QAAQ;MACrB;MACA,YAAY;MACZ,cAAc;IAChB,CAAC;EACH;AACA;AACE,YAAQ,OAAO,IAAI,4BAA4B,CAAC,IAAI,CAAC,OAAO,MAAM,YAAY;AAC5E,aAAO,QAAQ,KAAK,IAAI;IAC1B;AACA,YAAQ,aAAa,OAAO,IAAI,4BAA4B,CAAC,IAAI,CAAC,OAAO,MAAM,YAAY;AACzF,aAAO,QAAQ,IAAI,cAAc,IAAI;IACvC;EACF;AACA,MAAI,CAAC,YAAY;AACf,iBAAa,OAAO;EACtB;AACA,SAAO;AACT;AA3CS;AA4CT,SAAS,aAAa,KAAK;AACzB,2BAAyB,GAAG;AAC5B,SAAO,eAAe,KAAK,QAAQ;IACjC,MAAM;AACJ,YAAM,IAAI;QACR;MACF;IACF;EACF,CAAC;AACH;AATS;AAUT,SAAS,eAAe,KAAK;AAC3B,2BAAyB,GAAG;AAC5B,aAAW,YAAY,CAAC,UAAU,cAAc,GAAG;AACjD,WAAO,eAAe,KAAK,UAAU;MACnC,MAAM;AACJ,cAAM,IAAI,MAAM,qBAAqB,QAAQ,sCAAsC;MACrF;IACF,CAAC;EACH;AACF;AATS;AAUT,SAAS,yBAAyB,KAAK;AACrC;AACE,QAAI,OAAO,IAAI,4BAA4B,CAAC,IAAI,CAAC,OAAO,MAAM,YAAY;AACxE,aAAO,QAAQ,IAAI,IAAI,GAAG,GAAG,IAAI;IACnC;EACF;AACF;AANS;AAQT,SAAS,SAAS,OAAO,OAAO;AAC9B,SAAO;IACL,WAAW,SAAS,OAAO,KAAK,EAAE;EACpC;AACF;AAJS;AAKT,SAAS,SAAS,OAAO,QAAQ,MAAM;AACrC,MAAI,OAAO;AACX,QAAM,cAA8B,oBAAI,IAAI;AAC5C,WAASC,KAAI,WAAW;AACtB,QAAI,eAAe,OAAO,SAAS,GAAG;AACpC,cAAQ;AACR,UAAI,MAAM;AACR,cAAM,YAAY,CAAC,iBAAiB;AACpC,mBAAW,cAAc,aAAa;AACpC,qBAAW,CAAC,EAAE;AACd,2BAAiB,KAAK,YAAY,KAAK;QACzC;AACA,YAAI,WAAW;AACb,mBAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK,GAAG;AACnD,6BAAiB,CAAC,EAAE,CAAC,EAAE,iBAAiB,IAAI,CAAC,CAAC;UAChD;AACA,2BAAiB,SAAS;QAC5B;MACF;IACF;EACF;AAjBSA;AAkBT,WAAS,OAAO,IAAI;AAClBA,SAAI;;MAEF;IACF,CAAC;EACH;AALS;AAMT,WAAS,UAAU,KAAK,aAAa,MAAM;AACzC,UAAM,aAAa,CAAC,KAAK,UAAU;AACnC,gBAAY,IAAI,UAAU;AAC1B,QAAI,YAAY,SAAS,GAAG;AAC1B,aAAO,MAAMA,MAAK,MAAM,KAAK;IAC/B;AACA;;MAEE;IACF;AACA,WAAO,MAAM;AACX,kBAAY,OAAO,UAAU;AAC7B,UAAI,YAAY,SAAS,KAAK,MAAM;AAClC,aAAK;AACL,eAAO;MACT;IACF;EACF;AAjBS;AAkBT,SAAO,EAAE,KAAAA,MAAK,QAAQ,UAAU;AAClC;AA9CS;AA+CT,SAAS,UAAU,UAAU;AAC3B,WAAS,SAAS,QAAQ,MAAM;AAC9B,QAAI,CAAC,OAAQ;AACb,eAAWD,QAAO,QAAQ;AACxB,UAAIA,KAAI,CAAC,MAAM,OAAO,SAAS,IAAIA,IAAG,EAAG;AACzC,YAAM,SAAS,CAAC,GAAG,SAAS,OAAO,CAAC;AACpC,YAAM,OAAO,yBAAyBA,MAAK,MAAM,MAAM,KAAK,YAAY,GAAG,CAAC,CAAC,KAAK,qBAAqB,OAAO,KAAK,IAAI,CAAC;AACxH,YAAM,IAAI,MAAM,mBAAmBA,IAAG,IAAI,OAAO,OAAO,IAAI,KAAK,EAAE,KAAK,IAAI,GAAG;IACjF;EACF;AARS;AAST,SAAO;AACT;AAXS;AAYT,SAAS,yBAAyBA,MAAK,MAAM,OAAO;AAClD,QAAM,kBAAkB,CAAC;AACzB,MAAI,qBAAqB,IAAIA,IAAG,GAAG;AACjC,oBAAgB,KAAK,UAAU,GAAG,EAAE;EACtC;AACA,MAAI,mBAAmB,IAAIA,IAAG,GAAG;AAC/B,oBAAgB,KAAK,QAAQ,GAAG,EAAE;EACpC;AACA,MAAI,4BAA4B,IAAIA,IAAG,GAAG;AACxC,oBAAgB,KAAK,iBAAiB,GAAG,EAAE;EAC7C;AACA,MAAI,0BAA0B,IAAIA,IAAG,GAAG;AACtC,oBAAgB,KAAK,eAAe,GAAG,EAAE;EAC3C;AACA,MAAI,qBAAqB,IAAIA,IAAG,GAAG;AACjC,oBAAgB,KAAK,UAAU,GAAG,EAAE;EACtC;AACA,MAAI,gBAAgB,SAAS,GAAG;AAC9B,WAAO,IAAIA,IAAG,0BAA0B,gBAAgB,MAAM,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,gBAAgB,SAAS,IAAI,SAAS,EAAE,GAAG,gBAAgB,GAAG,EAAE,CAAC;EACrJ;AACF;AApBS;AApKT,IAGM;AAHN,IAmGM;AAnGN,IAyLM;AAzLN,IAiMM;AAjMN,IAkMM;AAlMN,IAmMM;AAnMN,IAoMM;AApMN,IAkNM;AAlNN,IAmNM;AAnNN,IAoNM;AApNN,IAqNM;AArNN,IAsNM;AAtNN,IAAA,eAAA,MAAA;EAAA,gDAAA;AAAA,gBAAA;AACA,kBAAA;AAEM,eAAW,IAAI,IAAI,uBAAuB;AAgG1C,uBAAmB,CAAC;AAsFpB,2BAAuC,oBAAI,IAAI;MACnD;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;AACK,yBAAqC,oBAAI,IAAI,CAAC,GAAG,sBAAsB,SAAS,CAAC;AACjF,kCAA8C,oBAAI,IAAI,CAAC,GAAG,oBAAoB,CAAC;AAC/E,gCAA4C,oBAAI,IAAI,CAAC,GAAG,6BAA6B,WAAW,SAAS,CAAC;AAC1G,2BAAuC,oBAAI,IAAI;MACnD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;AACK,8BAA0B,UAAU,oBAAoB;AACxD,4BAAwB,UAAU,kBAAkB;AACpD,qCAAiC,UAAU,2BAA2B;AACtE,mCAA+B,UAAU,yBAAyB;AAClE,8BAA0B,UAAU,oBAAoB;EAAA;AAAA,CAAA;ACtN9D,SAAS,4BAA4B,MAAM;AACzC;AACE,UAAM,IAAI,MAAM,kDAAkD;EACpE;AACF;AAJS;AAOT,SAAS,YAAY,OAAO,SAAS;AACnC,QAAM,MAAM,OAAO,SAAS,EAAE;AAC9B,QAAME,WAAU,UAAU,aAAa;AACvCA,WAAQ,YAAY;AACpB,MAAIC,WAAU;AACd,MAAI,OAAO;AACX,SAAOD,SAAQ,KAAK,GAAG,GAAG;AACxB,UAAM,IAAIA,SAAQ,YAAY;AAC9B,UAAM,KAAK,IAAI,CAAC;AAChBC,gBAAW,IAAI,UAAU,MAAM,CAAC,KAAK,OAAO,MAAM,UAAU,OAAO,MAAM,WAAW;AACpF,WAAO,IAAI;EACb;AACA,SAAOA,WAAU,IAAI,UAAU,IAAI;AACrC;AAbS;AAeT,SAAS,gBAAgBC,IAAG;AAC1B,gBAAcA;AAChB;AAFS;AAGT,SAAS,WAAWJ,MAAK;AACvB,QAAM,cAAc,wBAAwB;AAC5C,QAAM;;IAEJ,YAAY,IAAIA,IAAG;;AAErB,SAAO;AACT;AAPS;AAQT,SAAS,WAAWA,MAAKK,WAAS;AAChC,0BAAwB,EAAE,IAAIL,MAAKK,SAAO;AAC1C,SAAOA;AACT;AAHS;AAIT,SAAS,wBAAwB,MAAM;AACrC,MAAI,gBAAgB,MAAM;AACxB,gCAA4B;EAC9B;AACA,SAAO,YAAY,MAAM,IAAI,IAAI,mBAAmB,WAAW,KAAK,MAAM;AAC5E;AALS;AAMT,SAAS,KAAK,IAAI;AAChB,gBAAc,EAAE,GAAG,aAAa,GAAG,MAAM,GAAG,KAAK;AACnD;AAFS;AAGT,SAAS,MAAM;AACb;EACA,YAAY;AACd;AAHS;AAIT,SAAS,mBAAmB,cAAc;AACxC,MAAI,SAAS,aAAa;AAC1B,SAAO,WAAW,MAAM;AACtB,UAAM,cAAc,OAAO;AAC3B,QAAI,gBAAgB,MAAM;AACxB,aAAO;IACT;AACA,aAAS,OAAO;EAClB;AACA,SAAO;AACT;AAVS;AAlDT,IAKM;AALN,IAMM;AANN,IAqBI;AArBJ,IAAA,eAAA,MAAA;EAAA,gDAAA;AAKM,iBAAa;AACb,oBAAgB;AAelB,kBAAc;EAAA;AAAA,CAAA;ACgDlB,SAAS,qBAAqB,MAAM;AAClC,SAAO,uBAAuB,SAAS,IAAI;AAC7C;AAFS;AAIT,SAAS,iBAAiB,MAAM;AAC9B,SAAO,eAAe,SAAS,IAAI;AACrC;AAFS;AAGT,SAAS,EAAEC,IAAG;AACZ,MAAIC,IAAG,GAAGC,KAAI;AACd,MAAI,YAAY,OAAOF,MAAK,YAAY,OAAOA,GAAGE,OAAKF;WAC9C,YAAY,OAAOA,GAAG,KAAI,MAAM,QAAQA,EAAC,GAAG;AACnD,QAAIG,KAAIH,GAAE;AACV,SAAKC,KAAI,GAAGA,KAAIE,IAAGF,KAAKD,IAAEC,EAAC,MAAM,IAAI,EAAED,GAAEC,EAAC,CAAC,OAAOC,OAAMA,MAAK,MAAMA,MAAK;EAC1E,MAAO,MAAK,KAAKF,GAAGA,IAAE,CAAC,MAAME,OAAMA,MAAK,MAAMA,MAAK;AACnD,SAAOA;AACT;AARS;AAST,SAAS,SAAS;AAChB,WAASF,IAAGC,IAAG,IAAI,GAAGC,KAAI,IAAIC,KAAI,UAAU,QAAQ,IAAIA,IAAG,IAAK,EAACH,KAAI,UAAU,CAAC,OAAOC,KAAI,EAAED,EAAC,OAAOE,OAAMA,MAAK,MAAMA,MAAKD;AAC3H,SAAOC;AACT;AAHS;AAUT,SAAS,KAAK,MAAM,OAAO,aAAa,OAAO;AAC7C,MAAI,SAAS,YAAY,UAAU,eAAe;AAChD,iBAAa;EACf;AACA,MAAI,SAAS,QAAQ,CAAC,SAAS,WAAY,QAAO;AAClD,QAAM,aAAa,QAAQ,gBAAgB,aAAa,IAAI,EAAE,IAAI,KAAK,KAAK;AAC5E,QAAM,aAAa,aAAa,KAAK,KAAK,YAAY,YAAY,IAAI,CAAC;AACvE,SAAO,IAAI,IAAI,GAAG,UAAU;AAC9B;AARS;AAST,SAAS,KAAK,OAAO;AACnB,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO,OAAO,KAAK;EACrB,OAAO;AACL,WAAO,SAAS;EAClB;AACF;AANS;AAQT,SAAS,SAAS,OAAOE,OAAM,YAAY;AACzC,MAAI,YAAY,SAAS,OAAO,KAAK,KAAK;AAC1C,MAAIA,OAAM;AACR,gBAAY,YAAY,YAAY,MAAMA,QAAOA;EACnD;AACA,MAAI,YAAY;AACd,aAASV,QAAO,YAAY;AAC1B,UAAI,WAAWA,IAAG,GAAG;AACnB,oBAAY,YAAY,YAAY,MAAMA,OAAMA;MAClD,WAAW,UAAU,QAAQ;AAC3B,YAAI,MAAMA,KAAI;AACd,YAAI,IAAI;AACR,gBAAQ,IAAI,UAAU,QAAQA,MAAK,CAAC,MAAM,GAAG;AAC3C,cAAI,IAAI,IAAI;AACZ,eAAK,MAAM,KAAK,WAAW,SAAS,UAAU,IAAI,CAAC,CAAC,OAAO,MAAM,UAAU,UAAU,WAAW,SAAS,UAAU,CAAC,CAAC,IAAI;AACvH,yBAAa,MAAM,IAAI,KAAK,UAAU,UAAU,GAAG,CAAC,KAAK,UAAU,UAAU,IAAI,CAAC;UACpF,OAAO;AACL,gBAAI;UACN;QACF;MACF;IACF;EACF;AACA,SAAO,cAAc,KAAK,OAAO;AACnC;AAxBS;AAyBT,SAAS,cAAc,QAAQ,YAAY,OAAO;AAChD,MAAI,YAAY,YAAY,iBAAiB;AAC7C,MAAI,MAAM;AACV,WAASA,QAAO,QAAQ;AACtB,QAAI,QAAQ,OAAOA,IAAG;AACtB,QAAI,SAAS,QAAQ,UAAU,IAAI;AACjC,aAAO,MAAMA,OAAM,OAAO,QAAQ;IACpC;EACF;AACA,SAAO;AACT;AAVS;AAWT,SAAS,YAAY,MAAM;AACzB,MAAI,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AACtC,WAAO,KAAK,YAAY;EAC1B;AACA,SAAO;AACT;AALS;AAMT,SAAS,SAAS,OAAO,QAAQ;AAC/B,MAAI,QAAQ;AACV,QAAI,YAAY;AAChB,QAAI;AACJ,QAAI;AACJ,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,sBAAgB,OAAO,CAAC;AACxB,yBAAmB,OAAO,CAAC;IAC7B,OAAO;AACL,sBAAgB;IAClB;AACA,QAAI,OAAO;AACT,cAAQ,OAAO,KAAK,EAAE,WAAW,sBAAsB,EAAE,EAAE,KAAK;AAChE,UAAI,SAAS;AACb,UAAI,SAAS;AACb,UAAI,aAAa;AACjB,UAAI,iBAAiB,CAAC;AACtB,UAAI,eAAe;AACjB,uBAAe,KAAK,GAAG,OAAO,KAAK,aAAa,EAAE,IAAI,WAAW,CAAC;MACpE;AACA,UAAI,kBAAkB;AACpB,uBAAe,KAAK,GAAG,OAAO,KAAK,gBAAgB,EAAE,IAAI,WAAW,CAAC;MACvE;AACA,UAAI,cAAc;AAClB,UAAI,aAAa;AACjB,YAAM,MAAM,MAAM;AAClB,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,YAAIW,KAAI,MAAM,CAAC;AACf,YAAI,YAAY;AACd,cAAIA,OAAM,OAAO,MAAM,IAAI,CAAC,MAAM,KAAK;AACrC,yBAAa;UACf;QACF,WAAW,QAAQ;AACjB,cAAI,WAAWA,IAAG;AAChB,qBAAS;UACX;QACF,WAAWA,OAAM,OAAO,MAAM,IAAI,CAAC,MAAM,KAAK;AAC5C,uBAAa;QACf,WAAWA,OAAM,OAAOA,OAAM,KAAK;AACjC,mBAASA;QACX,WAAWA,OAAM,KAAK;AACpB;QACF,WAAWA,OAAM,KAAK;AACpB;QACF;AACA,YAAI,CAAC,cAAc,WAAW,SAAS,WAAW,GAAG;AACnD,cAAIA,OAAM,OAAO,eAAe,IAAI;AAClC,yBAAa;UACf,WAAWA,OAAM,OAAO,MAAM,MAAM,GAAG;AACrC,gBAAI,eAAe,IAAI;AACrB,kBAAI,OAAO,YAAY,MAAM,UAAU,aAAa,UAAU,EAAE,KAAK,CAAC;AACtE,kBAAI,CAAC,eAAe,SAAS,IAAI,GAAG;AAClC,oBAAIA,OAAM,KAAK;AACb;gBACF;AACA,oBAAI,WAAW,MAAM,UAAU,aAAa,CAAC,EAAE,KAAK;AACpD,6BAAa,MAAM,WAAW;cAChC;YACF;AACA,0BAAc,IAAI;AAClB,yBAAa;UACf;QACF;MACF;IACF;AACA,QAAI,eAAe;AACjB,mBAAa,cAAc,aAAa;IAC1C;AACA,QAAI,kBAAkB;AACpB,mBAAa,cAAc,kBAAkB,IAAI;IACnD;AACA,gBAAY,UAAU,KAAK;AAC3B,WAAO,cAAc,KAAK,OAAO;EACnC;AACA,SAAO,SAAS,OAAO,OAAO,OAAO,KAAK;AAC5C;AA3ES;AA+ET,SAASC,SAAQ;AACf,cAAY,MAAM,cAAc;AAChC,eAAa;AACf;AAHS,OAAAA,QAAA;AAIT,SAAS,gBAAgB;AACvB,QAAMC,UAAQ,IAAI,MAAM;;mCAES;AACjCA,EAAAA,QAAM,OAAO;AACb,QAAMA;AACR;AANS;AAOT,SAAS,yBAAyB;AAChC;AACE,YAAQ,KAAK,6CAA6C;EAC5D;AACF;AAJS;AAifT,SAAS,OAAOC,YAAWC,WAAU,CAAC,GAAG;AACvC,SAAO,SAAS;;IAEdD;IACAC;EACF;AACF;AANS;AAOT,SAAS,WAAW,OAAO,UAAU,SAAS,QAAQC,SAAQ,GAAG;AAC/D,MAAI,QAAQ;AACV,UAAM,QAAQ,SAAS,MAAM,OAAO,MAAM;EAC5C;AACA,MAAI,MAAM,OAAO;AACf,UAAM,QAAQ,KAAK,MAAM,KAAK;EAChC;AACA,MAAI,YAAY,SAAS;AACvB,UAAM,QAAQ,SAAS,MAAM,OAAO,UAAU,OAAO;EACvD;AACA,MAAI,WAAW;AACf,MAAI;AACJ,QAAM,WAAWA,SAAQ,2BAA2B;AACpD,QAAM,aAAaA,SAAQ,qCAAqC;AAChE,QAAM,YAAYA,SAAQ,sBAAsB;AAChD,OAAK,QAAQ,OAAO;AAClB,QAAI,OAAO,MAAM,IAAI,MAAM,WAAY;AACvC,QAAI,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,IAAK;AACxC,QAAI,6BAA6B,KAAK,IAAI,EAAG;AAC7C,QAAI,QAAQ,MAAM,IAAI;AACtB,QAAI,WAAW;AACb,aAAO,KAAK,YAAY;IAC1B;AACA,QAAI,UAAU;AACZ,UAAI,SAAS,kBAAkB,SAAS,kBAAkB;AACxD,eAAO,SAAS,iBAAiB,UAAU;AAC3C,YAAI,MAAM,IAAI,EAAG;MACnB;IACF;AACA,gBAAY,KAAK,MAAM,OAAO,WAAW,qBAAqB,IAAI,CAAC;EACrE;AACA,SAAO;AACT;AAhCS;AAiCT,SAAS,WAAW,OAAON,OAAM,YAAY;AAC3C,MAAI,SAAS,SAAS,OAAOA,OAAM,UAAU;AAC7C,SAAO,SAAS,WAAW,YAAY,QAAQ,IAAI,CAAC,MAAM;AAC5D;AAHS;AAIT,SAAS,KAAK,UAAU,SAAS,MAAM,YAAY,aAAa;AAC9D,MAAI,UAAU,QAAQ,UAAU,IAAI;AACpC,MAAI,YAAY,MAAM;AACpB,cAAU,QAAQ,UAAU;EAC9B;AACA,MAAI,YAAY,QAAQ;AACtB,YAAQ,UAAU,UAAU;EAC9B;AACF;AARS;AAST,SAAS,kBAAkB,wBAAwB;AACjD,MAAI,wBAAwB;AAC1B,WAAO,uBAAuB,WAAW,SAAS,yBAAyB,MAAM,KAAK,sBAAsB;EAC9G;AACA,SAAO,CAAC;AACV;AALS;AA1xBT,IACM;AADN,IAEM;AAFN,IAGM;AAHN,IAIM;AAJN,IAKM;AALN,IAMM;AANN,IAOM;AAPN,IAQM;AARN,IASM;AATN,IAUM;AAVN,IAWM;AAXN,IAYM;AAZN,IAaM;AAbN,IAcM;AAdN,IAeM;AAfN,IAgBM;AAhBN,IAiBM;AAjBN,IAkBM;AAlBN,IAmBM;AAnBN,IAoBM;AApBN,IAqBM;AArBN,IAsBM;AAtBN,IAuBM;AAvBN,IAwBM;AAxBN,IAyBM;AAzBN,IA0BM;AA1BN,IA8BM;AA9BN,IA+BM;AA/BN,IAgCM;AAhCN,IAiCM;AAjCN,IAkCM;AAlCN,IAmCM;AAnCN,IAoCM;AApCN,IAqCM;AArCN,IAsCM;AAtCN,IAuCM;AAvCN,IAwEM;AAxEN,IAyFM;AAzFN,IA+GM;AA/GN,IAsOM;AAtON,IAuOM;AAvON,IAwOI;AAxOJ,IAyPM;AAzPN,IA6rBM;AA7rBN,IAouBM;AApuBN,IAAA,cAAA,MAAA;EAAA,8CAAA;AAAA,iBAAA;AACM,cAAU,KAAK;AACf,aAAS,KAAK;AACd,oBAAgB,KAAK;AACrB,mBAAe,KAAK;AACpB,oBAAgB,KAAK;AACrB,kBAAc,KAAK;AACnB,sBAAkB,KAAK;AACvB,cAAU,KAAK;AACf,mBAAe,KAAK;AACpB,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,kBAAc,KAAK;AACnB,YAAQ,KAAK;AACb,gBAAY,KAAK;AACjB,iBAAa,KAAK;AAClB,yBAAqB,KAAK;AAC1B,qBAAiB,KAAK;AACtB,kBAAc,KAAK;AACnB,uBAAmB,KAAK;AACxB,kBAAc,KAAK;AACnB,2BAAuB,KAAK;AAC5B,YAAQ,KAAK;AACb,kBAAc,KAAK;AACnB,mBAAe,OAAO,QAAQ;AAC9B,mBAAe,OAAO,cAAc;AACpC,qBAAiB,IAAI,MAAM,2BAA2B,MAAM;aAAA;;;MAChE,OAAO;MACP,UAAU;IACZ,EAAE;AACI,mBAAe;AACf,sBAAkB;AAClB,2BAAuB;AACvB,oBAAgB;AAChB,sBAAkB,CAAC;AACnB,4BAAwB;AACxB,sCAAkC,KAAK;AACvC,uBAAmB,KAAK;AACxB,oBAAgB,OAAO;AACvB,6BAAyB;MAC7B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;AAIM,qBAAiB,CAAC,cAAc,WAAW;AAiB3C,mBAAe;MACnB,WAA2B,oBAAI,IAAI;QACjC,CAAC,MAAM,KAAK;QACZ,CAAC,OAAO,IAAI;MACd,CAAC;IACH;AAiBM,iBAAa,CAAC,GAAG,sBAAmB;AAuHpC,iBAAa,OAAO,eAAe;AACnC,kBAAc,OAAO,aAAa;AACpC,iBAAa;AAiBX,eAAN,MAAM,UAAS;aAAA;;;;;;;MAKb,OAAO,CAAC;;;;;MAKR,cAAc;;;;;MAKd,qBAAqB;;;;;MAKrB;;MAEA;;;;;MAKA,UAAU;;;;;;;MAOV;;;;;;;MAOA;;;;;MAKA,YAAYO,SAAQ,QAAQ;AAC1B,aAAK,UAAU;AACf,aAAK,SAASA;AACd,aAAK,QAAQ,SAAS,EAAE,GAAG,OAAO,MAAM,IAAI,EAAE,cAAc,OAAO;AACnE,aAAK,OAAO,SAAS,OAAO,OAAO;MACrC;;;;MAIA,KAAK,IAAI;AACP,cAAM,OAAO,IAAI,UAAS,KAAK,QAAQ,IAAI;AAC3C,aAAK,OAAO;AACZ,aAAK,KAAK,KAAK,IAAI;AACnB,aAAK,MAAM,EAAE;MACf;;;;MAIA,MAAM,IAAI;AACR,aAAK,KAAK,KAAK,UAAU;AACzB,aAAK,MAAM,EAAE;AACb,aAAK,KAAK,KAAK,WAAW;MAC5B;;;;;;MAMA,MAAM,IAAI;AACR,cAAM,QAAQ,IAAI,UAAS,KAAK,QAAQ,IAAI;AAC5C,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,SAAS;AACf,wBAAgB;UACd,GAAG;UACH,GAAG;UACH,GAAG;UACH,GAAG;QACL,CAAC;AACD,cAAM,SAAS,GAAG,KAAK;AACvB,wBAAgB,MAAM;AACtB,YAAI,kBAAkB,SAAS;AAC7B,cAAI,MAAM,OAAO,SAAS,QAAQ;AAChC,0BAAc;UAChB;AACA,iBAAO,MAAM,MAAM;UACnB,CAAC;AACD,gBAAM,UAAU;QAClB;AACA,eAAO;MACT;;;;;;;;MAQA,UAAU,IAAI,cAAc;AAC1B,aAAK;AACL,cAAM,QAAQ,KAAK,MAAM,EAAE;AAC3B,cAAM,qBAAqB;AAC3B,YAAI;MACN;;;;;;;;;;MAUA,OAAO,OAAO,IAAI,UAAU,SAAS,QAAQD,QAAO;AAClD,cAAM,EAAE,OAAO,GAAG,aAAa,IAAI;AACnC,aAAK,KAAK,UAAU,WAAW,cAAc,UAAU,SAAS,QAAQA,MAAK,CAAC,GAAG;AACjF,aAAK,MAAM,CAAC,aAAa;AACvB,mBAAS,MAAM,eAAe;AAC9B,aAAG,QAAQ;QACb,CAAC;AACD,aAAK,KAAK,WAAW;MACvB;;;;;;;;;MASA,OAAO,OAAOvB,OAAM,UAAU,SAAS,QAAQuB,QAAO;AACpD,aAAK,KAAK,KAAK,UAAU,WAAW,OAAO,UAAU,SAAS,QAAQA,MAAK,CAAC,EAAE;AAC9E,cAAM,QAAQ,wBAAC,UAAU,OAAO,EAAE,MAAM,MAAME,OAAM,MAAM;AACxD,cAAI,WAAW,OAAO;AACpB,oBAAQ,MAAM;UAChB;AACA,cAAI,UAAU,KAAK,MAAM,cAAc;AACrC,qBAAS,KAAK,KAAK,WAAW;UAChC;AACA,mBAAS,KAAK,KAAK,IAAIA,MAAK,WAAW;AACvC,cAAI,MAAM;AACR,qBAAS,KAAK,CAAC,UAAU,MAAM,KAAK,IAAI,CAAC;UAC3C;QACF,GAXc;AAYd,YAAI,OAAOzB,UAAS,YAAY;AAC9B,eAAK,MAAM,CAAC,aAAa;AACvB,kBAAM0B,MAAK,IAAI,UAAS,KAAK,QAAQ,IAAI;AACzC1B,kBAAK0B,GAAE;AACP,gBAAI,KAAK,OAAO,SAAS,SAAS;AAChC,qBAAOA,IAAG,uBAAuB,EAAE,KAAK,CAAC,YAAY;AACnD,sBAAM,UAAU,QAAQ,KAAK,WAAW,WAAW,EAAE,GAAG,OAAO;cACjE,CAAC;YACH,OAAO;AACL,oBAAM,UAAUA,IAAG,iBAAiB;AACpC,oBAAM,UAAU,QAAQ,KAAK,WAAW,WAAW,EAAE,GAAG,OAAO;YACjE;UACF,CAAC;QACH,OAAO;AACL,gBAAM,MAAM1B,OAAM,EAAE,MAAAA,MAAK,CAAC;QAC5B;MACF;;;;MAIA,MAAM,IAAI;AACR,cAAM,OAAO,KAAK,SAAS;AAC3B,cAAM,QAAQ,wBAAC,SAAS;AACtB,eAAK,OAAO,UAAU,MAAM,IAAI;QAClC,GAFc;AAGd,aAAK,MAAM,CAAC,aAAa;AACvB,gBAAM0B,MAAK,IAAI,UAAS,SAAS,QAAQ,QAAQ;AACjD,aAAGA,GAAE;AACL,cAAI,SAAS,OAAO,SAAS,SAAS;AACpC,mBAAOA,IAAG,uBAAuB,EAAE,KAAK,CAAC,YAAY;AACnD,oBAAM,QAAQ,IAAI;YACpB,CAAC;UACH,OAAO;AACL,kBAAM,UAAUA,IAAG,iBAAiB;AACpC,kBAAM,QAAQ,IAAI;UACpB;QACF,CAAC;MACH;;;;MAIA,KAAK,SAAS;AACZ,YAAI,OAAO,YAAY,YAAY;AACjC,eAAK,MAAM,OAAO,aAAa,SAAS,KAAK,MAAM,QAAQ,CAAC,CAAC;QAC/D,OAAO;AACL,eAAK,KAAK,KAAK,OAAO;QACxB;MACF;;;;MAIA,WAAW,IAAI;AACb,SAAC,KAAK,gBAAgB,CAAC,GAAG,KAAK,EAAE;MACnC;;;;MAIA,WAAW;AACT,eAAO,KAAK,UAAU,CAAC,GAAG,KAAK,QAAQ,SAAS,GAAG,KAAK,QAAQ,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC;MACzF;;;;MAIA,OAAO;AACL,cAAM,OAAO,IAAI,UAAS,KAAK,QAAQ,KAAK,OAAO;AACnD,aAAK,OAAO,KAAK,KAAK,IAAI,CAAC,SAAS,gBAAgB,YAAW,KAAK,KAAK,IAAI,IAAI;AACjF,aAAK,UAAU,KAAK;AACpB,eAAO;MACT;;;;;MAKA,QAAQ,OAAO;AACb,YAAI,KAAK,OAAO,SAAS,MAAM,OAAO,MAAM;AAC1C,gBAAM,IAAI;YACR;UACF;QACF;AACA,aAAK,QAAQ,MAAM;AACnB,aAAK,OAAO,MAAM,KAAK,IAAI,CAAC,SAAS;AACnC,cAAI,gBAAgB,WAAU;AAC5B,iBAAK,QAAQ,IAAI;UACnB;AACA,iBAAO;QACT,CAAC;AACD,aAAK,UAAU,MAAM;AACrB,aAAK,OAAO,MAAM;MACpB;MACA,IAAI,SAAS;AACX,eAAO,KAAK,KAAK;MACnB;;;;;;;;;MASA,OAAO,OAAOL,YAAWC,WAAU,CAAC,GAAG;AACrC,YAAI;AACJ,cAAM;;UAEJ,CAAC;;AAEH,eAAO,iBAAiB,QAAQ;UAC9B,MAAM;YACJ,KAAK,6BAAM;AACT,sBAAQ,SAAS,UAAS,QAAQD,YAAWC,QAAO,GAAG;YACzD,GAFK;UAGP;UACA,MAAM;YACJ,KAAK,6BAAM;AACT,sBAAQ,SAAS,UAAS,QAAQD,YAAWC,QAAO,GAAG;YACzD,GAFK;UAGP;UACA,MAAM;YACJ,KAAK,6BAAM;AACT,sBAAQ,SAAS,UAAS,QAAQD,YAAWC,QAAO,GAAG;YACzD,GAFK;UAGP;UACA,MAAM;YACJ;;;;;;;;;cASE,wBAAC,aAAa,eAAe;AAC3B;AACE,yCAAuB;AACvB,wBAAM,UAAU,SAAS,UAAS,QAAQD,YAAWC,QAAO;AAC5D,wBAAM,cAAc,YAAY;oBAC9B,MAAM,QAAQ;oBACd,MAAM,QAAQ;oBACd,MAAM,QAAQ;kBAChB,CAAC;AACD,yBAAO,QAAQ,QAAQ,WAAW;gBACpC;cACF,GAXA;;UAaJ;QACF,CAAC;AACD,eAAO;MACT;;;;;;;;;MASA,CAAC,sBAAsB;AACrB,mBAAWD,cAAa,KAAK,qBAAqB,GAAG;AACnD,iBAAOA,WAAU,mBAAmB;QACtC;MACF;;;;;MAKA,CAAC,uBAAuB;AACtB,mBAAW,SAAS,KAAK,MAAM;AAC7B,cAAI,OAAO,UAAU,UAAU;AAC7B,mBAAO,MAAM,qBAAqB;UACpC;QACF;AACA,YAAI,KAAK,oBAAoB;AAC3B,gBAAM;QACR;MACF;;;;MAIA,CAAC,qBAAqB;AACpB,YAAI,KAAK,aAAa;AACpB,qBAAW,MAAM,KAAK,aAAa;AACjC,kBAAM;UACR;QACF;AACA,mBAAW,SAAS,KAAK,MAAM;AAC7B,cAAI,iBAAiB,aAAY,CAAC,MAAM,oBAAoB;AAC1D,mBAAO,MAAM,mBAAmB;UAClC;QACF;MACF;;;;;;;;;MASA,OAAO,QAAQA,YAAWC,UAAS;AACjC,YAAI,mBAAmB;AACvB,YAAI;AACF,gBAAM,WAAW,UAAS,aAAa,QAAQD,YAAWC,QAAO;AACjE,gBAAM,UAAU,SAAS,iBAAiB;AAC1C,iBAAO,UAAS,cAAc,SAAS,QAAQ;QACjD,UAAA;AACE,UAAAH,OAAM;AACN,0BAAgB,gBAAgB;QAClC;MACF;;;;;;;;;MASA,aAAa,cAAcE,YAAWC,UAAS;AAC7C,YAAI,mBAAmB;AACvB,YAAI;AACF,gBAAM,WAAW,UAAS,aAAa,SAASD,YAAWC,QAAO;AAClE,gBAAM,UAAU,MAAM,SAAS,uBAAuB;AACtD,iBAAO,UAAS,cAAc,SAAS,QAAQ;QACjD,UAAA;AACE,UAAAH,OAAM;AACN,0BAAgB,gBAAgB;QAClC;MACF;;;;;;MAMA,iBAAiB,UAAU,EAAE,MAAM,IAAI,MAAM,GAAG,GAAG;AACjD,mBAAW,QAAQ,KAAK,MAAM;AAC5B,cAAI,OAAO,SAAS,UAAU;AAC5B,oBAAQ,KAAK,IAAI,KAAK;UACxB,WAAW,gBAAgB,WAAU;AACnC,iBAAK,iBAAiB,OAAO;UAC/B;QACF;AACA,eAAO;MACT;;;;;;MAMA,MAAM,uBAAuB,UAAU,EAAE,MAAM,IAAI,MAAM,GAAG,GAAG;AAC7D,cAAM,KAAK;AACX,mBAAW,QAAQ,KAAK,MAAM;AAC5B,cAAI,OAAO,SAAS,UAAU;AAC5B,oBAAQ,KAAK,IAAI,KAAK;UACxB,WAAW,gBAAgB,WAAU;AACnC,kBAAM,KAAK,uBAAuB,OAAO;UAC3C;QACF;AACA,eAAO;MACT;;;;;;;;MAQA,OAAO,aAAa,MAAME,YAAWC,UAAS;AAC5C,cAAM,WAAW,IAAI;UACnB,IAAI,SAAS,MAAMA,SAAQ,WAAWA,SAAQ,WAAW,MAAM,EAAE;QACnE;AACA,iBAAS,KAAK,UAAU;AACxB,YAAIA,SAAQ,SAAS;AACnB,eAAK;AACL,sBAAY,IAAIA,SAAQ;AACxB,sBAAY,IAAI;QAClB;AACAD,mBAAU,UAAUC,SAAQ,SAAS,CAAC,CAAC;AACvC,YAAIA,SAAQ,SAAS;AACnB,cAAI;QACN;AACA,iBAAS,KAAK,WAAW;AACzB,eAAO;MACT;;;;;MAKA,OAAO,cAAc,SAAS,UAAU;AACtC,mBAAW,WAAW,SAAS,oBAAoB,GAAG;AACpD,kBAAQ;QACV;AACA,YAAI,OAAO,QAAQ,OAAO,SAAS,OAAO,UAAU;AACpD,YAAItB,QAAO,QAAQ;AACnB,mBAAW,EAAE,MAAAiB,OAAM,KAAK,KAAK,SAAS,OAAO,KAAK;AAChD,kBAAQ,cAAcA,KAAI,KAAK,IAAI;QACrC;AACA,eAAO;UACL;UACA,MAAAjB;QACF;MACF;IACF;AACM,eAAN,MAAe;aAAA;;;;MAEb;;MAEA;;MAEA,MAAsB,oBAAI,IAAI;;MAE9B,SAAS,EAAE,MAAM,CAAC,GAAG,OAAO,GAAG;;;;;MAK/B,YAAY,MAAM,YAAY,IAAI;AAChC,aAAK,OAAO;AACZ,YAAI,MAAM;AACV,aAAK,MAAM,MAAM,GAAG,SAAS,IAAI,KAAK;MACxC;MACA,YAAY;AACV,eAAO,KAAK,OAAO;MACrB;;;;;;;MAOA,UAAU,OAAO,MAAM;AACrB,cAAME,WAAU,KAAK,OAAO;AAC5B,YAAI,IAAI;AACR,YAAI,IAAI,KAAK,IAAI,KAAK,QAAQA,SAAQ,MAAM;AAC5C,eAAO,IAAI,KAAK,KAAK,CAAC,MAAMA,SAAQ,CAAC,EAAG,MAAK;AAC7C,YAAI,KAAK,CAAC,MAAM,OAAQ;AACxB,YAAIA,SAAQ,CAAC,MAAM,UAAU,KAAK,CAAC,IAAIA,SAAQ,CAAC,GAAG;AACjD,eAAK,OAAO,OAAO;AACnB,eAAK,OAAO,QAAQ;QACtB;MACF;IACF;AACM,mCAA+B;EAAA;AAAA,CAAA;ACpuBrC,IAAA,uBAAA,CAAA;AAAA,SAAA,sBAAA;EAAA,QAAA,6BAAA,QAAA;AAAA,CAAA;AAAA,IAAM;AAAN,IAMM;AANN,IAOM;AAPN,IAYM;AAZN,IAsBM;AAtBN,IAAA,oBAAA,MAAA;EAAA,qDAAA;AAAM,uBAAmB;MACvB,8BAA8B;MAC9B,gCAAgC;MAChC,gCAAgC;MAChC,wBAAwB;IAC1B;AACM,8BAA0B,OAAO,QAAQ,gBAAgB;AACzD,2BAAuB,wBAACyB,aAAY;AACxC,iBAAW,CAAC,QAAQ,KAAK,KAAK,yBAAyB;AACrDA,iBAAQ,IAAI,QAAQ,KAAK;MAC3B;IACF,GAJ6B;AAKvB,qBAAiB,wBAAC,aAAa;AACnC,YAAM,SAAS,SAAS,MAAM;AAC9B,YAAMA,WAAU,IAAI,QAAQ,OAAO,OAAO;AAC1C,2BAAqBA,QAAO;AAC5B,aAAO,IAAI,SAAS,OAAO,MAAM;QAC/B,QAAQ,OAAO;QACf,YAAY,OAAO;QACnB,SAAAA;MACF,CAAC;IACH,GATuB;AAUjB,aAAS,8BAAO,EAAE,OAAO,SAAAtB,SAAQ,MAAM;AAC3C,YAAM,WAAW,MAAMA,SAAQ,OAAO;QACpC,iCAAiC,wBAAC,SAAS,SAAS,gBAAnB;MACnC,CAAC;AACD,aAAO,eAAe,QAAQ;IAChC,GALe;EAKf;AAAA,CAAA;AC3BA,IAAA,wBAAA,CAAA;AAAA,SAAA,uBAAA;EAAA,SAAA,6BAAA,SAAA;AAAA,CAAA;AACA,SAAS,QAAQ,YAAY,SAAS;AACpC,aAAW,KAAK,UAAU;AAC1B,OAAK,YAAY,SAAS,WAAW,CAAC,CAAC;AACvC,aAAW,KAAK,UAAU;AAC5B;AAJS;AADT,IAAA,qBAAA,MAAA;EAAA,8DAAA;AAAA,gBAAA;EAAA;AAAA,CAAA;ACAA,IAAA,YAAA,CAAA;AAAA,SAAA,WAAA;EAAA,WAAA,6BAAA,WAAA;EAAA,OAAA,6BAAA,OAAA;EAAA,SAAA,6BAAA,SAAA;EAAA,OAAA,6BAAA,OAAA;EAAA,aAAA,6BAAA,aAAA;AAAA,CAAA;AAAA,IAEa;AAFb,IAGI;AAHJ,IAIa;AAJb,IAKa;AALb,IAMa;AANb,IAOa;AAPb,IAAA,SAAA,MAAA;EAAA,yCAAA;AAEa,YAAQ;AAER,gBAAY,mCAAY,qBAAqB,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,mBAAA,GAAA,sBAAA,GAA8C,SAArF;AACZ,cAAU,CAAC,sCAAqC,qCAAoC,qCAAoC,mCAAmC;AAC3J,kBAAc,CAAC,sCAAsC;AACrD,YAAQ,CAAC;EAAA;AAAA,CAAA;ACPtB,IAAA,uBAAA,CAAA;AAAA,SAAA,sBAAA;EAAA,SAAA,6BAAA,SAAA;AAAA,CAAA;AAMA,SAAS,uBAAuB;AAC9B,QAAM,EAAE,KAAAG,MAAK,UAAU,IAAI,SAAS,KAAK;AACzC;AACE,WAAO;MACL;;MAEA,OAAO,mCAAY,OAAZ;IACT;EACF;AACF;AATS;AA6BT,SAASI,WAAU;AACjB,SAAO,WAAW,aAAa;AACjC;AAFS,OAAAA,UAAA;AAYT,SAAS,QAAQ,YAAY,SAAS;AACpC,aAAW,UAAU,CAAC,gBAAgB;AACpC,gBAAY,KAAK,OAAO,YAAY,KAAK,MAAM,CAAC,YAAY,YAAY,KAAK,OAAO,OAAO,CAAC,MAAM;EACpG,CAAC;AACH;AAJS;AA/CT,IAgBM;AAhBN,IA6BM;AA7BN,IAsCM;AAtCN,IA8CM;AA9CN,IAAA,oBAAA,MAAA;EAAA,gEAAA;AAAA,iBAAA;AACA,gBAAA;AACA,gBAAA;AACA,kBAAA;AACA,iBAAA;AACA,eAAA;AAWM,gBAAY,KAAK,SAAS,EAAE,SAAS,IAAI,KAAK,wBAAwB,KAAK,KAAK,SAAS,CAAC;AAChG,QAAI,WAAW;AACb,OAAC;QACC,MAAM,CAAC;QACP,MAAM;QACN,OAAO;QACP,QAAQ,CAAC;QACT,OAAO,EAAE,IAAI,KAAK;QAClB,OAAO,CAAC;QACR,QAAQ;QACR,KAAK,IAAI,IAAI,qBAAqB;MACpC;IACF;AACM,aAAS;MACb,SAAyB,qCAAqB;IAChD;AACA,KAAC;MACC,OAAO,OAAO,QAAQ;IACxB;AAIM,aAAS;MACb,IAAI,QAAQ;AACV,eAAOA,SAAQ,EAAE,KAAK;MACxB;MACA,IAAI,SAAS;AACX,eAAOA,SAAQ,EAAE,KAAK;MACxB;IACF;AACM,WAAO;EAAA;AAAA,CAAA;AC9Cb,IAAAgB,aAAA,CAAA;AAAA,SAAAA,YAAA;EAAA,WAAA,6BAAAP,YAAA;EAAA,OAAA,6BAAAQ,QAAA;EAAA,SAAA,6BAAAC,UAAA;EAAA,OAAA,6BAAAC,QAAA;EAAA,aAAA,6BAAAC,cAAA;AAAA,CAAA;AAAA,IAEaD;AAFb,IAGIE;AAHJ,IAIaZ;AAJb,IAKaS;AALb,IAMaE;AANb,IAOaH;AAPb,IAAAK,UAAA,MAAA;EAAA,yCAAA;AAEaH,aAAQ;AAERV,iBAAY,mCAAYY,sBAAqB,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,kBAAA,GAAA,qBAAA,GAAgD,SAAvF;AACZH,eAAU,CAAC,sCAAqC,qCAAoC,qCAAoC,qCAAoC,qCAAoC,qCAAoC,mCAAmC;AACvQE,mBAAc,CAAC;AACfH,aAAQ,CAAC;EAAA;AAAA,CAAA;ACyBf,SAAS,WAAW,OAA4B;AACrD,UAAQ,OAAO,OAAA;IACb,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IAET,KAAK;AACH,aAAO;IAET,KAAK;IACL,KAAK;AAEH;IAEF,KAAK;AACH,aAAO;IAET;AACE,aAAO;EAAA;AAKX,MAAI,UAAU,MAAM;AAClB,WAAO;EACT;AAIA,MAAI,YAAY,OAAO,eAAe,KAAK;AAC3C,UAAQ,WAAA;IACN,KAAK,OAAO;AACV,aAAO;IAET,KAAK,SAAS;AACZ,aAAO;IAET,KAAK,MAAM;AACT,aAAO;IAET,KAAK,KAAK;AACR,aAAO;IAET,KAAK,WAAW;AACd,aAAO;;IAIT,KAAK,QAAQ;AACX,aAAO;IAET,KAAK,WAAW;AACd,aAAO;;IAIT;AACE,UAAI,eAAe;AAGjB,YAAI,aAAa,cAAc,QAAQ,aACnC,iBAAiB,cAAc,aAAa;AAC9C,iBAAO;QACT,WAAW,aAAa,cAAc,WAAW,aACtC,aAAa,cAAc,YAAY,WAAW;AAG3D,iBAAO;QACT;MACF;AAEA,UAAI,iBAAiB,WAAW;AAC9B,eAAO;MACT;AAEA,UAAI,iBAAiB,OAAO;AAC1B,eAAO;MACT;AAEA,aAAO;EAAA;AAEb;AAlFgB;AAoFhB,SAAS,eAAsB;AAC7B,QAAM,IAAI,MAAM,0CAA0C;AAC5D;AAFS;AAqIF,SAAS,oBAAuB,aAA8B,UAAsB;AACzF,MAAI,WAAW;AACf,WAAS;AACT,MAAI;AACF,WAAO,SAAA;EACT,UAAA;AACE,aAAS;EACX;AACF;AARgB;AAuNT,SAAS,0BAA0B,MAAyB;AACjE,MAAI,EAAC,MAAM,cAAA,IAAiB,KAAK,QAAQ;AAEzC,MAAI,iBAAiB,cAAc,SAAS,GAAG;AAC7C,WAAO,KAAK,IAAI,aAAa;EAC/B,OAAO;AACL,WAAO;EACT;AACF;AARgB;AAkBT,SAAS,iBAAiB,MAAyB;AACxD,MAAI,EAAC,MAAM,cAAA,IAAiB,KAAK,QAAQ;AAEzC,MAAI,eAAe;AACjB,WAAO,KAAK,IAAI,aAAa;EAC/B,OAAO;AACL,WAAO,KAAK,IAAA;EACd;AACF;AARgB;AAgBT,SAAS,uBAAuB,MAAqC;AAC1E,MAAI,EAAC,MAAM,cAAA,IAAiB,KAAK,QAAQ;AAEzC,MAAI,iBAAiB,cAAc,SAAS,GAAG;AAC7C,WAAO;EACT;AAEA,SAAO;AACT;AARgB;AAeT,SAAS,mBAAmB,MAAyB;AAC1D,SAAO,KAAK,QAAQ,EAAE;AACxB;AAFgB;AAQT,SAAS,kBAAkB,MAA+D;AAC/F,SAAO,KAAK,QAAQ;AACtB;AAFgB;AAMhB,eAAe,YAAY,SAAuC;AAChE,MAAI,EAAC,MAAM,cAAA,IAAiB,QAAQ,QAAQ;AAC5C,MAAI,cAAe,SAAS,GAAG;AAK7B,WAAO,KAAK,IAAI,aAAc;EAChC;AACA,MAAI,UAAU,MAAM,KAAK,KAAA;AACzB,SAAO,QAAQ,eAAA;AACjB;AAXe;AAmpBf,SAAS,WAAW,OAAgB,QAChB,MAAoB,OAA4C;AAClF,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,aAAiB;AAEjB,QAAI,OAAO,KAAK,CAAC;AACjB,QAAI,QAAQ,OAAO,WAAW;AAO5B,cAAQ;AACR;IACF;AAEA,QAAI,OAAO,WAAW,KAAK;AAC3B,YAAQ,MAAA;MACN,KAAK;MACL,KAAK;AAEH,YAAI,OAAO,OAAe,OAAO,IAAI,GAAG;AACtC,kBAAc,MAAO,IAAI;QAC3B,OAAO;AACL,kBAAQ;QACV;AACA;MAEF,KAAK;AAGH,YAAI,OAAO,UAAU,IAAI,KAAa,QAAQ,GAAG;AAC/C,kBAAc,MAAO,IAAI;QAC3B,OAAO;AACL,kBAAQ;QACV;AACA;MAEF,KAAK;MACL,KAAK,gBAAgB;AAEnB,YAAI,OAAO,OAAe,OAAO,IAAI,GAAG;AACtC,kBAAQ;QACV,OAAO;AACL,kBAAc,MAAO,IAAI;QAC3B;AAIA,gBAAQ;AACR;MACF;MAEA,KAAK;MACL,KAAK,eAAe;AAClB,YAAI,EAAC,MAAY,cAAA,IAAiB,kBAA2B,KAAK;AAClE,eAAO,EAAE,MAAM,eACX,gBAAgB,cAAc,OAAO,KAAK,MAAM,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,EAAA;MACxE;MAEA,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;AAEH,gBAAQ;AACR;MAEF,KAAK;AAEH,gBAAS,MAAc,IAAI;AAC3B;MAEF,KAAK,eAAe;AAClB,YAAI,MAAM,GAAG;AACX,gBAAM,IAAI,UAAU,6CAA6C;QACnE,OAAO;AACL,cAAI,SAAS,KAAK,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG;AACtC,cAAI,YAAY,KAAK,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG;AACzC,gBAAM,IAAI;YACN,IAAI,MAAM,6CAA6C,SAAS;UAAA;QAEtE;MACF;MAEA;AAEE,cAAM,IAAI,UAAU,aAAa;IAAA;EAEvC;AAIA,MAAI,iBAAiB,YAAY;AAC/B,QAAI,EAAC,MAAY,cAAA,IAAiB,kBAA2B,KAAK;AAClE,WAAO,EAAE,MAAM,eAAe,iBAAiB,CAAA,EAAC;EAClD;AAIA,SAAO;IACL;IACA;IACA;EAAA;AAEJ;AA3GS;AA+QT,SAAS,iBAAiB,QAA8B;AACtD,MAAI,OAAO,WAAW,QAAQ;AAC5B,QAAI;AACiB,aAAQ,OAAO,OAAO,EAAA;IAC3C,SAAS,KAAK;AAIZ,cAAQ,OAAO,GAAG;IACpB;EACF;AACF;AAXS;AMjwCT,SAAS,6BAAoC;AAC3C,QAAM,IAAI;IACN;EAAA;AAEN;AAJS;AAoHT,SAAS,kBAAkB,OAAgB,QAA4B,OAC5C,UAAsB,cAAqC;AAIpF,MAAI,YAAY,IAAI,gBAAgB,WAAW,aAAa,OAAO,QAAQ,KAAK,CAAC;AACjF,MAAI,SAAS,IAAI,cAAc,UAAU,SAAS;AAClD,MAAI;AACF,WAAO,OAAO,MAAM,YAAY;EAClC,UAAA;AACE,WAAO,QAAA;EACT;AACF;AAZS;INtRL;IACA;IASO;IAkGA;IAoBW;IA6ET;IAoBP;IAMF;IAeA;IAOE;IAoGO;IAkEA;IA0KA;IAqrBE;IA6FF;IA6FP;IAyFA;IC5gDA;IAeA;IAGA;IAyBO;IAgMP;IAYA;IAKO;IK5QT;IASE;IAuKA;IAiDA;;;ANjON,QAAI,CAAC,OAAO,SAAS;AAClB,aAAe,UAAU,OAAO,IAAI,SAAS;IAChD;AACA,QAAI,CAAC,OAAO,cAAc;AACvB,aAAe,eAAe,OAAO,IAAI,cAAc;IAC1D;AAEI,wBAAoB,OAA+C,uBAAuB;AAE9F,QAAI,mBAAmB;AACrB,sBAAgB,MAAM;;QAAyB;;IACjD;AAMW,gBAAY,gBAAgB,cAAc,YAAY,MAAM;IAAC;AAkG7D,cAAmB,EAAE,UAAU,cAAc,SAAS,aAAA;AAoB3C,eAAf,MAAwB;aAAA;;;IA2E/B;AAEa,oBAAN,cAA4B,SAAS;aAAA;;;MAC1C,YAAoBT,SAAY;AAAE,cAAA;AAAd,aAAA,QAAAA;MAAuB;MAE3C,KAAK,MAAoB,MAA4B;AAAE,eAAO;MAAM;MACpE,IAAI,MAAoB,UAAsB,cAAmC;AAAE,eAAO;MAAM;MAChG,IAAI,MAA8B;AAAE,eAAO;MAAM;MACjD,MAAgB;AAAE,eAAO;MAAM;MAC/B,OAAyC;AAAE,eAAO,QAAQ,OAAO,KAAK,KAAK;MAAG;MAC9E,4BAAkC;MAAC;MACnC,UAAgB;MAAC;MACjB,SAAS,UAAsC;AAC7C,YAAI;AACF,mBAAS,KAAK,KAAK;QACrB,SAAS,KAAK;AAEZ,kBAAQ,QAAQ,GAAG;QACrB;MACF;IACF;AAEM,oBAA0B,IAAI;MAChC,IAAI,MAAM,uDAAuD;IAAC;AAKlE,aAA0B,wBAAC,MAAgB,MAAoB,WAAuB;AACxF,aAAO,KAAK,KAAK,MAAM,MAAM;IAC/B,GAF8B;AAe1B,eAAW,OAAO,UAAU;AAO1B,qBAA+C;MACnD,MAAM,QAAwB,SAAc,eAAsB;AAChE,YAAI,OAAO,OAAO;AAClB,eAAO,IAAI,WAAW;UAAO,KAAK;UAC9B,KAAK,iBAAiB,CAAA;UAAI,WAAW,cAAc,aAAa;QAAA,GAAI,CAAA,CAAE;MAC5E;MAEA,IAAI,QAAwB,MAAuB,UAAe;AAChE,YAAI,OAAO,OAAO;AAClB,YAAI,SAAS,UAAU;AACrB,iBAAO;QACT,WAAW,QAAQ,WAAW,WAAW;AAOvC,iBAAa,KAAM,IAAI;QACzB,WAAW,OAAO,SAAS,UAAU;AAEnC,iBAAO,IAAI;YAAW,KAAK;YACvB,KAAK,gBAAgB,CAAC,GAAG,KAAK,eAAe,IAAI,IAAI,CAAC,IAAI;UAAA;QAChE,WAAW,SAAS,OAAO,YACpB,CAAC,KAAK,iBAAiB,KAAK,cAAc,UAAU,IAAI;AAE7D,iBAAO,MAAM;AACX,iBAAK,KAAK,QAAA;AACV,iBAAK,OAAO;UACd;QACF,OAAO;AACL,iBAAO;QACT;MACF;MAEA,IAAI,QAAwB,MAAuB;AACjD,YAAI,OAAO,OAAO;AAClB,YAAI,SAAS,UAAU;AACrB,iBAAO;QACT,WAAW,QAAQ,WAAW,WAAW;AACvC,iBAAO,QAAQ;QACjB,WAAW,OAAO,SAAS,UAAU;AACnC,iBAAO;QACT,WAAW,SAAS,OAAO,YACpB,CAAC,KAAK,iBAAiB,KAAK,cAAc,UAAU,IAAI;AAC7D,iBAAO;QACT,OAAO;AACL,iBAAO;QACT;MACF;MAEA,UAAU,QAAwB,MAAW;AAC3C,cAAM,IAAI,MAAM,8CAA8C;MAChE;MAEA,eAAe,QAAwB,UAA2Be,aACpD;AACZ,cAAM,IAAI,MAAM,uCAAuC;MACzD;MAEA,eAAe,QAAwB,GAA6B;AAClE,cAAM,IAAI,MAAM,uCAAuC;MACzD;MAEA,yBAAyB,QAAwB,GAAoD;AAEnG,eAAO;MACT;MAEA,eAAe,QAAuC;AACpD,eAAO,OAAO,eAAe,OAAO,GAAG;MACzC;MAEA,aAAa,QAAiC;AAC5C,eAAO;MACT;MAEA,QAAQ,QAAoD;AAC1D,eAAO,CAAA;MACT;MAEA,kBAAkB,QAAiC;AAEjD,eAAO;MACT;MAEA,IAAI,QAAwB,GAAoB,UAAe,UAAwB;AACrF,cAAM,IAAI,MAAM,uCAAuC;MACzD;MAEA,eAAe,QAAwBxB,IAA2B;AAChE,cAAM,IAAI,MAAM,wCAAwC;MAC1D;IACF;AAOa,cAAN,MAAMyB,kBAAgB,UAAU;aAAA;;;;;MAGrC,YAAY,MAAgB,eAA8B;AACxD,cAAA;AAEA,YAAI,EAAE,gBAAgB,WAAW;AAK/B,cAAI,QAAa;AACjB,cAAI,iBAAiB,aAAa,iBAAiB,UAAU;AAC3D,mBAAO,eAAe,OAAO,OAAO,MAAS;UAC/C,OAAO;AAGL,mBAAO,IAAI,gBAAgB,WAAW,cAAc,KAAK,CAAC;UAC5D;AAGA,cAAI,eAAe;AACjB,kBAAM,IAAI,UAAU,0DAA0D;UAChF;QACF;AAEA,aAAK,OAAO;AACZ,aAAK,gBAAgB;AAKrB,YAAI,OAAY,6BAAM;QAAC,GAAP;AAChB,aAAK,MAAM;AACX,eAAO,IAAI,MAAM,MAAM,cAAc;MACvC;MAEO;MACA;MAEP,MAAe;AAQb,YAAI,SAAS,KAAK,QAAQ;AAC1B,YAAI,OAAO,eAAe;AACxB,iBAAO,IAAIA,UAAQ,OAAO,KAAK,IAAI,OAAO,aAAa,CAAC;QAC1D,OAAO;AACL,iBAAO,IAAIA,UAAQ,OAAO,KAAK,IAAA,CAAK;QACtC;MACF;MAEA,YAAY,UAAgC;AAC1C,aAAK,QAAQ,EAAE,KAAK,SAAS,QAAQ;MACvC;MAEA,IAAI,MAAkD;AACpD,YAAI,EAAC,MAAM,cAAA,IAAiB,KAAK,QAAQ;AACzC,eAAO,QAAQ,QAAQ,MAAM,iBAAiB,CAAA,GAAI,IAAI;MACxD;IACF;AAEa,iBAAN,cAAyB,QAAQ;aAAA;;;;MAEtC,YAAY,MAAgB,eAA6B;AACvD,cAAM,MAAM,aAAa;MAC3B;MAEA,KAAK,aACA,YACmB;AACtB,eAAO,YAAY,IAAI,EAAE,KAAK,GAAG,SAAS;MAC5C;MAEA,MAAM,YAA8E;AAClF,eAAO,YAAY,IAAI,EAAE,MAAM,GAAG,SAAS;MAC7C;MAEA,QAAQ,WAA+D;AACrE,eAAO,YAAY,IAAI,EAAE,QAAQ,GAAG,SAAS;MAC/C;IACF;AAuJa,iBAAN,MAAMC,aAAW;aAAA;;;;MAkFd,YAEC,OAOCC,SAQA,OAIA,UACR;AApBO,aAAA,QAAA;AAOC,aAAA,SAAAA;AAQA,aAAA,QAAA;AAIA,aAAA,WAAA;MACP;;;;;;;;MAhGH,OAAc,cAAc,OAA4B;AACtD,eAAO,IAAID,aAAW,OAAO,QAAQ;MACvC;;;;;;MAOA,OAAc,cAAc,OAA4B;AACtD,eAAO,IAAIA,aAAW,OAAO,QAAQ;MACvC;;;;MAKA,OAAc,UAAUE,QAAiC;AACvD,YAAI,QAAmB,CAAA;AACvB,YAAI,WAA6B,CAAA;AAEjC,YAAI,cAAyB,CAAA;AAE7B,iBAAS,WAAWA,QAAO;AACzB,kBAAQ,iBAAA;AACR,mBAAS,QAAQ,QAAQ,OAAQ;AAC/B,kBAAM,KAAK,IAAI;UACjB;AACA,mBAAS,WAAW,QAAQ,UAAW;AACrC,gBAAI,QAAQ,WAAW,SAAS;AAG9B,wBAAU;gBACR,QAAQ;gBACR,UAAU,YAAY;gBACtB,SAAS,QAAQ;cAAA;YAErB;AACA,qBAAS,KAAK,OAAO;UACvB;AACA,sBAAY,KAAK,QAAQ,KAAK;QAChC;AAEA,eAAO,IAAIF,aAAW,aAAa,SAAS,OAAO,QAAQ;MAC7D;;;;;;;;;;;;MAaA,OAAc,YAAY,OAAkB,UAA4B;AACtE,eAAO,IAAIA,aAAW,MAAM,SAAS,OAAO,QAAQ;MACtD;;;;;;;MAQA,OAAc,aACV,OAAgB,WAA+B,OAAsC;AACvF,YAAI,SAAS,IAAIA,aAAW,MAAM,SAAS,CAAA,GAAI,CAAA,CAAE;AACjD,eAAO,QAAQ,OAAO;UAAS;UAAO;UAAW;UAAS;;UAAqB;UAAM;QAAA;AACrF,eAAO;MACT;;;;;;MAgCQ;;MAGD,oBAAoB,QAA8B,QAC9B,WAAoB,MAAgB;AAC7D,YAAI,KAAK,WAAW,UAAU;AAC5B,iBAAO,eAAe,OAAO,QAAQ,MAAM;QAC7C,WAAW,KAAK,WAAW,UAAU;AAUnC,cAAI,OAAO,KAAK,YAAY,IAAI,MAAM;AACtC,cAAI,MAAM;AACR,gBAAI,UAAU;AACZ,qBAAO,KAAK,IAAA;YACd,OAAO;AACL,mBAAK,YAAY,OAAO,MAAM;AAC9B,qBAAO;YACT;UACF,OAAO;AACL,mBAAO,eAAe,OAAO,QAAQ,MAAM;AAC3C,gBAAI,UAAU;AACZ,kBAAI,CAAC,KAAK,YAAY;AACpB,qBAAK,aAAa,oBAAI,IAAA;cACxB;AACA,mBAAK,WAAW,IAAI,QAAQ,IAAI;AAChC,qBAAO,KAAK,IAAA;YACd,OAAO;AACL,qBAAO;YACT;UACF;QACF,OAAO;AACL,gBAAM,IAAI,MAAM,gDAAgD;QAClE;MACF;MAEQ,SACJ,OAAgB,WAA+B,UAA2B,QAC1E,UAAmB,OAAmC;AACxD,YAAI,OAAO,WAAW,KAAK;AAC3B,gBAAQ,MAAA;UACN,KAAK;AAEH,mBAAO;UAET,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;AAGH,mBAAO;UAET,KAAK,SAAS;AAGZ,gBAAIE,SAAwB;AAC5B,gBAAI,MAAMA,OAAM;AAChB,gBAAI,SAAS,IAAI,MAAM,GAAG;AAC1B,qBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,qBAAO,CAAC,IAAI,KAAK,SAASA,OAAM,CAAC,GAAGA,QAAO,GAAG,QAAQ,UAAU,KAAK;YACvE;AACA,mBAAO;UACT;UAEA,KAAK,UAAU;AAEb,gBAAI,SAAkC,CAAA;AACtC,gBAAI,SAAkC;AACtC,qBAAS,KAAK,QAAQ;AACpB,qBAAO,CAAC,IAAI,KAAK,SAAS,OAAO,CAAC,GAAG,QAAQ,GAAG,QAAQ,UAAU,KAAK;YACzE;AACA,mBAAO;UACT;UAEA,KAAK;UACL,KAAK,eAAe;AAClB,gBAAI,OAAgB;AACpB,gBAAI;AACJ,gBAAI,UAAU;AACZ,qBAAO,iBAAiB,IAAI;YAC9B,OAAO;AACL,qBAAO,0BAA0B,IAAI;YACvC;AACA,gBAAI,gBAAgB,YAAY;AAC9B,kBAAI,UAAU,IAAI,WAAW,MAAM,CAAA,CAAE;AACrC,mBAAK,SAAU,KAAK,EAAC,QAAQ,UAAU,QAAA,CAAQ;AAC/C,qBAAO;YACT,OAAO;AACL,kBAAI,UAAU,IAAI,QAAQ,IAAI;AAC9B,mBAAK,MAAO,KAAK,OAAO;AACxB,qBAAO;YACT;UACF;UAEA,KAAK;UACL,KAAK,cAAc;AACjB,gBAAI,SAA+B;AACnC,gBAAI;AACJ,gBAAI,OAAO;AACT,qBAAO,IAAI,QAAQ,MAAM,oBAAoB,QAAQ,WAAW,QAAQ,CAAC;YAC3E,OAAO;AACL,qBAAO,IAAI,QAAQ,eAAe,OAAO,QAAQ,SAAS,CAAC;YAC7D;AACA,iBAAK,MAAO,KAAK,IAAI;AACrB,mBAAO;UACT;UAEA,KAAK,gBAAgB;AACnB,gBAAI,SAAoB;AACxB,gBAAI;AACJ,gBAAI,OAAO;AACT,wBAAU,IAAI,WAAW,MAAM,oBAAoB,QAAQ,WAAW,QAAQ,GAAG,CAAA,CAAE;YACrF,OAAO;AACL,wBAAU,IAAI,WAAW,eAAe,OAAO,QAAQ,SAAS,GAAG,CAAA,CAAE;YACvE;AACA,iBAAK,SAAU,KAAK,EAAC,QAAQ,UAAU,QAAA,CAAQ;AAC/C,mBAAO;UACT;UAEA;AAEE,kBAAM,IAAI,MAAM,aAAa;QAAA;MAEnC;;;MAIO,mBAAmB;AACxB,YAAI,KAAK,WAAW,SAAS;AAG3B,cAAI,WAAW,KAAK,WAAW;AAE/B,eAAK,QAAQ,CAAA;AACb,eAAK,WAAW,CAAA;AAGhB,cAAI;AACF,iBAAK,QAAQ,KAAK,SAAS,KAAK,OAAO,QAAW,SAAS,MAAM,UAAU,IAAI;UACjF,SAAS,KAAK;AAEZ,iBAAK,QAAQ;AACb,iBAAK,WAAW;AAChB,kBAAM;UACR;AAGA,eAAK,SAAS;AAGd,cAAI,KAAK,cAAc,KAAK,WAAW,OAAO,GAAG;AAC/C,kBAAM,IAAI,MAAM,qDAAqD;UACvE;AACA,eAAK,aAAa;QACpB;MACF;;MAGQ,UAAU,QAAgB,UAA2B,UAAgC;AAC3F,aAAK,iBAAA;AAEL,YAAI,KAAK,iBAAiB,YAAY;AACpC,UAAAF,aAAW,oBAAoB,KAAK,OAAO,QAAQ,UAAU,QAAQ;QACvE,OAAO;AACC,iBAAQ,QAAQ,IAAI,KAAK;AAE/B,mBAAS,UAAU,KAAK,UAAW;AAKjC,YAAAA,aAAW,oBAAoB,OAAO,SAAS,OAAO,QAAQ,OAAO,UAAU,QAAQ;UACzF;QACF;MACF;MAEA,OAAe,oBACX,SAAqB,QAAgB,UACrC,UAA8B;AAEhC,YAAI,OAAO,uBAAuB,OAAO;AACzC,YAAI,CAAC,MAAM;AACT,gBAAM,IAAI,MAAM,qDAAqD;QACvE;AAEA,YAAI,QAAQ,KAAK,KAAA;AACjB,YAAI,iBAAiBA,cAAY;AAE/B,gBAAM,UAAU,QAAQ,UAAU,QAAQ;QAC5C,OAAO;AAEL,mBAAS,KAAK,MAAM,KAAK,CAAA,YAAW;AAClC,gBAAI,cAAkC,CAAA;AACtC,oBAAQ,UAAU,QAAQ,UAAU,WAAW;AAC/C,gBAAI,YAAY,SAAS,GAAG;AAC1B,qBAAO,QAAQ,IAAI,WAAW;YAChC;UACF,CAAC,CAAC;QACJ;MACF;;;;;;;;MASA,MAAa,YAAY,MAAgB,SAAkD;AACzF,YAAI;AACF,cAAI,WAA4B,CAAA;AAChC,eAAK,UAAU,MAAM,SAAS,QAAQ;AAKtC,cAAI,SAAS,SAAS,GAAG;AACvB,kBAAM,QAAQ,IAAI,QAAQ;UAC5B;AAGA,cAAI,SAAS,SAAS,UAAU,MAAM,KAAK,MAAM,SAAS,KAAK,KAAK;AAEpE,cAAI,kBAAkB,YAAY;AAIhC,mBAAOA,aAAW,cAAc,MAAM;UACxC,OAAO;AAGL,mBAAOA,aAAW,cAAc,MAAM,MAAM;UAC9C;QACF,UAAA;AACE,eAAK,QAAA;QACP;MACF;;;;;;MAOA,MAAa,iBAAmC;AAC9C,YAAI;AACF,cAAI,WAA4B,CAAA;AAChC,eAAK,UAAU,MAAM,SAAS,QAAQ;AAEtC,cAAI,SAAS,SAAS,GAAG;AACvB,kBAAM,QAAQ,IAAI,QAAQ;UAC5B;AAEA,cAAI,SAAS,KAAK;AAGlB,cAAI,kBAAkB,QAAQ;AAC5B,gBAAI,EAAE,OAAO,WAAW,SAAS;AAG/B,qBAAO,eAAe,QAAQ,OAAO,SAAS;;;;;;;;gBAQ5C,OAAO,6BAAM,KAAK,QAAA,GAAX;gBACP,UAAU;gBACV,YAAY;gBACZ,cAAc;cAAA,CACf;YACH;UACF;AAEA,iBAAO;QACT,SAAS,KAAK;AAEZ,eAAK,QAAA;AACL,gBAAM;QACR;MACF;MAEO,UAAU;AACf,YAAI,KAAK,WAAW,SAAS;AAE3B,eAAK,MAAO,QAAQ,CAAA,SAAQ,KAAK,OAAO,OAAO,EAAA,CAAG;AAClD,eAAK,SAAU,QAAQ,CAAA,YAAW,QAAQ,QAAQ,OAAO,OAAO,EAAA,CAAG;QACrE,WAAW,KAAK,WAAW,UAAU;AAGnC,eAAK,YAAY,KAAK,OAAO,MAAS;AACtC,cAAI,KAAK,cAAc,KAAK,WAAW,OAAO,GAAG;AAC/C,kBAAM,IAAI,MAAM,yDAAyD;UAC3E;QACF,MAAO;AAKP,aAAK,SAAS;AACd,aAAK,QAAQ,CAAA;AACb,aAAK,WAAW,CAAA;MAClB;;MAGQ,YAAY,OAAgB,QAA4B;AAC9D,YAAI,OAAO,WAAW,KAAK;AAC3B,gBAAQ,MAAA;UACN,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;AACH;UAEF,KAAK,SAAS;AACZ,gBAAIE,SAAwB;AAC5B,gBAAI,MAAMA,OAAM;AAChB,qBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,mBAAK,YAAYA,OAAM,CAAC,GAAGA,MAAK;YAClC;AACA;UACF;UAEA,KAAK,UAAU;AACb,gBAAI,SAAkC;AACtC,qBAAS,KAAK,QAAQ;AACpB,mBAAK,YAAY,OAAO,CAAC,GAAG,MAAM;YACpC;AACA;UACF;UAEA,KAAK;UACL,KAAK,eAAe;AAClB,gBAAI,OAAgB;AACpB,gBAAI,OAAO,uBAAuB,IAAI;AACtC,gBAAI,MAAM;AACR,mBAAK,QAAA;YACP;AACA;UACF;UAEA,KAAK;UACL,KAAK,cAAc;AACjB,gBAAI,SAA+B;AACnC,gBAAI,OAAO,KAAK,YAAY,IAAI,MAAM;AACtC,gBAAI,MAAM;AAER,mBAAK,QAAA;AACL,mBAAK,WAAY,OAAO,MAAM;YAChC,OAAO;AAOL,+BAAiB,MAAM;YACzB;AACA;UACF;UAEA,KAAK;AAEH;UAEF;AAEE;QAAA;MAEN;;;;MAKA,4BAAkC;AAChC,YAAI,KAAK,OAAO;AAEd,eAAK,MAAM,QAAQ,CAAA,SAAQ;AACzB,+BAAmB,IAAI,EAAE,0BAAA;UAC3B,CAAC;AACD,eAAK,SAAU;YACX,CAAA,YAAW,mBAAmB,QAAQ,OAAO,EAAE,0BAAA;UAA0B;QAC/E,OAAO;AAEL,eAAK,8BAA8B,KAAK,KAAK;QAC/C;MACF;MAEQ,8BAA8B,OAAgB;AACpD,YAAI,OAAO,WAAW,KAAK;AAC3B,gBAAQ,MAAA;UACN,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;AACH;UAEF,KAAK,SAAS;AACZ,gBAAIA,SAAwB;AAC5B,gBAAI,MAAMA,OAAM;AAChB,qBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,mBAAK,8BAA8BA,OAAM,CAAC,CAAC;YAC7C;AACA;UACF;UAEA,KAAK,UAAU;AACb,gBAAI,SAAkC;AACtC,qBAAS,KAAK,QAAQ;AACpB,mBAAK,8BAA8B,OAAO,CAAC,CAAC;YAC9C;AACA;UACF;UAEA,KAAK;UACL,KAAK;AACH,+BAA4B,KAAK,EAAE,0BAAA;AACnC;UAEF,KAAK;AACG,kBAAO,KAAK,CAAC,MAAW;YAAC,GAAG,CAAC,MAAW;YAAC,CAAC;AAChD;UAEF;AAEE;QAAA;MAEN;IACF;AAwIe,oBAAf,cAAqC,SAAS;aAAA;;;MAG5C,KAAK,MAAoB,MAA4B;AACnD,YAAI;AACF,cAAI,EAAC,OAAO,MAAA,IAAS,KAAK,SAAA;AAC1B,cAAI,eAAe,WAAW,OAAO,QAAW,MAAM,KAAK;AAE3D,cAAI,aAAa,MAAM;AACrB,mBAAO,aAAa,KAAK,KAAK,aAAa,eAAe,IAAI;UAChE;AAGA,cAAI,OAAO,aAAa,SAAS,YAAY;AAC3C,kBAAM,IAAI,UAAU,IAAI,KAAK,KAAK,GAAG,CAAC,sBAAsB;UAC9D;AACA,cAAI,UAAU,KAAK,YAAY,aAAa,OAAO,aAAa,MAAM;AACtE,iBAAO,IAAI,gBAAgB,QAAQ,KAAK,CAAA,YAAW;AACjD,mBAAO,IAAI,gBAAgB,OAAO;UACpC,CAAC,CAAC;QACJ,SAAS,KAAK;AACZ,iBAAO,IAAI,cAAc,GAAG;QAC9B;MACF;MAEA,IAAI,MAAoB,UAAsB,cAAmC;AAC/E,YAAI;AACF,cAAI;AACJ,cAAI;AACF,gBAAI,EAAC,OAAO,MAAA,IAAS,KAAK,SAAA;AAC1B,2BAAe,WAAW,OAAO,QAAW,MAAM,KAAK;AAAE;UAC3D,SAAS,KAAK;AAEZ,qBAAS,OAAO,UAAU;AACxB,kBAAI,QAAA;YACN;AACA,kBAAM;UACR;AAEA,cAAI,aAAa,MAAM;AACrB,mBAAO,aAAa,KAAK,IAAI,aAAa,eAAe,UAAU,YAAY;UACjF;AAEA,iBAAO,QAAQ;YACX,aAAa;YAAO,aAAa;YAAQ,aAAa;YAAO;YAAU;UAAA;QAC7E,SAAS,KAAK;AACZ,iBAAO,IAAI,cAAc,GAAG;QAC9B;MACF;MAEA,IAAI,MAA8B;AAChC,YAAI;AACF,cAAI,EAAC,OAAO,MAAA,IAAS,KAAK,SAAA;AAE1B,cAAI,KAAK,WAAW,KAAK,UAAU,MAAM;AAKvC,kBAAM,IAAI,MAAM,2CAA2C;UAC7D;AAEA,cAAI,eAAe,WAAW,OAAO,QAAW,MAAM,KAAK;AAE3D,cAAI,aAAa,MAAM;AACrB,mBAAO,aAAa,KAAK,IAAI,aAAa,aAAa;UACzD;AAWA,iBAAO,IAAI,gBAAgB,WAAW;YAClC,aAAa;YAAO,aAAa;YAAQ,aAAa;UAAA,CAAM;QAClE,SAAS,KAAK;AACZ,iBAAO,IAAI,cAAc,GAAG;QAC9B;MACF;IACF;AAUa,sBAAN,MAAMC,0BAAwB,cAAc;aAAA;;;MACjD,YAAY,SAAqB;AAC/B,cAAA;AACA,aAAK,UAAU;MACjB;MAEQ;;MAEA,aAAyB;AAC/B,YAAI,KAAK,SAAS;AAChB,iBAAO,KAAK;QACd,OAAO;AACL,gBAAM,IAAI,MAAM,yDAAyD;QAC3E;MACF;MAEU,WAAW;AACnB,YAAI,UAAU,KAAK,WAAA;AACnB,eAAO,EAAC,OAAO,QAAQ,OAAO,OAAO,QAAA;MACvC;MAEA,MAAgB;AAQd,YAAI,cAAc,KAAK,WAAA;AACvB,eAAO,IAAIA,kBAAgB,WAAW;UAClC,YAAY;UAAO;UAAW;QAAA,CAAY;MAChD;MAEA,OAAyC;AAIvC,eAAO,KAAK,WAAA;MACd;MAEA,4BAAkC;AAChC,YAAI,KAAK,SAAS;AAChB,eAAK,QAAQ,0BAAA;QACf;MACF;MAEA,UAAgB;AACd,YAAI,KAAK,SAAS;AAChB,eAAK,QAAQ,QAAA;AACb,eAAK,UAAU;QACjB;MACF;MAEA,SAAS,UAAsC;AAC7C,YAAI,KAAK,SAAS;AAChB,cAAI,KAAK,QAAQ,iBAAiB,SAAS;AAIzC,iBAAK,QAAQ,MAAM,YAAY,QAAQ;UACzC;QAGF;MACF;IACF;AA2BM,qBAAN,MAAMC,yBAAuB,cAAc;aAAA;;;;;;MAIzC,OAAO,OAAO,OAA6B,QAA4B;AACrE,YAAI,OAAO,UAAU,YAAY;AAI/B,mBAAS;QACX;AACA,eAAO,IAAIA,iBAAe,OAAO,MAAM;MACzC;MAEQ,YAAY,QACA,QACA,SAA0B;AAC5C,cAAA;AACA,aAAK,SAAS;AACd,aAAK,SAAS;AACd,YAAI,SAAS;AACX,cAAI,QAAQ,UAAU;AACpB,iBAAK,WAAW,QAAQ;AACxB,cAAE,KAAK,SAAS;UAClB;QACF,WAAW,OAAO,WAAW,QAAQ;AAEnC,eAAK,WAAW,EAAC,OAAO,EAAA;QAC1B;MACF;MAEQ;;MACA;;MACA;;MAEA,YAAkC;AACxC,YAAI,KAAK,QAAQ;AACf,iBAAO,KAAK;QACd,OAAO;AACL,gBAAM,IAAI,MAAM,yDAAyD;QAC3E;MACF;MAEU,WAAW;AACnB,eAAO,EAAC,OAAO,KAAK,UAAA,GAAa,OAAO,KAAA;MAC1C;MAEA,MAAgB;AACd,eAAO,IAAIA,iBAAe,KAAK,UAAA,GAAa,KAAK,QAAQ,IAAI;MAC/D;MAEA,OAAyC;AACvC,YAAI,SAAS,KAAK,UAAA;AAClB,YAAI,UAAU,QAAQ;AAGpB,iBAAO,QAAQ,QAAQ,MAAM,EAAE,KAAK,CAAA,eAAc;AAChD,mBAAO,WAAW,cAAc,UAAU;UAC5C,CAAC;QACH,OAAO;AAGL,iBAAO,QAAQ,OAAO,IAAI,MAAM,sCAAsC,CAAC;QACzE;MACF;MAEA,4BAAkC;MAElC;MAEA,UAAgB;AACd,YAAI,KAAK,QAAQ;AACf,cAAI,KAAK,UAAU;AACjB,gBAAI,EAAE,KAAK,SAAS,SAAS,GAAG;AAC9B,+BAAiB,KAAK,MAAM;YAC9B;UACF;AAEA,eAAK,SAAS;QAChB;MACF;MAEA,SAAS,UAAsC;MAE/C;IACF;AAIM,sBAAN,MAAMC,0BAAwB,SAAS;aAAA;;;MAC7B;MACA;MAER,YAAY,SAA4B;AACtC,cAAA;AAEA,aAAK,UAAU,QAAQ,KAAK,CAAA,QAAO;AAAE,eAAK,aAAa;AAAK,iBAAO;QAAK,CAAC;MAC3E;MAEA,KAAK,MAAoB,MAA4B;AASnD,aAAK,iBAAA;AAEL,eAAO,IAAIA,kBAAgB,KAAK,QAAQ,KAAK,CAAA,SAAQ,KAAK,KAAK,MAAM,IAAI,CAAC,CAAC;MAC7E;MAEA,IAAI,MAAoB,UAAsB,cAAmC;AAC/E,eAAO,IAAIA,kBAAgB,KAAK,QAAQ;UACpC,CAAA,SAAQ,KAAK,IAAI,MAAM,UAAU,YAAY;UAC7C,CAAA,QAAO;AACL,qBAAS,OAAO,UAAU;AACxB,kBAAI,QAAA;YACN;AACA,kBAAM;UACR;QAAA,CAAE;MACR;MAEA,IAAI,MAA8B;AAEhC,eAAO,IAAIA,kBAAgB,KAAK,QAAQ,KAAK,CAAA,SAAQ,KAAK,IAAI,IAAI,CAAC,CAAC;MACtE;MAEA,MAAgB;AACd,YAAI,KAAK,YAAY;AACnB,iBAAO,KAAK,WAAW,IAAA;QACzB,OAAO;AACL,iBAAO,IAAIA,kBAAgB,KAAK,QAAQ,KAAK,CAAA,SAAQ,KAAK,IAAA,CAAK,CAAC;QAClE;MACF;MAEA,OAAyC;AAKvC,YAAI,KAAK,YAAY;AACnB,iBAAO,KAAK,WAAW,KAAA;QACzB,OAAO;AACL,iBAAO,KAAK,QAAQ,KAAK,CAAA,SAAQ,KAAK,KAAA,CAAM;QAC9C;MACF;MAEA,4BAAkC;AAChC,YAAI,KAAK,YAAY;AACnB,eAAK,WAAW,0BAAA;QAClB,OAAO;AACL,eAAK,QAAQ,KAAK,CAAA,QAAO;AACvB,gBAAI,0BAAA;UACN,GAAG,CAAA,QAAO;UAEV,CAAC;QACH;MACF;MAEA,UAAgB;AACd,YAAI,KAAK,YAAY;AACnB,eAAK,WAAW,QAAA;QAClB,OAAO;AACL,eAAK,QAAQ,KAAK,CAAA,SAAQ;AACxB,iBAAK,QAAA;UACP,GAAG,CAAA,QAAO;UAEV,CAAC;QACH;MACF;MAEA,SAAS,UAAsC;AAC7C,YAAI,KAAK,YAAY;AACnB,eAAK,WAAW,SAAS,QAAQ;QACnC,OAAO;AACL,eAAK,QAAQ,KAAK,CAAA,SAAQ;AACxB,iBAAK,SAAS,QAAQ;UACxB,GAAG,QAAQ;QACb;MACF;IACF;ACzmDM,mBAAN,MAAuC;aAAA;;;MACrC,WAAW,MAAuB;AAChC,cAAM,IAAI,MAAM,oDAAoD;MACtE;MACA,cAAc,MAAuB;AACnC,cAAM,IAAI,MAAM,oDAAoD;MACtE;MACA,UAAU,MAAsC;AAC9C,eAAO;MACT;MACA,SAAS,KAA4B;MAAC;MAEtC,YAAYtB,SAA4B;MAAC;IAC3C;AAEM,oBAAgB,IAAI,aAAA;AAGpB,kBAAmC;MACvC;MAAO;MAAW;MAAY;MAAgB;MAAa;MAAW;MAAU;;IAElF;AAsBa,iBAAN,MAAMuB,aAAW;aAAA;;;MACd,YAAoB,UAA4BL,SAAgC;AAA5D,aAAA,WAAA;AAA4B,aAAA,SAAAA;MAAiC;;;;;;;;;MAUzF,OAAc,UACV,OAAgB,QAAiB,WAAqB,eAAeA,SAC3D;AACZ,YAAI,aAAa,IAAIK,aAAW,UAAUL,OAAM;AAChD,YAAI;AACF,iBAAO,WAAW,cAAc,OAAO,QAAQ,CAAC;QAClD,SAAS,KAAK;AACZ,cAAI,WAAW,SAAS;AACtB,gBAAI;AACF,uBAAS,SAAS,WAAW,OAAO;YACtC,SAASM,MAAK;YAEd;UACF;AACA,gBAAM;QACR;MACF;MAEQ;MAEA,cAAc,OAAgB,QAA4B,OAAwB;AACxF,YAAI,SAAS,IAAI;AACf,gBAAM,IAAI;YACN;UAAA;QACN;AAEA,YAAI,OAAO,WAAW,KAAK;AAC3B,gBAAQ,MAAA;UACN,KAAK,eAAe;AAClB,gBAAI;AACJ,gBAAI;AACF,oBAAM,2BAA2B,KAAK;YACxC,SAAS,KAAK;AACZ,oBAAM;YACR;AACA,kBAAM,IAAI,UAAU,GAAG;UACzB;UAEA,KAAK;AAEH,mBAAO;UAET,KAAK,UAAU;AACb,gBAAI,SAAkC;AACtC,gBAAI,SAAkC,CAAA;AACtC,qBAASrC,QAAO,QAAQ;AACtB,qBAAOA,IAAG,IAAI,KAAK,cAAc,OAAOA,IAAG,GAAG,QAAQ,QAAQ,CAAC;YACjE;AACA,mBAAO;UACT;UAEA,KAAK,SAAS;AACZ,gBAAIgC,SAAwB;AAC5B,gBAAI,MAAMA,OAAM;AAChB,gBAAI,SAAS,IAAI,MAAM,GAAG;AAC1B,qBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,qBAAO,CAAC,IAAI,KAAK,cAAcA,OAAM,CAAC,GAAGA,QAAO,QAAQ,CAAC;YAC3D;AAEA,mBAAO,CAAC,MAAM;UAChB;UAEA,KAAK;AACH,mBAAO,CAAC,UAAmB,MAAO,SAAA,CAAU;UAE9C,KAAK;AACH,mBAAO,CAAC,QAAe,MAAO,QAAA,CAAS;UAEzC,KAAK,SAAS;AACZ,gBAAI,QAAQ;AACZ,gBAAI,MAAM,UAAU;AAClB,qBAAO,CAAC,SAAS,MAAM,SAAS,EAAC,aAAa,KAAA,CAAK,CAAC;YACtD,OAAO;AACL,qBAAO;gBAAC;gBACJ,KAAK,OAAO,aAAa,MAAM,MAAM,KAAiB,EAAE,QAAQ,OAAO,EAAE,CAAC;cAAA;YAChF;UACF;UAEA,KAAK,SAAS;AACZ,gBAAI1B,KAAW;AAOf,gBAAI,YAAY,KAAK,SAAS,YAAYA,EAAC;AAC3C,gBAAI,WAAW;AACbA,mBAAI;YACN;AAEA,gBAAI,SAAS,CAAC,SAASA,GAAE,MAAMA,GAAE,OAAO;AACxC,gBAAI,aAAa,UAAU,OAAO;AAChC,qBAAO,KAAK,UAAU,KAAK;YAC7B;AACA,mBAAO;UACT;UAEA,KAAK;AACH,mBAAO,CAAC,WAAW;UAErB,KAAK;UACL,KAAK,eAAe;AAClB,gBAAI,CAAC,KAAK,QAAQ;AAChB,oBAAM,IAAI,MAAM,4CAA4C;YAC9D;AAEA,gBAAI,EAAC,MAAM,cAAA,IAAiB,kBAA2B,KAAK;AAC5D,gBAAI,WAAW,KAAK,SAAS,UAAU,IAAI;AAC3C,gBAAI,aAAa,QAAW;AAC1B,kBAAI,eAAe;AAEjB,oBAAI,cAAc,SAAS,GAAG;AAC5B,yBAAO,CAAC,YAAY,UAAU,aAAa;gBAC7C,OAAO;AACL,yBAAO,CAAC,YAAY,QAAQ;gBAC9B;cACF,OAAO;AACL,uBAAO,CAAC,UAAU,QAAQ;cAC5B;YACF;AAEA,gBAAI,eAAe;AACjB,qBAAO,KAAK,IAAI,aAAa;YAC/B,OAAO;AACL,qBAAO,KAAK,IAAA;YACd;AAEA,mBAAO,KAAK,cAAc,gBAAgB,YAAY,UAAU,IAAI;UACtE;UAEA,KAAK;UACL,KAAK,cAAc;AACjB,gBAAI,CAAC,KAAK,QAAQ;AAChB,oBAAM,IAAI,MAAM,4CAA4C;YAC9D;AAEA,gBAAI,OAAO,KAAK,OAAO,oBAAwC,OAAO,MAAM;AAC5E,mBAAO,KAAK,cAAc,UAAU,IAAI;UAC1C;UAEA,KAAK,gBAAgB;AACnB,gBAAI,CAAC,KAAK,QAAQ;AAChB,oBAAM,IAAI,MAAM,4CAA4C;YAC9D;AAEA,gBAAI,OAAO,KAAK,OAAO,oBAA+B,OAAO,MAAM;AACnE,mBAAO,KAAK,cAAc,WAAW,IAAI;UAC3C;UAEA;AAEE,kBAAM,IAAI,MAAM,aAAa;QAAA;MAEnC;MAEQ,cAAc,MAA4B,MAAyB;AACzE,YAAI,CAAC,KAAK,QAAS,MAAK,UAAU,CAAA;AAClC,YAAI,WAAW,SAAS,YAAY,KAAK,SAAS,cAAc,IAAI,IAChC,KAAK,SAAS,WAAW,IAAI;AACjE,aAAK,QAAQ,KAAK,QAAQ;AAC1B,eAAO,CAAC,MAAM,QAAQ;MACxB;IACF;AAkBM,mBAAN,MAAuC;aAAA;;;MACrC,WAAW,KAAsB;AAC/B,cAAM,IAAI,MAAM,sDAAsD;MACxE;MACA,cAAc,KAAsB;AAClC,cAAM,IAAI,MAAM,sDAAsD;MACxE;MACA,UAAU,KAAqC;AAC7C,eAAO;MACT;IACF;AAEM,oBAAgB,IAAI,aAAA;AAKb,gBAAN,MAAMgC,YAAU;aAAA;;;MACrB,YAAoB,UAAoB;AAApB,aAAA,WAAA;MAAqB;MAEjC,QAAmB,CAAA;MACnB,WAA6B,CAAA;MAE9B,SAAS,OAA4B;AAC1C,YAAI,UAAU,WAAW,YAAY,KAAK,OAAO,KAAK,QAAQ;AAC9D,YAAI;AACF,kBAAQ,QAAQ,KAAK,aAAa,OAAO,SAAS,OAAO;AACzD,iBAAO;QACT,SAAS,KAAK;AACZ,kBAAQ,QAAA;AACR,gBAAM;QACR;MACF;;MAGO,aAAa,OAA4B;AAC9C,eAAO,KAAK,SAAS,gBAAgB,KAAK,CAAC;MAC7C;MAEQ,aAAa,OAAgB,QAAgB,UAAoC;AACvF,YAAI,iBAAiB,OAAO;AAC1B,cAAI,MAAM,UAAU,KAAK,MAAM,CAAC,aAAa,OAAO;AAElD,gBAAI,SAAS,MAAM,CAAC;AACpB,qBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,qBAAO,CAAC,IAAI,KAAK,aAAa,OAAO,CAAC,GAAG,QAAQ,CAAC;YACpD;AACA,mBAAO;UACT,MAAO,SAAQ,MAAM,CAAC,GAAA;YACpB,KAAK;AACH,kBAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B,uBAAO,OAAO,MAAM,CAAC,CAAC;cACxB;AACA;YACF,KAAK;AACH,kBAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B,uBAAO,IAAI,KAAK,MAAM,CAAC,CAAC;cAC1B;AACA;YACF,KAAK,SAAS;AACZ,kBAAI,MAAM;AACV,kBAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B,oBAAI,IAAI,YAAY;AAClB,yBAAO,IAAI,WAAW,MAAM,CAAC,CAAC;gBAChC,OAAO;AACL,sBAAI,KAAK,KAAK,MAAM,CAAC,CAAC;AACtB,sBAAI,MAAM,GAAG;AACb,sBAAI,QAAQ,IAAI,WAAW,GAAG;AAC9B,2BAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,0BAAM,CAAC,IAAI,GAAG,WAAW,CAAC;kBAC5B;AACA,yBAAO;gBACT;cACF;AACA;YACF;YACA,KAAK;AACH,kBAAI,MAAM,UAAU,KAAK,OAAO,MAAM,CAAC,MAAM,YAAY,OAAO,MAAM,CAAC,MAAM,UAAU;AACrF,oBAAI,MAAM,YAAY,MAAM,CAAC,CAAC,KAAK;AACnC,oBAAI,SAAS,IAAI,IAAI,MAAM,CAAC,CAAC;AAC7B,oBAAI,OAAO,MAAM,CAAC,MAAM,UAAU;AAChC,yBAAO,QAAQ,MAAM,CAAC;gBACxB;AACA,uBAAO;cACT;AACA;YACF,KAAK;AACH,kBAAI,MAAM,WAAW,GAAG;AACtB,uBAAO;cACT;AACA;YAEF,KAAK;YACL,KAAK,YAAY;AAIf,kBAAI,MAAM,SAAS,KAAK,MAAM,SAAS,GAAG;AACxC;cACF;AAIA,kBAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B;cACF;AAEA,kBAAI,OAAO,KAAK,SAAS,UAAU,MAAM,CAAC,CAAC;AAC3C,kBAAI,CAAC,MAAM;AACT,sBAAM,IAAI,MAAM,mCAAmC,MAAM,CAAC,CAAC,EAAE;cAC/D;AAEA,kBAAI,YAAY,MAAM,CAAC,KAAK;AAE5B,kBAAI,UAAU,wBAACC,UAAmB;AAChC,oBAAI,WAAW;AACb,sBAAI,UAAU,IAAI,WAAWA,OAAM,CAAA,CAAE;AACrC,uBAAK,SAAS,KAAK,EAAC,SAAS,QAAQ,SAAA,CAAS;AAC9C,yBAAO;gBACT,OAAO;AACL,sBAAI,OAAO,IAAI,WAAWA,OAAM,CAAA,CAAE;AAClC,uBAAK,MAAM,KAAK,IAAI;AACpB,yBAAO;gBACT;cACF,GAVc;AAYd,kBAAI,MAAM,UAAU,GAAG;AAErB,oBAAI,WAAW;AAEb,yBAAO,QAAQ,KAAK,IAAI,CAAA,CAAE,CAAC;gBAC7B,OAAO;AAEL,yBAAO,QAAQ,KAAK,IAAA,CAAK;gBAC3B;cACF;AAGA,kBAAI,OAAO,MAAM,CAAC;AAClB,kBAAI,EAAE,gBAAgB,QAAQ;AAC5B;cACF;AACA,kBAAI,CAAC,KAAK;gBACN,CAAA,SAAQ;AAAE,yBAAO,OAAO,QAAQ,YAAY,OAAO,QAAQ;gBAAU;cAAA,GAAI;AAC3E;cACF;AAEA,kBAAI,MAAM,UAAU,GAAG;AAErB,uBAAO,QAAQ,KAAK,IAAI,IAAI,CAAC;cAC/B;AAUA,kBAAI,OAAO,MAAM,CAAC;AAClB,kBAAI,EAAE,gBAAgB,QAAQ;AAC5B;cACF;AAGA,kBAAI,UAAU,IAAID,YAAU,KAAK,QAAQ;AACzC,qBAAO,QAAQ,SAAS,CAAC,IAAI,CAAC;AAE9B,qBAAO,QAAQ,KAAK,KAAK,MAAM,IAAI,CAAC;YACtC;YAEA,KAAK,SAAS;AACZ,kBAAI,MAAM,WAAW,KACjB,OAAO,MAAM,CAAC,MAAM,YACpB,EAAE,MAAM,CAAC,aAAa,UACtB,EAAE,MAAM,CAAC,aAAa,UACtB,EAAE,MAAM,CAAC,aAAa,QAAQ;AAChC;cACF;AAEA,kBAAI,OAAO,KAAK,SAAS,UAAU,MAAM,CAAC,CAAC;AAC3C,kBAAI,CAAC,MAAM;AACT,sBAAM,IAAI,MAAM,mCAAmC,MAAM,CAAC,CAAC,EAAE;cAC/D;AAEA,kBAAI,OAAO,MAAM,CAAC;AAClB,kBAAI,CAAC,KAAK;gBACN,CAAA,SAAQ;AAAE,yBAAO,OAAO,QAAQ,YAAY,OAAO,QAAQ;gBAAU;cAAA,GAAI;AAC3E;cACF;AAEA,kBAAI,WAAuB,MAAM,CAAC,EAAE,IAAI,CAAA,QAAO;AAC7C,oBAAI,EAAE,eAAe,UACjB,IAAI,WAAW,KACd,IAAI,CAAC,MAAM,YAAY,IAAI,CAAC,MAAM,YACnC,OAAO,IAAI,CAAC,MAAM,UAAU;AAC9B,wBAAM,IAAI,UAAU,wBAAwB,KAAK,UAAU,GAAG,CAAC,EAAE;gBACnE;AAEA,oBAAI,IAAI,CAAC,MAAM,UAAU;AACvB,yBAAO,KAAK,SAAS,WAAW,IAAI,CAAC,CAAC;gBACxC,OAAO;AACL,sBAAI,MAAM,KAAK,SAAS,UAAU,IAAI,CAAC,CAAC;AACxC,sBAAI,CAAC,KAAK;AACR,0BAAM,IAAI,MAAM,mCAAmC,IAAI,CAAC,CAAC,EAAE;kBAC7D;AACA,yBAAO,IAAI,IAAA;gBACb;cACF,CAAC;AAED,kBAAI,eAAe,MAAM,CAAC;AAE1B,kBAAI,aAAa,KAAK,IAAI,MAAM,UAAU,YAAY;AAEtD,kBAAI,UAAU,IAAI,WAAW,YAAY,CAAA,CAAE;AAC3C,mBAAK,SAAS,KAAK,EAAC,SAAS,QAAQ,SAAA,CAAS;AAC9C,qBAAO;YACT;YAEA,KAAK;YACL,KAAK;AASH,kBAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B,oBAAI,MAAM,CAAC,KAAK,WAAW;AACzB,sBAAI,OAAO,KAAK,SAAS,cAAc,MAAM,CAAC,CAAC;AAC/C,sBAAI,UAAU,IAAI,WAAW,MAAM,CAAA,CAAE;AACrC,uBAAK,SAAS,KAAK,EAAC,QAAQ,UAAU,QAAA,CAAQ;AAC9C,yBAAO;gBACT,OAAO;AACL,sBAAI,OAAO,KAAK,SAAS,WAAW,MAAM,CAAC,CAAC;AAC5C,sBAAI,OAAO,IAAI,QAAQ,IAAI;AAC3B,uBAAK,MAAM,KAAK,IAAI;AACpB,yBAAO;gBACT;cACF;AACA;UAAA;AAEJ,gBAAM,IAAI,UAAU,0BAA0B,KAAK,UAAU,KAAK,CAAC,EAAE;QACvE,WAAW,iBAAiB,QAAQ;AAClC,cAAI,SAAkC;AACtC,mBAAStC,QAAO,QAAQ;AACtB,gBAAIA,QAAO,OAAO,aAAaA,SAAQ,UAAU;AAW/C,mBAAK,aAAa,OAAOA,IAAG,GAAG,QAAQA,IAAG;AAC1C,qBAAO,OAAOA,IAAG;YACnB,OAAO;AACL,qBAAOA,IAAG,IAAI,KAAK,aAAa,OAAOA,IAAG,GAAG,QAAQA,IAAG;YAC1D;UACF;AACA,iBAAO;QACT,OAAO;AAEL,iBAAO;QACT;MACF;IACF;AKlgBM,iBAAN,MAAqC;aAAA;;;MAC3B;MAGA,aAAA,oBAAwC,IAAA;MAExC,eAAiC,CAAA;MAEzC,YAAY,SAAmB,MAAoB;AACjD,YAAI,mBAAmB;AACrB,eAAK,UAAU;YACb,QAAQ;YACR,UAAU,CAAA;YACV,SAAS,kBAAkB,QAAQ,OAAO;YAC1C;UAAA;QAEJ,OAAO;AACL,eAAK,UAAU;YACb,QAAQ;YACR,UAAU,CAAA;YACV;YACA;UAAA;QAEJ;AAEA,4BAAoB;MACtB;MAEA,aAAa;AACX,4BAAoB,KAAK,QAAQ;MACnC;MAEA,YAA6B;AAC3B,eAAO,IAAI,gBAAgB,MAAM,CAAC;MACpC;MAEA,WAAW,QAA8B;AACvC,YAAI;AACJ,YAAI;AACF,qBAAW,WAAW,UAAU,OAAO,OAAO,QAAW,MAAM,MAAM;QACvE,UAAA;AACE,iBAAO,QAAA;QACT;AAIA,aAAK,aAAa,KAAU,QAAQ;AAEpC,YAAI,KAAK,QAAQ,QAAQ;AACvB,eAAK,QAAQ,OAAO,aAAa;YAC/B;cAAC;cAAS,KAAK,QAAQ;cAAS,KAAK,QAAQ;cACnC,KAAK,QAAQ,SAAS,IAAI,CAAA,QAAO,CAAC,UAAU,GAAG,CAAC;cAChD,KAAK;YAAA;UAAY;AAE7B,iBAAO,IAAI,gBAAgB,KAAK,QAAQ,QAAQ,KAAK,QAAQ,OAAO,aAAa,MAAM;QACzF,OAAO;AACL,iBAAO,KAAK,QAAQ,QAAQ,IAAI,KAAK,QAAQ,MAAM,KAAK,QAAQ,UAAU,KAAK,YAAY;QAC7F;MACF;MAEA,SAAS,MAAgB,MAAoB,QAA8B;AACzE,YAAI,WAAW,WAAW,UAAU,OAAO,OAAO,QAAW,MAAM,MAAM;AAGzE,mBAA4B,SAAU,CAAC;AAEvC,YAAI,UAAU,KAAK,QAAQ,KAAK,IAAA,CAAK;AACrC,aAAK,aAAa,KAAK,CAAC,YAAY,SAAS,MAAM,QAAQ,CAAC;AAC5D,eAAO,IAAI,gBAAgB,MAAM,KAAK,aAAa,MAAM;MAC3D;MAEA,QAAQ,MAAgB,MAA8B;AACpD,YAAI,UAAU,KAAK,QAAQ,KAAK,IAAA,CAAK;AACrC,aAAK,aAAa,KAAK,CAAC,YAAY,SAAS,IAAI,CAAC;AAClD,eAAO,IAAI,gBAAgB,MAAM,KAAK,aAAa,MAAM;MAC3D;MAEA,QAAQ,MAAwB;AAC9B,YAAI,gBAAgB,mBAAmB,KAAK,WAAW,MAAM;AAE3D,iBAAO,KAAK;QACd;AAKA,YAAI,SAAS,KAAK,WAAW,IAAI,IAAI;AACrC,YAAI,WAAW,QAAW;AACxB,cAAI,KAAK,QAAQ,QAAQ;AACvB,gBAAI,YAAY,KAAK,QAAQ,OAAO,QAAQ,IAAI;AAChD,iBAAK,QAAQ,SAAS,KAAK,SAAS;UACtC,OAAO;AACL,iBAAK,QAAQ,SAAS,KAAK,IAAI;UACjC;AACA,mBAAS,CAAC,KAAK,QAAQ,SAAS;AAChC,eAAK,WAAW,IAAI,MAAM,MAAM;QAClC;AACA,eAAO;MACT;;;MAKA,WAAW,MAA0B;AAanC,cAAM,IAAI;UACN;QAAA;MAEN;MACA,cAAc,MAA0B;AACtC,eAAO,KAAK,WAAW,IAAI;MAC7B;MACA,UAAU,MAAsC;AAC9C,eAAO,KAAK,QAAQ,IAAI;MAC1B;MAEA,SAAS,KAA4B;MAErC;MAEA,YAAYa,SAA4B;MAExC;IACF;AAEA,YAAQ,UAAU,CAAC,MAAgB,MAAoB,SAA2C;AAChG,UAAI,UAAU,IAAI,WAAW,MAAM,IAAI;AACvC,UAAI;AACJ,UAAI;AACF,iBAAS,WAAW,cAAc,oBAAoB,QAAQ,SAAS,KAAK,OAAO,GAAG,MAAM;AAC1F,iBAAO,KAAK,IAAI,WAAW,QAAQ,UAAA,GAAa,CAAA,CAAE,CAAC;QACrD,CAAC,CAAC;MACJ,UAAA;AACE,gBAAQ,WAAA;MACV;AAGA,UAAI,kBAAkB,SAAS;AAG7B,eAAO,MAAM,CAAA,QAAO;QAAC,CAAC;AAGtB,cAAM,IAAI,MAAM,sCAAsC;MACxD;AAEA,aAAO,IAAI,WAAW,QAAQ,WAAW,MAAM,GAAG,CAAA,CAAE;IACtD;AASM,sBAAN,cAA8B,SAAS;aAAA;;;MACrC,YAAmB,QAA2B,KAAa;AACzD,cAAA;AADiB,aAAA,SAAA;AAA2B,aAAA,MAAA;MAE9C;;MAGA,MAAgB;AAAE,eAAO;MAAM;MAC/B,UAAgB;MAAC;MAEjB,IAAI,MAA8B;AAEhC,YAAI,KAAK,UAAU,GAAG;AAGpB,iBAAO;QACT,WAAW,mBAAmB;AAC5B,iBAAO,kBAAkB,QAAQ,MAAM,IAAI;QAC7C,OAAO;AACL,qCAAA;QACF;MACF;;MAGA,KAAK,MAAoB,MAA4B;AAEnD,mCAAA;MACF;MAEA,IAAI,MAAoB,UAAsB,cAAmC;AAE/E,mCAAA;MACF;MAEA,OAAyC;AAEvC,mCAAA;MACF;MAEA,4BAAkC;MAElC;MAEA,SAAS,UAAsC;AAC7C,mCAAA;MACF;IACF;AAIM,oBAAN,MAAwC;aAAA;;;MAGtC,YAAoB,UAAsB,OAAiB;AAAvC,aAAA,WAAA;AAClB,aAAK,YAAY,CAAC,KAAK;MACzB;MAJQ;MAMR,UAAU;AACR,iBAAS,YAAY,KAAK,WAAW;AACnC,mBAAS,QAAA;QACX;MACF;MAEA,MAAM,cAAqC;AACzC,YAAI;AACF,cAAI,aAAa,SAAS,GAAG;AAC3B,kBAAM,IAAI,MAAM,gCAAgC;UAClD;AAEA,mBAAS,eAAe,aAAa,MAAM,GAAG,EAAE,GAAG;AACjD,gBAAI,UAAU,IAAI,UAAU,IAAI,EAAE,aAAa,WAAW;AAG1D,gBAAI,QAAQ,iBAAiB,SAAS;AACpC,kBAAI,OAAO,uBAAuB,QAAQ,KAAK;AAC/C,kBAAI,MAAM;AACR,qBAAK,UAAU,KAAK,IAAI;AACxB;cACF;YACF;AAEA,iBAAK,UAAU,KAAK,IAAI,gBAAgB,OAAO,CAAC;UAClD;AAEA,iBAAO,IAAI,UAAU,IAAI,EAAE,aAAa,aAAa,aAAa,SAAS,CAAC,CAAC;QAC/E,UAAA;AACE,mBAAS,YAAY,KAAK,WAAW;AACnC,qBAAS,QAAA;UACX;QACF;MACF;MAEA,WAAW,KAAyB;AAGlC,cAAM,IAAI,MAAM,4CAA4C;MAC9D;MACA,cAAc,KAAyB;AACrC,eAAO,KAAK,WAAW,GAAG;MAC5B;MAEA,UAAU,KAAqC;AAC7C,YAAI,MAAM,GAAG;AACX,iBAAO,KAAK,SAAS,CAAC,MAAM,CAAC;QAC/B,OAAO;AACL,iBAAO,KAAK,UAAU,GAAG;QAC3B;MACF;IACF;AAgBA,YAAQ,WAAW,CAAC,OAAgB,QAA4B,OAC5C,UAAsB,iBAA4B;AACpE,UAAI;AACF,YAAI;AACJ,YAAI,iBAAiB,YAAY;AAG/B,gBAAM,IAAI,MAAM,0CAA0C;QAC5D,WAAW,iBAAiB,OAAO;AACjC,cAAI,WAAyB,CAAA;AAC7B,cAAI;AACF,qBAAS,QAAQ,OAAO;AACtB,uBAAS,KAAK,kBAAkB,MAAM,OAAO,OAAO,UAAU,YAAY,CAAC;YAC7E;UACF,SAAS,KAAK;AACZ,qBAAS,WAAW,UAAU;AAC5B,sBAAQ,QAAA;YACV;AACA,kBAAM;UACR;AAEA,mBAAS,WAAW,UAAU,QAAQ;QACxC,WAAW,UAAU,QAAQ,UAAU,QAAW;AAChD,mBAAS,WAAW,cAAc,KAAK;QACzC,OAAO;AACL,mBAAS,kBAAkB,OAAO,QAAQ,OAAO,UAAU,YAAY;QACzE;AAIA,eAAO,IAAI,gBAAgB,MAAM;MACnC,UAAA;AACE,iBAAS,OAAO,UAAU;AACxB,cAAI,QAAA;QACN;MACF;IACF;;;AEtVA,IAmCI;AAnCJ,IA0obM;AA1obN,IAAA,gCAAA,MAAA;EAAA,kJAAA;AAmCI,yBAAqB,MAAM;AAC7B,UAAI,cAAc,YAAY;AAE9B,aAAO,SAAU,YAAY,CAAC,GAAG;AAC/B,YAAI;AAEJ,YAAI,SAAS;AAEb,YAAI,qBAAqB;AACzB,YAAI,eAAe,IAAI,QAAQ,CAACf,UAAS,WAAW;AAClD,gCAAsBA;AACtB,+BAAqB;QACvB,CAAC;AAED,YAAI,qBAAqB,OAAO,UAAU;AAC1C,YAAI,wBAAwB,OAAO,iBAAiB;AAEpD,YAAI,sBACF,OAAO,WAAW,YAClB,OAAO,QAAQ,YAAY,YAC3B,OAAO,QAAQ,SAAS,QAAQ,YAChC,QAAQ,QAAQ;AAClB,YAAI,uBACF,CAAC,sBAAsB,CAAC,uBAAuB,CAAC;AAElD,cAAM,yBACJ,WAAW,0BACX,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;UACjC,aAAa,6BAAM;UAAC,GAAP;QACf,CAAC;AACH,eAAO,WAAW;AAClB,+BAAuB;UACrB;UACA,WAAW;QACb;AAEA,YAAI,kBAAkB,OAAO,OAAO,CAAC,GAAG,MAAM;AAE9C,YAAI,aAAa,CAAC;AAClB,YAAI,cAAc;AAClB,YAAI,QAAQ,wBAAC,QAAQ,YAAY;AAC/B,gBAAM;QACR,GAFY;AAIZ,YAAI,kBAAkB;AACtB,iBAAS,WAAW,MAAM;AACxB,cAAI,OAAO,YAAY,GAAG;AACxB,mBAAO,OAAO,YAAY,EAAE,MAAM,eAAe;UACnD;AACA,iBAAO,kBAAkB;QAC3B;AALS;AAOT,YAAI,WAAW;AAEf,YAAI,sBAAsB,uBAAuB;AAC/C,cAAI,uBAAuB;AACzB,8BAAkB,KAAK,SAAS;UAClC,WAAW,OAAO,YAAY,eAAe,SAAS,eAAe;AACnE,8BAAkB,SAAS,cAAc;UAC3C;AAEA,cAAI,aAAa;AACf,8BAAkB;UACpB;AAEA,cAAI,gBAAgB,WAAW,OAAO,GAAG;AACvC,8BAAkB;UACpB,OAAO;AACL,8BAAkB,gBAAgB;cAChC;cACA,gBAAgB,QAAQ,UAAU,EAAE,EAAE,YAAY,GAAG,IAAI;YAC3D;UACF;AAEA;AACE,gBAAI,uBAAuB;AACzB,2BAAa,wBAAC,QAAQ;AACpB,oBAAI,MAAM,IAAI,eAAe;AAC7B,oBAAI,KAAK,OAAO,KAAK,KAAK;AAC1B,oBAAI,eAAe;AACnB,oBAAI,KAAK,IAAI;AACb,uBAAO,IAAI,WAAW,IAAI,QAAQ;cACpC,GANa;YAOf;AAEA,wBAAY,wBAAC,QAAQ;AACnB,qBAAO,MAAM,KAAK,EAAE,aAAa,cAAc,CAAC,EAAE,KAAK,CAAC,aAAa;AACnE,oBAAI,SAAS,IAAI;AACf,yBAAO,SAAS,YAAY;gBAC9B;AACA,uBAAO,QAAQ;kBACb,IAAI,MAAM,SAAS,SAAS,QAAQ,SAAS,GAAG;gBAClD;cACF,CAAC;YACH,GATY;UAUd;QACF,OAAO;QACP;AAEA,YAAI,MAAM,OAAO,OAAO,KAAK,QAAQ,IAAI,KAAK,OAAO;AACrD,YAAI,MAAM,OAAO,UAAU,KAAK,QAAQ,MAAM,KAAK,OAAO;AAE1D,eAAO,OAAO,QAAQ,eAAe;AAErC,0BAAkB;AAElB,YAAI,OAAO,WAAW,EAAG,cAAa,OAAO,WAAW;AAExD,YAAI,OAAO,aAAa,EAAG,eAAc,OAAO,aAAa;AAE7D,YAAI,aAAa,OAAO,YAAY;AAEpC,YAAI;AAEJ,YAAI,QAAQ;AAEZ,YAAI;AAEJ,iBAAS0C,QAAO,WAAW9C,OAAM;AAC/B,cAAI,CAAC,WAAW;AACdkB,YAAAA,QAAMlB,KAAI;UACZ;QACF;AAJS,eAAA8C,SAAA;AAMT,YAAI,MACF,OACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA;AAEF,iBAAS,oBAAoB;AAC3B,cAAI,IAAI,WAAW;AACnB,iBAAO,OAAO,IAAI,QAAQ,IAAI,UAAU,CAAC;AACzC,iBAAO,QAAQ,IAAI,SAAS,IAAI,WAAW,CAAC;AAC5C,iBAAO,QAAQ,IAAI,SAAS,IAAI,WAAW,CAAC;AAC5C,iBAAO,SAAS,IAAI,UAAU,IAAI,YAAY,CAAC;AAC/C,iBAAO,QAAQ,IAAI,SAAS,IAAI,WAAW,CAAC;AAC5C,iBAAO,SAAS,IAAI,UAAU,IAAI,YAAY,CAAC;AAC/C,iBAAO,SAAS,IAAI,UAAU,IAAI,aAAa,CAAC;AAChD,iBAAO,SAAS,IAAI,UAAU,IAAI,aAAa,CAAC;AAChD,iBAAO,QAAQ,IAAI,SAAS,IAAI,cAAc,CAAC;AAC/C,iBAAO,SAAS,IAAI,UAAU,IAAI,eAAe,CAAC;QACpD;AAZS;AAcT,YAAI,OAAO,YAAY,GAAG;AACxB,uBAAa,OAAO,YAAY;QAClC,OAAO;AACL,cAAI,iBAAiB,OAAO,gBAAgB,KAAK;AAEjD,uBAAa,IAAI,YAAY,OAAO;YAClC,SAAS,iBAAiB;YAE1B,SAAS;UACX,CAAC;QACH;AAEA,0BAAkB;AAElB,YAAI,eAAe,CAAC;AACpB,YAAI,aAAa,CAAC;AAClB,YAAI,aAAa,CAAC;AAClB,YAAI,gBAAgB,CAAC;AAErB,YAAI,qBAAqB;AAEzB,iBAAS,SAAS;AAChB,cAAI,UAAU,OAAO,QAAQ;AAC7B,cAAI,SAAS;AACX,gBAAI,OAAO,WAAW,WAAY,WAAU,CAAC,OAAO;AACpD,oBAAQ,QAAQ,WAAW;UAC7B;AACA,+BAAqB,YAAY;QACnC;AAPS;AAST,iBAAS,cAAc;AACrB,+BAAqB;AAErB,cAAI,CAAC,OAAO,UAAU,KAAK,CAAC,GAAG,YAAa,IAAG,KAAK;AACpD,aAAG,oBAAoB;AAEvB,cAAI,KAAK;AACT,+BAAqB,UAAU;QACjC;AARS;AAUT,iBAAS,UAAU;AACjB,cAAI,WAAW,OAAO,SAAS;AAC/B,cAAI,UAAU;AACZ,gBAAI,OAAO,YAAY,WAAY,YAAW,CAAC,QAAQ;AACvD,qBAAS,QAAQ,YAAY;UAC/B;AAEA,+BAAqB,aAAa;QACpC;AARS;AAUT,iBAAS,YAAY,IAAI;AACvB,uBAAa,QAAQ,EAAE;QACzB;AAFS;AAIT,iBAAS,UAAU,IAAI;AACrB,qBAAW,QAAQ,EAAE;QACvB;AAFS;AAIT,iBAAS,UAAU,IAAI;QAAC;AAAf;AAET,iBAAS,aAAa,IAAI;AACxB,wBAAc,QAAQ,EAAE;QAC1B;AAFS;AAIT,YAAI,kBAAkB;AACtB,YAAI,uBAAuB;AAC3B,YAAI,wBAAwB;AAE5B,iBAAS,uBAAuB,IAAI;AAClC,iBAAO;QACT;AAFS;AAIT,iBAAS,iBAAiB,IAAI;AAC5B;AAEA,iBAAO,wBAAwB,IAAI,eAAe;QACpD;AAJS;AAMT,iBAAS,oBAAoB,IAAI;AAC/B;AAEA,iBAAO,wBAAwB,IAAI,eAAe;AAElD,cAAI,mBAAmB,GAAG;AACxB,gBAAI,yBAAyB,MAAM;AACjC,4BAAc,oBAAoB;AAClC,qCAAuB;YACzB;AACA,gBAAI,uBAAuB;AACzB,kBAAI,WAAW;AACf,sCAAwB;AACxB,uBAAS;YACX;UACF;QACF;AAhBS;AAkBT,iBAAS5B,QAAM,MAAM;AACnB,iBAAO,SAAS,IAAI,IAAI;AAExB,iBAAO,aAAa,OAAO;AAE3B,cAAI,IAAI;AAER,kBAAQ;AAER,kBAAQ;AAER,cAAIN,KAAI,IAAI,YAAY,aAAa,IAAI;AAEzC,6BAAmBA,EAAC;AAEpB,gBAAMA;QACR;AAhBSM,eAAAA,SAAAA;AAkBT,YAAI,gBAAgB;AAEpB,YAAI,YAAY,wBAAC,aAAa,SAAS,WAAW,aAAa,GAA/C;AAEhB,YAAI,YAAY,wBAAC,aAAa,SAAS,WAAW,SAAS,GAA3C;AAEhB,iBAAS,iBAAiB;AACxB,cAAI,OAAO,YAAY,GAAG;AACxB,gBAAI,IAAI;AACR,gBAAI,CAAC,UAAU,CAAC,GAAG;AACjB,qBAAO,WAAW,CAAC;YACrB;AACA,mBAAO;UACT;AAEA,iBAAO,IAAI,IAAI,gBAAgB,YAAY,GAAG,EAAE;QAClD;AAVS;AAYT,YAAI;AAEJ,iBAAS,cAAc,MAAM;AAC3B,cAAI,QAAQ,kBAAkB,YAAY;AACxC,mBAAO,IAAI,WAAW,UAAU;UAClC;AACA,cAAI,YAAY;AACd,mBAAO,WAAW,IAAI;UACxB;AACA,gBAAM;QACR;AARS;AAUT,iBAAS,iBAAiB,YAAY;AACpC,cAAI,CAAC,YAAY;AACf,mBAAO,UAAU,UAAU,EAAE;cAC3B,CAAC,aAAa,IAAI,WAAW,QAAQ;cAErC,MAAM,cAAc,UAAU;YAChC;UACF;AAEA,iBAAO,QAAQ,QAAQ,EAAE,KAAK,MAAM,cAAc,UAAU,CAAC;QAC/D;AAVS;AAYT,iBAAS,uBAAuB,YAAYW,UAAS,UAAU;AAC7D,iBAAO,iBAAiB,UAAU,EAC/B,KAAK,CAAC,WAAW;AAChB,mBAAO,YAAY,YAAY,QAAQA,QAAO;UAChD,CAAC,EACA,KAAK,UAAU,CAAC,WAAW;AAC1B,gBAAI,0CAA0C,MAAM,EAAE;AAEtDX,YAAAA,QAAM,MAAM;UACd,CAAC;QACL;AAVS;AAYT,iBAAS,iBAAiB,QAAQ,YAAYW,UAAS,UAAU;AAC/D,cACE,CAAC,UACD,OAAO,YAAY,wBAAwB,cAC3C,CAAC,UAAU,UAAU,KACrB,OAAO,SAAS,YAChB;AACA,mBAAO,MAAM,YAAY,EAAE,aAAa,cAAc,CAAC,EAAE;cACvD,CAAC,aAAa;AACZ,oBAAI,SAAS,YAAY,qBAAqB,UAAUA,QAAO;AAE/D,uBAAO,OAAO,KAAK,UAAU,SAAU,QAAQ;AAC7C,sBAAI,kCAAkC,MAAM,EAAE;AAC9C,sBAAI,2CAA2C;AAC/C,yBAAO,uBAAuB,YAAYA,UAAS,QAAQ;gBAC7D,CAAC;cACH;YACF;UACF;AACA,iBAAO,uBAAuB,YAAYA,UAAS,QAAQ;QAC7D;AApBS;AAsBT,iBAAS,iBAAiB;AACxB,iBAAO;YACL,KAAK;YACL,wBAAwB;UAC1B;QACF;AALS;AAOT,iBAAS,aAAa;AACpB,cAAIkB,QAAO,eAAe;AAE1B,mBAAS,gBAAgB,UAAU,QAAQ;AACzC,0BAAc,SAAS;AAEvB,sBAAU,YAAY,mBAAmB,CAAC;AAE1C,gCAAoB,kBAAkB;AACtC,mBAAO;UACT;AAPS;AAST,2BAAiB,kBAAkB;AAEnC,mBAAS,2BAA2B,QAAQ;AAC1C,4BAAgB,OAAO,UAAU,CAAC;UACpC;AAFS;AAIT,cAAI,OAAO,iBAAiB,GAAG;AAC7B,gBAAI;AACF,qBAAO,OAAO,iBAAiB,EAAEA,OAAM,eAAe;YACxD,SAASnC,IAAG;AACV,kBAAI,sDAAsDA,EAAC,EAAE;AAE7D,iCAAmBA,EAAC;YACtB;UACF;AAEA,6BAAmB,eAAe;AAElC;YACE;YACA;YACAmC;YACA;UACF,EAAE,MAAM,kBAAkB;AAC1B,iBAAO,CAAC;QACV;AArCS;AAuCT,iBAAS,WAAW,QAAQ;AAC1B,eAAK,OAAO;AACZ,eAAK,UAAU,gCAAgC,MAAM;AACrD,eAAK,SAAS;QAChB;AAJS;AAMT,YAAI,uBAAuB,wBAAC,cAAc;AACxC,oBAAU,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC;QACpC,GAF2B;AAI3B,iBAAS,SAAS,KAAK,OAAO,MAAM;AAClC,cAAI,KAAK,SAAS,GAAG,EAAG,QAAO;AAC/B,kBAAQ,MAAM;YACZ,KAAK;AACH,qBAAO,MAAM,GAAG;YAClB,KAAK;AACH,qBAAO,MAAM,GAAG;YAClB,KAAK;AACH,qBAAO,OAAO,OAAO,CAAC;YACxB,KAAK;AACH,qBAAO,OAAO,OAAO,CAAC;YACxB,KAAK;AACH,qBAAO,OAAO,OAAO,CAAC;YACxB,KAAK;AACH,qBAAO,QAAQ,OAAO,CAAC;YACzB,KAAK;AACH,qBAAO,QAAQ,OAAO,CAAC;YACzB,KAAK;AACH,qBAAO,QAAQ,OAAO,CAAC;YACzB;AACE7B,cAAAA,QAAM,8BAA8B,IAAI,EAAE;UAC9C;QACF;AAtBS;AAwBT,YAAI,gBAAgB,OAAO,eAAe,KAAK;AAE/C,iBAAS,SAAS,KAAK,OAAO,OAAO,MAAM;AACzC,cAAI,KAAK,SAAS,GAAG,EAAG,QAAO;AAC/B,kBAAQ,MAAM;YACZ,KAAK;AACH,oBAAM,GAAG,IAAI;AACb;YACF,KAAK;AACH,oBAAM,GAAG,IAAI;AACb;YACF,KAAK;AACH,qBAAO,OAAO,CAAC,IAAI;AACnB;YACF,KAAK;AACH,qBAAO,OAAO,CAAC,IAAI;AACnB;YACF,KAAK;AACH,qBAAO,OAAO,CAAC,IAAI,OAAO,KAAK;AAC/B;YACF,KAAK;AACH,sBAAQ,OAAO,CAAC,IAAI;AACpB;YACF,KAAK;AACH,sBAAQ,OAAO,CAAC,IAAI;AACpB;YACF,KAAK;AACH,sBAAQ,OAAO,CAAC,IAAI;AACpB;YACF;AACEA,cAAAA,QAAM,8BAA8B,IAAI,EAAE;UAC9C;QACF;AA9BS;AAgCT,YAAI,eAAe,wBAAC,QAAQ,2BAA2B,GAAG,GAAvC;AAEnB,YAAI,YAAY,6BAAM,8BAA8B,GAApC;AAEhB,YAAI,OAAO;UACT,OAAO,wBAAC,SAAS,KAAK,OAAO,CAAC,MAAM,KAA7B;UACP,WAAW,wBAAC,aAAa;AACvB,gBAAI,cACF;AACF,mBAAO,YAAY,KAAK,QAAQ,EAAE,MAAM,CAAC;UAC3C,GAJW;UAKX,gBAAgB,wBAAC,OAAO,mBAAmB;AACzC,gBAAI,KAAK;AACT,qBAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,kBAAI,OAAO,MAAM,CAAC;AAClB,kBAAI,SAAS,KAAK;AAChB,sBAAM,OAAO,GAAG,CAAC;cACnB,WAAW,SAAS,MAAM;AACxB,sBAAM,OAAO,GAAG,CAAC;AACjB;cACF,WAAW,IAAI;AACb,sBAAM,OAAO,GAAG,CAAC;AACjB;cACF;YACF;AAEA,gBAAI,gBAAgB;AAClB,qBAAO,IAAI,MAAM;AACf,sBAAM,QAAQ,IAAI;cACpB;YACF;AACA,mBAAO;UACT,GArBgB;UAsBhB,WAAW,wBAAC,SAAS;AACnB,gBAAI,aAAa,KAAK,MAAM,IAAI,GAC9B,gBAAgB,KAAK,OAAO,EAAE,MAAM;AAEtC,mBAAO,KAAK;cACV,KAAK,MAAM,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;cACjC,CAAC;YACH,EAAE,KAAK,GAAG;AACV,gBAAI,CAAC,QAAQ,CAAC,YAAY;AACxB,qBAAO;YACT;AACA,gBAAI,QAAQ,eAAe;AACzB,sBAAQ;YACV;AACA,oBAAQ,aAAa,MAAM,MAAM;UACnC,GAfW;UAgBX,SAAS,wBAAC,SAAS;AACjB,gBAAI,SAAS,KAAK,UAAU,IAAI,GAC9B8B,QAAO,OAAO,CAAC,GACfC,OAAM,OAAO,CAAC;AAChB,gBAAI,CAACD,SAAQ,CAACC,MAAK;AACjB,qBAAO;YACT;AACA,gBAAIA,MAAK;AACP,cAAAA,OAAMA,KAAI,OAAO,GAAGA,KAAI,SAAS,CAAC;YACpC;AACA,mBAAOD,QAAOC;UAChB,GAXS;UAYT,UAAU,wBAAC,SAAS;AAClB,gBAAI,SAAS,IAAK,QAAO;AACzB,mBAAO,KAAK,UAAU,IAAI;AAC1B,mBAAO,KAAK,QAAQ,OAAO,EAAE;AAC7B,gBAAI,YAAY,KAAK,YAAY,GAAG;AACpC,gBAAI,cAAc,GAAI,QAAO;AAC7B,mBAAO,KAAK,OAAO,YAAY,CAAC;UAClC,GAPU;UAQV,MAAM,2BAAI,UAAU,KAAK,UAAU,MAAM,KAAK,GAAG,CAAC,GAA5C;UACN,OAAO,wBAAC,GAAGC,OAAM,KAAK,UAAU,IAAI,MAAMA,EAAC,GAApC;QACT;AAEA,YAAI,iBAAiB,6BAAM;AACzB,cACE,OAAO,UAAU,YACjB,OAAO,OAAO,iBAAiB,KAAK,YACpC;AACA,mBAAO,CAAC,SAAS,OAAO,gBAAgB,IAAI;UAC9C,MAAOhC,CAAAA,QAAM,kBAAkB;QACjC,GAPqB;AAQrB,YAAI,aAAa,wBAAC,SAAS;AACzB,kBAAQ,aAAa,eAAe,GAAG,IAAI;QAC7C,GAFiB;AAIjB,YAAI,UAAU;UACZ,SAAS,2BAAI,SAAS;AACpB,gBAAI,eAAe,IACjB,mBAAmB;AACrB,qBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,MAAM,CAAC,kBAAkB,KAAK;AAC/D,kBAAI,OAAO,KAAK,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI;AAErC,kBAAI,OAAO,QAAQ,UAAU;AAC3B,sBAAM,IAAI,UAAU,2CAA2C;cACjE,WAAW,CAAC,MAAM;AAChB,uBAAO;cACT;AACA,6BAAe,OAAO,MAAM;AAC5B,iCAAmB,KAAK,MAAM,IAAI;YACpC;AAEA,2BAAe,KAAK;cAClB,aAAa,MAAM,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;cACzC,CAAC;YACH,EAAE,KAAK,GAAG;AACV,oBAAQ,mBAAmB,MAAM,MAAM,gBAAgB;UACzD,GApBS;UAqBT,UAAU,wBAAC,MAAM,OAAO;AACtB,mBAAO,QAAQ,QAAQ,IAAI,EAAE,OAAO,CAAC;AACrC,iBAAK,QAAQ,QAAQ,EAAE,EAAE,OAAO,CAAC;AACjC,qBAAS,KAAK,KAAK;AACjB,kBAAI,QAAQ;AACZ,qBAAO,QAAQ,IAAI,QAAQ,SAAS;AAClC,oBAAI,IAAI,KAAK,MAAM,GAAI;cACzB;AACA,kBAAI,MAAM,IAAI,SAAS;AACvB,qBAAO,OAAO,GAAG,OAAO;AACtB,oBAAI,IAAI,GAAG,MAAM,GAAI;cACvB;AACA,kBAAI,QAAQ,IAAK,QAAO,CAAC;AACzB,qBAAO,IAAI,MAAM,OAAO,MAAM,QAAQ,CAAC;YACzC;AAXS;AAYT,gBAAI,YAAY,KAAK,KAAK,MAAM,GAAG,CAAC;AACpC,gBAAI,UAAU,KAAK,GAAG,MAAM,GAAG,CAAC;AAChC,gBAAI,SAAS,KAAK,IAAI,UAAU,QAAQ,QAAQ,MAAM;AACtD,gBAAI,kBAAkB;AACtB,qBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,kBAAI,UAAU,CAAC,MAAM,QAAQ,CAAC,GAAG;AAC/B,kCAAkB;AAClB;cACF;YACF;AACA,gBAAI,cAAc,CAAC;AACnB,qBAAS,IAAI,iBAAiB,IAAI,UAAU,QAAQ,KAAK;AACvD,0BAAY,KAAK,IAAI;YACvB;AACA,0BAAc,YAAY,OAAO,QAAQ,MAAM,eAAe,CAAC;AAC/D,mBAAO,YAAY,KAAK,GAAG;UAC7B,GA/BU;QAgCZ;AAEA,YAAI,cACF,OAAO,eAAe,cAAc,IAAI,YAAY,IAAI;AAE1D,YAAI,oBAAoB,wBAAC,aAAa,MAAM,GAAG,iBAAiB,QAAQ;AACtE,cAAI,SAAS,MAAM;AACnB,cAAI,SAAS;AAEb,iBAAO,YAAY,MAAM,KAAK,EAAE,UAAU,QAAS,GAAE;AAErD,cAAI,SAAS,MAAM,MAAM,YAAY,UAAU,aAAa;AAC1D,mBAAO,YAAY,OAAO,YAAY,SAAS,KAAK,MAAM,CAAC;UAC7D;AACA,cAAI,MAAM;AAEV,iBAAO,MAAM,QAAQ;AACnB,gBAAI,KAAK,YAAY,KAAK;AAC1B,gBAAI,EAAE,KAAK,MAAO;AAChB,qBAAO,OAAO,aAAa,EAAE;AAC7B;YACF;AACA,gBAAI,KAAK,YAAY,KAAK,IAAI;AAC9B,iBAAK,KAAK,QAAS,KAAM;AACvB,qBAAO,OAAO,cAAe,KAAK,OAAO,IAAK,EAAE;AAChD;YACF;AACA,gBAAI,KAAK,YAAY,KAAK,IAAI;AAC9B,iBAAK,KAAK,QAAS,KAAM;AACvB,oBAAO,KAAK,OAAO,KAAO,MAAM,IAAK;YACvC,OAAO;AACL,oBACI,KAAK,MAAM,KACZ,MAAM,KACN,MAAM,IACN,YAAY,KAAK,IAAI;YAC1B;AAEA,gBAAI,KAAK,OAAS;AAChB,qBAAO,OAAO,aAAa,EAAE;YAC/B,OAAO;AACL,kBAAI,KAAK,KAAK;AACd,qBAAO,OAAO;gBACZ,QAAU,MAAM;gBAChB,QAAU,KAAK;cACjB;YACF;UACF;AACA,iBAAO;QACT,GA5CwB;AA8CxB,YAAI,0BAA0B,CAAC;AAE/B,YAAI,kBAAkB,wBAAC,QAAQ;AAC7B,cAAI,MAAM;AACV,mBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,gBAAID,KAAI,IAAI,WAAW,CAAC;AACxB,gBAAIA,MAAK,KAAM;AACb;YACF,WAAWA,MAAK,MAAO;AACrB,qBAAO;YACT,WAAWA,MAAK,SAAUA,MAAK,OAAQ;AACrC,qBAAO;AACP,gBAAE;YACJ,OAAO;AACL,qBAAO;YACT;UACF;AACA,iBAAO;QACT,GAhBsB;AAkBtB,YAAI,oBAAoB,wBAAC,KAAK,MAAM,QAAQ,oBAAoB;AAC9D,cAAI,EAAE,kBAAkB,GAAI,QAAO;AAEnC,cAAI,WAAW;AACf,cAAI,SAAS,SAAS,kBAAkB;AACxC,mBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,gBAAI,IAAI,IAAI,WAAW,CAAC;AACxB,gBAAI,KAAK,SAAU,KAAK,OAAQ;AAC9B,kBAAI,KAAK,IAAI,WAAW,EAAE,CAAC;AAC3B,kBAAK,UAAY,IAAI,SAAU,MAAQ,KAAK;YAC9C;AACA,gBAAI,KAAK,KAAM;AACb,kBAAI,UAAU,OAAQ;AACtB,mBAAK,QAAQ,IAAI;YACnB,WAAW,KAAK,MAAO;AACrB,kBAAI,SAAS,KAAK,OAAQ;AAC1B,mBAAK,QAAQ,IAAI,MAAQ,KAAK;AAC9B,mBAAK,QAAQ,IAAI,MAAQ,IAAI;YAC/B,WAAW,KAAK,OAAQ;AACtB,kBAAI,SAAS,KAAK,OAAQ;AAC1B,mBAAK,QAAQ,IAAI,MAAQ,KAAK;AAC9B,mBAAK,QAAQ,IAAI,MAAS,KAAK,IAAK;AACpC,mBAAK,QAAQ,IAAI,MAAQ,IAAI;YAC/B,OAAO;AACL,kBAAI,SAAS,KAAK,OAAQ;AAC1B,mBAAK,QAAQ,IAAI,MAAQ,KAAK;AAC9B,mBAAK,QAAQ,IAAI,MAAS,KAAK,KAAM;AACrC,mBAAK,QAAQ,IAAI,MAAS,KAAK,IAAK;AACpC,mBAAK,QAAQ,IAAI,MAAQ,IAAI;YAC/B;UACF;AAEA,eAAK,MAAM,IAAI;AACf,iBAAO,SAAS;QAClB,GAlCwB;AAoCxB,iBAAS,mBAAmB,SAAS,aAAa,QAAQ;AACxD,cAAI,MAAM,SAAS,IAAI,SAAS,gBAAgB,OAAO,IAAI;AAC3D,cAAI,UAAU,IAAI,MAAM,GAAG;AAC3B,cAAI,kBAAkB;YACpB;YACA;YACA;YACA,QAAQ;UACV;AACA,cAAI,YAAa,SAAQ,SAAS;AAClC,iBAAO;QACT;AAXS;AAYT,YAAI,mBAAmB,6BAAM;AAC3B,cAAI,CAAC,wBAAwB,QAAQ;AACnC,gBAAI,SAAS;AACb,gBACE,OAAO,UAAU,eACjB,OAAO,OAAO,UAAU,YACxB;AACA,uBAAS,OAAO,OAAO,SAAS;AAChC,kBAAI,WAAW,MAAM;AACnB,0BAAU;cACZ;YACF,OAAO;YACP;AACA,gBAAI,CAAC,QAAQ;AACX,qBAAO;YACT;AACA,sCAA0B,mBAAmB,QAAQ,IAAI;UAC3D;AACA,iBAAO,wBAAwB,MAAM;QACvC,GAnBuB;AAoBvB,YAAI,MAAM;UACR,MAAM,CAAC;UACP,OAAO;UAAC;UACR,WAAW;UAAC;UACZ,SAAS,KAAK,KAAK;AACjB,gBAAI,KAAK,GAAG,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAS;AAClD,eAAG,eAAe,KAAK,IAAI,UAAU;UACvC;UACA,YAAY;YACV,KAAK,QAAQ;AACX,kBAAI,MAAM,IAAI,KAAK,OAAO,KAAK,IAAI;AACnC,kBAAI,CAAC,KAAK;AACR,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,qBAAO,MAAM;AACb,qBAAO,WAAW;YACpB;YACA,MAAM,QAAQ;AACZ,qBAAO,IAAI,IAAI,MAAM,OAAO,GAAG;YACjC;YACA,MAAM,QAAQ;AACZ,qBAAO,IAAI,IAAI,MAAM,OAAO,GAAG;YACjC;YACA,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,KAAK;AACxC,kBAAI,CAAC,OAAO,OAAO,CAAC,OAAO,IAAI,IAAI,UAAU;AAC3C,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,kBAAI,YAAY;AAChB,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,oBAAI;AACJ,oBAAI;AACF,2BAAS,OAAO,IAAI,IAAI,SAAS,OAAO,GAAG;gBAC7C,SAASL,IAAG;AACV,wBAAM,IAAI,GAAG,WAAW,EAAE;gBAC5B;AACA,oBAAI,WAAW,UAAa,cAAc,GAAG;AAC3C,wBAAM,IAAI,GAAG,WAAW,CAAC;gBAC3B;AACA,oBAAI,WAAW,QAAQ,WAAW,OAAW;AAC7C;AACA,uBAAO,SAAS,CAAC,IAAI;cACvB;AACA,kBAAI,WAAW;AACb,uBAAO,KAAK,YAAY,KAAK,IAAI;cACnC;AACA,qBAAO;YACT;YACA,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,KAAK;AACzC,kBAAI,CAAC,OAAO,OAAO,CAAC,OAAO,IAAI,IAAI,UAAU;AAC3C,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,kBAAI;AACF,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,yBAAO,IAAI,IAAI,SAAS,OAAO,KAAK,OAAO,SAAS,CAAC,CAAC;gBACxD;cACF,SAASA,IAAG;AACV,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,kBAAI,QAAQ;AACV,uBAAO,KAAK,YAAY,KAAK,IAAI;cACnC;AACA,qBAAO;YACT;UACF;UACA,iBAAiB;YACf,SAAS,KAAK;AACZ,qBAAO,iBAAiB;YAC1B;YACA,SAAS,KAAK,KAAK;AACjB,kBAAI,QAAQ,QAAQ,QAAQ,IAAI;AAC9B,oBAAI,kBAAkB,IAAI,MAAM,CAAC;AACjC,oBAAI,SAAS,CAAC;cAChB,OAAO;AACL,oBAAI,OAAO,EAAG,KAAI,OAAO,KAAK,GAAG;cACnC;YACF;YACA,MAAM,KAAK;AACT,kBAAI,IAAI,UAAU,IAAI,OAAO,SAAS,GAAG;AACvC,oBAAI,kBAAkB,IAAI,MAAM,CAAC;AACjC,oBAAI,SAAS,CAAC;cAChB;YACF;YACA,aAAa,KAAK;AAChB,qBAAO;gBACL,SAAS;gBACT,SAAS;gBACT,SAAS;gBACT,SAAS;gBACT,MAAM;kBACJ;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAC5D;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAC5D;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;kBAAM;gBACxD;cACF;YACF;YACA,aAAa,KAAK,kBAAkB,MAAM;AACxC,qBAAO;YACT;YACA,iBAAiB,KAAK;AACpB,qBAAO,CAAC,IAAI,EAAE;YAChB;UACF;UACA,kBAAkB;YAChB,SAAS,KAAK,KAAK;AACjB,kBAAI,QAAQ,QAAQ,QAAQ,IAAI;AAC9B,oBAAI,kBAAkB,IAAI,MAAM,CAAC;AACjC,oBAAI,SAAS,CAAC;cAChB,OAAO;AACL,oBAAI,OAAO,EAAG,KAAI,OAAO,KAAK,GAAG;cACnC;YACF;YACA,MAAM,KAAK;AACT,kBAAI,IAAI,UAAU,IAAI,OAAO,SAAS,GAAG;AACvC,oBAAI,kBAAkB,IAAI,MAAM,CAAC;AACjC,oBAAI,SAAS,CAAC;cAChB;YACF;UACF;QACF;AAEA,YAAI,aAAa,wBAAC,SAAS,SAAS;AAClC,iBAAO,KAAK,GAAG,SAAS,UAAU,IAAI;QACxC,GAFiB;AAIjB,YAAI,cAAc,wBAAC,MAAM,cAAc;AACrC,iBAAO,KAAK,KAAK,OAAO,SAAS,IAAI;QACvC,GAFkB;AAGlB,YAAI,YAAY,wBAAC,SAAS;AACxB,iBAAO,YAAY,MAAM,KAAK;AAC9B,cAAI,MAAM,6BAA6B,OAAO,IAAI;AAClD,cAAI,IAAK,YAAW,KAAK,IAAI;AAC7B,iBAAO;QACT,GALgB;AAMhB,YAAI,QAAQ;UACV,WAAW;UACX,MAAMuC,QAAO;AACX,mBAAO,MAAM,WAAW,MAAM,KAAK,QAAQ,KAAK,CAAC;UACnD;UACA,WAAW,QAAQ,MAAM,MAAM,KAAK;AAClC,gBAAI,GAAG,SAAS,IAAI,KAAK,GAAG,OAAO,IAAI,GAAG;AACxC,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,kBAAM,cAAc;cAClB,KAAK;gBACH,MAAM;kBACJ,SAAS,MAAM,SAAS;kBACxB,SAAS,MAAM,SAAS;kBACxB,QAAQ,MAAM,SAAS;kBACvB,OAAO,MAAM,SAAS;kBACtB,QAAQ,MAAM,SAAS;kBACvB,QAAQ,MAAM,SAAS;kBACvB,OAAO,MAAM,SAAS;kBACtB,SAAS,MAAM,SAAS;kBACxB,SAAS,MAAM,SAAS;gBAC1B;gBACA,QAAQ;kBACN,QAAQ,MAAM,WAAW;gBAC3B;cACF;cACA,MAAM;gBACJ,MAAM;kBACJ,SAAS,MAAM,SAAS;kBACxB,SAAS,MAAM,SAAS;gBAC1B;gBACA,QAAQ;kBACN,QAAQ,MAAM,WAAW;kBACzB,MAAM,MAAM,WAAW;kBACvB,OAAO,MAAM,WAAW;kBACxB,UAAU,MAAM,WAAW;kBAC3B,MAAM,MAAM,WAAW;kBACvB,OAAO,MAAM,WAAW;gBAC1B;cACF;cACA,MAAM;gBACJ,MAAM;kBACJ,SAAS,MAAM,SAAS;kBACxB,SAAS,MAAM,SAAS;kBACxB,UAAU,MAAM,SAAS;gBAC3B;gBACA,QAAQ,CAAC;cACX;cACA,QAAQ;gBACN,MAAM;kBACJ,SAAS,MAAM,SAAS;kBACxB,SAAS,MAAM,SAAS;gBAC1B;gBACA,QAAQ,GAAG;cACb;YACF;AACA,gBAAI,OAAO,GAAG,WAAW,QAAQ,MAAM,MAAM,GAAG;AAChD,gBAAI,GAAG,MAAM,KAAK,IAAI,GAAG;AACvB,mBAAK,WAAW,MAAM,UAAU,IAAI;AACpC,mBAAK,aAAa,MAAM,UAAU,IAAI;AACtC,mBAAK,WAAW,CAAC;YACnB,WAAW,GAAG,OAAO,KAAK,IAAI,GAAG;AAC/B,mBAAK,WAAW,MAAM,UAAU,KAAK;AACrC,mBAAK,aAAa,MAAM,UAAU,KAAK;AACvC,mBAAK,YAAY;AAEjB,mBAAK,WAAW;YAClB,WAAW,GAAG,OAAO,KAAK,IAAI,GAAG;AAC/B,mBAAK,WAAW,MAAM,UAAU,KAAK;AACrC,mBAAK,aAAa,MAAM,UAAU,KAAK;YACzC,WAAW,GAAG,SAAS,KAAK,IAAI,GAAG;AACjC,mBAAK,WAAW,MAAM,UAAU,OAAO;AACvC,mBAAK,aAAa,MAAM,UAAU,OAAO;YAC3C;AACA,iBAAK,YAAY,KAAK,IAAI;AAE1B,gBAAI,QAAQ;AACV,qBAAO,SAAS,IAAI,IAAI;AACxB,qBAAO,YAAY,KAAK;YAC1B;AACA,mBAAO;UACT;UACA,wBAAwB,MAAM;AAC5B,gBAAI,CAAC,KAAK,SAAU,QAAO,IAAI,WAAW,CAAC;AAC3C,gBAAI,KAAK,SAAS;AAChB,qBAAO,KAAK,SAAS,SAAS,GAAG,KAAK,SAAS;AACjD,mBAAO,IAAI,WAAW,KAAK,QAAQ;UACrC;UACA,kBAAkB,MAAM,aAAa;AACnC,gBAAI,eAAe,KAAK,WAAW,KAAK,SAAS,SAAS;AAC1D,gBAAI,gBAAgB,YAAa;AAEjC,gBAAI,wBAAwB,OAAO;AACnC,0BAAc,KAAK;cACjB;cACC,gBACE,eAAe,wBAAwB,IAAM,WAC9C;YACJ;AACA,gBAAI,gBAAgB,EAAG,eAAc,KAAK,IAAI,aAAa,GAAG;AAC9D,gBAAI,cAAc,KAAK;AACvB,iBAAK,WAAW,IAAI,WAAW,WAAW;AAC1C,gBAAI,KAAK,YAAY;AACnB,mBAAK,SAAS,IAAI,YAAY,SAAS,GAAG,KAAK,SAAS,GAAG,CAAC;UAChE;UACA,kBAAkB,MAAM,SAAS;AAC/B,gBAAI,KAAK,aAAa,QAAS;AAC/B,gBAAI,WAAW,GAAG;AAChB,mBAAK,WAAW;AAChB,mBAAK,YAAY;YACnB,OAAO;AACL,kBAAI,cAAc,KAAK;AACvB,mBAAK,WAAW,IAAI,WAAW,OAAO;AACtC,kBAAI,aAAa;AACf,qBAAK,SAAS;kBACZ,YAAY,SAAS,GAAG,KAAK,IAAI,SAAS,KAAK,SAAS,CAAC;gBAC3D;cACF;AACA,mBAAK,YAAY;YACnB;UACF;UACA,UAAU;YACR,QAAQ,MAAM;AACZ,kBAAIC,QAAO,CAAC;AAEZA,oBAAK,MAAM,GAAG,SAAS,KAAK,IAAI,IAAI,KAAK,KAAK;AAC9CA,oBAAK,MAAM,KAAK;AAChBA,oBAAK,OAAO,KAAK;AACjBA,oBAAK,QAAQ;AACbA,oBAAK,MAAM;AACXA,oBAAK,MAAM;AACXA,oBAAK,OAAO,KAAK;AACjB,kBAAI,GAAG,MAAM,KAAK,IAAI,GAAG;AACvBA,sBAAK,OAAO;cACd,WAAW,GAAG,OAAO,KAAK,IAAI,GAAG;AAC/BA,sBAAK,OAAO,KAAK;cACnB,WAAW,GAAG,OAAO,KAAK,IAAI,GAAG;AAC/BA,sBAAK,OAAO,KAAK,KAAK;cACxB,OAAO;AACLA,sBAAK,OAAO;cACd;AACAA,oBAAK,QAAQ,IAAI,KAAK,KAAK,SAAS;AACpCA,oBAAK,QAAQ,IAAI,KAAK,KAAK,SAAS;AACpCA,oBAAK,QAAQ,IAAI,KAAK,KAAK,SAAS;AAEpCA,oBAAK,UAAU;AACfA,oBAAK,SAAS,KAAK,KAAKA,MAAK,OAAOA,MAAK,OAAO;AAChD,qBAAOA;YACT;YACA,QAAQ,MAAMA,OAAM;AAClB,kBAAIA,MAAK,SAAS,QAAW;AAC3B,qBAAK,OAAOA,MAAK;cACnB;AACA,kBAAIA,MAAK,cAAc,QAAW;AAChC,qBAAK,YAAYA,MAAK;cACxB;AACA,kBAAIA,MAAK,SAAS,QAAW;AAC3B,sBAAM,kBAAkB,MAAMA,MAAK,IAAI;cACzC;YACF;YACA,OAAO,QAAQ,MAAM;AACnB,oBAAM,GAAG,cAAc,EAAE;YAC3B;YACA,MAAM,QAAQ,MAAM,MAAM,KAAK;AAC7B,qBAAO,MAAM,WAAW,QAAQ,MAAM,MAAM,GAAG;YACjD;YACA,OAAO,UAAU,SAAS,UAAU;AAClC,kBAAI,GAAG,MAAM,SAAS,IAAI,GAAG;AAC3B,oBAAI;AACJ,oBAAI;AACF,6BAAW,GAAG,WAAW,SAAS,QAAQ;gBAC5C,SAASxC,IAAG;gBAAC;AACb,oBAAI,UAAU;AACZ,2BAAS,KAAK,SAAS,UAAU;AAC/B,0BAAM,IAAI,GAAG,WAAW,EAAE;kBAC5B;gBACF;cACF;AAEA,qBAAO,SAAS,OAAO,SAAS,SAAS,IAAI;AAC7C,uBAAS,OAAO,YAAY,KAAK,IAAI;AACrC,uBAAS,OAAO;AAChB,sBAAQ,SAAS,QAAQ,IAAI;AAC7B,sBAAQ,YAAY,SAAS,OAAO;YACtC;YACA,OAAO,QAAQ,MAAM;AACnB,qBAAO,OAAO,SAAS,IAAI;AAC3B,qBAAO,YAAY,KAAK,IAAI;YAC9B;YACA,MAAM,QAAQ,MAAM;AAClB,kBAAI,OAAO,GAAG,WAAW,QAAQ,IAAI;AACrC,uBAAS,KAAK,KAAK,UAAU;AAC3B,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,qBAAO,OAAO,SAAS,IAAI;AAC3B,qBAAO,YAAY,KAAK,IAAI;YAC9B;YACA,QAAQ,MAAM;AACZ,kBAAI,UAAU,CAAC,KAAK,IAAI;AACxB,uBAASN,QAAO,OAAO,KAAK,KAAK,QAAQ,GAAG;AAC1C,wBAAQ,KAAKA,IAAG;cAClB;AACA,qBAAO;YACT;YACA,QAAQ,QAAQ,SAAS,SAAS;AAChC,kBAAI,OAAO,MAAM,WAAW,QAAQ,SAAS,MAAM,OAAO,CAAC;AAC3D,mBAAK,OAAO;AACZ,qBAAO;YACT;YACA,SAAS,MAAM;AACb,kBAAI,CAAC,GAAG,OAAO,KAAK,IAAI,GAAG;AACzB,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,qBAAO,KAAK;YACd;UACF;UACA,YAAY;YACV,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,UAAU;AAC7C,kBAAI,WAAW,OAAO,KAAK;AAC3B,kBAAI,YAAY,OAAO,KAAK,UAAW,QAAO;AAC9C,kBAAI,OAAO,KAAK,IAAI,OAAO,KAAK,YAAY,UAAU,MAAM;AAC5D,kBAAI,OAAO,KAAK,SAAS,UAAU;AACjC,uBAAO,IAAI,SAAS,SAAS,UAAU,WAAW,IAAI,GAAG,MAAM;cACjE,OAAO;AACL,yBAAS,IAAI,GAAG,IAAI,MAAM;AACxB,yBAAO,SAAS,CAAC,IAAI,SAAS,WAAW,CAAC;cAC9C;AACA,qBAAO;YACT;YACA,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ;AACtD,kBAAI,OAAO,WAAW,MAAM,QAAQ;AAClC,yBAAS;cACX;AAEA,kBAAI,CAAC,OAAQ,QAAO;AACpB,kBAAI,OAAO,OAAO;AAClB,mBAAK,YAAY,KAAK,IAAI;AAE1B,kBAAI,OAAO,aAAa,CAAC,KAAK,YAAY,KAAK,SAAS,WAAW;AACjE,oBAAI,QAAQ;AACV,uBAAK,WAAW,OAAO,SAAS,QAAQ,SAAS,MAAM;AACvD,uBAAK,YAAY;AACjB,yBAAO;gBACT,WAAW,KAAK,cAAc,KAAK,aAAa,GAAG;AACjD,uBAAK,WAAW,OAAO,MAAM,QAAQ,SAAS,MAAM;AACpD,uBAAK,YAAY;AACjB,yBAAO;gBACT,WAAW,WAAW,UAAU,KAAK,WAAW;AAC9C,uBAAK,SAAS;oBACZ,OAAO,SAAS,QAAQ,SAAS,MAAM;oBACvC;kBACF;AACA,yBAAO;gBACT;cACF;AAEA,oBAAM,kBAAkB,MAAM,WAAW,MAAM;AAC/C,kBAAI,KAAK,SAAS,YAAY,OAAO,UAAU;AAC7C,qBAAK,SAAS;kBACZ,OAAO,SAAS,QAAQ,SAAS,MAAM;kBACvC;gBACF;cACF,OAAO;AACL,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,uBAAK,SAAS,WAAW,CAAC,IAAI,OAAO,SAAS,CAAC;gBACjD;cACF;AACA,mBAAK,YAAY,KAAK,IAAI,KAAK,WAAW,WAAW,MAAM;AAC3D,qBAAO;YACT;YACA,OAAO,QAAQ,QAAQ,QAAQ;AAC7B,kBAAI,WAAW;AACf,kBAAI,WAAW,GAAG;AAChB,4BAAY,OAAO;cACrB,WAAW,WAAW,GAAG;AACvB,oBAAI,GAAG,OAAO,OAAO,KAAK,IAAI,GAAG;AAC/B,8BAAY,OAAO,KAAK;gBAC1B;cACF;AACA,kBAAI,WAAW,GAAG;AAChB,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,qBAAO;YACT;YACA,SAAS,QAAQ,QAAQ,QAAQ;AAC/B,oBAAM,kBAAkB,OAAO,MAAM,SAAS,MAAM;AACpD,qBAAO,KAAK,YAAY,KAAK;gBAC3B,OAAO,KAAK;gBACZ,SAAS;cACX;YACF;YACA,KAAK,QAAQ,QAAQ,UAAU,MAAMgB,QAAO;AAC1C,kBAAI,CAAC,GAAG,OAAO,OAAO,KAAK,IAAI,GAAG;AAChC,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,kBAAI;AACJ,kBAAI;AACJ,kBAAI,WAAW,OAAO,KAAK;AAE3B,kBAAI,EAAEA,SAAQ,MAAM,YAAY,SAAS,WAAW,MAAM,QAAQ;AAChE,4BAAY;AACZ,sBAAM,SAAS;cACjB,OAAO;AACL,4BAAY;AACZ,sBAAM,UAAU,MAAM;AACtB,oBAAI,CAAC,KAAK;AACR,wBAAM,IAAI,GAAG,WAAW,EAAE;gBAC5B;AACA,oBAAI,UAAU;AACZ,sBAAI,WAAW,KAAK,WAAW,SAAS,SAAS,QAAQ;AACvD,wBAAI,SAAS,UAAU;AACrB,iCAAW,SAAS,SAAS,UAAU,WAAW,MAAM;oBAC1D,OAAO;AACL,iCAAW,MAAM,UAAU,MAAM;wBAC/B;wBACA;wBACA,WAAW;sBACb;oBACF;kBACF;AACA,wBAAM,IAAI,UAAU,GAAG;gBACzB;cACF;AACA,qBAAO,EAAE,KAAK,UAAU;YAC1B;YACA,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,WAAW;AAC/C,oBAAM,WAAW,MAAM,QAAQ,QAAQ,GAAG,QAAQ,QAAQ,KAAK;AAE/D,qBAAO;YACT;UACF;QACF;AAEA,YAAI,YAAY,wBAAC,KAAK,QAAQ,SAAS,aAAa;AAClD,cAAI,MAAM,CAAC,WAAW,uBAAuB,MAAM,GAAG,EAAE,IAAI;AAC5D,oBAAU,GAAG,EAAE;YACb,CAAC,gBAAgB;AACf,qBAAO,IAAI,WAAW,WAAW,CAAC;AAClC,kBAAI,IAAK,qBAAoB,GAAG;YAClC;YACA,CAACqB,SAAQ;AACP,kBAAI,SAAS;AACX,wBAAQ;cACV,OAAO;AACL,sBAAM,sBAAsB,GAAG;cACjC;YACF;UACF;AACA,cAAI,IAAK,kBAAiB,GAAG;QAC/B,GAhBgB;AAkBhB,YAAI,oBAAoB,wBACtB,QACA,MACA,UACA,SACA,UACA,WACG;AACH,aAAG,eAAe,QAAQ,MAAM,UAAU,SAAS,UAAU,MAAM;QACrE,GATwB;AAWxB,YAAI,iBAAiB,OAAO,gBAAgB,KAAK,CAAC;AAClD,YAAI,4BAA4B,wBAAC,WAAW,UAAU,QAAQ,YAAY;AACxE,cAAI,OAAO,WAAW,YAAa,SAAQ,KAAK;AAEhD,cAAI,UAAU;AACd,yBAAe,QAAQ,CAAC,WAAW;AACjC,gBAAI,QAAS;AACb,gBAAI,OAAO,WAAW,EAAE,QAAQ,GAAG;AACjC,qBAAO,QAAQ,EAAE,WAAW,UAAU,QAAQ,OAAO;AACrD,wBAAU;YACZ;UACF,CAAC;AACD,iBAAO;QACT,GAZgC;AAahC,YAAI,yBAAyB,wBAC3B,QACA,MACA,KACA,SACA,UACA,QACA,SACA,gBACA,QACA,cACG;AACH,cAAI,WAAW,OAAO,QAAQ,QAAQ,KAAK,MAAM,QAAQ,IAAI,CAAC,IAAI;AAClE,cAAI,MAAM,uBAAuB,MAAM,QAAQ,EAAE;AACjD,mBAAS,YAAY,WAAW;AAC9B,qBAAS,OAAOU,YAAW;AACzB,0BAAY;AACZ,kBAAI,CAAC,gBAAgB;AACnB;kBACE;kBACA;kBACAA;kBACA;kBACA;kBACA;gBACF;cACF;AACA,uBAAS;AACT,kCAAoB,GAAG;YACzB;AAdS;AAeT,gBACE,0BAA0B,WAAW,UAAU,QAAQ,MAAM;AAC3D,wBAAU;AACV,kCAAoB,GAAG;YACzB,CAAC,GACD;AACA;YACF;AACA,mBAAO,SAAS;UAClB;AAzBS;AA0BT,2BAAiB,GAAG;AACpB,cAAI,OAAO,OAAO,UAAU;AAC1B,sBAAU,KAAK,aAAa,OAAO;UACrC,OAAO;AACL,wBAAY,GAAG;UACjB;QACF,GA9C6B;AAgD7B,YAAI,uBAAuB,wBAAC,QAAQ;AAClC,cAAI,YAAY;YACd,GAAG;YACH,MAAM;YACN,GAAG,MAAM,KAAK;YACd,MAAM,MAAM,KAAK;YACjB,GAAG,OAAO,KAAK;YACf,MAAM,OAAO,KAAK;UACpB;AACA,cAAI/B,SAAQ,UAAU,GAAG;AACzB,cAAI,OAAOA,UAAS,aAAa;AAC/B,kBAAM,IAAI,MAAM,2BAA2B,GAAG,EAAE;UAClD;AACA,iBAAOA;QACT,GAd2B;AAgB3B,YAAI,aAAa,wBAAC,SAAS,aAAa;AACtC,cAAI,OAAO;AACX,cAAI,QAAS,SAAQ,MAAM;AAC3B,cAAI,SAAU,SAAQ;AACtB,iBAAO;QACT,GALiB;AAOjB,YAAI,KAAK;UACP,MAAM;UACN,QAAQ,CAAC;UACT,SAAS,CAAC;UACV,SAAS,CAAC;UACV,WAAW;UACX,WAAW;UACX,aAAa;UACb,aAAa;UACb,mBAAmB;UACnB,YAAY,MAAM;mBAAA;;;YAChB,YAAY,OAAO;AACjB,mBAAK,OAAO;AACZ,mBAAK,QAAQ;YACf;UACF;UACA,eAAe,CAAC;UAChB,aAAa;UACb,gBAAgB;UAChB,WAAW,CAAC;UACZ,UAAU,MAAM;mBAAA;;;YACd,cAAc;AACZ,mBAAK,SAAS,CAAC;YACjB;YACA,IAAI,SAAS;AACX,qBAAO,KAAK;YACd;YACA,IAAI,OAAO,KAAK;AACd,mBAAK,OAAO;YACd;YACA,IAAI,SAAS;AACX,sBAAQ,KAAK,QAAQ,aAAa;YACpC;YACA,IAAI,UAAU;AACZ,sBAAQ,KAAK,QAAQ,aAAa;YACpC;YACA,IAAI,WAAW;AACb,qBAAO,KAAK,QAAQ;YACtB;YACA,IAAI,QAAQ;AACV,qBAAO,KAAK,OAAO;YACrB;YACA,IAAI,MAAM,KAAK;AACb,mBAAK,OAAO,QAAQ;YACtB;YACA,IAAI,WAAW;AACb,qBAAO,KAAK,OAAO;YACrB;YACA,IAAI,SAAS,KAAK;AAChB,mBAAK,OAAO,WAAW;YACzB;UACF;UACA,QAAQ,MAAM;mBAAA;;;YACZ,YAAY,QAAQ,MAAM,MAAM,MAAM;AACpC,kBAAI,CAAC,QAAQ;AACX,yBAAS;cACX;AACA,mBAAK,SAAS;AACd,mBAAK,QAAQ,OAAO;AACpB,mBAAK,UAAU;AACf,mBAAK,KAAK,GAAG;AACb,mBAAK,OAAO;AACZ,mBAAK,OAAO;AACZ,mBAAK,WAAW,CAAC;AACjB,mBAAK,aAAa,CAAC;AACnB,mBAAK,OAAO;AACZ,mBAAK,WAAW,MAAM;AACtB,mBAAK,YAAY;YACnB;YACA,IAAI,OAAO;AACT,sBAAQ,KAAK,OAAO,KAAK,cAAc,KAAK;YAC9C;YACA,IAAI,KAAK,KAAK;AACZ,oBAAO,KAAK,QAAQ,KAAK,WAAa,KAAK,QAAQ,CAAC,KAAK;YAC3D;YACA,IAAI,QAAQ;AACV,sBAAQ,KAAK,OAAO,KAAK,eAAe,KAAK;YAC/C;YACA,IAAI,MAAM,KAAK;AACb,oBAAO,KAAK,QAAQ,KAAK,YAAc,KAAK,QAAQ,CAAC,KAAK;YAC5D;YACA,IAAI,WAAW;AACb,qBAAO,GAAG,MAAM,KAAK,IAAI;YAC3B;YACA,IAAI,WAAW;AACb,qBAAO,GAAG,SAAS,KAAK,IAAI;YAC9B;UACF;UACA,WAAW,MAAM,OAAO,CAAC,GAAG;AAC1B,mBAAO,QAAQ,QAAQ,IAAI;AAE3B,gBAAI,CAAC,KAAM,QAAO,EAAE,MAAM,IAAI,MAAM,KAAK;AAEzC,gBAAI,WAAW;cACb,cAAc;cACd,eAAe;YACjB;AACA,mBAAO,OAAO,OAAO,UAAU,IAAI;AAEnC,gBAAI,KAAK,gBAAgB,GAAG;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AAEA,gBAAI,QAAQ,KAAK,MAAM,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAE7C,gBAAIrB,WAAU,GAAG;AACjB,gBAAI,eAAe;AAEnB,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,kBAAI,SAAS,MAAM,MAAM,SAAS;AAClC,kBAAI,UAAU,KAAK,QAAQ;AACzB;cACF;AAEAA,yBAAU,GAAG,WAAWA,UAAS,MAAM,CAAC,CAAC;AACzC,6BAAe,KAAK,MAAM,cAAc,MAAM,CAAC,CAAC;AAEhD,kBAAI,GAAG,aAAaA,QAAO,GAAG;AAC5B,oBAAI,CAAC,UAAW,UAAU,KAAK,cAAe;AAC5CA,6BAAUA,SAAQ,QAAQ;gBAC5B;cACF;AAEA,kBAAI,CAAC,UAAU,KAAK,QAAQ;AAC1B,oBAAIqD,SAAQ;AACZ,uBAAO,GAAG,OAAOrD,SAAQ,IAAI,GAAG;AAC9B,sBAAI,OAAO,GAAG,SAAS,YAAY;AACnC,iCAAe,QAAQ,QAAQ,KAAK,QAAQ,YAAY,GAAG,IAAI;AAE/D,sBAAI,SAAS,GAAG,WAAW,cAAc;oBACvC,eAAe,KAAK,gBAAgB;kBACtC,CAAC;AACDA,6BAAU,OAAO;AAEjB,sBAAIqD,WAAU,IAAI;AAChB,0BAAM,IAAI,GAAG,WAAW,EAAE;kBAC5B;gBACF;cACF;YACF;AAEA,mBAAO,EAAE,MAAM,cAAc,MAAMrD,SAAQ;UAC7C;UACA,QAAQ,MAAM;AACZ,gBAAI;AACJ,mBAAO,MAAM;AACX,kBAAI,GAAG,OAAO,IAAI,GAAG;AACnB,oBAAIkD,SAAQ,KAAK,MAAM;AACvB,oBAAI,CAAC,KAAM,QAAOA;AAClB,uBAAOA,OAAMA,OAAM,SAAS,CAAC,MAAM,MAC/B,GAAGA,MAAK,IAAI,IAAI,KAChBA,SAAQ;cACd;AACA,qBAAO,OAAO,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK;AAC5C,qBAAO,KAAK;YACd;UACF;UACA,SAAS,UAAU,MAAM;AACvB,gBAAInC,QAAO;AAEX,qBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpCA,uBAASA,SAAQ,KAAKA,QAAO,KAAK,WAAW,CAAC,IAAK;YACrD;AACA,oBAAS,WAAWA,UAAU,KAAK,GAAG,UAAU;UAClD;UACA,YAAY,MAAM;AAChB,gBAAIA,QAAO,GAAG,SAAS,KAAK,OAAO,IAAI,KAAK,IAAI;AAChD,iBAAK,YAAY,GAAG,UAAUA,KAAI;AAClC,eAAG,UAAUA,KAAI,IAAI;UACvB;UACA,eAAe,MAAM;AACnB,gBAAIA,QAAO,GAAG,SAAS,KAAK,OAAO,IAAI,KAAK,IAAI;AAChD,gBAAI,GAAG,UAAUA,KAAI,MAAM,MAAM;AAC/B,iBAAG,UAAUA,KAAI,IAAI,KAAK;YAC5B,OAAO;AACL,kBAAIf,WAAU,GAAG,UAAUe,KAAI;AAC/B,qBAAOf,UAAS;AACd,oBAAIA,SAAQ,cAAc,MAAM;AAC9BA,2BAAQ,YAAY,KAAK;AACzB;gBACF;AACAA,2BAAUA,SAAQ;cACpB;YACF;UACF;UACA,WAAW,QAAQ,MAAM;AACvB,gBAAI,UAAU,GAAG,UAAU,MAAM;AACjC,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AACA,gBAAIe,QAAO,GAAG,SAAS,OAAO,IAAI,IAAI;AACtC,qBAAS,OAAO,GAAG,UAAUA,KAAI,GAAG,MAAM,OAAO,KAAK,WAAW;AAC/D,kBAAI,WAAW,KAAK;AACpB,kBAAI,KAAK,OAAO,OAAO,OAAO,MAAM,aAAa,MAAM;AACrD,uBAAO;cACT;YACF;AAEA,mBAAO,GAAG,OAAO,QAAQ,IAAI;UAC/B;UACA,WAAW,QAAQ,MAAM,MAAM,MAAM;AACnC,gBAAI,OAAO,IAAI,GAAG,OAAO,QAAQ,MAAM,MAAM,IAAI;AAEjD,eAAG,YAAY,IAAI;AAEnB,mBAAO;UACT;UACA,YAAY,MAAM;AAChB,eAAG,eAAe,IAAI;UACxB;UACA,OAAO,MAAM;AACX,mBAAO,SAAS,KAAK;UACvB;UACA,aAAa,MAAM;AACjB,mBAAO,CAAC,CAAC,KAAK;UAChB;UACA,OAAO,MAAM;AACX,oBAAQ,OAAO,WAAW;UAC5B;UACA,MAAM,MAAM;AACV,oBAAQ,OAAO,WAAW;UAC5B;UACA,OAAO,MAAM;AACX,oBAAQ,OAAO,WAAW;UAC5B;UACA,SAAS,MAAM;AACb,oBAAQ,OAAO,WAAW;UAC5B;UACA,SAAS,MAAM;AACb,oBAAQ,OAAO,WAAW;UAC5B;UACA,OAAO,MAAM;AACX,oBAAQ,OAAO,WAAW;UAC5B;UACA,SAAS,MAAM;AACb,oBAAQ,OAAO,WAAW;UAC5B;UACA,wBAAwB,MAAM;AAC5B,gBAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE,OAAO,CAAC;AACrC,gBAAI,OAAO,KAAK;AACd,uBAAS;YACX;AACA,mBAAO;UACT;UACA,gBAAgB,MAAM,OAAO;AAC3B,gBAAI,GAAG,mBAAmB;AACxB,qBAAO;YACT;AAEA,gBAAI,MAAM,SAAS,GAAG,KAAK,EAAE,KAAK,OAAO,MAAM;AAC7C,qBAAO;YACT,WAAW,MAAM,SAAS,GAAG,KAAK,EAAE,KAAK,OAAO,MAAM;AACpD,qBAAO;YACT,WAAW,MAAM,SAAS,GAAG,KAAK,EAAE,KAAK,OAAO,KAAK;AACnD,qBAAO;YACT;AACA,mBAAO;UACT;UACA,UAAUiC,MAAK;AACb,gBAAI,CAAC,GAAG,MAAMA,KAAI,IAAI,EAAG,QAAO;AAChC,gBAAI,UAAU,GAAG,gBAAgBA,MAAK,GAAG;AACzC,gBAAI,QAAS,QAAO;AACpB,gBAAI,CAACA,KAAI,SAAS,OAAQ,QAAO;AACjC,mBAAO;UACT;UACA,UAAUA,MAAK,MAAM;AACnB,gBAAI;AACF,kBAAI,OAAO,GAAG,WAAWA,MAAK,IAAI;AAClC,qBAAO;YACT,SAASrC,IAAG;YAAC;AACb,mBAAO,GAAG,gBAAgBqC,MAAK,IAAI;UACrC;UACA,UAAUA,MAAK,MAAM,OAAO;AAC1B,gBAAI;AACJ,gBAAI;AACF,qBAAO,GAAG,WAAWA,MAAK,IAAI;YAChC,SAASrC,IAAG;AACV,qBAAOA,GAAE;YACX;AACA,gBAAI,UAAU,GAAG,gBAAgBqC,MAAK,IAAI;AAC1C,gBAAI,SAAS;AACX,qBAAO;YACT;AACA,gBAAI,OAAO;AACT,kBAAI,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG;AACxB,uBAAO;cACT;AACA,kBAAI,GAAG,OAAO,IAAI,KAAK,GAAG,QAAQ,IAAI,MAAM,GAAG,IAAI,GAAG;AACpD,uBAAO;cACT;YACF,OAAO;AACL,kBAAI,GAAG,MAAM,KAAK,IAAI,GAAG;AACvB,uBAAO;cACT;YACF;AACA,mBAAO;UACT;UACA,QAAQ,MAAM3B,QAAO;AACnB,gBAAI,CAAC,MAAM;AACT,qBAAO;YACT;AACA,gBAAI,GAAG,OAAO,KAAK,IAAI,GAAG;AACxB,qBAAO;YACT,WAAW,GAAG,MAAM,KAAK,IAAI,GAAG;AAC9B,kBAAI,GAAG,wBAAwBA,MAAK,MAAM,OAAOA,SAAQ,KAAK;AAC5D,uBAAO;cACT;YACF;AACA,mBAAO,GAAG,gBAAgB,MAAM,GAAG,wBAAwBA,MAAK,CAAC;UACnE;UACA,cAAc;UACd,SAAS;AACP,qBAAS,KAAK,GAAG,MAAM,GAAG,cAAc,MAAM;AAC5C,kBAAI,CAAC,GAAG,QAAQ,EAAE,GAAG;AACnB,uBAAO;cACT;YACF;AACA,kBAAM,IAAI,GAAG,WAAW,EAAE;UAC5B;UACA,iBAAiB,IAAI;AACnB,gBAAI,SAAS,GAAG,UAAU,EAAE;AAC5B,gBAAI,CAAC,QAAQ;AACX,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,mBAAO;UACT;UACA,WAAW,wBAAC,OAAO,GAAG,QAAQ,EAAE,GAArB;UACX,aAAa,QAAQ,KAAK,IAAI;AAC5B,qBAAS,OAAO,OAAO,IAAI,GAAG,SAAS,GAAG,MAAM;AAChD,gBAAI,MAAM,IAAI;AACZ,mBAAK,GAAG,OAAO;YACjB;AACA,mBAAO,KAAK;AACZ,eAAG,QAAQ,EAAE,IAAI;AACjB,mBAAO;UACT;UACA,YAAY,IAAI;AACd,eAAG,QAAQ,EAAE,IAAI;UACnB;UACA,UAAU,YAAY,KAAK,IAAI;AAC7B,gBAAI,SAAS,GAAG,aAAa,YAAY,EAAE;AAC3C,mBAAO,YAAY,MAAM,MAAM;AAC/B,mBAAO;UACT;UACA,mBAAmB;YACjB,KAAK,QAAQ;AACX,kBAAI,SAAS,GAAG,UAAU,OAAO,KAAK,IAAI;AAE1C,qBAAO,aAAa,OAAO;AAE3B,qBAAO,WAAW,OAAO,MAAM;YACjC;YACA,SAAS;AACP,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;UACF;UACA,OAAO,wBAAC,QAAQ,OAAO,GAAhB;UACP,OAAO,wBAAC,QAAQ,MAAM,KAAf;UACP,SAAS,wBAAC,IAAI,OAAQ,MAAM,IAAK,IAAxB;UACT,eAAe,KAAK,KAAK;AACvB,eAAG,QAAQ,GAAG,IAAI,EAAE,YAAY,IAAI;UACtC;UACA,WAAW,wBAAC,QAAQ,GAAG,QAAQ,GAAG,GAAvB;UACX,UAAU6B,QAAO;AACf,gBAAI,SAAS,CAAC;AACd,gBAAI,QAAQ,CAACA,MAAK;AAElB,mBAAO,MAAM,QAAQ;AACnB,kBAAI,IAAI,MAAM,IAAI;AAElB,qBAAO,KAAK,CAAC;AAEb,oBAAM,KAAK,GAAG,EAAE,MAAM;YACxB;AAEA,mBAAO;UACT;UACA,OAAO,UAAU,UAAU;AACzB,gBAAI,OAAO,YAAY,YAAY;AACjC,yBAAW;AACX,yBAAW;YACb;AAEA,eAAG;AAEH,gBAAI,GAAG,iBAAiB,GAAG;AACzB;gBACE,YAAY,GAAG,cAAc;cAC/B;YACF;AAEA,gBAAI,SAAS,GAAG,UAAU,GAAG,KAAK,KAAK;AACvC,gBAAI,YAAY;AAEhB,qBAAS,WAAW,SAAS;AAC3B,iBAAG;AACH,qBAAO,SAAS,OAAO;YACzB;AAHS;AAKT,qBAAS,KAAK,SAAS;AACrB,kBAAI,SAAS;AACX,oBAAI,CAAC,KAAK,SAAS;AACjB,uBAAK,UAAU;AACf,yBAAO,WAAW,OAAO;gBAC3B;AACA;cACF;AACA,kBAAI,EAAE,aAAa,OAAO,QAAQ;AAChC,2BAAW,IAAI;cACjB;YACF;AAXS;AAaT,mBAAO,QAAQ,CAACA,WAAU;AACxB,kBAAI,CAACA,OAAM,KAAK,QAAQ;AACtB,uBAAO,KAAK,IAAI;cAClB;AACAA,qBAAM,KAAK,OAAOA,QAAO,UAAU,IAAI;YACzC,CAAC;UACH;UACA,MAAM,MAAM,MAAM,YAAY;AAC5B,gBAAIH,QAAO,eAAe;AAC1B,gBAAI,SAAS,CAAC;AACd,gBAAI;AAEJ,gBAAIA,SAAQ,GAAG,MAAM;AACnB,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B,WAAW,CAACA,SAAQ,CAAC,QAAQ;AAC3B,kBAAI,SAAS,GAAG,WAAW,YAAY,EAAE,cAAc,MAAM,CAAC;AAE9D,2BAAa,OAAO;AACpB,qBAAO,OAAO;AAEd,kBAAI,GAAG,aAAa,IAAI,GAAG;AACzB,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AAEA,kBAAI,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG;AACxB,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;YACF;AAEA,gBAAIG,SAAQ;cACV;cACA;cACA;cACA,QAAQ,CAAC;YACX;AAEA,gBAAI,YAAY,KAAK,MAAMA,MAAK;AAChC,sBAAU,QAAQA;AAClBA,mBAAM,OAAO;AAEb,gBAAIH,OAAM;AACR,iBAAG,OAAO;YACZ,WAAW,MAAM;AACf,mBAAK,UAAUG;AAEf,kBAAI,KAAK,OAAO;AACd,qBAAK,MAAM,OAAO,KAAKA,MAAK;cAC9B;YACF;AAEA,mBAAO;UACT;UACA,QAAQ,YAAY;AAClB,gBAAI,SAAS,GAAG,WAAW,YAAY,EAAE,cAAc,MAAM,CAAC;AAE9D,gBAAI,CAAC,GAAG,aAAa,OAAO,IAAI,GAAG;AACjC,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AAEA,gBAAI,OAAO,OAAO;AAClB,gBAAIA,SAAQ,KAAK;AACjB,gBAAI,SAAS,GAAG,UAAUA,MAAK;AAE/B,mBAAO,KAAK,GAAG,SAAS,EAAE,QAAQ,CAACnC,UAAS;AAC1C,kBAAIf,WAAU,GAAG,UAAUe,KAAI;AAE/B,qBAAOf,UAAS;AACd,oBAAIsD,QAAOtD,SAAQ;AAEnB,oBAAI,OAAO,SAASA,SAAQ,KAAK,GAAG;AAClC,qBAAG,YAAYA,QAAO;gBACxB;AAEAA,2BAAUsD;cACZ;YACF,CAAC;AAED,iBAAK,UAAU;AAEf,gBAAI,MAAM,KAAK,MAAM,OAAO,QAAQJ,MAAK;AACzC,iBAAK,MAAM,OAAO,OAAO,KAAK,CAAC;UACjC;UACA,OAAO,QAAQ,MAAM;AACnB,mBAAO,OAAO,SAAS,OAAO,QAAQ,IAAI;UAC5C;UACA,MAAM,MAAM,MAAM,KAAK;AACrB,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,SAAS,OAAO;AACpB,gBAAI,OAAO,KAAK,SAAS,IAAI;AAC7B,gBAAI,CAAC,QAAQ,SAAS,OAAO,SAAS,MAAM;AAC1C,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,UAAU,GAAG,UAAU,QAAQ,IAAI;AACvC,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AACA,gBAAI,CAAC,OAAO,SAAS,OAAO;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,OAAO,SAAS,MAAM,QAAQ,MAAM,MAAM,GAAG;UACtD;UACA,OAAO,MAAM,MAAM;AACjB,mBAAO,SAAS,SAAY,OAAO;AACnC,oBAAQ;AACR,oBAAQ;AACR,mBAAO,GAAG,MAAM,MAAM,MAAM,CAAC;UAC/B;UACA,MAAM,MAAM,MAAM;AAChB,mBAAO,SAAS,SAAY,OAAO;AACnC,oBAAQ,MAAM;AACd,oBAAQ;AACR,mBAAO,GAAG,MAAM,MAAM,MAAM,CAAC;UAC/B;UACA,UAAU,MAAM,MAAM;AACpB,gBAAI,OAAO,KAAK,MAAM,GAAG;AACzB,gBAAI,IAAI;AACR,qBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,kBAAI,CAAC,KAAK,CAAC,EAAG;AACd,mBAAK,MAAM,KAAK,CAAC;AACjB,kBAAI;AACF,mBAAG,MAAM,GAAG,IAAI;cAClB,SAASvC,IAAG;AACV,oBAAIA,GAAE,SAAS,GAAI,OAAMA;cAC3B;YACF;UACF;UACA,MAAM,MAAM,MAAM,KAAK;AACrB,gBAAI,OAAO,OAAO,aAAa;AAC7B,oBAAM;AACN,qBAAO;YACT;AACA,oBAAQ;AACR,mBAAO,GAAG,MAAM,MAAM,MAAM,GAAG;UACjC;UACA,QAAQ,SAAS,SAAS;AACxB,gBAAI,CAAC,QAAQ,QAAQ,OAAO,GAAG;AAC7B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,SAAS,GAAG,WAAW,SAAS,EAAE,QAAQ,KAAK,CAAC;AACpD,gBAAI,SAAS,OAAO;AACpB,gBAAI,CAAC,QAAQ;AACX,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,UAAU,KAAK,SAAS,OAAO;AACnC,gBAAI,UAAU,GAAG,UAAU,QAAQ,OAAO;AAC1C,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AACA,gBAAI,CAAC,OAAO,SAAS,SAAS;AAC5B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,OAAO,SAAS,QAAQ,QAAQ,SAAS,OAAO;UACzD;UACA,OAAO,UAAU,UAAU;AACzB,gBAAI,cAAc,KAAK,QAAQ,QAAQ;AACvC,gBAAI,cAAc,KAAK,QAAQ,QAAQ;AACvC,gBAAI,WAAW,KAAK,SAAS,QAAQ;AACrC,gBAAI,WAAW,KAAK,SAAS,QAAQ;AAErC,gBAAI,QAAQ,SAAS;AAErB,qBAAS,GAAG,WAAW,UAAU,EAAE,QAAQ,KAAK,CAAC;AACjD,sBAAU,OAAO;AACjB,qBAAS,GAAG,WAAW,UAAU,EAAE,QAAQ,KAAK,CAAC;AACjD,sBAAU,OAAO;AAEjB,gBAAI,CAAC,WAAW,CAAC,QAAS,OAAM,IAAI,GAAG,WAAW,EAAE;AAEpD,gBAAI,QAAQ,UAAU,QAAQ,OAAO;AACnC,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AAEA,gBAAI,WAAW,GAAG,WAAW,SAAS,QAAQ;AAE9C,gBAAI4C,YAAW,QAAQ,SAAS,UAAU,WAAW;AACrD,gBAAIA,UAAS,OAAO,CAAC,MAAM,KAAK;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AAEAA,wBAAW,QAAQ,SAAS,UAAU,WAAW;AACjD,gBAAIA,UAAS,OAAO,CAAC,MAAM,KAAK;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AAEA,gBAAI;AACJ,gBAAI;AACF,yBAAW,GAAG,WAAW,SAAS,QAAQ;YAC5C,SAAS5C,IAAG;YAAC;AAEb,gBAAI,aAAa,UAAU;AACzB;YACF;AAEA,gBAAI,QAAQ,GAAG,MAAM,SAAS,IAAI;AAClC,gBAAI,UAAU,GAAG,UAAU,SAAS,UAAU,KAAK;AACnD,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AAEA,sBAAU,WACN,GAAG,UAAU,SAAS,UAAU,KAAK,IACrC,GAAG,UAAU,SAAS,QAAQ;AAClC,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AACA,gBAAI,CAAC,QAAQ,SAAS,QAAQ;AAC5B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBACE,GAAG,aAAa,QAAQ,KACvB,YAAY,GAAG,aAAa,QAAQ,GACrC;AACA,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AAEA,gBAAI,YAAY,SAAS;AACvB,wBAAU,GAAG,gBAAgB,SAAS,GAAG;AACzC,kBAAI,SAAS;AACX,sBAAM,IAAI,GAAG,WAAW,OAAO;cACjC;YACF;AAEA,eAAG,eAAe,QAAQ;AAE1B,gBAAI;AACF,sBAAQ,SAAS,OAAO,UAAU,SAAS,QAAQ;AAEnD,uBAAS,SAAS;YACpB,SAASA,IAAG;AACV,oBAAMA;YACR,UAAA;AACE,iBAAG,YAAY,QAAQ;YACzB;UACF;UACA,MAAM,MAAM;AACV,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,SAAS,OAAO;AACpB,gBAAI,OAAO,KAAK,SAAS,IAAI;AAC7B,gBAAI,OAAO,GAAG,WAAW,QAAQ,IAAI;AACrC,gBAAI,UAAU,GAAG,UAAU,QAAQ,MAAM,IAAI;AAC7C,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AACA,gBAAI,CAAC,OAAO,SAAS,OAAO;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,GAAG,aAAa,IAAI,GAAG;AACzB,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,SAAS,MAAM,QAAQ,IAAI;AAClC,eAAG,YAAY,IAAI;UACrB;UACA,QAAQ,MAAM;AACZ,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,OAAO,OAAO;AAClB,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,KAAK,SAAS,QAAQ,IAAI;UACnC;UACA,OAAO,MAAM;AACX,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,SAAS,OAAO;AACpB,gBAAI,CAAC,QAAQ;AACX,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,OAAO,KAAK,SAAS,IAAI;AAC7B,gBAAI,OAAO,GAAG,WAAW,QAAQ,IAAI;AACrC,gBAAI,UAAU,GAAG,UAAU,QAAQ,MAAM,KAAK;AAC9C,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AACA,gBAAI,CAAC,OAAO,SAAS,QAAQ;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,GAAG,aAAa,IAAI,GAAG;AACzB,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,SAAS,OAAO,QAAQ,IAAI;AACnC,eAAG,YAAY,IAAI;UACrB;UACA,SAAS,MAAM;AACb,gBAAI,SAAS,GAAG,WAAW,IAAI;AAC/B,gBAAI,OAAO,OAAO;AAClB,gBAAI,CAAC,MAAM;AACT,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,CAAC,KAAK,SAAS,UAAU;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,QAAQ;cACb,GAAG,QAAQ,KAAK,MAAM;cACtB,KAAK,SAAS,SAAS,IAAI;YAC7B;UACF;UACA,KAAK,MAAM,YAAY;AACrB,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC;AACxD,gBAAI,OAAO,OAAO;AAClB,gBAAI,CAAC,MAAM;AACT,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,KAAK,SAAS,QAAQ,IAAI;UACnC;UACA,MAAM,MAAM;AACV,mBAAO,GAAG,KAAK,MAAM,IAAI;UAC3B;UACA,MAAM,MAAM,MAAM,YAAY;AAC5B,gBAAI;AACJ,gBAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC;AACxD,qBAAO,OAAO;YAChB,OAAO;AACL,qBAAO;YACT;AACA,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,iBAAK,SAAS,QAAQ,MAAM;cAC1B,MAAO,OAAO,OAAS,KAAK,OAAO,CAAC;cACpC,WAAW,KAAK,IAAI;YACtB,CAAC;UACH;UACA,OAAO,MAAM,MAAM;AACjB,eAAG,MAAM,MAAM,MAAM,IAAI;UAC3B;UACA,OAAO,IAAI,MAAM;AACf,gBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,eAAG,MAAM,OAAO,MAAM,IAAI;UAC5B;UACA,MAAM,MAAM,KAAK,KAAK,YAAY;AAChC,gBAAI;AACJ,gBAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC;AACxD,qBAAO,OAAO;YAChB,OAAO;AACL,qBAAO;YACT;AACA,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,iBAAK,SAAS,QAAQ,MAAM;cAC1B,WAAW,KAAK,IAAI;YACtB,CAAC;UACH;UACA,OAAO,MAAM,KAAK,KAAK;AACrB,eAAG,MAAM,MAAM,KAAK,KAAK,IAAI;UAC/B;UACA,OAAO,IAAI,KAAK,KAAK;AACnB,gBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,eAAG,MAAM,OAAO,MAAM,KAAK,GAAG;UAChC;UACA,SAAS,MAAM,KAAK;AAClB,gBAAI,MAAM,GAAG;AACX,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI;AACJ,gBAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,qBAAO,OAAO;YAChB,OAAO;AACL,qBAAO;YACT;AACA,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,GAAG,MAAM,KAAK,IAAI,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,CAAC,GAAG,OAAO,KAAK,IAAI,GAAG;AACzB,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,UAAU,GAAG,gBAAgB,MAAM,GAAG;AAC1C,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AACA,iBAAK,SAAS,QAAQ,MAAM;cAC1B,MAAM;cACN,WAAW,KAAK,IAAI;YACtB,CAAC;UACH;UACA,UAAU,IAAI,KAAK;AACjB,gBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,eAAG,SAAS,OAAO,MAAM,GAAG;UAC9B;UACA,MAAM,MAAM,OAAO,OAAO;AACxB,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,OAAO,OAAO;AAClB,iBAAK,SAAS,QAAQ,MAAM;cAC1B,WAAW,KAAK,IAAI,OAAO,KAAK;YAClC,CAAC;UACH;UACA,KAAK,MAAMU,QAAO,MAAM;AACtB,gBAAI,SAAS,IAAI;AACf,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACAA,qBAAQ,OAAOA,UAAS,WAAW,qBAAqBA,MAAK,IAAIA;AACjE,gBAAIA,SAAQ,IAAI;AACd,qBAAO,OAAO,QAAQ,cAAc,MAAM;AAC1C,qBAAQ,OAAO,OAAQ;YACzB,OAAO;AACL,qBAAO;YACT;AACA,gBAAI;AACJ,gBAAI,OAAO,QAAQ,UAAU;AAC3B,qBAAO;YACT,OAAO;AACL,qBAAO,KAAK,UAAU,IAAI;AAC1B,kBAAI;AACF,oBAAI,SAAS,GAAG,WAAW,MAAM;kBAC/B,QAAQ,EAAEA,SAAQ;gBACpB,CAAC;AACD,uBAAO,OAAO;cAChB,SAASV,IAAG;cAAC;YACf;AAEA,gBAAI,UAAU;AACd,gBAAIU,SAAQ,IAAI;AACd,kBAAI,MAAM;AACR,oBAAIA,SAAQ,KAAK;AACf,wBAAM,IAAI,GAAG,WAAW,EAAE;gBAC5B;cACF,OAAO;AACL,uBAAO,GAAG,MAAM,MAAM,MAAM,CAAC;AAC7B,0BAAU;cACZ;YACF;AACA,gBAAI,CAAC,MAAM;AACT,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AAEA,gBAAI,GAAG,SAAS,KAAK,IAAI,GAAG;AAC1BA,wBAAS,CAAC;YACZ;AAEA,gBAAIA,SAAQ,SAAS,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG;AACzC,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AAEA,gBAAI,CAAC,SAAS;AACZ,kBAAI,UAAU,GAAG,QAAQ,MAAMA,MAAK;AACpC,kBAAI,SAAS;AACX,sBAAM,IAAI,GAAG,WAAW,OAAO;cACjC;YACF;AAEA,gBAAIA,SAAQ,OAAO,CAAC,SAAS;AAC3B,iBAAG,SAAS,MAAM,CAAC;YACrB;AAEAA,sBAAS,EAAE,MAAM,MAAM;AAEvB,gBAAI,SAAS,GAAG,aAAa;cAC3B;cACA,MAAM,GAAG,QAAQ,IAAI;cACrB,OAAAA;cACA,UAAU;cACV,UAAU;cACV,YAAY,KAAK;cAEjB,UAAU,CAAC;cACX,OAAO;YACT,CAAC;AAED,gBAAI,OAAO,WAAW,MAAM;AAC1B,qBAAO,WAAW,KAAK,MAAM;YAC/B;AACA,gBAAI,OAAO,cAAc,KAAK,EAAEA,SAAQ,IAAI;AAC1C,kBAAI,EAAE,QAAQ,GAAG,YAAY;AAC3B,mBAAG,UAAU,IAAI,IAAI;cACvB;YACF;AACA,mBAAO;UACT;UACA,MAAM,QAAQ;AACZ,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,gBAAI,OAAO,SAAU,QAAO,WAAW;AACvC,gBAAI;AACF,kBAAI,OAAO,WAAW,OAAO;AAC3B,uBAAO,WAAW,MAAM,MAAM;cAChC;YACF,SAASV,IAAG;AACV,oBAAMA;YACR,UAAA;AACE,iBAAG,YAAY,OAAO,EAAE;YAC1B;AACA,mBAAO,KAAK;UACd;UACA,SAAS,QAAQ;AACf,mBAAO,OAAO,OAAO;UACvB;UACA,OAAO,QAAQ,QAAQ,QAAQ;AAC7B,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,gBAAI,CAAC,OAAO,YAAY,CAAC,OAAO,WAAW,QAAQ;AACjD,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,UAAU,KAAK,UAAU,KAAK,UAAU,GAAG;AAC7C,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,WAAW,OAAO,WAAW,OAAO,QAAQ,QAAQ,MAAM;AACjE,mBAAO,WAAW,CAAC;AACnB,mBAAO,OAAO;UAChB;UACA,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,UAAU;AAC7C,gBAAI,SAAS,KAAK,WAAW,GAAG;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,gBAAI,GAAG,MAAM,OAAO,KAAK,IAAI,GAAG;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,CAAC,OAAO,WAAW,MAAM;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,UAAU,OAAO,YAAY;AACjC,gBAAI,CAAC,SAAS;AACZ,yBAAW,OAAO;YACpB,WAAW,CAAC,OAAO,UAAU;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,YAAY,OAAO,WAAW;cAChC;cACA;cACA;cACA;cACA;YACF;AACA,gBAAI,CAAC,QAAS,QAAO,YAAY;AACjC,mBAAO;UACT;UACA,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ;AACtD,gBAAI,SAAS,KAAK,WAAW,GAAG;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,gBAAI,GAAG,MAAM,OAAO,KAAK,IAAI,GAAG;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,CAAC,OAAO,WAAW,OAAO;AAC5B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,OAAO,YAAY,OAAO,QAAQ,MAAM;AAC1C,iBAAG,OAAO,QAAQ,GAAG,CAAC;YACxB;AACA,gBAAI,UAAU,OAAO,YAAY;AACjC,gBAAI,CAAC,SAAS;AACZ,yBAAW,OAAO;YACpB,WAAW,CAAC,OAAO,UAAU;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,eAAe,OAAO,WAAW;cACnC;cACA;cACA;cACA;cACA;cACA;YACF;AACA,gBAAI,CAAC,QAAS,QAAO,YAAY;AACjC,mBAAO;UACT;UACA,SAAS,QAAQ,QAAQ,QAAQ;AAC/B,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,gBAAI,SAAS,KAAK,UAAU,GAAG;AAC7B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,gBAAI,CAAC,GAAG,OAAO,OAAO,KAAK,IAAI,KAAK,CAAC,GAAG,MAAM,OAAO,KAAK,IAAI,GAAG;AAC/D,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,CAAC,OAAO,WAAW,UAAU;AAC/B,oBAAM,IAAI,GAAG,WAAW,GAAG;YAC7B;AACA,mBAAO,WAAW,SAAS,QAAQ,QAAQ,MAAM;UACnD;UACA,KAAK,QAAQ,QAAQ,UAAU,MAAMU,QAAO;AAC1C,iBACG,OAAO,OAAO,MACdA,SAAQ,OAAO,MACf,OAAO,QAAQ,aAAa,GAC7B;AACA,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,CAAC;YAC3B;AACA,gBAAI,CAAC,OAAO,WAAW,MAAM;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,CAAC,QAAQ;AACX,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,OAAO,WAAW,KAAK,QAAQ,QAAQ,UAAU,MAAMA,MAAK;UACrE;UACA,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,WAAW;AAC/C,gBAAI,CAAC,OAAO,WAAW,OAAO;AAC5B,qBAAO;YACT;AACA,mBAAO,OAAO,WAAW;cACvB;cACA;cACA;cACA;cACA;YACF;UACF;UACA,MAAM,QAAQ,KAAK,KAAK;AACtB,gBAAI,CAAC,OAAO,WAAW,OAAO;AAC5B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,mBAAO,OAAO,WAAW,MAAM,QAAQ,KAAK,GAAG;UACjD;UACA,SAAS,MAAM,OAAO,CAAC,GAAG;AACxB,iBAAK,QAAQ,KAAK,SAAS;AAC3B,iBAAK,WAAW,KAAK,YAAY;AACjC,gBAAI,KAAK,aAAa,UAAU,KAAK,aAAa,UAAU;AAC1D,oBAAM,IAAI,MAAM,0BAA0B,KAAK,QAAQ,GAAG;YAC5D;AACA,gBAAI;AACJ,gBAAI,SAAS,GAAG,KAAK,MAAM,KAAK,KAAK;AACrC,gBAAI,OAAO,GAAG,KAAK,IAAI;AACvB,gBAAI,SAAS,KAAK;AAClB,gBAAI,MAAM,IAAI,WAAW,MAAM;AAC/B,eAAG,KAAK,QAAQ,KAAK,GAAG,QAAQ,CAAC;AACjC,gBAAI,KAAK,aAAa,QAAQ;AAC5B,oBAAM,kBAAkB,GAAG;YAC7B,WAAW,KAAK,aAAa,UAAU;AACrC,oBAAM;YACR;AACA,eAAG,MAAM,MAAM;AACf,mBAAO;UACT;UACA,UAAU,MAAM,MAAM,OAAO,CAAC,GAAG;AAC/B,iBAAK,QAAQ,KAAK,SAAS;AAC3B,gBAAI,SAAS,GAAG,KAAK,MAAM,KAAK,OAAO,KAAK,IAAI;AAChD,gBAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAI,MAAM,IAAI,WAAW,gBAAgB,IAAI,IAAI,CAAC;AAClD,kBAAI,iBAAiB,kBAAkB,MAAM,KAAK,GAAG,IAAI,MAAM;AAC/D,iBAAG,MAAM,QAAQ,KAAK,GAAG,gBAAgB,QAAW,KAAK,MAAM;YACjE,WAAW,YAAY,OAAO,IAAI,GAAG;AACnC,iBAAG,MAAM,QAAQ,MAAM,GAAG,KAAK,YAAY,QAAW,KAAK,MAAM;YACnE,OAAO;AACL,oBAAM,IAAI,MAAM,uBAAuB;YACzC;AACA,eAAG,MAAM,MAAM;UACjB;UACA,KAAK,6BAAM,GAAG,aAAT;UACL,MAAM,MAAM;AACV,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,OAAO,SAAS,MAAM;AACxB,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,CAAC,GAAG,MAAM,OAAO,KAAK,IAAI,GAAG;AAC/B,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAI,UAAU,GAAG,gBAAgB,OAAO,MAAM,GAAG;AACjD,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;YACjC;AACA,eAAG,cAAc,OAAO;UAC1B;UACA,2BAA2B;AACzB,eAAG,MAAM,MAAM;AACf,eAAG,MAAM,OAAO;AAChB,eAAG,MAAM,gBAAgB;UAC3B;UACA,uBAAuB;AACrB,eAAG,MAAM,MAAM;AAEf,eAAG,eAAe,GAAG,QAAQ,GAAG,CAAC,GAAG;cAClC,MAAM,6BAAM,GAAN;cACN,OAAO,wBAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAzC;YACT,CAAC;AACD,eAAG,MAAM,aAAa,GAAG,QAAQ,GAAG,CAAC,CAAC;AAEtC,gBAAI,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,IAAI,eAAe;AAClD,gBAAI,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,IAAI,gBAAgB;AACnD,eAAG,MAAM,YAAY,GAAG,QAAQ,GAAG,CAAC,CAAC;AACrC,eAAG,MAAM,aAAa,GAAG,QAAQ,GAAG,CAAC,CAAC;AAEtC,gBAAI,eAAe,IAAI,WAAW,IAAI,GACpC,aAAa;AACf,gBAAI,aAAa,6BAAM;AACrB,kBAAI,eAAe,GAAG;AACpB,6BAAa,WAAW,YAAY,EAAE;cACxC;AACA,qBAAO,aAAa,EAAE,UAAU;YAClC,GALiB;AAMjB,eAAG,aAAa,QAAQ,UAAU,UAAU;AAC5C,eAAG,aAAa,QAAQ,WAAW,UAAU;AAE7C,eAAG,MAAM,UAAU;AACnB,eAAG,MAAM,cAAc;UACzB;UACA,2BAA2B;AACzB,eAAG,MAAM,OAAO;AAChB,gBAAI,YAAY,GAAG,MAAM,YAAY;AACrC,eAAG,MAAM,eAAe;AACxB,eAAG;cACD;gBACE,QAAQ;AACN,sBAAI,OAAO,GAAG,WAAW,WAAW,MAAM,QAAQ,KAAK,EAAE;AACzD,uBAAK,WAAW;oBACd,OAAO,QAAQ,MAAM;AACnB,0BAAI,KAAK,CAAC;AACV,0BAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,0BAAI,MAAM;wBACR,QAAQ;wBACR,OAAO,EAAE,YAAY,OAAO;wBAC5B,UAAU,EAAE,UAAU,6BAAM,OAAO,MAAb,YAAkB;sBAC1C;AACA,0BAAI,SAAS;AACb,6BAAO;oBACT;kBACF;AACA,yBAAO;gBACT;cACF;cACA,CAAC;cACD;YACF;UACF;UACA,sBAAsB,OAAO,QAAQH,SAAO;AAC1C,gBAAI,OAAO;AACT,iBAAG,aAAa,QAAQ,SAAS,KAAK;YACxC,OAAO;AACL,iBAAG,QAAQ,YAAY,YAAY;YACrC;AACA,gBAAI,QAAQ;AACV,iBAAG,aAAa,QAAQ,UAAU,MAAM,MAAM;YAChD,OAAO;AACL,iBAAG,QAAQ,YAAY,aAAa;YACtC;AACA,gBAAIA,SAAO;AACT,iBAAG,aAAa,QAAQ,UAAU,MAAMA,OAAK;YAC/C,OAAO;AACL,iBAAG,QAAQ,aAAa,aAAa;YACvC;AAEA,gBAAIsC,SAAQ,GAAG,KAAK,cAAc,CAAC;AACnC,gBAAIC,UAAS,GAAG,KAAK,eAAe,CAAC;AACrC,gBAAIC,UAAS,GAAG,KAAK,eAAe,CAAC;UACvC;UACA,aAAa;AACX,aAAC,EAAE,EAAE,QAAQ,CAAC,SAAS;AACrB,iBAAG,cAAc,IAAI,IAAI,IAAI,GAAG,WAAW,IAAI;AAC/C,iBAAG,cAAc,IAAI,EAAE,QAAQ;YACjC,CAAC;AAED,eAAG,YAAY,IAAI,MAAM,IAAI;AAE7B,eAAG,MAAM,OAAO,CAAC,GAAG,GAAG;AAEvB,eAAG,yBAAyB;AAC5B,eAAG,qBAAqB;AACxB,eAAG,yBAAyB;AAE5B,eAAG,cAAc;cACf;YACF;UACF;UACA,KAAK,OAAO,QAAQxC,SAAO;AACzB,eAAG,cAAc;AAEjB,sBAAU,OAAO,OAAO;AACxB,uBAAW,OAAO,QAAQ;AAC1BA,YAAAA,YAAU,OAAO,QAAQ;AAEzB,eAAG,sBAAsB,OAAO,QAAQA,OAAK;UAC/C;UACA,OAAO;AACL,eAAG,cAAc;AAEjB,qBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,QAAQ,KAAK;AAC1C,kBAAI,SAAS,GAAG,QAAQ,CAAC;AACzB,kBAAI,CAAC,QAAQ;AACX;cACF;AACA,iBAAG,MAAM,MAAM;YACjB;UACF;UACA,WAAW,MAAM,qBAAqB;AACpC,gBAAI,MAAM,GAAG,YAAY,MAAM,mBAAmB;AAClD,gBAAI,CAAC,IAAI,QAAQ;AACf,qBAAO;YACT;AACA,mBAAO,IAAI;UACb;UACA,YAAY,MAAM,qBAAqB;AACrC,gBAAI;AACF,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,oBAAoB,CAAC;AACjE,qBAAO,OAAO;YAChB,SAASP,IAAG;YAAC;AACb,gBAAI,MAAM;cACR,QAAQ;cACR,QAAQ;cACR,OAAO;cACP,MAAM;cACN,MAAM;cACN,QAAQ;cACR,cAAc;cACd,YAAY;cACZ,cAAc;YAChB;AACA,gBAAI;AACF,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,kBAAI,eAAe;AACnB,kBAAI,aAAa,OAAO;AACxB,kBAAI,eAAe,OAAO;AAC1B,kBAAI,OAAO,KAAK,SAAS,IAAI;AAC7B,uBAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,oBAAoB,CAAC;AAC7D,kBAAI,SAAS;AACb,kBAAI,OAAO,OAAO;AAClB,kBAAI,SAAS,OAAO;AACpB,kBAAI,OAAO,OAAO,KAAK;AACvB,kBAAI,SAAS,OAAO,SAAS;YAC/B,SAASA,IAAG;AACV,kBAAI,QAAQA,GAAE;YAChB;AACA,mBAAO;UACT;UACA,WAAW,QAAQ,MAAM,SAAS,UAAU;AAC1C,qBAAS,OAAO,UAAU,WAAW,SAAS,GAAG,QAAQ,MAAM;AAC/D,gBAAI,QAAQ,KAAK,MAAM,GAAG,EAAE,QAAQ;AACpC,mBAAO,MAAM,QAAQ;AACnB,kBAAI,OAAO,MAAM,IAAI;AACrB,kBAAI,CAAC,KAAM;AACX,kBAAIX,WAAU,KAAK,MAAM,QAAQ,IAAI;AACrC,kBAAI;AACF,mBAAG,MAAMA,QAAO;cAClB,SAASW,IAAG;cAAC;AACb,uBAASX;YACX;AACA,mBAAOA;UACT;UACA,WAAW,QAAQ,MAAM,YAAY,SAAS,UAAU;AACtD,gBAAI,OAAO,KAAK;cACd,OAAO,UAAU,WAAW,SAAS,GAAG,QAAQ,MAAM;cACtD;YACF;AACA,gBAAI,OAAO,WAAW,SAAS,QAAQ;AACvC,mBAAO,GAAG,OAAO,MAAM,IAAI;UAC7B;UACA,eAAe,QAAQ,MAAM,MAAM,SAAS,UAAU,QAAQ;AAC5D,gBAAI,OAAO;AACX,gBAAI,QAAQ;AACV,uBAAS,OAAO,UAAU,WAAW,SAAS,GAAG,QAAQ,MAAM;AAC/D,qBAAO,OAAO,KAAK,MAAM,QAAQ,IAAI,IAAI;YAC3C;AACA,gBAAI,OAAO,WAAW,SAAS,QAAQ;AACvC,gBAAI,OAAO,GAAG,OAAO,MAAM,IAAI;AAC/B,gBAAI,MAAM;AACR,kBAAI,OAAO,QAAQ,UAAU;AAC3B,oBAAI,MAAM,IAAI,MAAM,KAAK,MAAM;AAC/B,yBAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,IAAI,KAAK,EAAE;AAC5C,sBAAI,CAAC,IAAI,KAAK,WAAW,CAAC;AAC5B,uBAAO;cACT;AAEA,iBAAG,MAAM,MAAM,OAAO,GAAG;AACzB,kBAAI,SAAS,GAAG,KAAK,MAAM,GAAG;AAC9B,iBAAG,MAAM,QAAQ,MAAM,GAAG,KAAK,QAAQ,GAAG,MAAM;AAChD,iBAAG,MAAM,MAAM;AACf,iBAAG,MAAM,MAAM,IAAI;YACrB;UACF;UACA,aAAa,QAAQ,MAAM,OAAO,QAAQ;AACxC,gBAAI,OAAO,KAAK;cACd,OAAO,UAAU,WAAW,SAAS,GAAG,QAAQ,MAAM;cACtD;YACF;AACA,gBAAI,OAAO,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;AACvC,eAAG,aAAa,UAAU;AAC1B,gBAAI,MAAM,GAAG,QAAQ,GAAG,aAAa,SAAS,CAAC;AAE/C,eAAG,eAAe,KAAK;cACrB,KAAK,QAAQ;AACX,uBAAO,WAAW;cACpB;cACA,MAAM,QAAQ;AACZ,oBAAI,QAAQ,QAAQ,QAAQ;AAC1B,yBAAO,EAAE;gBACX;cACF;cACA,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,KAAK;AACxC,oBAAI,YAAY;AAChB,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAI;AACJ,sBAAI;AACF,6BAAS,MAAM;kBACjB,SAASW,IAAG;AACV,0BAAM,IAAI,GAAG,WAAW,EAAE;kBAC5B;AACA,sBAAI,WAAW,UAAa,cAAc,GAAG;AAC3C,0BAAM,IAAI,GAAG,WAAW,CAAC;kBAC3B;AACA,sBAAI,WAAW,QAAQ,WAAW,OAAW;AAC7C;AACA,yBAAO,SAAS,CAAC,IAAI;gBACvB;AACA,oBAAI,WAAW;AACb,yBAAO,KAAK,YAAY,KAAK,IAAI;gBACnC;AACA,uBAAO;cACT;cACA,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,KAAK;AACzC,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAI;AACF,2BAAO,OAAO,SAAS,CAAC,CAAC;kBAC3B,SAASA,IAAG;AACV,0BAAM,IAAI,GAAG,WAAW,EAAE;kBAC5B;gBACF;AACA,oBAAI,QAAQ;AACV,yBAAO,KAAK,YAAY,KAAK,IAAI;gBACnC;AACA,uBAAO;cACT;YACF,CAAC;AACD,mBAAO,GAAG,MAAM,MAAM,MAAM,GAAG;UACjC;UACA,cAAc,KAAK;AACjB,gBAAI,IAAI,YAAY,IAAI,YAAY,IAAI,QAAQ,IAAI;AAClD,qBAAO;AACT,gBAAI,OAAO,kBAAkB,aAAa;AACxC,oBAAM,IAAI;gBACR;cACF;YACF,OAAO;AACL,kBAAI;AACF,oBAAI,WAAW,WAAW,IAAI,GAAG;AACjC,oBAAI,YAAY,IAAI,SAAS;cAC/B,SAASA,IAAG;AACV,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;YACF;UACF;UACA,eAAe,QAAQ,MAAM,KAAK,SAAS,UAAU;YACnD,MAAM,eAAe;qBAAA;;;cACnB,cAAc;AACZ,qBAAK,cAAc;AACnB,qBAAK,SAAS,CAAC;cACjB;cACA,IAAI,KAAK;AACP,oBAAI,MAAM,KAAK,SAAS,KAAK,MAAM,GAAG;AACpC,yBAAO;gBACT;AACA,oBAAI,cAAc,MAAM,KAAK;AAC7B,oBAAI,WAAY,MAAM,KAAK,YAAa;AACxC,uBAAO,KAAK,OAAO,QAAQ,EAAE,WAAW;cAC1C;cACA,cAAc,QAAQ;AACpB,qBAAK,SAAS;cAChB;cACA,cAAc;AACZ,oBAAI,MAAM,IAAI,eAAe;AAC7B,oBAAI,KAAK,QAAQ,KAAK,KAAK;AAC3B,oBAAI,KAAK,IAAI;AACb,oBACE,EAAG,IAAI,UAAU,OAAO,IAAI,SAAS,OAAQ,IAAI,WAAW;AAE5D,wBAAM,IAAI;oBACR,mBAAmB,MAAM,eAAe,IAAI;kBAC9C;AACF,oBAAI,aAAa,OAAO,IAAI,kBAAkB,gBAAgB,CAAC;AAC/D,oBAAI;AACJ,oBAAI,kBACD,SAAS,IAAI,kBAAkB,eAAe,MAC/C,WAAW;AACb,oBAAI,YACD,SAAS,IAAI,kBAAkB,kBAAkB,MAClD,WAAW;AAEb,oBAAI,YAAY,OAAO;AAEvB,oBAAI,CAAC,eAAgB,aAAY;AAEjC,oBAAI,QAAQ,wBAAC,MAAM,OAAO;AACxB,sBAAI,OAAO;AACT,0BAAM,IAAI;sBACR,oBACE,OACA,OACA,KACA;oBACJ;AACF,sBAAI,KAAK,aAAa;AACpB,0BAAM,IAAI;sBACR,UAAU,aAAa;oBACzB;AAEF,sBAAIgD,OAAM,IAAI,eAAe;AAC7BA,uBAAI,KAAK,OAAO,KAAK,KAAK;AAC1B,sBAAI,eAAe;AACjBA,yBAAI,iBAAiB,SAAS,WAAW,OAAO,MAAM,EAAE;AAE1DA,uBAAI,eAAe;AACnB,sBAAIA,KAAI,kBAAkB;AACxBA,yBAAI,iBAAiB,oCAAoC;kBAC3D;AAEAA,uBAAI,KAAK,IAAI;AACb,sBACE,EAAGA,KAAI,UAAU,OAAOA,KAAI,SAAS,OAAQA,KAAI,WAAW;AAE5D,0BAAM,IAAI;sBACR,mBAAmB,MAAM,eAAeA,KAAI;oBAC9C;AACF,sBAAIA,KAAI,aAAa,QAAW;AAC9B,2BAAO,IAAI,WAAWA,KAAI,YAAY,CAAC,CAAC;kBAC1C;AACA,yBAAO,mBAAmBA,KAAI,gBAAgB,IAAI,IAAI;gBACxD,GAnCY;AAoCZ,oBAAIC,aAAY;AAChBA,2BAAU,cAAc,CAAC,aAAa;AACpC,sBAAI,QAAQ,WAAW;AACvB,sBAAI,OAAO,WAAW,KAAK,YAAY;AACvC,wBAAM,KAAK,IAAI,KAAK,aAAa,CAAC;AAClC,sBAAI,OAAOA,WAAU,OAAO,QAAQ,KAAK,aAAa;AACpDA,+BAAU,OAAO,QAAQ,IAAI,MAAM,OAAO,GAAG;kBAC/C;AACA,sBAAI,OAAOA,WAAU,OAAO,QAAQ,KAAK;AACvC,0BAAM,IAAI,MAAM,eAAe;AACjC,yBAAOA,WAAU,OAAO,QAAQ;gBAClC,CAAC;AAED,oBAAI,YAAY,CAAC,YAAY;AAC3B,8BAAY,aAAa;AACzB,+BAAa,KAAK,OAAO,CAAC,EAAE;AAC5B,8BAAY;AACZ;oBACE;kBACF;gBACF;AAEA,qBAAK,UAAU;AACf,qBAAK,aAAa;AAClB,qBAAK,cAAc;cACrB;cACA,IAAI,SAAS;AACX,oBAAI,CAAC,KAAK,aAAa;AACrB,uBAAK,YAAY;gBACnB;AACA,uBAAO,KAAK;cACd;cACA,IAAI,YAAY;AACd,oBAAI,CAAC,KAAK,aAAa;AACrB,uBAAK,YAAY;gBACnB;AACA,uBAAO,KAAK;cACd;YACF;AAEA,gBAAI,OAAO,kBAAkB,aAAa;AACxC,kBAAI,CAAC;AACH,sBAAM;AACR,kBAAI,YAAY,IAAI,eAAe;AACnC,kBAAI,aAAa,EAAE,UAAU,OAAO,UAAU,UAAU;YAC1D,OAAO;AACL,kBAAI,aAAa,EAAE,UAAU,OAAO,IAAS;YAC/C;AAEA,gBAAI,OAAO,GAAG,WAAW,QAAQ,MAAM,YAAY,SAAS,QAAQ;AAEpE,gBAAI,WAAW,UAAU;AACvB,mBAAK,WAAW,WAAW;YAC7B,WAAW,WAAW,KAAK;AACzB,mBAAK,WAAW;AAChB,mBAAK,MAAM,WAAW;YACxB;AAEA,mBAAO,iBAAiB,MAAM;cAC5B,WAAW;gBACT,KAAK,kCAAY;AACf,yBAAO,KAAK,SAAS;gBACvB,GAFK;cAGP;YACF,CAAC;AAED,gBAAI,aAAa,CAAC;AAClB,gBAAI,OAAO,OAAO,KAAK,KAAK,UAAU;AACtC,iBAAK,QAAQ,CAACvD,SAAQ;AACpB,kBAAI,KAAK,KAAK,WAAWA,IAAG;AAC5B,yBAAWA,IAAG,IAAI,IAAI,SAAS;AAC7B,mBAAG,cAAc,IAAI;AACrB,uBAAO,GAAG,GAAG,IAAI;cACnB;YACF,CAAC;AACD,qBAAS,YAAY,QAAQ,QAAQ,QAAQ,QAAQ,UAAU;AAC7D,kBAAI,WAAW,OAAO,KAAK;AAC3B,kBAAI,YAAY,SAAS,OAAQ,QAAO;AACxC,kBAAI,OAAO,KAAK,IAAI,SAAS,SAAS,UAAU,MAAM;AACtD,kBAAI,SAAS,OAAO;AAClB,yBAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,yBAAO,SAAS,CAAC,IAAI,SAAS,WAAW,CAAC;gBAC5C;cACF,OAAO;AACL,yBAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC7B,yBAAO,SAAS,CAAC,IAAI,SAAS,IAAI,WAAW,CAAC;gBAChD;cACF;AACA,qBAAO;YACT;AAdS;AAgBT,uBAAW,OAAO,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,aAAa;AAC9D,iBAAG,cAAc,IAAI;AACrB,qBAAO,YAAY,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;YAC7D;AAEA,uBAAW,OAAO,CAAC,QAAQ,QAAQ,UAAU,MAAMgB,WAAU;AAC3D,iBAAG,cAAc,IAAI;AACrB,kBAAI,MAAM,UAAU,MAAM;AAC1B,kBAAI,CAAC,KAAK;AACR,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,0BAAY,QAAQ,OAAO,KAAK,QAAQ,QAAQ;AAChD,qBAAO,EAAE,KAAK,WAAW,KAAK;YAChC;AACA,iBAAK,aAAa;AAClB,mBAAO;UACT;QACF;AAEA,YAAI,eAAe,wBAAC,KAAK,mBAAmB;AAC1C,iBAAO,MAAM,kBAAkB,QAAQ,KAAK,cAAc,IAAI;QAChE,GAFmB;AAGnB,YAAI,WAAW;UACb,kBAAkB;UAClB,YAAY,OAAO,MAAM,YAAY;AACnC,gBAAI,KAAK,MAAM,IAAI,GAAG;AACpB,qBAAO;YACT;AAEA,gBAAI2B;AACJ,gBAAI,UAAU,MAAM;AAClB,cAAAA,OAAM,GAAG,IAAI;YACf,OAAO;AACL,kBAAI,YAAY,SAAS,gBAAgB,KAAK;AAC9C,cAAAA,OAAM,UAAU;YAClB;AACA,gBAAI,KAAK,UAAU,GAAG;AACpB,kBAAI,CAAC,YAAY;AACf,sBAAM,IAAI,GAAG,WAAW,EAAE;cAC5B;AACA,qBAAOA;YACT;AACA,mBAAO,KAAK,MAAMA,MAAK,IAAI;UAC7B;UACA,OAAO,MAAM,MAAM,KAAK;AACtB,gBAAI,OAAO,KAAK,IAAI;AACpB,mBAAO,OAAO,CAAC,IAAI,KAAK;AACxB,mBAAQ,MAAM,KAAM,CAAC,IAAI,KAAK;AAC9B,oBAAS,MAAM,KAAM,CAAC,IAAI,KAAK;AAC/B,mBAAQ,MAAM,MAAO,CAAC,IAAI,KAAK;AAC/B,mBAAQ,MAAM,MAAO,CAAC,IAAI,KAAK;AAC/B,mBAAQ,MAAM,MAAO,CAAC,IAAI,KAAK;AAC/B,mBAAQ,MAAM,MAAO,CAAC,IAAI,OAAO,KAAK,IAAI;AAC1C,mBAAQ,MAAM,MAAO,CAAC,IAAI;AAC1B,mBAAQ,MAAM,MAAO,CAAC,IAAI,KAAK;AAC/B,gBAAI,QAAQ,KAAK,MAAM,QAAQ;AAC/B,gBAAI,QAAQ,KAAK,MAAM,QAAQ;AAC/B,gBAAI,QAAQ,KAAK,MAAM,QAAQ;AAC/B,mBAAQ,MAAM,MAAO,CAAC,IAAI,OAAO,KAAK,MAAM,QAAQ,GAAI,CAAC;AACzD,oBAAS,MAAM,MAAO,CAAC,IAAK,QAAQ,MAAQ,MAAO;AACnD,mBAAQ,MAAM,MAAO,CAAC,IAAI,OAAO,KAAK,MAAM,QAAQ,GAAI,CAAC;AACzD,oBAAS,MAAM,MAAO,CAAC,IAAK,QAAQ,MAAQ,MAAO;AACnD,mBAAQ,MAAM,MAAO,CAAC,IAAI,OAAO,KAAK,MAAM,QAAQ,GAAI,CAAC;AACzD,oBAAS,MAAM,MAAO,CAAC,IAAK,QAAQ,MAAQ,MAAO;AACnD,mBAAQ,MAAM,MAAO,CAAC,IAAI,OAAO,KAAK,GAAG;AACzC,mBAAO;UACT;UACA,QAAQ,MAAM,QAAQ,KAAK3B,QAAO,QAAQ;AACxC,gBAAI,CAAC,GAAG,OAAO,OAAO,KAAK,IAAI,GAAG;AAChC,oBAAM,IAAI,GAAG,WAAW,EAAE;YAC5B;AACA,gBAAIA,SAAQ,GAAG;AACb,qBAAO;YACT;AACA,gBAAI,SAAS,OAAO,MAAM,MAAM,OAAO,GAAG;AAC1C,eAAG,MAAM,QAAQ,QAAQ,QAAQ,KAAKA,MAAK;UAC7C;UACA,gBAAgB,IAAI;AAClB,gBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,mBAAO;UACT;UACA,SAAS;UACT,OAAO,KAAK;AACV,gBAAI,MAAM,aAAa,GAAG;AAC1B,mBAAO;UACT;QACF;AACA,iBAAS,iBAAiB,MAAM,MAAM;AACpC,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,eAAG,MAAM,MAAM,IAAI;AACnB,mBAAO;UACT,SAASV,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AATS;AAWT,iBAAS,qBAAqB,OAAO,MAAM,OAAOU,QAAO;AACvD,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,YAAY,OAAO,IAAI;AACvC,gBAAI,QAAQ,CAAC,GAAG;AACd,qBAAO;YACT;AACA,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,OAAO,OAAO;AAClB,gBAAI,CAAC,MAAM;AACT,qBAAO;YACT;AACA,gBAAI,QAAQ;AACZ,gBAAI,QAAQ,EAAG,UAAS;AACxB,gBAAI,QAAQ,EAAG,UAAS;AACxB,gBAAI,QAAQ,EAAG,UAAS;AACxB,gBAAI,SAAS,GAAG,gBAAgB,MAAM,KAAK,GAAG;AAC5C,qBAAO;YACT;AACA,mBAAO;UACT,SAASV,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAxBS;AA0BT,iBAAS,kBAAkB,IAAI,MAAM;AACnC,cAAI;AACF,eAAG,OAAO,IAAI,IAAI;AAClB,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AARS;AAUT,iBAAS,oBAAoB,IAAI,OAAOkD,QAAO;AAC7C,cAAI;AACF,eAAG,OAAO,IAAI,OAAOA,MAAK;AAC1B,mBAAO;UACT,SAASlD,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AARS;AAUT,iBAAS,oBAAoB;AAC3B,cAAI,MAAM,OAAO,CAAC,SAAS,WAAW,CAAC;AACvC,mBAAS,WAAW;AACpB,iBAAO;QACT;AAJS;AAKT,YAAI,oBAAoB;AAExB,iBAAS,mBAAmB,IAAI,KAAK,SAAS;AAC5C,mBAAS,UAAU;AACnB,cAAI;AACF,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,oBAAQ,KAAK;cACX,KAAK,GAAG;AACN,oBAAI,MAAM,kBAAkB;AAC5B,oBAAI,MAAM,GAAG;AACX,yBAAO;gBACT;AACA,uBAAO,GAAG,QAAQ,GAAG,GAAG;AACtB;gBACF;AACA,oBAAI;AACJ,4BAAY,GAAG,UAAU,QAAQ,GAAG;AACpC,uBAAO,UAAU;cACnB;cACA,KAAK;cACL,KAAK;AACH,uBAAO;cACT,KAAK;AACH,uBAAO,OAAO;cAChB,KAAK,GAAG;AACN,oBAAI,MAAM,kBAAkB;AAC5B,uBAAO,SAAS;AAChB,uBAAO;cACT;cACA,KAAK,IAAI;AACP,oBAAI,MAAM,kBAAkB;AAC5B,oBAAI,SAAS;AAEb,uBAAQ,MAAM,UAAW,CAAC,IAAI;AAC9B,uBAAO;cACT;cACA,KAAK;cACL,KAAK;AACH,uBAAO;YACX;AACA,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AA3CS;AA6CT,iBAAS,mBAAmB,IAAI,KAAK;AACnC,cAAI;AACF,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,mBAAO,SAAS,OAAO,GAAG,MAAM,OAAO,MAAM,GAAG;UAClD,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AARS;AAUT,YAAI,YAAY;AAEhB,YAAI,YAAY;AAChB,YAAI,qBAAqB,wBAAC,QACxB,MAAM,aAAa,MAAM,YAAY,MAAM,OAAO,GAAG,GAD9B;AAEzB,iBAAS,uBAAuB,IAAI,QAAQ;AAC1C,mBAAS,mBAAmB,MAAM;AAElC,cAAI;AACF,gBAAI,MAAM,MAAM,EAAG,QAAO;AAC1B,eAAG,UAAU,IAAI,MAAM;AACvB,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAXS;AAaT,YAAI,eAAe,wBAAC,KAAK,QAAQ,oBAAoB;AACnD,iBAAO,kBAAkB,KAAK,QAAQ,QAAQ,eAAe;QAC/D,GAFmB;AAGnB,iBAAS,kBAAkB,KAAK,MAAM;AACpC,cAAI;AACF,gBAAI,SAAS,EAAG,QAAO;AACvB,gBAAImD,OAAM,GAAG,IAAI;AACjB,gBAAI,mBAAmB,gBAAgBA,IAAG,IAAI;AAC9C,gBAAI,OAAO,iBAAkB,QAAO;AACpC,yBAAaA,MAAK,KAAK,IAAI;AAC3B,mBAAO;UACT,SAASnD,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAZS;AAcT,iBAAS,iBAAiB,IAAI,IAAI,SAAS;AACzC,mBAAS,UAAU;AACnB,cAAI;AACF,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,oBAAQ,IAAI;cACV,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;cACT;cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,oBAAI,OAAO,IAAI,IAAI,cAAc;AAC/B,sBAAI,UAAU,OAAO,IAAI,IAAI,aAAa,MAAM;AAChD,sBAAI,OAAO,kBAAkB;AAC7B,yBAAO,QAAQ,CAAC,IAAI,QAAQ,WAAW;AACvC,yBAAQ,OAAO,KAAM,CAAC,IAAI,QAAQ,WAAW;AAC7C,yBAAQ,OAAO,KAAM,CAAC,IAAI,QAAQ,WAAW;AAC7C,yBAAQ,OAAO,MAAO,CAAC,IAAI,QAAQ,WAAW;AAC9C,2BAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,0BAAM,OAAO,IAAI,EAAE,IAAI,QAAQ,KAAK,CAAC,KAAK;kBAC5C;AACA,yBAAO;gBACT;AACA,uBAAO;cACT;cACA,KAAK;cACL,KAAK;cACL,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;cACT;cACA,KAAK;cACL,KAAK;cACL,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,oBAAI,OAAO,IAAI,IAAI,cAAc;AAC/B,sBAAI,OAAO,kBAAkB;AAC7B,sBAAI,UAAU,OAAO,QAAQ,CAAC;AAC9B,sBAAI,UAAU,OAAQ,OAAO,KAAM,CAAC;AACpC,sBAAI,UAAU,OAAQ,OAAO,KAAM,CAAC;AACpC,sBAAI,UAAU,OAAQ,OAAO,MAAO,CAAC;AACrC,sBAAI,OAAO,CAAC;AACZ,2BAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,yBAAK,KAAK,MAAM,OAAO,IAAI,EAAE,CAAC;kBAChC;AACA,yBAAO,OAAO,IAAI,IAAI,aAAa,OAAO,KAAK,IAAI;oBACjD;oBACA;oBACA;oBACA;oBACA;kBACF,CAAC;gBACH;AACA,uBAAO;cACT;cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,oBAAI,OAAO,kBAAkB;AAC7B,uBAAO,QAAQ,CAAC,IAAI;AACpB,uBAAO;cACT;cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;cACT;cACA,KAAK,OAAO;AACV,oBAAI,OAAO,kBAAkB;AAC7B,uBAAO,GAAG,MAAM,QAAQ,IAAI,IAAI;cAClC;cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,oBAAI,OAAO,IAAI,IAAI,kBAAkB;AACnC,sBAAI,UAAU,OAAO,IAAI,IAAI,iBAAiB,OAAO,GAAG;AACxD,sBAAI,OAAO,kBAAkB;AAC7B,yBAAO,QAAQ,CAAC,IAAI,QAAQ,CAAC;AAC7B,yBAAQ,OAAO,KAAM,CAAC,IAAI,QAAQ,CAAC;gBACrC;AACA,uBAAO;cACT;cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;cACT;cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;cACT;cACA;AACE,uBAAO;YACX;UACF,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AA9FS;AAgGT,iBAAS,mBAAmB,MAAM,KAAK;AACrC,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,OAAO,GAAG,OAAO,MAAM,GAAG;UAC5C,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AARS;AAUT,iBAAS,mBAAmB,OAAO,MAAM,MAAM;AAC7C,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,YAAY,OAAO,IAAI;AAEvC,mBAAO,KAAK,UAAU,IAAI;AAC1B,gBAAI,KAAK,KAAK,SAAS,CAAC,MAAM;AAC5B,qBAAO,KAAK,OAAO,GAAG,KAAK,SAAS,CAAC;AACvC,eAAG,MAAM,MAAM,MAAM,CAAC;AACtB,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAdS;AAgBT,iBAAS,sBAAsB,OAAO,MAAM,KAAKU,QAAO;AACtD,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,gBAAI,WAAWA,SAAQ;AACvB,gBAAI,aAAaA,SAAQ;AACzBA,qBAAQA,SAAQ,CAAC;AACjB,mBAAO,SAAS,YAAY,OAAO,MAAM,UAAU;AACnD,mBAAO,SAAS,OAAO,WAAW,GAAG,QAAQ,GAAG,MAAM,MAAM,GAAG;UACjE,SAASV,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAZS;AAcT,iBAAS,kBAAkB,OAAO,MAAMU,QAAO,SAAS;AACtD,mBAAS,UAAU;AACnB,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,YAAY,OAAO,IAAI;AACvC,gBAAI,OAAO,UAAU,kBAAkB,IAAI;AAC3C,mBAAO,GAAG,KAAK,MAAMA,QAAO,IAAI,EAAE;UACpC,SAASV,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAXS;AAaT,iBAAS,sBAAsB,OAAO,MAAM,KAAK,SAAS;AACxD,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,YAAY,OAAO,IAAI;AACvC,gBAAI,WAAW,EAAG,QAAO;AACzB,gBAAI,MAAM,GAAG,SAAS,IAAI;AAE1B,gBAAI,MAAM,KAAK,IAAI,SAAS,gBAAgB,GAAG,CAAC;AAChD,gBAAI,UAAU,MAAM,MAAM,GAAG;AAC7B,yBAAa,KAAK,KAAK,UAAU,CAAC;AAElC,kBAAM,MAAM,GAAG,IAAI;AACnB,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAjBS;AAmBT,iBAAS,iBAAiB,MAAM;AAC9B,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,eAAG,MAAM,IAAI;AACb,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AATS;AAWT,iBAAS,kBAAkB,MAAM,KAAK;AACpC,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,OAAO,GAAG,MAAM,MAAM,GAAG;UAC3C,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AARS;AAUT,iBAAS,oBAAoB,OAAO,MAAMU,QAAO;AAC/C,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,YAAY,OAAO,IAAI;AACvC,gBAAIA,WAAU,GAAG;AACf,iBAAG,OAAO,IAAI;YAChB,WAAWA,WAAU,KAAK;AACxB,iBAAG,MAAM,IAAI;YACf,OAAO;AACLJ,cAAAA,QAAM,kCAAkC;YAC1C;AACA,mBAAO;UACT,SAASN,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAhBS;AAkBT,YAAI,iBAAiB,wBAAC,QAAQ;AAC5B,iBAAO,QAAQ,OAAO,CAAC,IAAI,OAAQ,MAAM,KAAM,CAAC,IAAI;QACtD,GAFqB;AAIrB,iBAAS,qBAAqB,OAAO,MAAM,OAAOU,QAAO;AACvD,cAAI;AACF,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,YAAY,OAAO,MAAM,IAAI;AAC7C,gBAAI,MAAM,KAAK,IAAI,GACjB,OACA;AACF,gBAAI,CAAC,OAAO;AACV,sBAAQ;AACR,sBAAQ;YACV,OAAO;AACL,kBAAI,UAAU,eAAe,KAAK;AAClC,kBAAI,cAAc,OAAQ,QAAQ,KAAM,CAAC;AACzC,kBAAI,eAAe,YAAY;AAC7B,wBAAQ;cACV,WAAW,eAAe,YAAY;AACpC,wBAAQ;cACV,OAAO;AACL,wBAAQ,UAAU,MAAO,eAAe,MAAO;cACjD;AACA,uBAAS;AACT,wBAAU,eAAe,KAAK;AAC9B,4BAAc,OAAQ,QAAQ,KAAM,CAAC;AACrC,kBAAI,eAAe,YAAY;AAC7B,wBAAQ;cACV,WAAW,eAAe,YAAY;AACpC,wBAAQ;cACV,OAAO;AACL,wBAAQ,UAAU,MAAO,eAAe,MAAO;cACjD;YACF;AAEA,gBAAI,SAAS,MAAM,SAAS,IAAI;AAC9B,iBAAG,MAAM,MAAM,OAAO,KAAK;YAC7B;AACA,mBAAO;UACT,SAASV,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAxCS;AA0CT,YAAI,iBAAiB;AACrB,YAAI,oCAAoC,6BAAM,gBAAN;AAExC,YAAI,aAAa,wBAAC,SAChB,OAAO,MAAM,MAAM,OAAO,QAAQ,KAAK,OAAO,QAAQ,IADvC;AAGjB,YAAI,6BAA6B;UAC/B;UAAG;UAAI;UAAI;UAAI;UAAK;UAAK;UAAK;UAAK;UAAK;UAAK;UAAK;QACpD;AAEA,YAAI,gCAAgC;UAClC;UAAG;UAAI;UAAI;UAAI;UAAK;UAAK;UAAK;UAAK;UAAK;UAAK;UAAK;QACpD;AACA,YAAI,eAAe,wBAAC,SAAS;AAC3B,cAAI,OAAO,WAAW,KAAK,YAAY,CAAC;AACxC,cAAI,sBAAsB,OACtB,6BACA;AACJ,cAAI,OAAO,oBAAoB,KAAK,SAAS,CAAC,IAAI,KAAK,QAAQ,IAAI;AAEnE,iBAAO;QACT,GARmB;AAUnB,iBAAS,eAAeoD,OAAM,OAAO;AACnC,UAAAA,QAAO,mBAAmBA,KAAI;AAE9B,cAAI,OAAO,IAAI,KAAKA,QAAO,GAAI;AAC/B,iBAAO,SAAS,CAAC,IAAI,KAAK,WAAW;AACrC,iBAAQ,QAAQ,KAAM,CAAC,IAAI,KAAK,WAAW;AAC3C,iBAAQ,QAAQ,KAAM,CAAC,IAAI,KAAK,SAAS;AACzC,iBAAQ,QAAQ,MAAO,CAAC,IAAI,KAAK,QAAQ;AACzC,iBAAQ,QAAQ,MAAO,CAAC,IAAI,KAAK,SAAS;AAC1C,iBAAQ,QAAQ,MAAO,CAAC,IAAI,KAAK,YAAY,IAAI;AACjD,iBAAQ,QAAQ,MAAO,CAAC,IAAI,KAAK,OAAO;AAExC,cAAI,OAAO,aAAa,IAAI,IAAI;AAChC,iBAAQ,QAAQ,MAAO,CAAC,IAAI;AAC5B,iBAAQ,QAAQ,MAAO,CAAC,IAAI,EAAE,KAAK,kBAAkB,IAAI;AAEzD,cAAI,QAAQ,IAAI,KAAK,KAAK,YAAY,GAAG,GAAG,CAAC;AAC7C,cAAI,eAAe,IAAI,KAAK,KAAK,YAAY,GAAG,GAAG,CAAC,EAAE,kBAAkB;AACxE,cAAI,eAAe,MAAM,kBAAkB;AAC3C,cAAI,OACD,gBAAgB,gBACf,KAAK,kBAAkB,KAAK,KAAK,IAAI,cAAc,YAAY,KAAK;AACxE,iBAAQ,QAAQ,MAAO,CAAC,IAAI;QAC9B;AAvBS;AAyBT,iBAAS,UAAU,KAAK,MAAM1C,QAAO,IAAI,QAAQ,WAAW,MAAM;AAChE,mBAAS,mBAAmB,MAAM;AAElC,cAAI;AACF,gBAAI,MAAM,MAAM,EAAG,QAAO;AAC1B,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,MAAM,GAAG,KAAK,QAAQ,KAAK,QAAQ,MAAMA,MAAK;AAClD,gBAAI,MAAM,IAAI;AACd,mBAAO,aAAa,CAAC,IAAI,IAAI;AAC7B,oBAAQ,QAAQ,CAAC,IAAI;AACrB,mBAAO;UACT,SAASV,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAfS;AAiBT,iBAAS,YAAY,MAAM,KAAK,MAAMU,QAAO,IAAI,QAAQ;AACvD,mBAAS,mBAAmB,MAAM;AAElC,cAAI;AACF,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,OAAO,GAAG;AACZ,uBAAS,QAAQ,MAAM,QAAQ,KAAKA,QAAO,MAAM;YACnD;UACF,SAASV,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAO,CAACA,GAAE;UACZ;QACF;AAZS;AAcT,YAAI,aAAa,wBAAC,UAAU,UAAU,UAAU,aAAa;AAC3D,cAAI,eAAc,oBAAI,KAAK,GAAE,YAAY;AACzC,cAAI,SAAS,IAAI,KAAK,aAAa,GAAG,CAAC;AACvC,cAAI,SAAS,IAAI,KAAK,aAAa,GAAG,CAAC;AACvC,cAAI,eAAe,OAAO,kBAAkB;AAC5C,cAAI,eAAe,OAAO,kBAAkB;AAE5C,cAAI,oBAAoB,KAAK,IAAI,cAAc,YAAY;AAE3D,kBAAQ,YAAY,CAAC,IAAI,oBAAoB;AAE7C,iBAAO,YAAY,CAAC,IAAI,OAAO,gBAAgB,YAAY;AAE3D,cAAI,cAAc,wBAAC,mBAAmB;AACpC,gBAAI,OAAO,kBAAkB,IAAI,MAAM;AAEvC,gBAAI,YAAY,KAAK,IAAI,cAAc;AACvC,gBAAI,QAAQ,OAAO,KAAK,MAAM,YAAY,EAAE,CAAC,EAAE,SAAS,GAAG,GAAG;AAC9D,gBAAI,UAAU,OAAO,YAAY,EAAE,EAAE,SAAS,GAAG,GAAG;AAEpD,mBAAO,MAAM,IAAI,GAAG,KAAK,GAAG,OAAO;UACrC,GARkB;AAUlB,cAAI,aAAa,YAAY,YAAY;AACzC,cAAI,aAAa,YAAY,YAAY;AACzC,cAAI,eAAe,cAAc;AAC/B,yBAAa,YAAY,UAAU,EAAE;AACrC,yBAAa,YAAY,UAAU,EAAE;UACvC,OAAO;AACL,yBAAa,YAAY,UAAU,EAAE;AACrC,yBAAa,YAAY,UAAU,EAAE;UACvC;QACF,GAhCiB;AAkCjB,YAAI,uBAAuB,6BAAM,KAAK,IAAI,GAAf;AAE3B,YAAI,sBAAsB,6BAAM,YAAY,IAAI,GAAtB;AAE1B,YAAI,aAAa,6BAAM,YAAN;AAEjB,YAAI,aAAa,wBAAC,SAAS;AACzB,cAAI,IAAI,WAAW;AACnB,cAAI,SAAU,OAAO,EAAE,aAAa,SAAS,QAAS;AACtD,cAAI;AACF,uBAAW,KAAK,KAAK;AACrB,8BAAkB;AAClB,mBAAO;UACT,SAASA,IAAG;UAAC;QACf,GARiB;AASjB,YAAI,0BAA0B,wBAAC,kBAAkB;AAC/C,cAAI,UAAU,OAAO;AAErB,6BAAmB;AAEnB,cAAI,cAAc,WAAW;AAC7B,cAAI,gBAAgB,aAAa;AAC/B,mBAAO;UACT;AAEA,mBAAS,UAAU,GAAG,WAAW,GAAG,WAAW,GAAG;AAChD,gBAAI,oBAAoB,WAAW,IAAI,MAAM;AAE7C,gCAAoB,KAAK;cACvB;cACA,gBAAgB;YAClB;AAEA,gBAAI,UAAU,KAAK;cACjB;cACA,YAAY,KAAK,IAAI,eAAe,iBAAiB,GAAG,KAAK;YAC/D;AAEA,gBAAI,cAAc,WAAW,OAAO;AACpC,gBAAI,aAAa;AACf,qBAAO;YACT;UACF;AACA,iBAAO;QACT,GA7B8B;AA+B9B,YAAI,MAAM,CAAC;AAEX,YAAI,oBAAoB,6BAAM;AAC5B,iBAAO,eAAe;QACxB,GAFwB;AAGxB,YAAI,gBAAgB,6BAAM;AACxB,cAAI,CAAC,cAAc,SAAS;AAC1B,gBAAI,QAEC,OAAO,aAAa,YACnB,UAAU,aACV,UAAU,UAAU,CAAC,KACvB,KACA,QAAQ,KAAK,GAAG,IAAI;AACxB,gBAAIqD,OAAM;cACR,MAAM;cACN,SAAS;cACT,MAAM;cACN,KAAK;cACL,MAAM;cACN,MAAM;cACN,GAAG,kBAAkB;YACvB;AAEA,qBAAS,KAAK,KAAK;AACjB,kBAAI,IAAI,CAAC,MAAM,OAAW,QAAOA,KAAI,CAAC;kBACjC,CAAAA,KAAI,CAAC,IAAI,IAAI,CAAC;YACrB;AACA,gBAAI,UAAU,CAAC;AACf,qBAAS,KAAKA,MAAK;AACjB,sBAAQ,KAAK,GAAG,CAAC,IAAIA,KAAI,CAAC,CAAC,EAAE;YAC/B;AACA,0BAAc,UAAU;UAC1B;AACA,iBAAO,cAAc;QACvB,GA9BoB;AAgCpB,YAAI,gBAAgB,wBAAC,KAAK,WAAW;AACnC,mBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,kBAAM,QAAQ,IAAI,IAAI,WAAW,CAAC;UACpC;AAEA,gBAAM,MAAM,IAAI;QAClB,GANoB;AAOpB,YAAI,eAAe,wBAAC,WAAW,gBAAgB;AAC7C,cAAI,UAAU;AACd,wBAAc,EAAE,QAAQ,CAAC,QAAQ,MAAM;AACrC,gBAAI,MAAM,cAAc;AACxB,oBAAS,YAAY,IAAI,KAAM,CAAC,IAAI;AACpC,0BAAc,QAAQ,GAAG;AACzB,uBAAW,OAAO,SAAS;UAC7B,CAAC;AACD,iBAAO;QACT,GATmB;AAWnB,YAAI,qBAAqB,wBAAC,gBAAgB,sBAAsB;AAC9D,cAAI,UAAU,cAAc;AAC5B,kBAAQ,kBAAkB,CAAC,IAAI,QAAQ;AACvC,cAAI,UAAU;AACd,kBAAQ,QAAQ,CAAC,WAAY,WAAW,OAAO,SAAS,CAAE;AAC1D,kBAAQ,qBAAqB,CAAC,IAAI;AAClC,iBAAO;QACT,GAPyB;AASzB,iBAAS,UAAU,IAAI;AACrB,cAAI;AACF,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,eAAG,MAAM,MAAM;AACf,mBAAO;UACT,SAASrD,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAOA,GAAE;UACX;QACF;AATS;AAWT,iBAAS,eAAe,IAAI,MAAM;AAChC,cAAI;AACF,gBAAI,aAAa;AACjB,gBAAI,mBAAmB;AACvB,gBAAIU,SAAQ;AACZ;AACE,kBAAI,SAAS,SAAS,gBAAgB,EAAE;AAExC,kBAAI,OAAO,OAAO,MACd,IACA,GAAG,MAAM,OAAO,IAAI,IAClB,IACA,GAAG,OAAO,OAAO,IAAI,IACnB,IACA;YACV;AACA,kBAAM,IAAI,IAAI;AACd,mBAAQ,OAAO,KAAM,CAAC,IAAIA;AAC1B,mBAAQ,OAAO,KAAM,CAAC,IAAI,OAAO,UAAU;AAC3C,mBAAQ,OAAO,MAAO,CAAC,IAAI,OAAO,gBAAgB;AAClD,mBAAO;UACT,SAASV,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAOA,GAAE;UACX;QACF;AAzBS;AA2BT,YAAI,UAAU,wBAAC,QAAQ,KAAK,QAAQ,WAAW;AAC7C,cAAI,MAAM;AACV,mBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,gBAAI,MAAM,QAAQ,OAAO,CAAC;AAC1B,gBAAI,MAAM,QAAS,MAAM,KAAM,CAAC;AAChC,mBAAO;AACP,gBAAI,OAAO,GAAG,KAAK,QAAQ,OAAO,KAAK,KAAK,MAAM;AAClD,gBAAI,OAAO,EAAG,QAAO;AACrB,mBAAO;AACP,gBAAI,OAAO,IAAK;AAChB,gBAAI,OAAO,UAAU,aAAa;AAChC,wBAAU;YACZ;UACF;AACA,iBAAO;QACT,GAfc;AAiBd,iBAAS,SAAS,IAAI,KAAK,QAAQ,MAAM;AACvC,cAAI;AACF,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,MAAM,QAAQ,QAAQ,KAAK,MAAM;AACrC,oBAAQ,QAAQ,CAAC,IAAI;AACrB,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAOA,GAAE;UACX;QACF;AAVS;AAYT,iBAAS,SAAS,IAAI,QAAQ,QAAQ,WAAW;AAC/C,mBAAS,mBAAmB,MAAM;AAElC,cAAI;AACF,gBAAI,MAAM,MAAM,EAAG,QAAO;AAC1B,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,eAAG,OAAO,QAAQ,QAAQ,MAAM;AAChC,mBAAO,aAAa,CAAC,IAAI,OAAO,OAAO,QAAQ;AAC/C,gBAAI,OAAO,YAAY,WAAW,KAAK,WAAW;AAChD,qBAAO,WAAW;AACpB,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAOA,GAAE;UACX;QACF;AAfS;AAiBT,iBAAS,SAAS,IAAI;AACpB,cAAI;AACF,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,OAAO,YAAY,OAAO;AAC5B,qBAAO,OAAO,WAAW,MAAM,MAAM;YACvC;AACA,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAOA,GAAE;UACX;QACF;AAXS;AAaT,YAAI,WAAW,wBAAC,QAAQ,KAAK,QAAQ,WAAW;AAC9C,cAAI,MAAM;AACV,mBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,gBAAI,MAAM,QAAQ,OAAO,CAAC;AAC1B,gBAAI,MAAM,QAAS,MAAM,KAAM,CAAC;AAChC,mBAAO;AACP,gBAAI,OAAO,GAAG,MAAM,QAAQ,OAAO,KAAK,KAAK,MAAM;AACnD,gBAAI,OAAO,EAAG,QAAO;AACrB,mBAAO;AACP,gBAAI,OAAO,KAAK;AACd;YACF;AACA,gBAAI,OAAO,UAAU,aAAa;AAChC,wBAAU;YACZ;UACF;AACA,iBAAO;QACT,GAjBe;AAmBf,iBAAS,UAAU,IAAI,KAAK,QAAQ,MAAM;AACxC,cAAI;AACF,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,MAAM,SAAS,QAAQ,KAAK,MAAM;AACtC,oBAAQ,QAAQ,CAAC,IAAI;AACrB,mBAAO;UACT,SAASA,IAAG;AACV,gBAAI,OAAO,MAAM,eAAe,EAAEA,GAAE,SAAS,cAAe,OAAMA;AAClE,mBAAOA,GAAE;UACX;QACF;AAVS;AAYT,WAAG,sBAAsB;AACzB,WAAG,WAAW;AAEd,YAAI,cAAc;UAChB,iBAAiB;UAEjB,qBAAqB;UAErB,kBAAkB;UAElB,oBAAoB;UAEpB,mBAAmB;UAEnB,mBAAmB;UAEnB,uBAAuB;UAEvB,kBAAkB;UAElB,iBAAiB;UAEjB,mBAAmB;UAEnB,mBAAmB;UAEnB,sBAAsB;UAEtB,kBAAkB;UAElB,sBAAsB;UAEtB,iBAAiB;UAEjB,kBAAkB;UAElB,oBAAoB;UAEpB,qBAAqB;UAErB,kCAAkC;UAElC,eAAe;UAEf,UAAU;UAEV,YAAY;UAEZ,WAAW;UAEX,qBAAqB;UAErB,oBAAoB;UAEpB,wBAAwB;UAExB,aAAa;UAEb,mBAAmB;UAEnB,UAAU;UAEV,eAAe;UAEf,SAAS;UAET,SAAS;UAET,SAAS;UAET,UAAU;UAEV,QAAQ;QACV;AACA,YAAI,cAAc,WAAW;AAC7B,YAAI,qBAAqB,8BACtB,qBAAqB,YAAY,mBAAmB,GAAG,GADjC;AAEzB,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,IAAI,IAAI,IAAI,QACjE,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,IAAI,IAAI,IAAI,EAAE;AACnD,YAAI,kBAAmB,OAAO,iBAAiB,IAAI,CAAC,IAAI,IAAI,IAAI,QAC7D,kBAAkB,OAAO,iBAAiB,IACzC,YAAY,gBAAgB,GAAG,IAAI,IAAI,IAAI,EAAE;AACjD,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CACvD,IACA,IACA,IACA,IACA,QAEC,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AACxD,YAAI,iBAAkB,OAAO,gBAAgB,IAAI,CAAC,QAC/C,iBAAiB,OAAO,gBAAgB,IACvC,YAAY,eAAe,GAAG,EAAE;AACpC,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,QACrD,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,EAAE;AACvC,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,OACxD,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG;AACvC,YAAI,kBAAmB,OAAO,iBAAiB,IAAI,CAAC,QACjD,kBAAkB,OAAO,iBAAiB,IACzC,YAAY,gBAAgB,GAAG,EAAE;AACrC,YAAI,gBAAiB,OAAO,eAAe,IAAI,CAAC,QAC7C,gBAAgB,OAAO,eAAe,IAAI,YAAY,cAAc;UACnE;QACF;AACF,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,QACrD,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,EAAE;AACvC,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,IAAI,QACvD,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,IAAI,EAAE;AAC1C,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,IAAI,QAC3D,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,IAAI,EAAE;AAC5C,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,QACzD,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,EAAE;AACzC,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,IAAI,QAC7D,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,IAAI,EAAE;AAC7C,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,IAAI,QACvD,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,IAAI,EAAE;AAC1C,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,IAAI,IAAI,QAC7D,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,IAAI,IAAI,EAAE;AAC/C,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,IAAI,QACnE,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,EAAE;AAClD,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,IAAI,IAAI,IAAI,QACnE,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,IAAI,IAAI,IAAI,EAAE;AACpD,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CACzD,IACA,IACA,IACA,IACA,QAEC,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AACzD,YAAI,gBAAiB,OAAO,eAAe,IAAI,CAAC,QAC7C,gBAAgB,OAAO,eAAe,IAAI,YAAY,cAAc;UACnE;QACF;AACF,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,iBAAkB,OAAO,gBAAgB,IAAI,CAAC,QAC/C,iBAAiB,OAAO,gBAAgB,IACvC,YAAY,eAAe,GAAG,EAAE;AACpC,YAAI,gBAAiB,OAAO,eAAe,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,QAC7D,gBAAgB,OAAO,eAAe,IAAI,YAAY,cAAc;UACnE;UACA;UACA;UACA;UACA;QACF;AACF,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,IAAI,QAC7D,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,IAAI,EAAE;AAC7C,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,QACrD,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,EAAE;AACvC,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAC7D,IACA,IACA,IACA,QAEC,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,IAAI,IAAI,EAAE;AACvD,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,QAC/D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,EAAE;AAC9C,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,QAC/D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,EAAE;AAC9C,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,QAC/D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,EAAE;AAC9C,YAAI,kBAAmB,OAAO,iBAAiB,IAAI,CAAC,QACjD,kBAAkB,OAAO,iBAAiB,IACzC,YAAY,gBAAgB,GAAG,EAAE;AACrC,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAC3D,IACA,IACA,IACA,IACA,IACA,QAEC,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC9D,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,QACzD,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,EAAE;AACzC,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,QAC3D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,EAAE;AAC1C,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,QAC7D,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,EAAE;AAC3C,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,QACvD,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,EAAE;AACxC,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,QAC3D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,EAAE;AAC1C,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,QAC/D,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,EAAE;AAC5C,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,QACzD,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,EAAE;AACzC,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,QACvD,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,EAAE;AACxC,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,QACzD,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,EAAE;AACzC,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAC3D,IACA,IACA,IACA,QAEC,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,IAAI,EAAE;AACtD,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,QACE,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,EAAE;AACpD,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG,EAAE;AACjD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAC7D,IACA,IACA,QAEC,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,IAAI,EAAE;AACnD,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,IAAI,QAC7D,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,IAAI,EAAE;AAC7C,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,QAC3D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,EAAE;AAC1C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,IACA,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,IAAI,IAAI,EAAE;AACzD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,EAAE;AACjD,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAC3D,IACA,IACA,IACA,QAEC,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,IAAI,EAAE;AACtD,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CACnE,IACA,QAEC,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,IAAI,EAAE;AAClD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,EAAE;AACpD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,EAAE;AACpD,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,QACvD,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,EAAE;AACxC,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,EAAE;AAChD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,QAC/D,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,EAAE;AAC5C,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,EAAE;AACpD,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,QAC/D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,EAAE;AAC9C,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAC3D,IACA,IACA,IACA,QAEC,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,IAAI,EAAE;AACtD,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,QAC7D,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,EAAE;AAC3C,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,QACzD,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,EAAE;AACzC,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,QAC/D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,EAAE;AAC9C,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CACnE,IACA,QAEC,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,IAAI,EAAE;AAClD,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CACvD,IACA,IACA,IACA,IACA,QAEC,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AACxD,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,IAAI,QACnE,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,EAAE;AAClD,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,IAAI,IAAI,QAC7D,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,IAAI,IAAI,EAAE;AAC/C,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CAAC,IAAI,IAAI,QACjE,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,IAAI,IAAI,EAAE;AACjD,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,IAAI,QAC3D,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,IAAI,EAAE;AAC5C,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAC7D,IACA,IACA,IACA,IACA,QAEC,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AAC3D,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CACvD,IACA,IACA,IACA,IACA,QAEC,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AACxD,YAAI,gCAAiC,OACnC,+BACF,IAAI,CAAC,QACF,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG,EAAE;AACnD,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,IAAI,QACF,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,IAAI,EAAE;AACxD,YAAI,gCAAiC,OACnC,+BACF,IAAI,CAAC,IAAI,QACN,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG,IAAI,EAAE;AACvD,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,QACvD,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,EAAE;AACxC,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,QAC/D,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,EAAE;AAC5C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,QACvD,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,EAAE;AACxC,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,IAAI,QACnE,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,EAAE;AAClD,YAAI,eAAgB,OAAO,cAAc,IAAI,CAAC,QAC3C,eAAe,OAAO,cAAc,IAAI,YAAY,aAAa,GAAG,EAAE;AACzE,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,QAC7D,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,EAAE;AAC3C,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAC/D,IACA,IACA,QAEC,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,IAAI,EAAE;AACpD,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CAAC,QACnE,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,EAAE;AAC9C,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CAAC,QACnE,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,EAAE;AAC9C,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,QACE,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,EAAE;AACpD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAC/D,IACA,IACA,QAEC,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,IAAI,EAAE;AACpD,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG,EAAE;AACjD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,IAAI,EAAE;AACrD,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,IAAI,QACvD,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,IAAI,EAAE;AAC1C,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,IAAI,IAAI,QAC3D,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,IAAI,IAAI,EAAE;AAC9C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,iCAAkC,OACpC,gCACF,IAAI,CAAC,QACF,iCAAiC,OAChC,gCACF,IACE,YAAY,+BAA+B,GAAG,EAAE;AACpD,YAAI,gCAAiC,OACnC,+BACF,IAAI,OACD,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG;AACjD,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,CACzD,IACA,IACA,IACA,IACA,IACA,QAEC,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC7D,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAC/D,IACA,IACA,IACA,QAEC,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,IAAI,IAAI,EAAE;AACxD,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,IACA,IACA,IACA,IACA,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/D,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,EAAE;AAC/C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,EAAE;AACjD,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,IAAI,IAAI,QAC3D,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,IAAI,IAAI,EAAE;AAC9C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,IAAI,EAAE;AACrD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,QAC/D,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,EAAE;AAC5C,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAC7D,IACA,IACA,QAEC,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,IAAI,EAAE;AACnD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,OAC9D,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG;AAC1C,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,QACrD,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,EAAE;AACvC,YAAI,sBAAuB,OAAO,qBAAqB,IAAI,OACxD,sBAAsB,OAAO,qBAAqB,IACjD,YAAY,oBAAoB,GAAG;AACvC,YAAI,6BAA8B,OAAO,4BAA4B,IACnE,OACG,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG;AAChD,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,OACpD,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG;AACrC,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,EAAE;AAChD,YAAI,iCAAkC,OACpC,gCACF,IAAI,CAAC,IAAI,QACN,iCAAiC,OAChC,gCACF,IACE,YAAY,+BAA+B,GAAG,IAAI,EAAE;AACxD,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,QACvD,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,EAAE;AACxC,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,QACnD,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,EAAE;AACtC,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CAAC,QACnE,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,EAAE;AAC9C,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,QAC/D,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,EAAE;AAC5C,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,IAAI,QAC3D,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,IAAI,EAAE;AAC5C,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,QACrD,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,EAAE;AACvC,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAC7D,IACA,IACA,QAEC,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,IAAI,EAAE;AACnD,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,IACA,IACA,IACA,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,IAAI,IAAI,IAAI,EAAE;AAC3D,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,QACvD,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,EAAE;AACxC,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CACnE,IACA,IACA,IACA,IACA,IACA,IACA,IACA,QAEC,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB;UACrC;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;AACF,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B;UACxC;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;AACF,YAAI,kCAAmC,OACrC,iCACF,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,QACtC,kCAAkC,OACjC,iCACF,IACE,YAAY,gCAAgC;UAC5C;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;AACF,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,IAAI,EAAE;AACxD,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,CAAC,IAAI,IAAI,IAAI,QACjE,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG,IAAI,IAAI,IAAI,EAAE;AACnD,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,IAAI,QACnE,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,EAAE;AAClD,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,IAAI,QACnE,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,EAAE;AAClD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAC/D,IACA,IACA,QAEC,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,IAAI,EAAE;AACpD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,IAAI,EAAE;AACrD,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,QAC7D,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,EAAE;AAC3C,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,QACnD,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,EAAE;AACtC,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,EAAE;AAC/C,YAAI,kBAAmB,OAAO,iBAAiB,IAAI,CAAC,QACjD,kBAAkB,OAAO,iBAAiB,IACzC,YAAY,gBAAgB,GAAG,EAAE;AACrC,YAAI,iBAAkB,OAAO,gBAAgB,IAAI,CAAC,IAAI,IAAI,QACvD,iBAAiB,OAAO,gBAAgB,IACvC,YAAY,eAAe,GAAG,IAAI,IAAI,EAAE;AAC5C,YAAI,gBAAiB,OAAO,eAAe,IAAI,CAAC,IAAI,QACjD,gBAAgB,OAAO,eAAe,IAAI,YAAY,cAAc;UACnE;UACA;QACF;AACF,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,IAAI,IAAI,IAAI,QAC/D,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,IAAI,IAAI,IAAI,EAAE;AAClD,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,IACA,IACA,IACA,IACA,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/D,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,QAClB,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACxE,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,IACA,IACA,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,IAAI,IAAI,EAAE;AACvD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,iCAAkC,OACpC,gCACF,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,QAClC,iCAAiC,OAChC,gCACF,IACE,YAAY,+BAA+B;UAC3C;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;AACF,YAAI,iCAAkC,OACpC,gCACF,IAAI,CAAC,IAAI,QACN,iCAAiC,OAChC,gCACF,IACE,YAAY,+BAA+B,GAAG,IAAI,EAAE;AACxD,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,IAAI,QACvD,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,IAAI,EAAE;AAC1C,YAAI,qBAAsB,OAAO,oBAAoB,IAAI,CAAC,IAAI,IAAI,QAC/D,qBAAqB,OAAO,oBAAoB,IAC/C,YAAY,mBAAmB,GAAG,IAAI,IAAI,EAAE;AAChD,YAAI,mBAAoB,OAAO,kBAAkB,IAAI,CAAC,IAAI,QACvD,mBAAmB,OAAO,kBAAkB,IAC3C,YAAY,iBAAiB,GAAG,IAAI,EAAE;AAC1C,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,QAC/D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,EAAE;AAC9C,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,QAC/D,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,EAAE;AAC9C,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG,EAAE;AACjD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,EAAE;AAChD,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAC3D,IACA,IACA,IACA,QAEC,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,IAAI,EAAE;AACtD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAC/D,IACA,IACA,QAEC,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,IAAI,EAAE;AACpD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,QAC/D,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,EAAE;AAC5C,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,IAAI,IAAI,QACN,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,IAAI,IAAI,EAAE;AAC5D,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,IACA,IACA,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,IAAI,IAAI,EAAE;AACvD,YAAI,iCAAkC,OACpC,gCACF,IAAI,CAAC,IAAI,IAAI,QACV,iCAAiC,OAChC,gCACF,IACE,YAAY,+BAA+B,GAAG,IAAI,IAAI,EAAE;AAC5D,YAAI,gCAAiC,OACnC,+BACF,IAAI,CAAC,IAAI,IAAI,QACV,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG,IAAI,IAAI,EAAE;AAC3D,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CACnE,IACA,IACA,QAEC,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,IAAI,IAAI,EAAE;AACtD,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CACnE,IACA,QAEC,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,IAAI,EAAE;AAClD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG,EAAE;AACjD,YAAI,gCAAiC,OACnC,+BACF,IAAI,CAAC,IAAI,IAAI,QACV,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG,IAAI,IAAI,EAAE;AAC3D,YAAI,iCAAkC,OACpC,gCACF,IAAI,CAAC,QACF,iCAAiC,OAChC,gCACF,IACE,YAAY,+BAA+B,GAAG,EAAE;AACpD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,IAAI,EAAE;AACrD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,IACA,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,IAAI,IAAI,EAAE;AAC5D,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,IAAI,IAAI,QACN,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,IAAI,IAAI,EAAE;AAC5D,YAAI,kCAAmC,OACrC,iCACF,IAAI,CAAC,IAAI,IAAI,IAAI,QACd,kCAAkC,OACjC,iCACF,IACE,YAAY,gCAAgC,GAAG,IAAI,IAAI,IAAI,EAAE;AACjE,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,QAC/D,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,EAAE;AAC5C,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAC3D,IACA,IACA,IACA,IACA,QAEC,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AAC1D,YAAI,uBAAwB,OAAO,sBAAsB,IAAI,CAAC,IAAI,IAAI,QACnE,uBAAuB,OAAO,sBAAsB,IACnD,YAAY,qBAAqB,GAAG,IAAI,IAAI,EAAE;AAClD,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAC7D,IACA,IACA,QAEC,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,IAAI,EAAE;AACnD,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAC7D,IACA,IACA,QAEC,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,IAAI,EAAE;AACnD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,IAAI,EAAE;AACxD,YAAI,iCAAkC,OACpC,gCACF,IAAI,CAAC,IAAI,QACN,iCAAiC,OAChC,gCACF,IACE,YAAY,+BAA+B,GAAG,IAAI,EAAE;AACxD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,EAAE;AAChD,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CACnE,IACA,IACA,IACA,QAEC,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,IAAI,IAAI,IAAI,EAAE;AAC1D,YAAI,gCAAiC,OACnC,+BACF,IAAI,CAAC,IAAI,IAAI,IAAI,QACd,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG,IAAI,IAAI,IAAI,EAAE;AAC/D,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B;UACvC;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;AACF,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,IACA,IACA,IACA,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACjE,YAAI,kCAAmC,OACrC,iCACF,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,QAClC,kCAAkC,OACjC,iCACF,IACE,YAAY,gCAAgC;UAC5C;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;AACF,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,QAClB,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACxE,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,IAAI,EAAE;AACrD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,IAAI,EAAE;AACxD,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,IAAI,IAAI,QACN,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,IAAI,IAAI,EAAE;AAC5D,YAAI,kCAAmC,OACrC,iCACF,IAAI,CAAC,IAAI,IAAI,QACV,kCAAkC,OACjC,iCACF,IACE,YAAY,gCAAgC,GAAG,IAAI,IAAI,EAAE;AAC7D,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,EAAE;AAChD,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CACnE,IACA,IACA,IACA,IACA,IACA,QAEC,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAClE,YAAI,gCAAiC,OACnC,+BACF,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,QACtB,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACvE,YAAI,yBAA0B,OAAO,wBAAwB,IAAI,CAAC,IAAI,QACnE,yBAAyB,OAAO,wBAAwB,IACvD,YAAY,uBAAuB,GAAG,IAAI,EAAE;AAChD,YAAI,oBAAqB,OAAO,mBAAmB,IAAI,OACpD,oBAAoB,OAAO,mBAAmB,IAC7C,YAAY,kBAAkB,GAAG;AACrC,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,OACpE,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG;AAC7C,YAAI,gCAAiC,OACnC,+BACF,IAAI,CAAC,QACF,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG,EAAE;AACnD,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG,EAAE;AACjD,YAAI,kCAAmC,OACrC,iCACF,IAAI,OACD,kCAAkC,OACjC,iCACF,IACE,YAAY,gCAAgC,GAAG;AACnD,YAAI,8BAA+B,OAAO,6BAA6B,IACrE,OACG,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG;AACjD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,IAAI,EAAE;AACrD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,EAAE;AAChD,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,OAClE,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG;AAC5C,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,IACA,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,IAAI,EAAE;AACnD,YAAI,wBAAyB,OAAO,uBAAuB,IAAI,CAAC,IAAI,QACjE,wBAAwB,OAAO,uBAAuB,IACrD,YAAY,sBAAsB,GAAG,IAAI,EAAE;AAC/C,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CAAC,QACjE,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,EAAE;AAC7C,YAAI,mCAAoC,OACtC,kCACF,IAAI,CAAC,IAAI,QACN,mCAAmC,OAClC,kCACF,IACE,YAAY,iCAAiC,GAAG,IAAI,EAAE;AAC1D,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,IACA,IACA,IACA,IACA,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AACjE,YAAI,iCAAkC,OACpC,gCACF,IAAI,CAAC,IAAI,IAAI,IAAI,QACd,iCAAiC,OAChC,gCACF,IACE,YAAY,+BAA+B,GAAG,IAAI,IAAI,IAAI,EAAE;AAChE,YAAI,mCAAoC,OACtC,kCACF,IAAI,CAAC,IAAI,IAAI,QACV,mCAAmC,OAClC,kCACF,IACE,YAAY,iCAAiC,GAAG,IAAI,IAAI,EAAE;AAC9D,YAAI,sCAAuC,OACzC,qCACF,IAAI,CAAC,IAAI,QACN,sCAAsC,OACrC,qCACF,IACE,YAAY,oCAAoC,GAAG,IAAI,EAAE;AAC7D,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,OACG,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG;AAClD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,IAAI,EAAE;AACxD,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,IACA,IACA,IACA,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG,IAAI,IAAI,IAAI,EAAE;AAC7D,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,IAAI,IAAI,IAAI,IAAI,QACd,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AACpE,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,IACA,IACA,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,IAAI,IAAI,EAAE;AACxD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,EAAE;AACjD,YAAI,2BAA4B,OAAO,0BAA0B,IAAI,CACnE,IACA,IACA,QAEC,2BAA2B,OAAO,0BAA0B,IAC3D,YAAY,yBAAyB,GAAG,IAAI,IAAI,EAAE;AACtD,YAAI,0BAA2B,OAAO,yBAAyB,IAAI,CACjE,IACA,QAEC,0BAA0B,OAAO,yBAAyB,IACzD,YAAY,wBAAwB,GAAG,IAAI,EAAE;AACjD,YAAI,4BAA6B,OAAO,2BAA2B,IAAI,CACrE,IACA,QAEC,4BAA4B,OAAO,2BAA2B,IAC7D,YAAY,0BAA0B,GAAG,IAAI,EAAE;AACnD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,EAAE;AAChD,YAAI,6BAA8B,OAAO,4BAA4B,IAAI,CACvE,QAEC,6BAA6B,OAAO,4BAA4B,IAC/D,YAAY,2BAA2B,GAAG,EAAE;AAChD,YAAI,8BAA+B,OAAO,6BAA6B,IAAI,CACzE,QAEC,8BAA8B,OAAO,6BAA6B,IACjE,YAAY,4BAA4B,GAAG,EAAE;AACjD,YAAI,gCAAiC,OACnC,+BACF,IAAI,OACD,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG;AACjD,YAAI,gCAAiC,OACnC,+BACF,IAAI,OACD,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG;AACjD,YAAI,mCAAoC,OACtC,kCACF,IAAI,CAAC,QACF,mCAAmC,OAClC,kCACF,IACE,YAAY,iCAAiC,GAAG,EAAE;AACtD,YAAI,mCAAoC,OACtC,kCACF,IAAI,CAAC,IAAI,QACN,mCAAmC,OAClC,kCACF,IACE,YAAY,iCAAiC,GAAG,IAAI,EAAE;AAC1D,YAAI,+BAAgC,OAAO,8BAA8B,IACvE,CAAC,QACE,+BAA+B,OAAO,8BAA8B,IACnE,YAAY,6BAA6B,GAAG,EAAE;AACpD,YAAI,qCAAsC,OACxC,oCACF,IAAI,CAAC,QACF,qCAAqC,OACpC,oCACF,IACE,YAAY,mCAAmC,GAAG,EAAE;AACxD,YAAI,gCAAiC,OACnC,+BACF,IAAI,CAAC,QACF,gCAAgC,OAAO,+BAA+B,IACrE,YAAY,8BAA8B,GAAG,EAAE;AACnD,YAAI,mCAAoC,OACtC,kCACF,IAAI,CAAC,IAAI,QACN,mCAAmC,OAClC,kCACF,IACE,YAAY,iCAAiC,GAAG,IAAI,EAAE;AAC1D,YAAI,UAAW,OAAO,SAAS,IAAI,CAAC,QACjC,UAAU,OAAO,SAAS,IAAI,YAAY,QAAQ,GAAG,EAAE;AAC1D,YAAI,QAAS,OAAO,OAAO,IAAI,CAAC,QAC7B,QAAQ,OAAO,OAAO,IAAI,YAAY,MAAM,GAAG,EAAE;AACpD,YAAI,WAAY,OAAO,UAAU,IAAI,CAAC,IAAI,QACvC,WAAW,OAAO,UAAU,IAAI,YAAY,SAAS,GAAG,IAAI,EAAE;AACjE,YAAI,+BAA+B,wBAAC,IAAI,QACrC,+BACC,YAAY,6BAA6B,GAAG,IAAI,EAAE,GAFnB;AAGnC,YAAI,6BAA6B,wBAAC,QAC/B,6BAA6B,YAAY,2BAA2B;UACnE;QACF,GAH+B;AAIjC,YAAI,2BAA2B,wBAAC,QAC7B,2BAA2B,YAAY,yBAAyB,GAAG,EAAE,GADzC;AAE/B,YAAI,gCAAgC,8BACjC,gCACC,YAAY,8BAA8B,GAAG,GAFb;AAIpC,eAAO,YAAY,IAAI;AAEvB,YAAI;AACJ,YAAI;AAEJ,gCAAwB,gCAAS,YAAY;AAC3C,cAAI,CAAC,UAAW,KAAI;AACpB,cAAI,CAAC,UAAW,yBAAwB;QAC1C,GAHwB;AAKxB,iBAAS,MAAM;AACb,cAAI,kBAAkB,GAAG;AACvB;UACF;AAEA,cAAI,CAAC,cAAc;AACjB,2BAAe;AACf,mBAAO;AAEP,gBAAI,kBAAkB,GAAG;AACvB;YACF;UACF;AAEA,mBAAS,QAAQ;AACf,gBAAI,UAAW;AACf,wBAAY;AACZ,mBAAO,WAAW,IAAI;AAEtB,gBAAI,MAAO;AAEX,wBAAY;AAEZ,gCAAoB,MAAM;AAC1B,mBAAO,sBAAsB,IAAI;AAEjC,oBAAQ;UACV;AAbS;AAeT,cAAI,OAAO,WAAW,GAAG;AACvB,mBAAO,WAAW,EAAE,YAAY;AAChC,uBAAW,MAAM;AACf,yBAAW,MAAM,OAAO,WAAW,EAAE,EAAE,GAAG,CAAC;AAC3C,oBAAM;YACR,GAAG,CAAC;UACN,OAAO;AACL,kBAAM;UACR;QACF;AAtCS;AAwCT,YAAI,OAAO,SAAS,GAAG;AACrB,cAAI,OAAO,OAAO,SAAS,KAAK;AAC9B,mBAAO,SAAS,IAAI,CAAC,OAAO,SAAS,CAAC;AACxC,iBAAO,OAAO,SAAS,EAAE,SAAS,GAAG;AACnC,mBAAO,SAAS,EAAE,IAAI,EAAE;UAC1B;QACF;AAEA,YAAI;AAEJ,eAAO,yBAAyB,SAAU,kBAAkB;AAC1D;AAEA;AACA,qBAAW,sBAAsB,gCAAS,oBACxC,YAAY,WAAW,oBACrB,oBAAoB,eACtB;AACA,gBAAI,oBAAoB,SAAS;AAC/B,eAAC,oBAAoB,QAAQ,UAAU,SAAS;gBAC9C;gBACA;cACF;AACA,qBAAO,oBAAoB;YAC7B;AACA,kBAAMsD,UAAS,OAAO;cACpB,uBAAO,OAAO,IAAI;cAClB;gBACE,SAAS;gBACT,QAAQ;gBACR,gBAAgB,MAAM;AACpB,sBAAI,gBAAgB,OAAO,QAAQ;AACjC,wBAAI,CAAC,CAAC,OAAO,QAAS,QAAO;kBAC/B;AACA,yBAAO,CAAC,CAAC,WAAW;gBACtB,GAAG;gBACH,OAAO,QAAQ,MAAM,KAAK,OAAO;gBACjC,MAAM,QAAQ,KAAK,KAAK,OAAO;gBAC/B,OAAO,QAAQ,MAAM,KAAK,OAAO;gBACjC,KAAK,QAAQ,IAAI,KAAK,OAAO;gBAC7B,eAAe;gBAEf,aAAa;cACf;cACA,aAAa,CAAC;YAChB;AAEA,mBAAO;cACLA;cACA;gBACE,iBAAiBA,QAAO,cAAc,WAAW;gBACjD,mBAAmBA,QAAO,cAAc,SAAS;gBACjD,mBAAmBA,QAAO,cACtB,YACA;cACN;cACAA;YACF;AAEA,aAAC,WAAW,UAAU,eAAe,EAAE,QAAQ,CAAC,MAAM;AACpD,kBAAI,eAAe,OAAOA,QAAO,CAAC,GAAG;AACnC,gBAAAA,QAAO,CAAC,IAAIA,QAAO,CAAC,EAAE;cACxB;YACF,CAAC;AAED,mBAAO,WAAW;AAClB,mBAAO,oBAAoB;AAE3B,kBAAM,OAAO,uBAAO,OAAO,IAAI;AAE/B,kBAAMC,QAAO,uBAAO,OAAO,IAAI;AAE/B,kBAAM,UAAU,wBAAC,OAAO;AACtB,qBACG,KAAK,qBAAqB,KAAK,kBAAkB,EAAE,KACpD,0BAA0B;YAE9B,GALgB;AAOhB,kBAAM,UAAU,wBAACrD,OAAM,aAAa,OAAOA,MAAKA,QAAOA,KAAI,IAA3C;YAEhB,MAAM,qBAAqB,MAAM;qBAAA;;;cAC/B,eAAe,MAAM;AACnB,oBAAI;AACJ,oBAAI,KAAK,QAAQ;AACf,sBAAI,QAAQ,KAAK,CAAC,CAAC,GAAG;AACpB,yBAAK,KAAK,CAAC;AACX,wBAAI,MAAM,KAAK,QAAQ;AACrB,4BAAM,QAAQ,KAAK,CAAC,CAAC,CAAC;oBACxB,OAAO;AACL,4BAAM,QAAQ,QAAQ,EAAE;AACxB,0BAAI,aAAa,OAAO,KAAK,CAAC,GAAG;AAC/B,8BAAM,OAAO,KAAK,CAAC,CAAC;sBACtB,OAAO;AACL,6BAAK,CAAC,IAAI,QAAQ;AAClB,8BAAM,KAAK,KAAK,GAAG,CAAC;sBACtB;oBACF;kBACF,OAAO;AACL,wBAAI,MAAM,KAAK,UAAU,aAAa,OAAO,KAAK,CAAC,GAAG;AACpD,4BAAM,GAAG,IAAI;oBACf,OAAO;AACL,4BAAM,KAAK,KAAK,GAAG,CAAC;oBACtB;kBACF;gBACF;AACA,qBAAK,aAAa,MAAM,KAAK;AAC7B,qBAAK,OAAO;cACd;YACF;AAEA,yBAAa,OAAO,IAAI,SAAS;AAC/B,oBAAM,IAAI,aAAa,GAAG,IAAI;YAChC;AACA,kBAAM,QAAQ,aAAa;AAE3B,gBAAIoD,QAAO,iBAAiB,CAAC,YAAY,KAAKA,QAAO,aAAa,GAAG;AACnE;gBACE;cACF;YACF;AAEA,kBAAM,UAAU,wBAACpD,OAAM;AACrB,qBACE,aAAa,OAAOA,MACpB,CAAC,EAAEA,QAAOA,KAAI,MAAMA,MAAK,cAAcA,MAAK;YAEhD,GALgB;AAOhB,kBAAM,eAAe,gCAAS,EAAE,GAAG;AACjC,kBAAI,CAAC,EAAE,MAAM;AACX,kBAAE,OAAO,OAAO,oBAAoB;AACpC,kBAAE,OAAO,CAAC,EAAE;cACd;AACA,qBAAO,KAAK,EAAE,QAAQ,KAAK,EAAE;YAC/B,GANqB;AAQrB,kBAAM,eAAe,wBAAC,MAAM,KAAK,CAAC,cAAc,MAAM,KAAK,aAAtC;AAErB,kBAAM,mBAAmB,gCAAS,EAAE,GAAG;AACrC,kBAAI,CAAC,EAAE,MAAM;AACX,kBAAE,OAAO,OAAO;AAChB,kBAAE,OAAO,OAAO;cAClB;AACA,qBAAO,KAAK,EAAE,QAAQ,KAAK,EAAE;YAC/B,GANyB;AAQzB,kBAAM,eAAe,wBAACJ,OAAM;AAC1B,qBAAOA,MAAKA,GAAE,eAAe,QAAQA,GAAE,YAAY,iBAAiB,IAChEA,KACA;YACN,GAJqB;AAMrB,kBAAM,QACJ,gBAAgB,OAAO,oBACnB,WAAY;YAAC,IACb;AAEN,kBAAM,qBAAqB,wBAAC,gBAC1B,YAAY,kBAAkB,OADL;AAG3B,kBAAM,iBAAiB,wBAAC,aAAa,OAAO,QAAQ;AAClD,qBAAO,mBAAmB,WAAW,IACjC,YAAY,MAAM,OAAO,GAAG,IAC5B,YAAY,SAAS,OAAO,GAAG;YACrC,GAJuB;AAMvB,kBAAM,uBAAuB,wBAACA,OAAM;AAClC,qBACEA,OACCA,cAAa,cACZA,cAAa,aACbA,cAAa;YAEnB,GAP6B;AAS7B,kBAAM,sBAAsB,wBAACA,OAAM;AACjC,qBACEA,OACCA,cAAa,cACZA,cAAa,aACbA,cAAa;YAEnB,GAP4B;AAS5B,kBAAM,2BAA2B,wBAACA,OAAM;AACtC,qBACE,qBAAqBA,EAAC,KACtB,MAAM,8CAA8C;YAExD,GALiC;AAOjC,kBAAM,cAAc,IAAI,YAAY,OAAO;AAE3C,kBAAM,qBAAqB,gCAAU,YAAY,OAAO,KAAK;AAC3D,qBAAO,YAAY,OAAO,eAAe,YAAY,OAAO,GAAG,CAAC;YAClE,GAF2B;AAI3B,kBAAM,iBAAiB,gCAAUA,IAAG;AAClC,kBAAI,oBAAoBA,EAAC,GAAG;AAC1B,uBAAO;kBACLA,cAAa,cAAc,IAAI,WAAWA,EAAC,IAAIA;gBACjD;cACF,WAAW,MAAM,QAAQA,EAAC,EAAG,QAAOA,GAAE,KAAK,EAAE;uBACpCyD,MAAK,MAAMzD,EAAC,EAAGA,MAAIyD,MAAK,SAASzD,EAAC;AAC3C,qBAAOA;YACT,GARuB;YAUvB,MAAM,uBAAuB,MAAM;qBAAA;;;cACjC,eAAe,MAAM;AACnB,oBAAI,MAAM,KAAK,UAAU,aAAa,OAAO,KAAK,CAAC,GAAG;AACpD,wBAAM,GAAG,IAAI;gBACf,WAAW,KAAK,QAAQ;AACtB,wBAAM,KAAK,KAAK,GAAG,CAAC;gBACtB,OAAO;AACL,wBAAM,oBAAoB;gBAC5B;AACA,qBAAK,aAAa,KAAK;AACvB,qBAAK,OAAO;cACd;YACF;AAEA,2BAAe,OAAO,IAAI,SAAS;AACjC,oBAAM,IAAI,eAAe,GAAG,IAAI;YAClC;AAEA,mBAAO,OAAO,MAAM;cAClB,mBAAmB;cAEnB,mBAAmB;cAEnB,4BAA4B,wBAC1B0D,MACA,UACA,MACA,UACA,MACA,OACA,OACA,QACA,aACG;cAAC,GAVsB;cAY5B,yBAAyB,wBACvBA,MACA,UACA,MACA,UACA,MACA,OACA,OACA,WACG;cAAC,GATmB;cAWzB,gCAAgC,wBAC9BA,MACA,UACA,MACA,UACA,MACA,OACA,QACA,QACA,UACA,aACG;cAAC,GAX0B;cAahC,oBAAoB,wBAClB,OACA,KACA,YACA,WACA,YACA,cACG;cAAC,GAPc;cASpB,oBAAoB,wBAClB,OACA,KACA,YACA,YACA,cACG;cAAC,GANc;cAQpB,cAAc,wBAACA,MAAK,KAAK,UAAU,OAAO,YAAY;cAAC,GAAzC;cAEd,oBAAoB,wBAACtD,IAAG,WAAW;cAAC,GAAhB;YACtB,CAAC;AAED,kBAAM,OAAO;cACX;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA,YAAY,6BACV,WAAW,WAAW,cAAc,CAAC,CAAC,WAAW,UADvC;cAGZ;cACA,MAAM,mCAAa,MAAM;AACvB,sBAAM,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;cAChC,GAFM;cAGN;cACA;cAEA,gBAAgB,gCAAU,OAAO;AAC/B,oBAAI,iBAAiB,YAAa,SAAQ,IAAI,WAAW,KAAK;AAC9D,sBAAM,SAAS;AACf,oBAAI,OAAO,SAAS,MAAM,YAAY;AACpC,wBAAM,oDAAoD;gBAC5D;AACA,yBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,sBAAI,OAAO,WAAW,CAAC,MAAM,MAAM,CAAC,GAAG;AACrC,0BAAM,oDAAoD;kBAC5D;gBACF;cACF,GAXgB;cAahB,YAAY,gCAAU,OAAO;AAC3B,oBAAI,iBAAiB,YAAa,SAAQ,IAAI,WAAW,KAAK;AAC9D,sBAAMA,KAAI,MAAM;AAChB,oBAAIA,KAAI,OAAOA,KAAI,QAAQ,GAAG;AAC5B,wBAAM,mBAAmBA,IAAG,+BAA+B;gBAC7D;AACA,qBAAK,eAAe,KAAK;cAC3B,GAPY;YAQd;AAEA,mBAAO,OAAOqD,OAAM;cAClB,WAAWD,QAAO,iBAAiB;cAEnC,OAAOA,QAAO,aAAa;cAE3B,eAAe,CAAC,CAACA,QAAO;cAExB,SACEA,QAAO,WACP,MAAM,mDAAmD;cAE3D,QACEA,QAAO,UACPA,QAAO,QAAQ,QAAQ,KACvB;gBACE;gBACA;gBACA;cACF;cAEF,OAAO;cAEP,SAAS;cAET,SAAS;YACX,CAAC;AAED,YAAAC,MAAK,sBAAsB,SAAU,eAAe;AAClD,kBAAI,yBAAyB,aAAa;AACxC,gCAAgB,IAAI,WAAW,aAAa;cAC9C;AACA,uCAAyB,aAAa;AACtC,oBAAM,OAAOA,MAAK,MAAM,cAAc,cAAc,CAAC;AACrD,cAAAA,MACG,YAAY,cAAc,WAAW,EACrC,IAAI,cAAc,aAAa,gBAAgB,CAAC,CAAC,GAAG,IAAI;AAC3D,qBAAO;YACT;AAEA;AACE,oBAAM,WAAWD,QAAO,iBACtB,aAAaA,QAAO,mBACpB,aAAaA,QAAO;AACtB,yBAAW5D,QAAO,CAAC,UAAU,YAAY,UAAU,GAAG;AACpD,sBAAM,IAAI6D,MAAK,QAAQ7D,IAAG;AAC1B,oBAAI,EAAE,aAAa;AACjB,wBAAM,6BAA6BA,MAAK,aAAa;cACzD;AAEA,cAAA6D,MAAK,QAAQ,gCAAS,EAAErD,IAAG;AACzB,uBACE,EAAE,KAAKA,EAAC,KACR,eAAe,KAAK,sBAAsBA,IAAG,SAAS;cAE1D,GALa;AAMb,cAAAqD,MAAK,MAAM,OAAOA,MAAK,QAAQ,QAAQ;AACvC,cAAAA,MAAK,UAAU,gCAAS,EAAE,GAAGrD,IAAG;AAC9B,sBAAM,KAAK,EAAE,KAAK,GAAGA,EAAC;AACtB,uBAAOA,KACH,MAAM,eAAe,KAAK,wBAAwBA,IAAG,SAAS,IAC9D;cACN,GALe;AAMf,cAAAqD,MAAK,QAAQ,OAAOA,MAAK,QAAQ,UAAU;AAC3C,cAAAA,MAAK,UAAUA,MAAK,QAAQ,UAAU;YACxC;AAEA,YAAAA,MAAK,oBAAoB,gCAAS,EAAE,SAAS;AAC3C,kBAAI,CAAC,UAAU,QAAQ;AACrB,oBAAI,EAAE,QAAS,QAAO,EAAE;yBACf,CAAC,EAAE,MAAM;AAChB,oBAAE,MAAM;AACR,oBAAE,SAAS;AACX,oBAAE,OAAO,SAAU,KAAK,IAAI;AAC1B,0BAAM,IAAI,EAAE,IAAI,KAAK,GAAG;AACxB,uBAAG,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI;AACnB,uBAAG,CAAC,IAAI,IAAK,EAAE,OAAO,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAK;kBACrD;gBACF;AACA,sBAAM,KAAK,CAAC,GACV,KAAK,CAAC,GAAG,CAAC;AACZ,oBAAI,IAAI,GACN;AACF,uBAAQ,IAAI,KAAK,0BAA0B,GAAG,GAAI;AAChD,oBAAE,KAAK,GAAG,EAAE;AACZ,qBAAG,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC;gBAClB;AACA,uBAAQ,EAAE,UAAU;cACtB,WAAW,MAAM,QAAQ,OAAO,GAAG;AACjC,sBAAM,KAAK,CAAC;AACZ,wBAAQ,QAAQ,CAACzD,OAAM;AACrB,qBAAGA,EAAC,IAAI,KAAK,2BAA2BA,EAAC;gBAC3C,CAAC;AACD,uBAAO;cACT,WAAW,aAAa,OAAO,SAAS;AACtC,uBAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,MAAM;AAClC,0BAAQ,CAAC,IAAI,KAAK,2BAA2B,CAAC;gBAChD,CAAC;AACD,uBAAO;cACT;AACA,qBAAO,aAAa,OAAO,UACvB,CAAC,CAAC,KAAK,2BAA2B,OAAO,IACzC;YACN,GApCyB;AAsCzB,YAAAyD,MAAK,SAAS,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;cAC/C,SAASA,MAAK,QAAQ;cAEtB,OAAO,gCAAUrD,IAAG;AAClB,oBAAI,aAAa,OAAOA,MAAK,EAAEA,KAAIqD,MAAK,SAASrD,EAAC,IAAI;AACpD,iCAAe;oBACb;oBACA,UAAU,CAAC;oBACX;kBACF;gBACF;AACA,uBACEqD,MAAK,QAAQ,2BAA2BrD,EAAC,KACzC,eAAe;kBACb;kBACAA;kBACA;gBACF;cAEJ,GAhBO;cAkBP,aAAa,gCAAUA,IAAG,IAAI;AAC5B,oBAAI,aAAa,OAAO,MAAM,EAAE,KAAKqD,MAAK,SAAS,EAAE,IAAI;AACvD,iCAAe;oBACb;oBACA,UAAU,CAAC;oBACX;kBACF;gBACF;AACA,sBAAM,MAAMA,MAAK,OAAO,MAAMrD,KAAI,EAAE;AACpC,sBAAM,KAAK,CAAC;AACZ,oBAAI,IAAI,GACN,SAAS;AACX,uBAAO,IAAIA,IAAG,EAAE,GAAG,UAAU,GAAI,IAAG,KAAK,MAAM,MAAM;AACrD,uBAAO;cACT,GAda;cAgBb,UAAU,wBAACA,KAAI,GAAG,cAAc,SAAS;AACvC,uBAAO,MAAMA,KACTqD,MAAK,OAAO,MAAM,cAAc,IAAIA,MAAK,SAAS,IAClDA,MAAK,OAAO,YAAYrD,IAAG,cAAc,IAAIqD,MAAK,SAAS;cACjE,GAJU;cAMV,MAAM,gCAAU,GAAG;AACjB,sBAAM,WAAWA,MAAK,OAAO;AAC7B,oBAAI;AACF,yBAAO,EAAE,OAAO;gBAClB,UAAA;AACE,kBAAAA,MAAK,OAAO,QAAQ,QAAQ;gBAC9B;cACF,GAPM;YAQR,CAAC;AACD,mBAAO,iBAAiBA,MAAK,QAAQ;cACnC,SAAS;gBACP,cAAc;gBACd,UAAU;gBACV,WAAW;gBACX,KAAKA,MAAK,QAAQ;cACpB;cAEA,OAAO;gBACL,cAAc;gBACd,UAAU;gBACV,WAAW;gBACX,KAAKA,MAAK,QAAQ;cACpB;cAEA,WAAW;gBACT,cAAc;gBACd,UAAU;gBACV,WAAW;gBACX,KAAKA,MAAK,QAAQ;cACpB;YACF,CAAC;AAED,iBAAK,qBAAqB,IAAI,SAAS;AACrC,kBACE,MAAM,KAAK,UACX,KAAK,aAAa,KAAK,CAAC,CAAC,KACzB,MAAM,KAAK,CAAC,EAAE,mBACd;AACA,sBAAM,KAAK,KAAK,CAAC;AACjB,oBAAI,MAAM,GAAG,YAAY;AACvB,kBAAAA,MAAK,QAAQ,mBAAmB,GAAG,CAAC;AACpC,yBAAO;gBACT;AACA,sBAAM,QAAQA,MAAK,OAAO;AAC1B,oBAAI;AACF,sBAAIrD,KAAI,GAAG,YACT,SAAS;AACX,wBAAMoC,KAAIiB,MAAK,QAAQ;AACvB,wBAAM,OAAOA,MAAK,OAAO;AACzB,wBAAM,SAASrD,KAAI,MAAMA,KAAI;AAC7B,wBAAM,MAAMqD,MAAK,OAAO,MAAM,MAAM;AACpC,qBAAG;AACD,0BAAM,IAAIrD,KAAI,SAAS,SAASA;AAChCoC,uBAAE,GAAG,GAAG;AACR,uBAAG,IAAI,eAAe,MAAM,KAAK,MAAM,CAAC,GAAG,MAAM;AACjDpC,0BAAK;AACL,8BAAU;kBACZ,SAASA,KAAI;gBACf,SAASF,IAAG;AACV,0BAAQ;oBACN;oBAEAA;kBACF;gBACF,UAAA;AACE,kBAAAuD,MAAK,OAAO,QAAQ,KAAK;gBAC3B;AACA,uBAAO;cACT;AACA,cAAAA,MAAK,QAAQ,mBAAmB,GAAG,IAAI;YACzC;AAEA,gBAAI,kBAAkB;AAEtB,iBAAK,0BAA0B,WAAY;AACzC,kBAAI,WAAc,gBAAiB,QAAO;AAE1C,oBAAM,OAAOD,QAAO;AACpB,kBACE,CAAC,QACD,CAAC,WAAW,oBACZ,CAAC,WAAW,6BACZ,CAAC,WAAW,sBACZ;AACA,uBAAQ,kBAAkB;cAC5B;AACA,kBAAI;AACF,oBACE,QACA,MACEC,MAAK;kBACH;kBACA;kBACA,CAAC,QAAQ;kBACT;gBACF,GACF;AACA,yBAAQ,kBAAkB;gBAC5B,OAAO;AACL,yBAAQ,kBAAkB;gBAC5B;cACF,SAASvD,IAAG;AACV,uBAAQ,kBAAkB;cAC5B;YACF;AAEA,iBAAK,wCAAwC,SAAU,MAAM;AAC3D,oBAAM,IAAI,KAAK,wBAAwB;AACvC,qBAAO,KAAK,OAAO,KAAK,WAAW,IAAI,GAAG,IAAI;YAChD;AAEA,iBAAK,yBAAyB,SAAUwD,MAAK,SAAS,SAAS,GAAG;AAChE,kBAAI;AACF,sBAAM,KAAK,KAAK,iBAAiB,OAAO;AACxC,oBAAI,CAAC,GAAI,QAAO;yBACP,CAACA,MAAK;AACb,yBAAO,OAAO,KAAK,iBAAiB,CAAC,IAAI,KAAK;gBAChD,OAAO;AACL,yBAAO,OAAO,KAAK,kBAAkBA,MAAK,MAAM,IAAI,KAAK;gBAC3D;cACF,SAASxD,IAAG;AACV,uBAAO;cACT;YACF;AAEA,iBAAK,sBAAsB,WAAY;AACrC,oBAAM,KAAK,CAAC;AACZ,kBAAI,OAAO,KAAK,iBAAiB,CAAC;AAClC,qBAAO,MAAM;AACX,sBAAM,OAAO,IAAI,KAAK,YAAY,IAAI;AACtC,mBAAG,KAAKuD,MAAK,SAAS,KAAK,MAAM,CAAC;AAClC,uBAAO,KAAK;AACZ,qBAAK,QAAQ;cACf;AACA,qBAAO;YACT;AAEA,iBAAK,uBAAuB,SAAUC,MAAK,SAAS,GAAG;AACrDA,qBAAMD,MAAK,MAAM,eAAe,YAAYC,IAAG;AAC/C,kBAAI,CAACA,KAAK,OAAM,4BAA4B;AAC5C,kBAAI,CAACD,MAAK,cAAe,OAAM,kCAAkC;AACjE,oBAAM,QAAQA,MAAK,gBAAgB;AACnC,kBAAI;AACJ,kBAAI;AACF,sBAAM,QAAQA,MAAK,YAAY,IAAIA,MAAK,SAAS;AACjD,sBAAM,QAAQ,QAAQ;AAEtB,sBAAM,UAAU,SACZA,MAAK,MAAM,MAAM,IACf,SACAA,MAAK,mBAAmB,KAAK,MAAM,IACrC;AACJ,oBAAI,KAAKA,MAAK,QAAQ;kBACpBC;kBACA;kBACA;kBACA;kBACA;gBACF;AACA,oBAAI,IAAI;AACN;oBACE;oBACA,QAAQ,KAAK,kBAAkB,EAAE;kBACnC;gBACF;AACA,uBAAOD,MAAK,QAAQ,KAAK;AACzB,sBAAM,OAAOA,MAAK,KAAK,OAAO,KAAK;AACnC,qBAAK,OACDA,MAAK,OAAO,EAAE,MAAM,MAAM,OAAO,OAAO,IAAI,CAAC,IAC7C,IAAI,WAAW;AACnB,uBAAO;cACT,UAAA;AACE,oBAAI,KAAM,CAAAA,MAAK,QAAQ,aAAa,IAAI;AACxC,gBAAAA,MAAK,eAAe,KAAK;cAC3B;YACF;AAEA,iBAAK,oBAAoB,CAAC,WAAW,SAAS,MAC5C,KAAK,qBAAqB,WAAW,MAAM;AAE7C,iBAAK,+BAA+B,CAAC,MAAMrD,OAAM;AAC/C,qBACE,KAAK,0BAA0B,MAAMA,EAAC,MACrCA,KACG,eAAe;gBACb;gBACAA;gBACA;cACF,IACA;YAER;AAEA,iBAAK,+BAA+B,SAAU,UAAU,MAAM,SAAS;AACrE,kBAAI;AACJ,kBAAI,QAAQqD,MAAK,MAAM,IAAI,GAAG;AAC5B,wBAAQ;cACV,WACE,gBAAgB,eAChB,gBAAgB,YAChB;AACA,wBAAQA,MAAK,oBAAoB,IAAI;AACrC,oBAAI,UAAU,SAAS,KAAK,CAAC,KAAK,QAAQ,OAAO,KAAK,UAAU,GAAG;AACjE,4BAAU,KAAK;gBACjB;cACF,OAAO;AACL,6BAAa;kBACX;gBACF;cACF;AACA,kBAAI;AACF,oBAAI,CAAC,KAAK,QAAQ,OAAO,KAAK,UAAU,GAAG;AACzC,+BAAa;oBACX;kBACF;gBACF;AACA,sBAAM,KAAK,KAAK;kBACd;kBACA;kBACA;gBACF;AACA,oBAAI;AACF,+BAAa;oBACX;oBACA,KAAK,kBAAkB,EAAE;kBAC3B;cACJ,UAAA;AACE,gBAAAA,MAAK,QAAQ,KAAK;cACpB;YACF;AAEA,iBAAK,6BAA6B,SAChC,KACA,UACA,MACA,SACA;AACA,cAAAD,QAAO;gBACL;gBACA;gBACA;cACF;AACA,kBAAI;AACJ,kBAAI,MAAM;AACR,oBAAIC,MAAK,MAAM,IAAI,GAAG;AACpB,0BAAQ;gBACV,WAAW,gBAAgB,aAAa;AACtC,yBAAO,IAAI,WAAW,IAAI;gBAC5B;AACA,oBAAI,gBAAgB,YAAY;AAC9B,0BAAQA,MAAK,oBAAoB,IAAI;AACrC,sBACE,UAAU,SAAS,KACnB,CAAC,KAAK,QAAQ,OAAO,KACrB,UAAU,GACV;AACA,8BAAU,KAAK;kBACjB;gBACF,OAAO;AACL,+BAAa;oBACX;kBACF;gBACF;cACF,OAAO;AACL,wBAAQ;cACV;AACA,kBAAI,CAAC,KAAK,QAAQ,OAAO,KAAK,UAAU,GAAG;AACzC,gBAAAA,MAAK,QAAQ,KAAK;AAClB,6BAAa;kBACX;gBACF;cACF;AACA,kBAAI;AACF,sBAAM,KAAK,KAAK;kBACd;kBACA;kBACA;kBACA;gBACF;AACA,oBAAI;AACF,+BAAa;oBACX;oBACA,KAAK,kBAAkB,EAAE;kBAC3B;cACJ,UAAA;AACE,gBAAAA,MAAK,QAAQ,KAAK;cACpB;YACF;AAEA,iBAAK,2BAA2B,CAAC,QAAQ;AACvC,kBAAI,aAAa,OAAO,KAAK;AAC3B,uBAAO;cACT;AACA,oBAAM,IAAI,eAAe,CAAC;AAC1B,qBAAO,MAAM,IAAI,SAAY;YAC/B;AAEA,gBAAI,KAAK,WAAW,GAAG;AACrB,oBAAM,cAAc,gCAAU,OAAO;AACnC,sBAAM,KAAK,uBAAO,OAAO,IAAI;AAC7B,mBAAG,SAAS,WAAW;AACvB,mBAAG,SAAS,CAAC;AACb,oBAAI,cAAc,SAAS,OAAO;AAChC,qBAAG,OAAO,KAAK,WAAW,cAAc;AAC1C,oBAAI,YAAY,SAAS,OAAO;AAC9B,qBAAG,OAAO,KAAK,WAAW,YAAY;AACxC,uBAAO;cACT,GAToB;AAWpB,mBAAK,yBAAyB,SAAU,QAAQ,IAAI;AAClD,oBAAI,KAAK;AACT,sBAAM,SAAS,YAAY,KAAK;AAChC,uBAAO,OAAO,QAAQ,CAACE,OAAM;AAC3B,wBAAM,OAAO,CAAC;AACd,sBAAI;AACJ,uBAAK,IAAI,GAAG,IAAIA,GAAE,QAAQ,EAAE,GAAG;AAC7B,0BAAM,IAAIA,GAAE,IAAI,CAAC;AACjB,wBAAI,EAAE,WAAW,OAAO,MAAM,EAAG,MAAK,KAAK,CAAC;kBAC9C;AACA,uBAAK,QAAQ,CAAC,OAAOA,GAAE,WAAW,EAAE,CAAC;AACrC,wBAAM,KAAK;gBACb,CAAC;AACD,uBAAO;cACT;AAEA,mBAAK,wBAAwB,SAAU,QAAQ,IAAI;AACjD,oBAAI,KAAK;AACT,sBAAM,SAAS,YAAY,KAAK;AAChC,uBAAO,OAAO,QAAQ,CAACA,OAAM;AAC3B,sBAAI;AACJ,uBAAK,IAAI,GAAG,IAAIA,GAAE,QAAQ,EAAE,GAAG;AAC7B,0BAAM,IAAIA,GAAE,IAAI,CAAC;AACjB,wBAAI,EAAE,WAAW,OAAO,MAAM,GAAG;AAC/B,4BAAM,EAAE;AACR,4BAAMA,GAAE,QAAQ,CAAC,EAAE;oBACrB;kBACF;gBACF,CAAC;AACD,uBAAO,KAAK;cACd;YACF;AAEA,iBAAK,oBAAoB,SAAUD,MAAK,OAAO,MAAM;AACnD,sBAAQ,IAAI;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;gBACV,KAAK,KAAK;AACR,sBAAI,CAAC,KAAK,IAAI;AACZ,yBAAK,KAAKD,MAAK,MAAM,8BAA8B,OAAO;sBACxD;sBACA;sBACA;sBACA;oBACF,CAAC;kBACH;AACA,yBAAO,KAAK,GAAGC,MAAK,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC/C,KAAK,KAAK;AACR,sBAAI,CAAC,KAAK,KAAK;AACb,yBAAK,MAAMD,MAAK,MAAM,+BAA+B,OAAO;sBAC1D;sBACA;sBACA;sBACA;sBACA;oBACF,CAAC;kBACH;AACA,yBAAO,KAAK,IAAIC,MAAK,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;gBACpD,KAAK,KAAK;AACR,sBAAI,CAAC,KAAK,GAAG;AACX,yBAAK,IAAID,MAAK,MAAM,6BAA6B,OAAO;sBACtD;sBACA;sBACA;oBACF,CAAC;kBACH;AACA,yBAAO,KAAK,EAAEC,MAAK,IAAI,KAAK,CAAC,CAAC;gBAChC;AACE,yBAAO,KAAK;cAChB;YACF,EAAE,KAAK,uBAAO,OAAO,IAAI,CAAC;AAE1B,iBAAK,sBAAsB,SACzB,MACA,uBAAuB,MACvB;AACA,kBAAI;AACJ,oBAAM,UAAU,KAAK,mBAAmB,IAAI;AAC5C,sBAAQ,SAAS;gBACf,KAAK,KAAK;AACR,sBAAID,MAAK,eAAe;AACtB,0BAAM,KAAK,oBAAoB,IAAI;AACnC,wBAAI,KAAK,iBAAiB,GAAG,EAAG,OAAM,OAAO,GAAG;kBAClD,MAAO,OAAM,KAAK,qBAAqB,IAAI;AAC3C;gBACF,KAAK,KAAK;AACR,wBAAM,KAAK,qBAAqB,IAAI;AACpC;gBACF,KAAK,KAAK;AACR,wBAAM,KAAK,mBAAmB,IAAI;AAClC;gBACF,KAAK,KAAK,aAAa;AACrB,wBAAMrD,KAAI,KAAK,oBAAoB,IAAI;AACvC,wBAAM,QAAQ,KAAK,mBAAmB,IAAI;AAC1C,sBAAIA,MAAK,CAAC;AACR,4BAAQ,eAAe;sBACrB;sBACAA;sBACA;oBACF;AACF,wBAAMA,KAAIqD,MAAK,OAAO,EAAE,MAAM,OAAO,QAAQ,OAAOrD,EAAC,CAAC,IAAI;AAC1D;gBACF;gBACA,KAAK,KAAK;AACR,wBAAM;AACN;gBACF;AACE,sBAAI,sBAAsB;AACxB;sBACE,KAAK;sBACL;sBACA;oBACF;kBACF;AACA,wBAAM;cACV;AACA,qBAAO;YACT;AAEA,iBAAK,uBAAuB,SAC1B,MACA,OACA,uBAAuB,MACvB;AACA,kBAAI;AACJ,oBAAM,MAAM,CAAC;AACb,mBAAK,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AACzB,oBAAI;kBACF,KAAK;oBACHqD,MAAK,QAAQ,QAAQA,MAAK,YAAY,CAAC;oBACvC;kBACF;gBACF;cACF;AACA,qBAAO;YACT;AAEA,iBAAK,0BAA0B,SAAU,MAAMvD,IAAG;AAChD,kBAAIA,cAAa,gBAAgB;AAC/B,qBAAK,2BAA2B,IAAI;cACtC,OAAO;AACL,qBAAK,qBAAqB,MAAM,KAAKA,IAAG,EAAE;cAC5C;YACF;AAEA,iBAAK,oBAAoB,SAAU,MAAM,KAAK;AAC5C,kBAAI,eAAe,OAAO;AACxB,qBAAK,wBAAwB,MAAM,GAAG;AACtC;cACF;AACA,kBAAI;AACF,wBAAQ,OAAO,KAAK;kBAClB,KAAK;AACH;kBACF,KAAK;AACH,yBAAK,mBAAmB,MAAM,MAAM,IAAI,CAAC;AACzC;kBACF,KAAK;AACH,wBAAI,KAAK,aAAa,GAAG,GAAG;AAC1B,2BAAK,mBAAmB,MAAM,OAAO,GAAG,CAAC;oBAC3C,WAAW,KAAK,iBAAiB,GAAG,GAAG;AACrC,2BAAK,sBAAsB,MAAM,OAAO,GAAG,CAAC;oBAC9C,WAAWuD,MAAK,eAAe;AAC7B,0BAAI,KAAK,aAAa,GAAG;AACvB,6BAAK,qBAAqB,MAAM,GAAG;;AAEnC;0BACE;0BACA,IAAI,SAAS;0BACb;wBACF;oBACJ,OAAO;AACL,4BAAM,gBAAgB,IAAI,SAAS,GAAG,gBAAgB;oBACxD;AACA;kBACF,KAAK,UAAU;AACb,wBAAI;AACJ,wBAAI,KAAK,QAAQ,GAAG,GAAG;AACrB,0BAAI,KAAK;oBACX,WACEA,MAAK,iBACL,OAAO,UAAU,GAAG,KACpB,KAAK,aAAa,OAAO,GAAG,CAAC,GAC7B;AACA,0BAAI,KAAK;oBACX,OAAO;AACL,0BAAI,KAAK;oBACX;AACA,sBAAE,MAAM,GAAG;AACX;kBACF;kBACA,KAAK,UAAU;AACb,0BAAM,CAAC,GAAGrD,EAAC,IAAIqD,MAAK,aAAa,KAAK,IAAI;AAC1C,yBAAK,oBAAoB,MAAM,GAAGrD,IAAG,KAAK,mBAAmB;AAC7D;kBACF;kBACA,KAAK;AACH,wBAAI,SAAS,KAAK;AAChB,2BAAK,oBAAoB,IAAI;AAC7B;oBACF,WAAW,KAAK,qBAAqB,GAAG,GAAG;AACzC,4BAAM,QAAQqD,MAAK,oBAAoB,GAAG;AAC1C,2BAAK;wBACH;wBACA;wBACA,IAAI;wBACJ,KAAK;sBACP;AACA;oBACF;kBAEF;AACE;sBACE;sBACA,OAAO;sBACP;oBACF;gBACJ;cACF,SAASvD,IAAG;AACV,qBAAK,wBAAwB,MAAMA,EAAC;cACtC;YACF;AAEA,iBAAK,oBAAoB,SACvB,OACA,MACA,uBAAuB,MACvB;AACA,oBAAMF,KAAI,KAAK,qBAAqB,OAAO,IAAI;AAC/C,qBAAO,MAAMA,KACT,SACA,KAAK,oBAAoBA,IAAG,oBAAoB;YACtD;AAEA,kBAAM,gBAAgB,SAAU,MAAM,MAAM,MAAM;AAChD,qBAAO,KAAK,IAAI;AAChB,kBAAI,CAAC,KAAK,IAAK,MAAK,MAAMyD,MAAK,SAAS;kBACnC,CAAAA,MAAK,QAAQ,KAAK,KAAK,CAAC;AAC7B,oBAAM,KAAK,KAAK,MAAM,MAAM,KAAK,GAAG;AACpC,kBAAI;AACF,uBAAO,aAAa;kBAClB;kBACA,UAAU,CAAC,IAAI,yBAAyB;gBAC1C;AACF,oBAAM,KAAKA,MAAK,QAAQ,KAAK,GAAG;AAChC,qBAAO,KAAK,KAAK,oBAAoB,IAAI,IAAI,IAAI;YACnD,EAAE,KAAK,uBAAO,OAAO,IAAI,CAAC;AAE1B,iBAAK,2BAA2B,CAACC,MAAK,SACpC,cAAcA,MAAK,MAAM,uBAAuB;AAElD,iBAAK,2BAA2B,CAACA,MAAK,SACpC,cAAcA,MAAK,MAAM,uBAAuB;AAElD,iBAAK,0BAA0B,CAAC,gBAAgB,SAC9C,cAAc,gBAAgB,MAAM,sBAAsB;AAE5D,iBAAK,0BAA0B,CAAC,gBAAgB,SAC9C,cAAc,gBAAgB,MAAM,sBAAsB;AAE5D,kBAAM,UAAU;cACd;cACA;cACA;cACA;cACA,MAAAD;cACA,QAAAD;cAEA,SAAS,uBAAO,OAAO,IAAI;cAE3B,QAAQ;cAER,eAAe,sCAAe,KAAK;AACjC,oBAAI,GAAG,mBAAmB,QAAS,QAAO,GAAG;AAC7C,oBAAI,MAAM,oBAAoB;AAC9B,uBAAO,oBAAoB;AAC3B,sBAAM,WAAW,mCAAY;AAC3B,sBAAI,CAAC,QAAQ,eAAe;AAC1B,2BAAO,QAAQ;AAEf,2BAAO,QAAQ;kBACjB;AACA,yBAAO;gBACT,GAPiB;AAQjB,sBAAM,UAAU,wBAACtD,OAAM;AACrB,kBAAAsD,QAAO,MAAM,wCAAwCtD,EAAC;AACtD,wBAAMA;gBACR,GAHgB;AAIhB,oBAAI,CAAC,OAAO,CAAC,IAAI,QAAQ;AACvB,yBAAQ,GAAG,UAAU,SAAS,EAAE,MAAM,OAAO;gBAC/C;AACA,sBAAM,IAAI,IAAI,CAAC,MAAM;AACnB,yBAAO,aAAa,WAAW,OAAO,MAAM,EAAE,OAAO,IAAI;gBAC3D,CAAC;AACD,oBAAI,KAAK,QAAQ;AACjB,oBAAI,IAAI,QAAQ,QAAQ,OAAO;AAC/B,uBAAO,IAAI,OAAQ,KAAI,EAAE,KAAK,IAAI,MAAM,CAAC;AACzC,uBAAQ,GAAG,UAAU,EAAE,MAAM,OAAO;cACtC,GA1Be;cA4Bf,YAAY;YACd;AACA,gBAAI;AACF,kCAAoB,aAAa,QAAQ,CAAC,MAAM;AAC9C,kBAAE,OAAO;cACX,CAAC;YACH,SAASA,IAAG;AACV,sBAAQ,MAAM,wCAAwCA,EAAC;AACvD,oBAAMA;YACR;AACA,mBAAO,oBAAoB;AAC3B,gCAAoB,UAAU;AAC9B,mBAAO;UACT,GAllCiC;AAolCjC,qBAAW,oBAAoB,eAAe,CAAC;AAE/C,qBAAW,oBAAoB,oBAAoB,CAAC;AAEpD,qBAAW,oBAAoB,gBAAgB,uBAAO,OAAO,IAAI;AAEjE,qBAAW,oBAAoB,UAAU;AAEzC,qBAAW,sBAAsB,SAAU,QAAQ;AACjD;AACA,gBAAI,WAAc,OAAO,eAAe;AACtC,qBAAO,gBAAgB,CAAC,CAAC,WAAW,eAAe;YACrD;AAEA,kBAAM,OAAO,2BAAI,SAAS;AACxB,oBAAM,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;YAChC,GAFa;AAIb,gBAAI,CAAC,OAAO,SAAS;AACnB,qBAAO,eAAe,QAAQ,WAAW;gBACvC,YAAY;gBACZ,cAAc;gBACd,KAAK,6BAAM,OAAO,YAAY,OAAO,SAAS,SAAzC;cACP,CAAC;YACH;AAEA,kBAAM,QAAQ,OAAO,aAAa;AAClC,kBAAM,YAAa,OAAO,YACxB,UAAU,QACN,IACA,UAAU,QACR,IACA,KAAK,wBAAwB,KAAK;AAE1C,kBAAM,QAAQ,uBAAO,OAAO,IAAI;AAEhC,kBAAM,WAAW;AAEjB,kBAAM,SAAS;AAEf,kBAAM,kBAAkB,CAAC;AAEzB,kBAAM,cAAc,CAAC;AAErB,kBAAM,cAAc,IAAI,YAAY;AACpC,kBAAM,cAAc,IAAI,YAAY,OAAO;AAE3C,mBAAO,WAAW,CAACE,OAAM;AACvB,sBAAQA,IAAG;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;gBACL,KAAK;gBACL,KAAK;AACH,yBAAO;gBACT,KAAK;gBACL,KAAK;gBACL,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT;AACE,0BAAQ,KAAKA,IAAG,SAAS,GAAG,IAAI,YAAY;cAChD;YACF;AAEA,kBAAM,eAAe,kCAAY;AAC/B,kBAAI,CAAC,MAAM,QAAQ;AACjB,sBAAM,SACJ,OAAO,kBAAkB,YAAY,SACjC,OAAO,SACP,OAAO,QAAQ;cACvB,WAAW,MAAM,aAAa,MAAM,OAAO,OAAO,YAAY;AAC5D,uBAAO;cACT;AAEA,oBAAM,IAAI,MAAM,OAAO;AACvB,oBAAM,QAAQ,IAAI,UAAU,CAAC;AAC7B,oBAAM,SAAS,IAAI,WAAW,CAAC;AAC/B,oBAAM,SAAS,IAAI,WAAW,CAAC;AAC/B,oBAAM,UAAU,IAAI,YAAY,CAAC;AACjC,oBAAM,SAAS,IAAI,WAAW,CAAC;AAC/B,oBAAM,UAAU,IAAI,YAAY,CAAC;AACjC,kBAAI,OAAO,eAAe;AACxB,sBAAM,SAAS,IAAI,cAAc,CAAC;AAClC,sBAAM,UAAU,IAAI,eAAe,CAAC;cACtC;AACA,oBAAM,UAAU,IAAI,aAAa,CAAC;AAClC,oBAAM,UAAU,IAAI,aAAa,CAAC;AAClC,oBAAM,WAAW,EAAE;AACnB,qBAAO;YACT,GAzBqB;AA2BrB,mBAAO,QAAQ,MAAM,aAAa,EAAE;AAEpC,mBAAO,SAAS,MAAM,aAAa,EAAE;AAErC,mBAAO,SAAS,MAAM,aAAa,EAAE;AAErC,mBAAO,UAAU,MAAM,aAAa,EAAE;AAEtC,mBAAO,SAAS,MAAM,aAAa,EAAE;AAErC,mBAAO,UAAU,MAAM,aAAa,EAAE;AAEtC,mBAAO,cAAc,SAAUA,IAAG,WAAW,MAAM;AACjD,kBAAI;AACJ,oBAAMG,KACJ,MAAM,UAAU,MAAM,aAAa,MAAM,OAAO,OAAO,aACnD,QACA,aAAa;AACnB,sBAAQH,IAAG;gBACT,KAAK;AACH,yBAAOG,GAAE;gBACX,KAAK;AACH,yBAAOA,GAAE;gBACX,KAAK;AACH,yBAAOA,GAAE;gBACX,KAAK;AACH,yBAAOA,GAAE;gBACX,KAAK;AACH,yBAAOA,GAAE;gBACX,KAAK;AACH,yBAAOA,GAAE;gBACX,KAAK;AACH,yBAAO,WAAWA,GAAE,SAASA,GAAE;gBACjC,KAAK;AACH,yBAAO,WAAWA,GAAE,UAAUA,GAAE;gBAClC,KAAK;AACH,yBAAO,WAAWA,GAAE,UAAUA,GAAE;gBAClC,KAAK;AACH,sBAAIA,GAAE,OAAQ,QAAO,WAAWA,GAAE,UAAUA,GAAE;AAC9C;gBACF;AACE,sBAAI,OAAO,eAAe;AACxB,wBAAIH,OAAM,WAAW,gBAAgB,EAAG,QAAOG,GAAE;6BACxCH,OAAM,WAAW,eAAe,EAAG,QAAOG,GAAE;AACrD;kBACF;cACJ;AACA;gBACE;gBACA;cACF;YACF;AAEA,mBAAO,gBAAgB,WAAY;AACjC,qBAAO,OAAO,QAAQ;YACxB;AAEA,mBAAO,gBAAgB,SAAU,MAAM;AACrC,oBAAM,KAAK,OAAO,cAAc;AAChC,qBAAO,OAAO,GAAG,SAAS,GAAG,IAAI,IAAI,IAAI;YAC3C;AAEA,mBAAO,eAAe,gCAAS,EAAE,MAAM,KAAK;AAC1C,kBAAI,CAAC,EAAE,GAAG;AACR,kBAAE,IAAI;kBACJ,UAAU,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;oBAC3C,GAAG;oBACH,GAAG;oBACH,GAAG;oBACH,GAAG;oBACH,GAAG;oBACH,GAAG;oBACH,GAAG;kBACL,CAAC;kBAED,WAAW,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;oBAC5C,KAAK;oBACL,KAAK;oBACL,KAAK;oBACL,KAAK;kBACP,CAAC;kBAED,eAAe,gCAAU,KAAK,QAAQH,IAAG;AACvC,wBAAIA,KAAI,IAAK,KAAI,MAAM,EAAEA,EAAC;wBACrB,KAAI,MAAM,EAAEA,KAAI,MAAM,KAAKA,MAAK,CAAC;kBACxC,GAHe;kBAKf,QAAQ;kBAER,WAAW,gCAAUwD,MAAK;AACxB,0BAAM,IAAI,EAAE,EAAE,OAAO,KAAKA,IAAG;AAC7B,2BAAO,IAAI,EAAE,CAAC,IAAIA,KAAI,OAAO,CAAC;kBAChC,GAHW;kBAKX,YAAY,wBAAC,MACX,EAAE,EAAE,SAAS,CAAC,KAAK,KAAK,6BAA6B,CAAC,GAD5C;kBAGZ,aAAa,wBAAC,MAAM,WAClB,KAAK,KAAK,EAAE,EAAE,UAAU,EAAE,EAAE,WAAW,MAAM,CAAC,CAAC,GADpC;gBAEf;cACF;AACA,kBAAI,aAAa,OAAO,MAAM;AAC5B,sBAAM,IAAI;AACV,sBAAM;AACN,uBAAO;cACT;AACA,oBAAM,YAAY,EAAE,EAAE,UAAU,GAAG;AACnC,oBAAM,WAAW,CAAC,GAAM,EAAI;AAC5B,gBAAE,EAAE,cAAc,UAAU,QAAQ,UAAU,MAAM;AACpD,yBAAW,KAAK,UAAW,GAAE,EAAE,YAAY,UAAU,CAAC;AACtD,kBAAI,QAAQ,IAAI,CAAC,EAAG,UAAS,KAAK,CAAC;mBAC9B;AACH,yBAAS,KAAK,CAAC;AACf,kBAAE,EAAE,YAAY,UAAU,IAAI,CAAC,CAAC;cAClC;AACA,gBAAE,EAAE,cAAc,UAAU,WAAW,SAAS,MAAM;AACtD,uBAAS;gBACP;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;AACA,uBAAS;gBACP;gBACA;gBAEA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBAEA;gBACA;gBACA;gBACA;gBACA;cACF;AACA,qBAAO,IAAI,YAAY;gBACrB,IAAI,YAAY,OAAO,IAAI,WAAW,QAAQ,CAAC;gBAC/C;kBACE,GAAG,EAAE,GAAG,KAAK;gBACf;cACF,EAAE,QAAQ,GAAG;YACf,GA3FsB;AA6FtB,kBAAM,oBAAoB,gCAAS,EAAE,MAAM,KAAK,QAAQ;AACtD,kBAAI,UAAU,CAAC,MAAM,YAAY,QAAQ;AACvC,qBAAK,uCAAuC;cAC9C;AACA,kBAAI,aAAa,OAAO,MAAM;AAC5B,sBAAM,IAAI;AACV,sBAAM;AACN,uBAAO;cACT;AACA,kBAAI,aAAa,OAAO,OAAO,EAAE,gBAAgB,WAAW;AAC1D;kBACE;gBAEF;cACF;AACA,oBAAM,KAAK,OAAO,cAAc;AAChC,oBAAM,SAAS,GAAG;AAClB,kBAAI;AACJ,qBAAO,MAAM,gBAAgB,QAAQ;AACnC,sBAAM,MAAM,gBAAgB,IAAI;AAChC,oBAAI,GAAG,IAAI,GAAG,GAAG;AACf,wBAAM;AACN;gBACF,OAAO;AACL;gBACF;cACF;AACA,kBAAI,CAAC,KAAK;AACR,sBAAM;AACN,mBAAG,KAAK,CAAC;cACX;AACA,kBAAI;AACF,mBAAG,IAAI,KAAK,IAAI;AAChB,oBAAI,QAAQ;AACV,wBAAM,YAAY,MAAM,YAAY,SAAS,CAAC,EAAE,KAAK,GAAG;gBAC1D;AACA,uBAAO;cACT,SAAS1D,IAAG;AACV,oBAAI,EAAEA,cAAa,YAAY;AAC7B,sBAAI,QAAQ,OAAQ,OAAM,gBAAgB,KAAK,MAAM;AACrD,wBAAMA;gBACR;cACF;AAEA,kBAAI;AACF,sBAAM,OAAO,OAAO,aAAa,MAAM,GAAG;AAC1C,mBAAG,IAAI,KAAK,IAAI;AAChB,oBAAI,QAAQ;AACV,wBAAM,YAAY,MAAM,YAAY,SAAS,CAAC,EAAE,KAAK,GAAG;gBAC1D;cACF,SAASA,IAAG;AACV,oBAAI,QAAQ,OAAQ,OAAM,gBAAgB,KAAK,MAAM;AACrD,sBAAMA;cACR;AACA,qBAAO;YACT,GAvD0B;AAyD1B,mBAAO,kBAAkB,CAAC,MAAM,QAC9B,kBAAkB,MAAM,KAAK,KAAK;AAEpC,mBAAO,wBAAwB,CAAC,MAAM,QACpC,kBAAkB,MAAM,KAAK,IAAI;AAEnC,mBAAO,oBAAoB,SAAU,KAAK;AACxC,kBAAI,CAAC,OAAO,MAAM,IAAK,QAAO;AAC9B,oBAAM,KAAK,MAAM;AACjB,oBAAM,KAAK,OAAO,cAAc;AAChC,iBAAG,KAAK,GAAG;AACX,oBAAM,KAAK,GAAG,IAAI,GAAG;AACrB,iBAAG,IAAI,KAAK,IAAI;AAChB,qBAAO;YACT;AAEA,mBAAO,OAAO,gCAAS,EAAE,KAAK,OAAO,MAAM;AACzC,kBAAI,KAAK,SAAS,GAAG,EAAG,QAAO;AAC/B,oBAAMK,KACJ,MAAM,UAAU,MAAM,aAAa,MAAM,OAAO,OAAO,aACnD,QACA,aAAa;AACnB,oBAAM,OAAO,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI;AACvC,kBAAI;AACJ,iBAAG;AACD,oBAAI,KAAM,OAAM,UAAU,CAAC,EAAE,MAAM;AACnC,wBAAQ,MAAM;kBACZ,KAAK;kBACL,KAAK;AACH,yBAAKA,GAAE,MAAM,OAAO,CAAC;AACrB;kBACF,KAAK;AACH,yBAAKA,GAAE,OAAO,OAAO,CAAC;AACtB;kBACF,KAAK;AACH,yBAAKA,GAAE,OAAO,OAAO,CAAC;AACtB;kBACF,KAAK;kBACL,KAAK;AACH,yBAAKA,GAAE,QAAQ,OAAO,CAAC;AACvB;kBACF,KAAK;kBACL,KAAK;AACH,yBAAK,OAAOA,GAAE,QAAQ,OAAO,CAAC,CAAC;AAC/B;kBACF,KAAK;AACH,wBAAI,OAAO,eAAe;AACxB,2BAAK,OAAOA,GAAE,OAAO,OAAO,CAAC,CAAC;AAC9B;oBACF;kBAEF;AACE,yBAAK,4BAA4B,IAAI;gBACzC;AACA,oBAAI,KAAM,MAAK,KAAK,EAAE;cACxB,SAAS,QAAQ,UAAU,CAAC,EAAE;AAC9B,qBAAO,QAAQ;YACjB,GAzCc;AA2Cd,mBAAO,OAAO,SAAU,KAAK,OAAO,OAAO,MAAM;AAC/C,kBAAI,KAAK,SAAS,GAAG,EAAG,QAAO;AAC/B,oBAAMA,KACJ,MAAM,UAAU,MAAM,aAAa,MAAM,OAAO,OAAO,aACnD,QACA,aAAa;AACnB,yBAAW,KAAK,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG;AAChD,wBAAQ,MAAM;kBACZ,KAAK;kBACL,KAAK;AACHA,uBAAE,MAAM,KAAK,CAAC,IAAI;AAClB;kBACF,KAAK;AACHA,uBAAE,OAAO,KAAK,CAAC,IAAI;AACnB;kBACF,KAAK;AACHA,uBAAE,OAAO,KAAK,CAAC,IAAI;AACnB;kBACF,KAAK;kBACL,KAAK;AACHA,uBAAE,QAAQ,KAAK,CAAC,IAAI;AACpB;kBACF,KAAK;kBACL,KAAK;AACHA,uBAAE,QAAQ,KAAK,CAAC,IAAI;AACpB;kBACF,KAAK;AACH,wBAAIA,GAAE,QAAQ;AACZA,yBAAE,OAAO,KAAK,CAAC,IAAI,OAAO,KAAK;AAC/B;oBACF;kBAEF;AACE,yBAAK,8BAA8B,IAAI;gBAC3C;cACF;AACA,qBAAO;YACT;AAEA,mBAAO,UAAU,IAAI,QACnB,OAAO,KAAK,MAAM,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,KAAK;AAEpD,mBAAO,UAAU,CAAC,KAAK,QAAQ,MAAM,OAAO,KAAK,KAAK,OAAO,KAAK;AAElE,mBAAO,QAAQ,IAAI,QACjB,OAAO,KAAK,MAAM,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,IAAI;AAEnD,mBAAO,QAAQ,CAAC,KAAK,UAAU,OAAO,KAAK,KAAK,OAAO,IAAI;AAE3D,mBAAO,SAAS,IAAI,QAClB,OAAO,KAAK,MAAM,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,KAAK;AAEpD,mBAAO,SAAS,CAAC,KAAK,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK;AAE7D,mBAAO,SAAS,IAAI,QAClB,OAAO,KAAK,MAAM,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,KAAK;AAEpD,mBAAO,SAAS,CAAC,KAAK,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK;AAE7D,mBAAO,SAAS,IAAI,QAClB,OAAO,KAAK,MAAM,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,KAAK;AAEpD,mBAAO,SAAS,CAAC,KAAK,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK;AAE7D,mBAAO,UAAU,IAAI,QACnB,OAAO,KAAK,MAAM,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,KAAK;AAEpD,mBAAO,UAAU,CAAC,KAAK,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK;AAE9D,mBAAO,UAAU,IAAI,QACnB,OAAO,KAAK,MAAM,IAAI,SAAS,IAAI,CAAC,IAAI,KAAK,KAAK;AAEpD,mBAAO,UAAU,CAAC,KAAK,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK;AAE9D,mBAAO,cAAc,OAAO;AAE5B,mBAAO,cAAc,OAAO;AAE5B,mBAAO,cAAc,OAAO;AAE5B,mBAAO,cAAc,OAAO;AAE5B,mBAAO,UAAU,CAAC,QAChB,aAAa,OAAO,OAAO,SAAS,MAAM,MAAM,OAAO;AAEzD,mBAAO,QAAQ,OAAO;AAEtB,mBAAO,UAAU,SAAU,KAAK;AAC9B,kBAAI,CAAC,OAAO,CAAC,OAAO,MAAM,GAAG,EAAG,QAAO;AACvC,oBAAM,IAAI,aAAa,EAAE;AACzB,kBAAI,MAAM;AACV,qBAAO,EAAE,GAAG,MAAM,GAAG,EAAE,KAAK;cAAC;AAC7B,qBAAO,MAAM;YACf;AAEA,kBAAM,QACJ,gBAAgB,OAAO,oBACnB,WAAY;YAAC,IACb;AACN,kBAAM,eAAe,gCAAU,aAAa,OAAO,KAAK;AACtD,qBAAO,MAAM,YAAY;gBACvB,YAAY,kBAAkB,QAC1B,YAAY,MAAM,OAAO,GAAG,IAC5B,YAAY,SAAS,OAAO,GAAG;cACrC;YACF,GANqB;AAQrB,mBAAO,WAAW,SAAU,KAAK;AAC/B,oBAAMH,KAAI,OAAO,QAAQ,GAAG;AAC5B,qBAAOA,KACH,aAAa,aAAa,EAAE,QAAQ,KAAK,MAAMA,EAAC,IAChD,SAASA,KACPA,KACA;YACR;AAEA,mBAAO,UAAU,SAAU,KAAK;AAC9B,kBAAI,aAAa,OAAO,IAAK,QAAO;AACpC,oBAAMA,KAAI,IAAI;AACd,kBAAI,MAAM;AACV,uBAAS,IAAI,GAAG,IAAIA,IAAG,EAAE,GAAG;AAC1B,oBAAI,IAAI,IAAI,WAAW,CAAC;AACxB,oBAAI,KAAK,SAAU,KAAK,OAAQ;AAC9B,sBACG,UAAY,IAAI,SAAU,MAAQ,IAAI,WAAW,EAAE,CAAC,IAAI;gBAC7D;AACA,oBAAI,KAAK,IAAM,GAAE;yBACR,KAAK,KAAO,QAAO;yBACnB,KAAK,MAAQ,QAAO;oBACxB,QAAO;cACd;AACA,qBAAO;YACT;AAEA,mBAAO,UAAU,SACf,MACA,KACA,SAAS,GACT,WAAW,IACX,SAAS,MACT;AACA,kBACE,CAAC,OACA,EAAE,eAAe,cAAc,EAAE,eAAe,aACjD;AACA,qBAAK,sDAAsD;cAC7D;AACA,kBAAI,WAAW,EAAG,YAAW,IAAI,SAAS;AAC1C,kBAAI,EAAE,WAAW,MAAM,EAAE,UAAU,GAAI,QAAO;AAC9C,kBAAI,IAAI,GACN,MAAM,KAAK;AACb,oBAAM,QAAQ,QACZ,MAAM,SAAS,YAAY,SAAS,IAAI;AAC1C,qBAAO,IAAI,OAAO,SAAS,KAAK,EAAE,GAAG;AACnC,oBAAI,IAAI,KAAK,WAAW,CAAC;AACzB,oBAAI,KAAK,SAAU,KAAK,OAAQ;AAC9B,sBACG,UAAY,IAAI,SAAU,MAC1B,KAAK,WAAW,EAAE,CAAC,IAAI;gBAC5B;AACA,oBAAI,KAAK,KAAM;AACb,sBAAI,UAAU,IAAK;AACnB,sBAAI,QAAQ,IAAI;gBAClB,WAAW,KAAK,MAAO;AACrB,sBAAI,SAAS,KAAK,IAAK;AACvB,sBAAI,QAAQ,IAAI,MAAQ,KAAK;AAC7B,sBAAI,QAAQ,IAAI,MAAQ,IAAI;gBAC9B,WAAW,KAAK,OAAQ;AACtB,sBAAI,SAAS,KAAK,IAAK;AACvB,sBAAI,QAAQ,IAAI,MAAQ,KAAK;AAC7B,sBAAI,QAAQ,IAAI,MAAS,KAAK,IAAK;AACnC,sBAAI,QAAQ,IAAI,MAAQ,IAAI;gBAC9B,OAAO;AACL,sBAAI,SAAS,KAAK,IAAK;AACvB,sBAAI,QAAQ,IAAI,MAAQ,KAAK;AAC7B,sBAAI,QAAQ,IAAI,MAAS,KAAK,KAAM;AACpC,sBAAI,QAAQ,IAAI,MAAS,KAAK,IAAK;AACnC,sBAAI,QAAQ,IAAI,MAAQ,IAAI;gBAC9B;cACF;AACA,kBAAI,OAAQ,KAAI,QAAQ,IAAI;AAC5B,qBAAO,SAAS;YAClB;AAEA,mBAAO,WAAW,SAAU,QAAQ,QAAQA,IAAG;AAC7C,kBAAI,CAAC,UAAU,CAAC;AACd,qBAAK,0CAA0C;AACjD,kBAAIA,KAAI,EAAGA,MAAI,OAAO,QAAQ,MAAM,IAAI;uBAC/B,EAAEA,KAAI,GAAI,QAAO;AAC1B,oBAAM,OAAO,OAAO,OAAO;AAC3B,kBAAI,IAAI,GACN;AACF,qBAAO,IAAIA,OAAM,KAAK,KAAK,SAAS,CAAC,IAAI,EAAE,GAAG;AAC5C,qBAAK,SAAS,CAAC,IAAI;cACrB;AACA,kBAAI,IAAIA,GAAG,MAAK,SAAS,GAAG,IAAI;AAChC,qBAAO;YACT;AAEA,mBAAO,kBAAkB,CAAC,KAAK,SAAS,UAAU;AAChD,qBAAO,MAAM,YAAY,OAAO,SAAS,MAAM,OAAO,GAAG;YAC3D;AAEA,kBAAM,gBAAgB,wBAAC,KAAK,aAAa;AACvC,kBACE,EAAE,IAAI,iBAAiB,aACvB,EAAE,IAAI,mBAAmB,WACzB;AACA;kBACE;kBACA;kBACA,WAAW;gBACb;cACF;YACF,GAXsB;AAatB,kBAAM,cAAc,gCAClB,MACA,kBACA,WACA,UACA;AACA,4BAAc,QAAQ,QAAQ;AAC9B,kBAAI,aAAa,OAAO,KAAM,QAAO;AACrC,kBAAI,GAAG;AACL,sBAAMA,KAAI,OAAO,QAAQ,IAAI,GAC3B,MAAM,UAAUA,KAAI,CAAC;AACvB,uBAAO,QAAQ,MAAM,OAAO,OAAO,GAAG,KAAKA,KAAI,GAAG,IAAI;AACtD,uBAAO,mBAAmB,CAAC,KAAKA,EAAC,IAAI;cACvC,OAAO;AACL,sBAAM,IAAI,MAAM,YAAY,OAAO,IAAI,GACrC,MAAM,UAAU,EAAE,SAAS,CAAC,GAC5B,OAAO,aAAa,EAAE;AACxB,qBAAK,IAAI,GAAG,GAAG;AACf,qBAAK,MAAM,EAAE,MAAM,IAAI;AACvB,uBAAO,mBAAmB,CAAC,KAAK,EAAE,MAAM,IAAI;cAC9C;YACF,GArBoB;AAuBpB,mBAAO,eAAe,CAAC,MAAM,mBAAmB,UAC9C,YAAY,MAAM,kBAAkB,OAAO,OAAO,gBAAgB;AAEpE,mBAAO,kBAAkB,WAAY;AACnC,4BAAc,QAAQ,iBAAiB;AACvC,oBAAM,IAAI,CAAC;AACX,oBAAM,YAAY,KAAK,CAAC;AACxB,qBAAO;YACT;AAEA,mBAAO,iBAAiB,SAAUyD,QAAO;AACvC,4BAAc,QAAQ,gBAAgB;AACtC,oBAAMzD,KAAI,UAAU,SAChB,MAAM,YAAY,QAAQyD,MAAK,IAC/B,MAAM,YAAY,SAAS;AAC/B,kBAAIzD,KAAI,EAAG,MAAK,4CAA4C;AAC5D,kBAAI,MAAM,UAAU,OAAQyD,UAAQ,MAAM,YAAYzD,EAAC;AACvD,oBAAM,YAAY,OAAOA,IAAG,CAAC;AAC7B,uBAAS,GAAI,IAAIyD,OAAM,IAAI,KAAM;AAC/B,oBAAI,OAAO,cAAc,CAAC,GAAG;AAC3B,yBAAO,kBAAkB,CAAC;gBAC5B,MAAO,QAAO,QAAQ,CAAC;cACzB;YACF;AAEA,mBAAO,cAAc,SAAUzD,IAAG;AAChC,kBAAI,CAAC,MAAM,YAAY,QAAQ;AAC7B,qBAAK,uCAAuC;cAC9C;AACA,oBAAM,IAAI,OAAO,MAAMA,EAAC;AACxB,oBAAM,YAAY,MAAM,YAAY,SAAS,CAAC,EAAE,KAAK,CAAC;AACtD,qBAAO;YACT;AAEA,mBAAO,eAAe,OAAO,aAAa,SAAS;cACjD,cAAc;cACd,YAAY;cACZ,KAAK,6BAAM,MAAM,YAAY,QAAxB;cACL,KAAK,6BAAM,KAAK,qCAAqC,GAAhD;YACP,CAAC;AAED,mBAAO,qBAAqB,CAAC,MAAM,mBAAmB,UACpD;cACE;cACA;cACA,OAAO;cACP;YACF;AAEF,kBAAM,kBAAkB,gCAAU,UAAU,MAAM;AAChD,oBAAM,QAAQ,OAAO,WAAW,gBAAgB,OAAO;iBACpD,KAAK,SAAS,KAAK,OAAO;cAC7B;AACA,kBAAI,IAAI;AACR,mBAAK,QAAQ,CAACF,OAAM;AAClB,uBAAO;kBACL,QAAQ,OAAO,YAAY;kBAC3B,OAAO,WAAW,uBAAuB,cAAc,EAAE,KAAKA,EAAC;gBACjE;cACF,CAAC;AACD,qBAAO,QAAQ,QAAQ,OAAO,YAAY,GAAG,CAAC;AAC9C,qBAAO;YACT,GAbwB;AAexB,mBAAO,sBAAsB,CAAC,SAAS,gBAAgB,MAAM,IAAI;AAEjE,mBAAO,gBAAgB,CAAC,SAAS,gBAAgB,OAAO,IAAI;AAE5D,mBAAO,YAAY,CAAC,MAAM,UAAU;AAClC,oBAAM,OAAO,CAAC;AACd,uBAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC7B,sBAAM,MAAM,OAAO,QAAQ,QAAQ,OAAO,YAAY,CAAC;AACvD,qBAAK,KAAK,MAAM,OAAO,SAAS,GAAG,IAAI,IAAI;cAC7C;AACA,qBAAO;YACT;AAEA,mBAAO,kBAAkB,SAAU,MAAM;AACvC,qBAAO,gBAAgB;AACvB,kBAAI;AACF,uBAAO,KAAK;cACd,UAAA;AACE,uBAAO,eAAe;cACxB;YACF;AAEA,kBAAM,aAAa,gCAAU,SAAS,aAAa,QAAQ;AACzD,4BAAc,QAAQ,MAAM;AAC5B,oBAAM,MAAM,cAAc,QAAQ;AAClC,kBAAI,IAAI,OAAO,MAAM,EAAE,WAAW,cAAc,IAAI,UAAU;AAC9D,qBAAO,KAAK,GAAG,GAAG,GAAG;AACrB,kBAAI,MAAM,SAAS;AACjB,uBAAO;cACT;AACA,oBAAM,IAAI,CAAC,CAAC;AACZ,uBAAS,IAAI,GAAG,IAAI,SAAS,EAAE,GAAG;AAChC,qBAAK,cAAc,IAAI;AACvB,kBAAE,CAAC,IAAI;AACP,uBAAO,KAAK,GAAG,GAAG,GAAG;cACvB;AACA,qBAAO;YACT,GAfmB;AAiBnB,mBAAO,WAAW,CAAC,UAAU,GAAG,cAAc,SAC5C,WAAW,SAAS,aAAa,OAAO;AAE1C,mBAAO,iBAAiB,CAAC,UAAU,GAAG,cAAc,SAClD,WAAW,SAAS,aAAa,aAAa;AAEhD,mBAAO,OAAO,SAAU,MAAM;AAC5B,qBACE,OAAO,QAAQ,IAAI,KAAK,KAAK,gCAAgC,IAAI;YAErE;AAEA,kBAAM,iBAAiB,wBAAC,GAAGE,OACzB,KAAK,IAAI,eAAeA,IAAG,cAAc,GADpB;AAGvB,mBAAO,QAAQ,SAAU,UAAU,MAAM;AACvC,oBAAM,IAAI,iBAAiB,WAAW,QAAQ,OAAO,KAAK,KAAK;AAC/D,kBAAI,EAAE,aAAa;AACjB,qBAAK,mBAAmB,OAAO,oBAAoB;AACrD,kBAAI,EAAE,WAAW,KAAK;AACpB,+BAAe,MAAM,QAAQ,EAAE,OAAO,OAAO,EAAE,MAAM;AACvD,qBAAO,MAAM,UAAU,UAAU,MAAM,QAAQ,UAAU,CAAC,CAAC,IACvD,EAAE,MAAM,MAAM,UAAU,CAAC,CAAC,IAC1B,EAAE,MAAM,MAAM,IAAI;YACxB;AAEA,kBAAM,QAAQ,uBAAO,OAAO,IAAI;AAChC,kBAAM,MAAM,UAAU,uBAAO,OAAO,IAAI;AAExC,kBAAM,MAAM,QAAQ,MAAM,oBAAI,IAAI;AAElC,kBAAM,MAAM,QAAQ,SAAS,oBAAI,IAAI;AACrC,kBAAM,OAAO,MAAM,MAAM,QAAQ,KAC/B,UAAU,MAAM,MAAM,QAAQ;AAEhC,gBAAI,OAAO,eAAe;AACxB,mBAAK,IAAI,OAAO,CAAC,MAAM,OAAO,CAAC,CAAC;YAClC;AACA,kBAAM,YACJ,UAAU,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,OAAO,CAAC,IAAI,OAAO,CAAC;AAC9D,iBACG,IAAI,OAAO,SAAS,EACpB,IAAI,OAAO,CAAC,OAAO,IAAI,KAAK,KAAM,EAClC,IAAI,MAAM,CAAC,OAAO,IAAI,KAAK,GAAI,EAC/B,IAAI,OAAO,CAAC,MAAM,OAAO,CAAC,EAAE,QAAQ,CAAC,EACrC,IAAI,SAAS,KAAK,IAAI,KAAK,CAAC,EAC5B,IAAI,OAAO,KAAK,IAAI,KAAK,CAAC,EAC1B,IAAI,UAAU,KAAK,IAAI,KAAK,CAAC,EAC7B,IAAI,OAAO,KAAK,IAAI,KAAK,CAAC,EAC1B,IAAI,QAAQ,CAAC,MAAM,CAAC,EACpB,IAAI,MAAM,KAAK,IAAI,MAAM,CAAC,EAC1B,IAAI,MAAM,SAAS,EACnB,IAAI,KAAK,SAAS;AACrB,oBACG,IAAI,KAAK,SAAS,EAClB,IAAI,WAAW,SAAS,EACxB,IAAI,UAAU,CAACJ,OAAM,OAAOA,EAAC,CAAC,EAC9B,IAAI,QAAQ,CAACA,OAAM,MAAS,EAC5B,IAAI,QAAQ,CAACA,OAAMA,EAAC,EACpB,IAAI,MAAM,QAAQ,IAAI,MAAM,CAAC;AAEhC;AACE,oBAAM,eAAe;gBACnB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;AACA,kBAAI,OAAO,cAAe,cAAa,KAAK,KAAK;AACjD,oBAAM,WAAW,KAAK,IAAI,KAAK;AAC/B,yBAAWG,MAAK,cAAc;AAC5B,qBAAK,IAAIA,KAAI,KAAK,QAAQ;AAC1B,wBAAQ,IAAIA,KAAI,KAAK,QAAQ;AAC7B,wBAAQ,IAAIA,IAAG,KAAK,IAAIA,EAAC,KAAK,KAAK,0BAA0BA,EAAC,CAAC;cACjE;YACF;AAEA,kBAAM,eAAe,gCAAUH,IAAG;AAChC,kBAAI,aAAa,OAAOA,GAAG,QAAO,OAAO,mBAAmBA,EAAC;AAC7D,qBAAOA,KAAI,UAAUA,EAAC,IAAI;YAC5B,GAHqB;AAIrB,iBACG,IAAI,UAAU,YAAY,EAC1B,IAAI,QAAQ,YAAY,EACxB,IAAI,WAAW,YAAY;AAE9B,oBACG,IAAI,UAAU,CAAC,MAAM,OAAO,SAAS,CAAC,CAAC,EACvC,IAAI,QAAQ,QAAQ,IAAI,QAAQ,CAAC,EACjC,IAAI,kBAAkB,CAAC,MAAM;AAC5B,kBAAI;AACF,uBAAO,IAAI,OAAO,SAAS,CAAC,IAAI;cAClC,UAAA;AACE,uBAAO,QAAQ,CAAC;cAClB;YACF,CAAC,EACA,IAAI,gBAAgB,QAAQ,IAAI,gBAAgB,CAAC,EACjD,IAAI,QAAQ,CAAC,MAAM,KAAK,MAAM,OAAO,SAAS,CAAC,CAAC,CAAC,EACjD,IAAI,gBAAgB,CAAC,MAAM;AAC1B,kBAAI;AACF,uBAAO,IAAI,KAAK,MAAM,OAAO,SAAS,CAAC,CAAC,IAAI;cAC9C,UAAA;AACE,uBAAO,QAAQ,CAAC;cAClB;YACF,CAAC;AAEH,kBAAM,qBAAqB,MAAM;qBAAA;;;cAC/B,YAAY,KAAK;AACf,qBAAK,OAAO,IAAI,QAAQ;cAC1B;cAEA,WAAWA,IAAG8D,OAAM,UAAU;AAC5B,qBAAK,wCAAwC;cAC/C;YACF;AAEA,iBAAK,iBAAiB,MAAM,uBAAuB,mBAAmB;qBAAA;;;cACpE,YAAY,KAAK;AACf,sBAAM,GAAG;AACT,oBAAI,KAAK,eAAe,WAAW;AACjC,0BAAQ;oBACN;oBACA;oBACA;oBACA;kBACF;gBACF;AACA,qBAAK,OAAO,IAAI,QAAQ;AACxB,qBAAK,YAAY,IAAI;AACrB,oBAAI,IAAI,sBAAsB,UAAU;AACtC,uBAAK,aAAa,IAAI;AACtB,sBAAI,CAAC,IAAI,UAAW,KAAI,YAAY;gBACtC;AACA,qBAAK,YACH,IAAI,aACJ;kBACE;gBACF;AACF,oBAAI,eAAe,WAAW,QAAQ,IAAI,SAAS,IAAI,GAAG;AACxD;oBACE,gCACE,IAAI,UACJ,8CAEA,eAAe,WAAW,KAAK,IAAI,IACnC;kBACJ;gBACF;AACA,qBAAK,cAAc,gBAAgB,KAAK;AACxC,qBAAK,YAAY,cAAc,KAAK;AACpC,qBAAK,cAAc,gBAAgB,KAAK;AACxC,qBAAK,YAAY,gBAAgB,KAAK,YAAY,CAAC,IAAI;AAEvD,qBAAK,YACH,IAAI,qBAAqB,WAAW,IAAI,YAAY;cACxD;cAEA,WAAWA,OAAM,UAAU;AACzB,uBAAO;cACT;cAEA,WAAWlE,MAAK;AACd,sBAAM,KAAK,KAAK,WAAW,KAAK,SAAS,oBAAI,IAAI;AACjD,oBAAI,KAAK,GAAG,IAAIA,IAAG;AACnB,oBAAI,WAAc,GAAI,IAAG,IAAIA,MAAM,KAAK,CAAC,CAAE;AAC3C,uBAAO;cACT;cAEA,WAAWI,IAAG8D,OAAM,UAAU;AAC5B,oBAAI,OAAO,KAAK;AAChB,oBAAI,CAAC,QAAQ,KAAK,WAAW;AAC3B,yBAAO,KAAK,WAAW,KAAK,WAAWA,OAAM,QAAQ,CAAC;gBACxD;AACA,oBAAI,QAAQ,KAAK,CAAC,MAAM9D,GAAG,QAAO,KAAK,CAAC;AACxC,oBAAIA,cAAa,UAAU;AACzB,sBAAI,KAAK,UAAWA,MAAI,KAAK,UAAUA,EAAC;AACxC,wBAAM,KAAK,kBAAkBA,IAAG,KAAK,WAAW,KAAK,WAAW;AAChE,sBAAI,eAAe,kBAAkB;AACnC,mCAAe;sBACb;sBACA;sBACA,KAAK,WAAW8D,OAAM,QAAQ;sBAC9B,MAAM;sBACN9D;oBACF;kBACF;AACA,sBAAI,MAAM;AACR,wBAAI,KAAK,CAAC,GAAG;AACX,0BAAI,eAAe,kBAAkB;AACnC,uCAAe;0BACb;0BACA;0BACA,KAAK,WAAW8D,OAAM,QAAQ;0BAC9B,MAAM,KAAK,CAAC;0BACZ9D;wBACF;sBACF;AACA,0BAAI;AACF,8BAAM,YAAY,MAAM,YAAY,SAAS,CAAC,EAAE;0BAC9C,KAAK,CAAC;wBACR;sBACF,SAASE,IAAG;sBAAC;oBACf;AACA,yBAAK,CAAC,IAAIF;AACV,yBAAK,CAAC,IAAI;kBACZ;AACA,yBAAO;gBACT,WAAW,OAAO,MAAMA,EAAC,KAAK,SAASA,MAAK,WAAcA,IAAG;AAC3D,sBAAI,QAAQ,KAAK,CAAC,KAAK,KAAK,CAAC,MAAMA,IAAG;AACpC,wBAAI,eAAe,kBAAkB;AACnC,qCAAe;wBACb;wBACA;wBACA,KAAK,WAAW8D,OAAM,QAAQ;wBAC9B,MAAM,KAAK,CAAC;wBACZ9D;sBACF;oBACF;AACA,wBAAI;AACF,4BAAM,YAAY,MAAM,YAAY,SAAS,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC;oBAC9D,SAASE,IAAG;oBAAC;AACb,yBAAK,CAAC,IAAI,KAAK,CAAC,IAAIF,KAAI;kBAC1B;AACA,yBAAOA,MAAK;gBACd,OAAO;AACL,wBAAM,IAAI;oBACR,8EAEG,KAAK,OAAO,KAAK,OAAO,MAAM,MAC/B,iCACA,KAAK,YACL;kBACJ;gBACF;cACF;YACF;AAEA,iBAAK,eAAe,YAAY;AAEhC,iBAAK,eAAe,mBAAmB;AAEvC,iBAAK,eAAe,WAAW,QAAQ,MAAM,KAAK,OAAO;AAEzD,iBAAK,eAAe,aAAa;cAC/B;cACA;cACA;cACA;YACF;AAEA,kBAAM,qBAAqB,wBAACG,OAC1B,KAAK,IAAIA,EAAC,KAAK,KAAK,+BAA+BA,EAAC,GAD3B;AAG3B,kBAAM,wBAAwB,wBAACA,OAC7B,QAAQ,IAAIA,EAAC,KAAK,KAAK,6BAA6BA,EAAC,GADzB;AAG9B,kBAAM,MAAM,aAAa,CAACA,OAAM,SAAS,mBAAmBA,EAAC,EAAE,GAAG,IAAI;AAEtE,kBAAM,MAAM,oBAAoB,CAACA,OAAM,SAAS,KAAK,IAAIA,EAAC,EAAE,GAAG,IAAI;AAEnE,kBAAM,MAAM,gBAAgB,CAACA,IAAGH,OAC9B,SAASG,KAAIH,KAAIG,KAAI,sBAAsBA,EAAC,EAAEH,EAAC,IAAI;AAErD,kBAAM,MAAM,uBAAuB,CAACG,IAAGH,OACrC,SAASG,KAAIH,KAAIG,KAAI,QAAQ,IAAIA,EAAC,EAAEH,EAAC,IAAI;AAE3C,mBAAO,QAAQ,SAAU,MAAM,eAAe,UAAU;AACtD,kBAAI,MAAM,UAAU,UAAU,MAAM,QAAQ,UAAU,CAAC,CAAC,GAAG;AACzD,2BAAW,UAAU,CAAC;cACxB;AACA,kBAAI,OAAO,MAAM,IAAI,GAAG;AACtB,uBACE,OAAO,cAAc,IAAI,KACzB,KAAK,oDAAoD;cAC7D;AACA,oBAAM,UAAU,gBAAgB;AAChC,oBAAM,KAAK,UAAU,OAAO,OAAO,KAAK,IAAI;AAC5C,kBAAI,QAAS,QAAO,GAAG,QAAQ;AAC/B,kBAAI,SAAS,WAAW,GAAG,OAAQ,gBAAe,MAAM,GAAG,MAAM;AACjE,kBAAI,SAAS,cAAc,MAAM,GAAG,QAAQ;AAC1C,uBAAO;cACT;AACA,kBAAI,WAAc,cAAc,SAAS;AACvC,sCAAsB,UAAU;AAClC,yBAAWG,MAAK,UAAU;AACxB,oBAAIA,cAAa;AACf,uBAAK,IAAIA,IAAG,IAAI,SAASA,GAAE,WAAW,GAAG,IAAI,CAAC;oBAC3C,oBAAmBA,EAAC;cAC3B;AACA,oBAAM,MAAM,MAAM;AAClB,kBAAI,MAAM,GAAG,QAAQ;AACnB,uBAAO,IAAI,SACT,KAAK,SACD,eAAe,MAAM,GAAG,MAAM,IAC9B,IAAI,cAAc,YAAY,GAAG,KAAK,IAAI,CAAC;cACnD;AACA,qBAAO,YAAa,MAAM;AACxB,oBAAI,KAAK,WAAW,GAAG,OAAQ,gBAAe,MAAM,GAAG,MAAM;AAC7D,sBAAM,QAAQ,OAAO,gBAAgB;AACrC,oBAAI;AACF,sBAAI,IAAI;AACR,yBAAO,IAAI,KAAK,QAAQ,EAAE;AACxB,yBAAK,CAAC,IAAI,IAAI,kBAAkB,SAAS,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;AAC/D,yBAAO,IAAI,qBAAqB,YAAY,GAAG,MAAM,MAAM,IAAI,CAAC;gBAClE,UAAA;AACE,yBAAO,eAAe,KAAK;gBAC7B;cACF;YACF;AAEA,kBAAM,aAAa,gCACjB,MACA,MACA,UACA,SACA,UACA,SACA;AACA,kBAAI,aAAa,OAAO,UAAU;AAChC,oBAAI,MAAM,KAAM,QAAO,QAAQ,IAAI,QAAQ;yBAClC,MAAM,MAAM;AACnB,sBAAI,CAAC,SAAS;AACZ,4BAAQ,OAAO,QAAQ;AACvB,2BAAO;kBACT,WAAW,EAAE,mBAAmB,WAAW;AACzC,yBAAK,UAAU,+BAA+B;kBAChD;AACA,0BAAQ,IAAI,UAAU,OAAO;AAC7B,yBAAO;gBACT;cACF;AACA,mBAAK,wBAAwB,QAAQ;YACvC,GAtBmB;AAwBnB,mBAAO,MAAM,gBAAgB,gCAAS,EAAE,UAAU,SAAS;AACzD,qBAAO;gBACL;gBACA,UAAU;gBACV;gBACA;gBACA;gBACA;cACF;YACF,GAT6B;AAW7B,mBAAO,MAAM,aAAa,gCAAS,EAAE,UAAU,SAAS;AACtD,qBAAO;gBACL;gBACA,UAAU;gBACV;gBACA;gBACA;gBACA;cACF;YACF,GAT0B;AAW1B,mBAAO,MAAM,iBAAiB,KAAK;AAEnC,mBAAO,eAAe,SAAU,MAAM,YAAY,aAAa,MAAM;AACnE,kBAAI,MAAM,QAAQ,UAAU,CAAC,CAAC,EAAG,QAAO,UAAU,CAAC;AACnD,qBAAO,OACJ,MAAM,MAAM,YAAY,YAAY,CAAC,CAAC,EACtC,MAAM,MAAM,QAAQ,CAAC,CAAC;YAC3B;AAEA,mBAAO,MAAM,iBAAiB,MAAM,MAAM;AAE1C,mBAAO,MAAM,oBAAoB,MAAM,MAAM;AAE7C,mBAAO;UACT;AAEA,qBAAW,oBAAoB,OAAO,SAAUqD,SAAQ;AACtD,kBAAM,SAAS,6BAAM,MAAMA,QAAO,KAAK,EAAE,aAAa,cAAc,CAAC,GAAtD;AACf,kBAAM,MAAM;AACZ,kBAAM,YAAY,gCAAU,KAAK;AAC/B,kBAAIA,QAAO,gBAAgB;AACzB,sBAAM,OAAO,2BAAI,SAAS;AACxB,wBAAM,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;gBAChC,GAFa;AAGb,sBAAM,MAAMA,QAAO;AACnB,oBAAI,SAAS,IAAI;AACjB,oBAAI,WAAW,IAAI;AAEnB,oBAAI,CAAC,IAAI,SAAS,QAAQ,QAAQ;AAChC,sBAAI,SACDA,QAAO,WACNA,QAAO,QAAQ,OACfA,QAAO,QAAQ,IAAI,UACrB,KAAK,0BAA0B;gBACnC;AACA,oBAAI,CAAC,IAAI,SAAS,IAAI,SAAS,QAAQ,QAAQ;AAC7C,wBAAM,UAAU,IAAI,SAAS;AAC7B,sBAAI,QAAQ,SAAUpD,IAAG;AACvB,2BACE,QAAQ,OAAOA,EAAC,KAAK,KAAK,iBAAiBA,IAAG,eAAe;kBAEjE;AACA,sBAAI,UAAU,SAAU,GAAG;AACzB,4BAAQ,KAAK,CAAC;kBAChB;gBACF;AACA,oBAAI,GAAG;cACT;AACA,kBAAIoD,QAAO,OAAQ,CAAAA,QAAO,OAAO,KAAKA,OAAM;AAC5C,qBAAO;YACT,GA/BkB;AAgClB,kBAAM,WAAW,YAAY,uBACzB,gCAAS,oBAAoB;AAC3B,qBAAO,YAAY;gBACjB,OAAO;gBACPA,QAAO,WAAW,CAAC;cACrB,EAAE,KAAK,SAAS;YAClB,GALA,uBAMA,gCAAS,oBAAoB;AAC3B,qBAAO,OAAO,EACX,KAAK,CAAC,aAAa,SAAS,YAAY,CAAC,EACzC;gBAAK,CAAC,UACL,YAAY,YAAY,OAAOA,QAAO,WAAW,CAAC,CAAC;cACrD,EACC,KAAK,SAAS;YACnB,GAPA;AAQJ,mBAAO;UACT,EAAE,KAAK,WAAW,mBAAmB;AAEpC;AACD,qBAAW,YAAY,gCAAS,oBAAoBA,SAAQ;AAC1D,kBAAM,OAAO,2BAAI,SAAS;AACxB,oBAAM,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;YAChC,GAFa;AAIb,gBACE,EAAEA,QAAO,gBAAgB,YAAY,WACrC,EAAEA,QAAO,gBAAgB,WACzB;AACA;gBACE;cACF;YACF;AACA,aAAC,SAAS,SAAS,EAAE,QAAQ,SAAU,GAAG;AACxC,cAAAA,QAAO,CAAC,aAAa,YACnB,KAAK,oBAAoB,IAAI,uBAAuB;YACxD,CAAC;AACD,kBAAM,MAAM;AACZ,kBAAM,OACFA,QAAO,gBAAgB,WACnBA,QAAO,OACP,MAAM,IAAI,WAAWA,QAAO,KAAK,MAAM,GAC7C,QAAQA,QAAO,OACf,UAAUA,QAAO,SACjBO,OAAMP,QAAO,OAAO,QAAQ,IAAI,KAAK,OAAO,GAC5C,eAAeA,QAAO,gBAAgB,IACtC,eAAeA,QAAO,gBAAgB,IACtC,gBACE,WAAcA,QAAO,gBACjB,CAAC,CAAC,WAAW,eAAe,IAC5B,CAAC,CAACA,QAAO,eACfQ,UAAS,WAAW,QAAQ,GAC5BC,iBAAgB,WAAW,eAAe,GAC1C,YAAYT,QAAO,aAAa,GAChC,QAAQA,QAAO,SAAS;AAC1B,gBAAI,CAAC,IAAI,YAAY;AACnB,kBAAI,mBAAmB,SAAU,aAAa,MAAM;AAClD,oBAAI,cAAc,WAAW;AAC3B,+BAAa,WAAW;AAC1B,sBAAM,IAAI,gCAASU,GAAEtD,QAAO;AAC1B,sBAAI,MAAM,UAAU,QAAQ;AAC1B,2BAAOsD,GAAE;kBACX;AACA,sBAAItD,SAAQ,GAAG;AACb,2BAAOsD,GAAE,QAAQ;AACjB,2BAAOA,GAAE,QAAQ;AACjB,2BAAOA,GAAE,QAAQ;AACjB,2BAAOA,GAAE,QAAQ;kBACnB,OAAO;AACLA,uBAAE,QAAQ,SAAS,OAAO,IAAOtD;AACjCsD,uBAAE,QAAQ,SAAS,OAAO,IAAOtD;AACjCsD,uBAAE,QAAQ,QAAQ,OAAO,IAAOtD;AAChCsD,uBAAE,QAAQ,UAAU,OAAO,IAAOtD;kBACpC;AACA,yBAAOsD,GAAE;gBACX,GAhBU;AAiBV,uBAAO,eAAe,GAAG,WAAW;kBAClC,UAAU;kBACV,UAAU;kBACV,OAAO,OAAO,OAAO,UAAU;gBACjC,CAAC;AACD,oBAAI,CAAC,WAAY,GAAE,CAAC;AACpB,uBAAO;cACT;AACA,kBAAI,aAAa,IAAI,iBAAiB;YACxC;AAEA,kBAAM,iBAAkB,WAAY;AAClC,oBAAM,SAAS,IAAI,YAAY,CAAC;AAChC,kBAAI,SAAS,MAAM,EAAE,SAAS,GAAG,KAAK,IAAI;AAE1C,qBAAO,IAAI,WAAW,MAAM,EAAE,CAAC,MAAM;YACvC,EAAG;AAEH,kBAAM,YAAY,wBAACP,OAAM,QAAQA,GAAE,CAAC,GAAlB;AAElB,kBAAM,WAAW,wBAACA,OAAM,QAAQA,MAAK,QAAQA,IAA5B;AACjB,kBAAM,eAAe,wBAACA,OAAM,QAAQA,IAAf;AACrB,kBAAM,YAAY,wBAACA,OAAO,UAAUA,EAAC,IAAI,MAAMA,GAAE,CAAC,GAAhC;AAElB,kBAAM,QAAQ,gCAAUA,IAAG;AACzB,sBAAQ,UAAUA,EAAC,GAAG;gBACpB,KAAK;gBACL,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;gBACL,KAAK;gBACL,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;cACX;AACA,mBAAK,2BAA2BA,EAAC;YACnC,GAnBc;AAqBd,kBAAM,oBAAoBM,iBACtB,MAAM,OACN,MAAM,KAAK,iCAAiC;AAEhD,kBAAM,cAAc,gCAAUN,IAAG;AAC/B,sBAAQ,UAAUA,EAAC,GAAG;gBACpB,KAAK;gBACL,KAAK;gBACL,KAAK,KAAK;AACR,0BAAQ,WAAW;oBACjB,KAAK;AACH,6BAAO;oBACT,KAAK;AACH,6BAAO,kBAAkB,KAAK;kBAClC;AACA;gBACF;gBACA,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO,kBAAkB,KAAK;gBAChC,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;cACX;AACA,mBAAK,4CAA4CA,EAAC;YACpD,GA3BoB;AA6BpB,kBAAM,cAAc,gCAAUA,IAAG;AAC/B,sBAAQ,UAAUA,EAAC,GAAG;gBACpB,KAAK;gBACL,KAAK;gBACL,KAAK,KAAK;AACR,0BAAQ,WAAW;oBACjB,KAAK;AACH,6BAAO;oBACT,KAAK;AACH,6BAAO,kBAAkB,KAAK;kBAClC;AACA;gBACF;gBACA,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO,kBAAkB,KAAK;gBAChC,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO;cACX;AACA,mBAAK,4CAA4CA,EAAC;YACpD,GA3BoB;AA6BpB,kBAAM,kBAAkB,gCAAUA,IAAG;AACnC,sBAAQ,UAAUA,EAAC,GAAG;gBACpB,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;AACH,yBAAO;gBACT,KAAK;AACH,yBAAO,kBAAkB,KAAKK;gBAChC,KAAK;gBACL,KAAK;gBACL,KAAK;AACH,0BAAQ,WAAW;oBACjB,KAAK;AACH,6BAAO;oBACT,KAAK;AACH,6BAAO,kBAAkB,KAAKA;kBAClC;AACA;cACJ;AACA,mBAAK,iDAAiDL,EAAC;YACzD,GAtBwB;AAwBxB,kBAAM,YAAY,wBAACA,IAAG,MAAMA,KAAI,OAAO,GAArB;AAElB,kBAAM,mBAAmB,gCAAU,YAAY,UAAU;AACvD,qBAAO,MAAM,KAAK,UAAU,YAAY,QAAQ,GAAG,eAAe;YACpE,GAFyB;AAIzB,kBAAM,uBAAuB,oBAAI,QAAQ;AAEzC,kBAAM,eAAe;AAErB,kBAAM,eAAe,gCAAU,MAAM,KAAK,GAAG;AAC3C,kBAAI,CAAC,EAAG,KAAI,qBAAqB,IAAI,GAAG;AACxC,kBAAI,GAAG;AACL,qCAAqB,OAAO,GAAG;AAC/B,oBAAI,MAAM,QAAQ,IAAI,SAAS,GAAG;AAChC,sBAAI;AACJ,yBAAQ,IAAI,IAAI,UAAU,MAAM,GAAI;AAClC,wBAAI;AACF,0BAAI,aAAa,SAAU,GAAE,KAAK,GAAG;+BAC5B,aAAa,WAAY,GAAE,QAAQ;+BACnC,aAAa,OAAO,EAAG,SAAQ,CAAC;oBAC3C,SAASzD,IAAG;AACV,8BAAQ;wBACN;wBACA,KAAK;wBACL;wBACA;wBACA;wBACAA;sBACF;oBACF;kBACF;gBACF,WAAW,IAAI,qBAAqB,UAAU;AAC5C,sBAAI;AACF,wBAAI,UAAU;kBAChB,SAASA,IAAG;AACV,4BAAQ;sBACN;sBACA,KAAK;sBACL;sBACA;sBACA;sBACAA;oBACF;kBACF;gBACF;AACA,uBAAO,IAAI;AACX,oBAAI,KAAK,WAAW,QAAQ,SAAS;AACnC,kBAAA6D;oBACE;oBACA,IAAI,YAAY,IAAI,aAAa;oBACjC,KAAK;oBACL;oBACA,KAAK,WAAW;oBAChB,YAAY;kBACd;gBACF;AACA,oBAAI,CAAC,IAAI,YAAY,EAAG,SAAQ,CAAC;cACnC;YACF,GAjDqB;AAmDrB,kBAAM,MAAM,wBAAC/D,OAAM;AACjB,qBAAO;gBACL,cAAc;gBACd,UAAU;gBACV,UAAU;gBACV,OAAOA;cACT;YACF,GAPY;AASZ,kBAAM,gBAAgB,gCAAU,MAAM,KAAK,GAAG;AAC5C,kBAAI,OAAO,CAAC;AACZ,kBAAI,EAAG,QAAO,eAAe,KAAK,cAAc,IAAI,CAAC,CAAC;mBACjD;AACH,oBAAI,MAAM,KAAK,WAAW,MAAM;AAChC,oBAAI,CAAC,EAAG,MAAK,iBAAiB,KAAK,YAAY,mBAAmB;cACpE;AACA,kBAAI;AACF,oBAAI,KAAK,WAAW,QAAQ,OAAO;AACjC,kBAAA+D;oBACE;oBACA,OAAO,KAAK;oBACZ,KAAK;oBACL;oBACA,KAAK,WAAW;oBAChB,YAAY;kBACd;gBACF;AACA,oBAAI,KAAM,MAAK,EAAE,KAAK,GAAG,GAAG,IAAI,KAAK,WAAW,MAAM;AACtD,qCAAqB,IAAI,KAAK,CAAC;cACjC,SAAS7D,IAAG;AACV,6BAAa,MAAM,KAAK,CAAC;AACzB,sBAAMA;cACR;YACF,GAxBsB;AA0BtB,kBAAM,eAAe,kCAAY;AAC/B,oBAAM,IAAI,KAAK;AACf,qBAAO,IACH,IAAI,WAAW,KAAK,EAAE,MAAM,GAAG,IAAI,KAAK,WAAW,MAAM,CAAC,IAC1D;YACN,GALqB;AAOrB,kBAAM,cAAc,wBAAC,MAAM,eAAe,IAAI,cAA1B;AACpB,kBAAM,kBAAkB,IAAI,WAAW;AAEvC,kBAAM,iBAAiB,gCACrB,YACA,YACA,iBAAiB,MACjB;AACA,kBAAI,IAAI,WAAW,QAAQ,UAAU;AACrC,kBAAI,CAAC,MAAM,gBAAgB,eAAe;AACxC,2BAAWF,MAAK,OAAO,OAAO,WAAW,OAAO,GAAG;AACjD,sBAAIA,GAAE,QAAQ,YAAY;AACxB,wBAAIA;AACJ;kBACF;gBACF;AACA,oBAAI,CAAC,KAAK,gBAAgB;AACxB;oBACE,UAAU,WAAW,MAAM,UAAU;oBACrC;kBACF;gBACF;cACF;AACA,qBAAO;YACT,GArBuB;AAuBvB,kBAAM,oBAAoB,gCAAS,EACjC,KACA,YACA,mBAAmB,OACnB;AACA,kBAAI,CAAC,EAAE;AACL,kBAAE,IAAI,CAAC,MACL,EAAE,QAAQ,kBAAkB,EAAE,EAAE,QAAQ,YAAY,GAAG;AAC3D,oBAAM,IAAI,eAAe,IAAI,YAAY,YAAY,IAAI;AACzD,qBAAO,mBAAmB,EAAE,EAAE,EAAE,SAAS,IAAI,EAAE;YACjD,GAV0B;AAY1B,kBAAM,sBAAsB;cAC1B,cAAc;cACd,YAAY;cACZ,KAAK,kCAAY;AACf,uBAAO,qBAAqB,IAAI,IAAI;cACtC,GAFK;cAGL,KAAK,6BAAM,KAAK,mDAAmD,GAA9D;YACP;AAEA,kBAAM,qBAAqB,IAAI,WAAY;AACzC,oBAAM,IAAI,CAAC;AACX,yBAAW,KAAK,OAAO,KAAK,KAAK,WAAW,OAAO,GAAG;AACpD,kBAAE,KAAK,KAAK,UAAU,CAAC,CAAC;cAC1B;AACA,qBAAO;YACT,CAAC;AAED,kBAAM,gBAAgB,IAAI,YAAY,OAAO;AAC7C,kBAAM,gBAAgB,IAAI,YAAY;AAEtC,kBAAM,QACJ,gBAAgB,OAAO,oBACnB,WAAY;YAAC,IACb;AACN,kBAAM,eAAe,gCAAU,aAAa,OAAO,KAAK;AACtD,qBAAO,cAAc;gBACnB,YAAY,kBAAkB,QAC1B,YAAY,MAAM,OAAO,GAAG,IAC5B,YAAY,SAAS,OAAO,GAAG;cACrC;YACF,GANqB;AAQrB,kBAAM,mBAAmB,gCACvB,KACA,YACA,iBAAiB,OACjB;AACA,oBAAM,IAAI,eAAe,IAAI,YAAY,YAAY,cAAc;AACnE,qBAAO,KAAK,MAAM,EAAE,UAAU,UAAU,QAAQ,EAAE,UAAU,CAAC,IACzD,IACA;YACN,GATyB;AAWzB,kBAAM,2BAA2B,gCAAU,QAAQ;AACjD,kBAAI,QAAQ,OAAO,UAAW;AAC9B;gBACE;gBACA,KAAK,UAAU,MAAM;cACvB;YACF,GANiC;AAQjC,kBAAM,qBAAqB,gCAAS,EAAE,KAAK,YAAY;AACrD,oBAAM,IAAI,eAAe,IAAI,YAAY,YAAY,IAAI;AACzD,uCAAyB,CAAC;AAC1B,oBAAM,OAAO,IAAI,EAAE,GAAG;AAEtB,kBAAI,CAAC,KAAM,QAAO;AAClB,kBAAI,MAAM;AACV,oBAAM,MAAM,KAAK;AACjB,qBAAO,IAAI,GAAG,MAAM,GAAG,EAAE,KAAK;cAAC;AAE/B,qBAAO,SAAS,MAAM,KAAK,aAAa,KAAK,MAAM,GAAG;YACxD,GAX2B;AAa3B,kBAAM,iBAAiB,gCAAU,QAAQA,IAAG;AAC1C,kBAAI,IAAI,WAAW;AACjB,oBAAI,CAAC,MAAM,QAAQ,IAAI,SAAS,GAAG;AACjC,sBAAI,YAAY,CAAC,IAAI,SAAS;gBAChC;cACF,OAAO;AACL,oBAAI,YAAY,CAAC;cACnB;AACA,kBAAI,UAAU,KAAK,GAAGA,EAAC;YACzB,GATuB;AAWvB,kBAAM,iBAAiB,gCAAU,KAAK;AACpC,oBAAM,IAAI,cAAc,OAAO,GAAG;AAClC,oBAAM,MAAM,MAAM,EAAE,SAAS,CAAC;AAC9B,kBAAI,CAAC,IAAK,MAAK,8CAA8C,GAAG;AAChE,oBAAM,IAAI,KAAK;AAEf,gBAAE,IAAI,GAAG,GAAG;AACZ,gBAAE,MAAM,EAAE,MAAM,IAAI;AAEpB,qBAAO;YACT,GAVuB;AAYvB,kBAAM,qBAAqB,gCAAU,KAAK,YAAY,KAAK;AACzD,oBAAM,IAAI,eAAe,IAAI,YAAY,YAAY,IAAI;AACzD,uCAAyB,CAAC;AAE1B,oBAAM,MAAM,eAAe,GAAG;AAC9B,kBAAI,EAAE,GAAG,IAAI;AACb,6BAAe,KAAK,GAAG;AACvB,qBAAO;YACT,GAR2B;AAU3B,kBAAM,aAAa,gCAAS,KAAK,YAAY,YAAY;AACvD,kBAAI,UAAU,CAAC,MAAM,KAAK;AACxB;kBACE;kBACA;gBACF;cACF;AACA,qBAAO,iBAAiB,MAAM;gBAC5B,YAAY,IAAI,UAAU;gBAC1B,YAAY,IAAI,UAAU;cAC5B,CAAC;YACH,GAXmB;AAanB,uBAAW,YAAY,OAAO,OAAO,MAAM;cACzC,SAAS,IAAI,WAAY;AACvB,6BAAa,KAAK,aAAa,IAAI;cACrC,CAAC;cACD,cAAc,IAAI,SAAU,YAAY,iBAAiB,MAAM;AAC7D,uBAAO,eAAe,KAAK,YAAY,YAAY,cAAc;cACnE,CAAC;cACD,kBAAkB,IAAI,SAAU,YAAY;AAC1C,uBAAO,mBAAmB,MAAM,UAAU;cAC5C,CAAC;cACD,gBAAgB,IAAI,SAAU,YAAY,iBAAiB,MAAM;AAC/D,uBAAO,iBAAiB,MAAM,YAAY,cAAc;cAC1D,CAAC;cACD,WAAW;cACX,YAAY;cACZ,iBAAiB,IAAI,SAAU,YAAY,mBAAmB,OAAO;AACnE,uBAAO,kBAAkB,MAAM,YAAY,gBAAgB;cAC7D,CAAC;cACD,YAAY,IAAI,YAAY;cAC5B,SAAS;cACT,kBAAkB,IAAI,SAAU,YAAY,KAAK;AAC/C,uBAAO,mBAAmB,MAAM,YAAY,GAAG;cACjD,CAAC;YACH,CAAC;AAED,mBAAO,OAAO,WAAW,WAAW;cAClC,cAAc,mCAAaA,IAAG;AAC5B,+BAAe,MAAM,GAAGA,EAAC;AACzB,uBAAO;cACT,GAHc;YAIhB,CAAC;AAED,mBAAO,iBAAiB,YAAY;cAClC,cAAc,IAAI,cAAc;cAChC,KAAK,IAAI,CAACA,OAAMA,cAAa,UAAU;cACvC,oBAAoB;gBAClB,CAACA,OAAMA,cAAa,cAAc,CAAC,CAACA,GAAE,YAAY;cACpD;cACA,WAAW;YACb,CAAC;AAED,kBAAM,iBAAiB,wBAACA,OACtB,OAAO,SAASA,EAAC,KAAKA,eAAcgE,WAAU,SADzB;AAGvB,kBAAM,oBAAoB,gCAAS,EAAE,MAAM,MAAM,OAAO;AACtD,kBAAI,CAAC,EAAE,GAAG;AACR,kBAAE,IAAI,EAAE,SAAS,CAAC,GAAG,SAAS,CAAC,GAAG,IAAI,CAAC,EAAE;AACzC,sBAAM,IAAI,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AACxD,oBAAI,cAAe,GAAE,KAAK,GAAG;AAC7B,kBAAE,QAAQ,SAAUhE,IAAG;AACrB,oBAAE,EAAE,QAAQA,EAAC,IAAI,YAAYA,EAAC;AAC9B,oBAAE,EAAE,QAAQA,EAAC,IAAI,YAAYA,EAAC;AAC9B,oBAAE,EAAE,GAAGA,EAAC,IAAI,gBAAgBA,EAAC;gBAC/B,CAAC;AACD,sBAAM,SAAS,iBACb,SAAS;AACX,kBAAE,WAAW,SAAU,KAAKmE,OAAMvE,MAAK,KAAK;AAC1C,sBAAI,OAAO,UAAU,eAAe,KAAK,KAAKA,IAAG,GAAG;AAClD,yBAAK,IAAI,YAAY,gCAAgCA,OAAM,GAAG;kBAChE;AACA,yBAAO,KAAK,GAAG,KACb,OAAO,KAAK,GAAG,KACf;oBACE;oBACA,UAAU,IAAI,YAAYuE,KAAI,IAAI;oBAClC;kBACF;gBACJ;cACF;AACA,oBAAMvE,OAAM,KAAK,UAAU,IAAI;AAC/B,gBAAE,SAAS,KAAK,WAAW,MAAMA,MAAK,MAAM,SAAS;AACrD,oBAAM,MAAMA;AACZ,oBAAM,OAAO;AACb,oBAAM,WAAW,UAAU,MAAM,SAAS;AAC1C,oBAAM,YAAY,UAAU,KAAK,UAAU,YAAYA,IAAG;AAC1D,oBAAM,MAAM,KAAK,UAAU,WAAW;AAEtC,oBAAM,OAAO,uBAAO,OAAO,IAAI;AAC/B,mBAAK,eAAe;AACpB,mBAAK,aAAa;AAClB,mBAAK,MAAM,WAAY;AACrB,oBAAI,IAAI,QAAQ;AACd,kBAAAmE;oBACE;oBACA,EAAE,EAAE,QAAQ,QAAQ;oBACpB;oBACA,MAAM,QAAQ;oBACd;oBACA;oBACA,KAAK;oBACL;oBACA,MAAM;oBACN;oBACA,MAAM;kBACR;gBACF;AACA,oBAAI,KAAK,IAAI;kBACX,KAAK,EAAE;kBACP,KAAK,UAAU,MAAM;kBACrB,MAAM;gBACR,EAAE,EAAE,EAAE,QAAQ,QAAQ,CAAC,EAAE,GAAG,cAAc;AAC1C,oBAAI,IAAI,OAAQ,CAAAA,KAAI,iBAAiB,WAAW,YAAY,EAAE;AAC9D,uBAAO;cACT;AACA,kBAAI,MAAM,UAAU;AAClB,qBAAK,MAAM,iBAAiB,KAAK,UAAU,YAAYnE,IAAG;cAC5D,OAAO;AACL,qBAAK,MAAM,SAAUI,IAAG;AACtB,sBAAI,IAAI,QAAQ;AACd,oBAAA+D;sBACE;sBACA,EAAE,EAAE,QAAQ,QAAQ;sBACpB;sBACA,MAAM,QAAQ;sBACd;sBACA;sBACA,KAAK;sBACL;sBACA,MAAM;sBACN;sBACA,MAAM;sBACN/D;oBACF;kBACF;AACA,sBAAI,CAAC,KAAK,SAAS;AACjB,yBAAK,kDAAkD;kBACzD;AACA,sBAAI,SAASA,GAAGA,MAAI;;AAElB,2BAAO,CAAC,eAAeA,EAAC,GAAG;AACzB,0BACE,aAAa,MAAM,SAAS,KAC5BA,cAAa,YACb;AACAA,6BAAIA,GAAE,WAAW;AACjB,4BAAI,IAAI;AACN,0BAAA+D,KAAI,iBAAiB,WAAW,eAAe/D,EAAC;AAClD;sBACF;AACA,2BAAK,kCAAkC,YAAY,GAAG;oBACxD;AACF,sBAAI;oBACF,KAAK,EAAE;oBACP,KAAK,UAAU,MAAM;oBACrB,MAAM;kBACR,EAAE,EAAE,EAAE,QAAQ,QAAQ,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,QAAQ,EAAEA,EAAC,GAAG,cAAc;gBACjE;cACF;AACA,qBAAO,eAAe,KAAK,WAAWJ,MAAK,IAAI;YACjD,GAzG0B;AA2G1B,kBAAM,eAAe,gCAASwE,cAAa,YAAY,YAAY;AACjE,kBAAI,MAAM,UAAU,QAAQ;AAC1B,6BAAa;AACb,6BAAa,WAAW;cAC1B,WAAW,CAAC,WAAW,MAAM;AAC3B,2BAAW,OAAO;cACpB;AACA,kBAAI,CAAC,WAAY,MAAK,0BAA0B;AAChD,kBAAI,aAAa;AACjB,qBAAO,KAAK,WAAW,OAAO,EAAE,QAAQ,CAAC,MAAM;AAC7C,sBAAM,IAAI,WAAW,QAAQ,CAAC;AAC9B,oBAAI,CAAC,EAAE,OAAQ,MAAK,YAAY,UAAU,GAAG,oBAAoB;yBACxD,EAAE,WAAW,GAAG;AACvB,oBAAE,cAAc,OACd,EAAE,cAAc,OAChB;oBACE;oBACA,UAAU,WAAW,MAAM,CAAC;oBAC5B;oBACA,EAAE;kBACJ;gBACJ,OAAO;AACL,sBAAI,MAAM,EAAE,SAAS,GAAG;AACtB,4BAAQ;sBACN;sBACA;sBACA;sBACA;oBACF;AACA;sBACE;sBACA;sBACA;sBACA,mCAAmC,EAAE;oBACvC;kBACF;AACA,sBAAI,MAAM,EAAE,SAAS,GAAG;AACtB,4BAAQ;sBACN;sBACA;sBACA;sBACA;oBACF;AACA;sBACE;sBACA;sBACA;sBACA,mCAAmC,EAAE;oBACvC;kBACF;gBACF;AACA,oBAAI,CAAC,cAAc,WAAW,SAAS,EAAE,OAAQ,cAAa;cAChE,CAAC;AACD,kBAAI,CAAC,WAAY,MAAK,wCAAwC;uBACrD,WAAW,SAAS,WAAW,SAAS,WAAW,QAAQ;AAClE;kBACE;kBACA;kBACA,wBAAwB,WAAW,SAAS;kBAC5C,wCAAwC,WAAW,SAAS;gBAC9D;cACF;AACA,oBAAM,aAAa,IAAI,IAAI,iBAAiBA,cAAa,UAAU,CAAC;AAEpE,oBAAM,aAAa,gCAASC,YAAW,gBAAgB;AACrD,oBAAI,EAAE,gBAAgBA,cAAa;AACjC;oBACE;oBACA;oBACA;kBACF;gBACF,WAAW,UAAU,QAAQ;AAC3B,sBACE,oBAAoB,iBAAiB,MACrC,kBAAkB,GAClB;AACA,yBAAK,6BAA6B,YAAY,cAAc;kBAC9D;AACA,gCAAcA,aAAY,MAAM,cAAc;gBAChD,OAAO;AACL,gCAAcA,aAAY,IAAI;gBAChC;cACF,GAlBmB;AAmBnB,qBAAO,iBAAiB,YAAY;gBAClC;gBACA,KAAK,IAAI,CAACrE,OAAMA,cAAa,UAAU;gBACvC,WAAW;gBACX,YAAY;gBACZ,kBAAkB,IAAI,SAAU,MAAM;gBAAC,CAAC;gBACxC,YAAY,IAAI,UAAU;gBAC1B,YAAY,IAAI,UAAU;cAC5B,CAAC;AACD,yBAAW,YAAY,IAAI,WAAW,YAAY,YAAY,GAAG;AACjE,qBAAO,iBAAiB,WAAW,WAAW;gBAC5C;gBACA,aAAa,IAAI,UAAU;cAC7B,CAAC;AACD,qBAAO,KAAK,WAAW,OAAO,EAAE;gBAAQ,CAAC,SACvC,kBAAkB,YAAY,MAAM,WAAW,QAAQ,IAAI,CAAC;cAC9D;AACA,qBAAO;YACT,GArGqB;AAsGrB,yBAAa,aAAa;AAC1B,yBAAa,SAASwD;AACtB,yBAAa,eAAe;AAC5B,gBAAI,CAAC,aAAa,YAAY;AAC5B,2BAAa,aAAa,IAAI,iBAAiB,IAAI,UAAU;YAC/D;AACA,mBAAO;UACT,GA1rBuB;AA4rBvB,qBAAW,oBAAoB,aAAa,KAAK,SAAU,SAAS;AAClE;AACA,kBAAM,OAAO,2BAAI,SAAS;AACxB,oBAAM,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;YAChC,GAFa;AAGb,kBAAM,QAAQ,QAAQ,aAAa;AACnC,kBAAM,OAAO,QAAQ,MACnBC,QAAO,QAAQ,MACf,OAAO,QAAQ;AACjB,uBAAW,oBAAoBA,KAAI;AACnC,mBAAO,WAAW;AAElB,gBAAI,GAAG;AACL,oBAAM,UAAUA,MAAK,QAAQ,QAAQ,OAAO,iBAAiB;AAC7D,oBAAM,QAAQA,MAAK,cAAc,EAAE;AACnC,kBAAI;AACJ,mBAAK,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AAC1B,sBAAMvD,KAAIuD,MAAK,cAAc,CAAC;AAC9B,oBAAI,YAAYvD,IAAG;AACjB,uBAAK,sBAAsB;AAC3B;gBACF;cACF;AACA,kBAAI,YAAYuD,MAAK,cAAc,KAAK,mBAAmB,GAAG;AAC5D;kBACE;gBACF;cACF;YACF;AAEA,YAAAA,MAAK,oBAAoB;cACvB,CAAC,6BAA6B,SAAS,oBAAoB,KAAK;cAEhE,CAAC,uBAAuB,OAAO,iBAAiB,OAAO,KAAK;cAC5D,CAAC,oBAAoB,OAAO,iBAAiB,OAAO,KAAK;cACzD,CAAC,qBAAqB,QAAW,iBAAiB,KAAK;cACvD,CAAC,gCAAgC,OAAO,eAAe;cACvD,CAAC,gCAAgC,OAAO,iBAAiB,QAAQ;cACjE,CAAC,+BAA+B,UAAU,iBAAiB,KAAK;cAChE;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA;gBACE;gBACA;gBACA;kBACE;kBACA,IAAIA,MAAK,MAAM,eAAe;oBAC5B,WAAW;oBACX,YAAY,wBAACK,OAAM,aAAaA,MAAK,CAAC,GAA1B;kBACd,CAAC;kBACD;gBACF;cACF;cACA,CAAC,wBAAwB,OAAO,YAAY,KAAK;cAEjD,CAAC,mBAAmB,OAAO,UAAU;cACrC,CAAC,0BAA0B,OAAO,eAAe;cACjD,CAAC,4BAA4B,OAAO,YAAY,KAAK,GAAG;cACxD,CAAC,uBAAuB,KAAK,iBAAiB,KAAK;cACnD,CAAC,wBAAwB,OAAO,iBAAiB,KAAK;cACtD,CAAC,wBAAwB,OAAO,eAAe;cAC/C,CAAC,2BAA2B,UAAU,iBAAiB,KAAK;cAC5D,CAAC,yBAAyB,OAAO,iBAAiB,KAAK;cACvD,CAAC,sBAAsB,OAAO,iBAAiB,KAAK;cACpD,CAAC,uBAAuB,UAAU,iBAAiB,KAAK;cACxD,CAAC,uBAAuB,UAAU,iBAAiB,KAAK;cACxD,CAAC,uBAAuB,OAAO,iBAAiB,KAAK;cACrD,CAAC,wBAAwB,kBAAkB,iBAAiB,KAAK;cACjE;gBACE;gBACA;gBACA;kBACE;kBACA,IAAIL,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX,YAAY,wBAACK,UAASA,MAAK,CAAC,GAAhB;kBACd,CAAC;kBACD;gBACF;cACF;cACA,CAAC,6BAA6B,UAAU,KAAK;cAC7C,CAAC,8BAA8B,OAAO,QAAQ;cAC9C,CAAC,oBAAoB,OAAO,iBAAiB;cAC7C,CAAC,6BAA6B,YAAY,kBAAkB;cAE5D,CAAC,sBAAsB,OAAO,eAAe;cAC7C,CAAC,uBAAuB,UAAU,YAAY,QAAQ;cACtD,CAAC,qBAAqB,YAAY,eAAe;cACjD,CAAC,mBAAmB,UAAU,YAAY,KAAK;cAC/C,CAAC,uBAAuB,OAAO,YAAY,QAAQ;cACnD,CAAC,qBAAqB,OAAO,YAAY,OAAO,KAAK,KAAK,KAAK;cAC/D,CAAC,mBAAmB,OAAO,UAAU;cACrC,CAAC,kBAAkB,UAAU,UAAU;cACvC,CAAC,wBAAwB,OAAO,UAAU;cAC1C,CAAC,kBAAkB,UAAU,KAAK;cAClC;gBACE;gBACA;gBACA;kBACE;kBACA;kBACA,IAAIL,MAAK,MAAM,eAAe;oBAC5B,WAAW;oBACX,WAAW;oBACX,WAAW,wBAAC,aAAa;AACvB,0BAAI;AACJ,6BAAO,CAAC,OAAO,OAAO,UAAU,cAAc;AAC5C,4BAAI;AACF,gCAAM,QAAQA,MAAK,UAAU,OAAO,QAAQ;AAC5C,8BAAI,CAAC,OAAQ,UAASA,MAAK,UAAU,OAAO,SAAS;AACrD,iCAAO,SAAS,OAAO,MAAM,IAAI;wBACnC,SAASvD,IAAG;AACV,iCAAOA,GAAE,cAAc,KAAK;wBAC9B;sBACF;oBACF,GAXW;kBAYb,CAAC;kBACD;kBACA;gBACF;cACF;cACA,CAAC,wBAAwB,UAAU,eAAe;cAClD,CAAC,4BAA4B,OAAO,UAAU;cAC9C,CAAC,iCAAiC,OAAO,YAAY,KAAK;cAC1D,CAAC,wBAAwB,OAAO,YAAY,UAAU,OAAO,GAAG;cAChE,CAAC,oBAAoB,OAAO,eAAe;cAC3C,CAAC,gBAAgB,QAAW,GAAG;cAC/B,CAAC,0BAA0B,OAAO,UAAU;cAC5C,CAAC,uBAAuB,KAAK,oBAAoB,KAAK;cACtD,CAAC,sBAAsB,MAAS;cAChC,CAAC,qBAAqB,QAAW,UAAU;cAC3C,CAAC,0BAA0B,OAAO,UAAU;cAC5C,CAAC,yBAAyB,KAAK;cAC/B,CAAC,wBAAwB,OAAO,CAAC,OAAO,MAAM,GAAG,CAAC;cAClD,CAAC,yBAAyB,OAAO,CAAC,UAAU,KAAK,CAAC;cAClD,CAAC,sBAAsB,QAAQ;cAC/B,CAAC,6BAA6B,KAAK;cACnC,CAAC,iBAAiB,OAAO,CAAC,YAAY,OAAO,KAAK,CAAC;cACnD,CAAC,kBAAkB,KAAK,KAAK;cAC7B,CAAC,gBAAgB,OAAO,UAAU,GAAG;cACrC,CAAC,mBAAmB,OAAO,UAAU,KAAK,OAAO,QAAQ;cAEzD,CAAC,mBAAmB,KAAK,KAAK,KAAK;cACnC,CAAC,iBAAiB,OAAO,eAAe;cAExC;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,CAAC,yBAAyB,QAAW,oBAAoB,KAAK;cAC9D;gBACE;gBACA;gBACA;gBACA;gBACA;cACF;cACA,CAAC,6BAA6B,QAAW,oBAAoB,KAAK;cAClE,CAAC,8BAA8B,QAAW,kBAAkB;cAC5D,CAAC,+BAA+B,QAAW,kBAAkB;cAC7D,CAAC,sBAAsB,QAAW,oBAAoB,KAAK;cAC3D,CAAC,uBAAuB,QAAW,kBAAkB;cACrD;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,CAAC,0BAA0B,QAAW,kBAAkB,KAAK;cAC7D;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,CAAC,2BAA2B,QAAW,oBAAoB,KAAK;cAChE;gBACE;gBACA;gBACA;kBACE;kBACA,IAAIuD,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX,YAAY,wBAACK,UAASA,MAAK,CAAC,GAAhB;kBACd,CAAC;kBACD;gBACF;cACF;cAEA;gBACE;gBACA;gBACA;kBACE;kBACA;kBACA;kBACA,OACI,MACA,IAAIL,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX,YAAY,wBAACK,OAAM,aAAaA,MAAK,CAAC,GAA1B;kBACd,CAAC;gBACP;cACF;cACA,CAAC,oBAAoB,MAAS;cAC9B,CAAC,oBAAoB,QAAQ;cAC7B,CAAC,eAAe,UAAU,eAAe;cACzC,CAAC,kBAAkB,OAAO,OAAO,KAAK,KAAK,KAAK;cAChD,CAAC,gBAAgB,OAAO,eAAe;cACvC,CAAC,qBAAqB,OAAO,eAAe;cAC5C,CAAC,yBAAyB,OAAO,eAAe;cAChD,CAAC,uBAAuB,OAAO,iBAAiB,OAAO,KAAK;cAC5D,CAAC,mBAAmB,OAAO,UAAU,QAAQ;cAC7C,CAAC,mBAAmB,OAAO,UAAU,QAAQ;cAC7C,CAAC,mBAAmB,OAAO,UAAU,UAAU,KAAK;cACpD,CAAC,oBAAoB,OAAO,UAAU,UAAU,KAAK;cACrD;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,CAAC,yBAAyB,OAAO,UAAU;cAC3C;gBACE;gBACA;gBACA;kBACE;kBACA;kBACA,IAAIL,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX,YAAY,wBAACK,OAAM,aAAaA,MAAK,CAAC,GAA1B;kBACd,CAAC;kBACD;gBACF;cACF;cACA,CAAC,qBAAqB,OAAO,CAAC,YAAY,QAAQ,CAAC;cAEnD,CAAC,uBAAuB,OAAO,oBAAoB,UAAU,KAAK;cAClE,CAAC,mBAAmB,UAAU,oBAAoB,KAAK;cACvD,CAAC,yBAAyB,UAAU,oBAAoB,QAAQ;cAChE,CAAC,qBAAqB,SAAS,kBAAkB;cACjD,CAAC,sBAAsB,KAAK,gBAAgB;cAC5C,CAAC,uBAAuB,OAAO,gBAAgB;cAC/C,CAAC,wBAAwB,OAAO,gBAAgB;cAChD,CAAC,qBAAqB,kBAAkB,gBAAgB;cACxD,CAAC,sBAAsB,QAAW,gBAAgB;cAClD,CAAC,0BAA0B,OAAO,gBAAgB;cAClD,CAAC,qBAAqB,OAAO,gBAAgB;cAC7C,CAAC,0BAA0B,OAAO,gBAAgB;cAClD,CAAC,8BAA8B,OAAO,gBAAgB;cACtD,CAAC,yBAAyB,KAAK,kBAAkB,eAAe;cAChE,CAAC,yBAAyB,OAAO,gBAAgB;cACjD,CAAC,sBAAsB,UAAU,gBAAgB;cACjD,CAAC,sBAAsB,OAAO,gBAAgB;cAC9C,CAAC,oBAAoB,KAAK,QAAQ;cAClC,CAAC,wBAAwB,OAAO,gBAAgB,KAAK;cACrD,CAAC,0BAA0B,OAAO,cAAc;YAClD;AAEA,gBAAI,CAAC,CAACL,MAAK,QAAQ,0BAA0B;AAC3C,cAAAA,MAAK,kBAAkB,KAAK;gBAC1B;gBACA;gBACA;kBACE;kBACA;kBACA,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX,WAAW;oBACX,YAAY,wBAACK,OAAM,aAAaA,MAAK,CAAC,GAA1B;kBACd,CAAC;kBACD;gBACF;cACF,CAAC;YACH;AAEA,gBAAI,CAAC,CAACL,MAAK,QAAQ,sBAAsB;AACvC,cAAAA,MAAK,kBAAkB;gBACrB,CAAC,wBAAwB,OAAO,iBAAiB,KAAK;gBACtD,CAAC,0BAA0B,OAAO,eAAe;cACnD;YACF;AAEA,gBAAI,CAAC,CAACA,MAAK,QAAQ,wBAAwB;AACzC,cAAAA,MAAK,kBAAkB,KAAK;gBAC1B;gBACA;gBACA;kBACE;kBACA,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX,YAAY,wBAACK,OAAM,aAAaA,MAAK,CAAC,GAA1B;oBACZ,WAAW,wBAAC,aAAa;AACvB,6BAAO,CAAC,IAAI,OAAO,IAAI,IAAIQ,KAAI,OAAO;AACpC,4BAAI;AACF,+BAAK,MAAMb,MAAK,SAAS,EAAE;AAC3B,+BAAK,MAAMA,MAAK,SAAS,EAAE;AAC3Ba,gCAAKA,OAAMb,MAAK,SAASa,GAAE;AAC3B,+BAAK,MAAMb,MAAK,SAAS,EAAE;AAC3B,iCAAO,SAAS,IAAI,OAAO,IAAI,IAAIa,KAAI,EAAE,KAAK;wBAChD,SAASpE,IAAG;AACV,iCAAOA,GAAE,cAAc,KAAK;wBAC9B;sBACF;oBACF,GAZW;kBAab,CAAC;kBACD;gBACF;cACF,CAAC;YACH;AAEA,gBAAI,OAA4D;AAC9D,cAAAuD,MAAK,kBAAkB,KAAK;gBAC1B;gBACA;gBACA;cACF,CAAC;YACH;AAEA,YAAAA,MAAK,kBAAkB,QAAQ;cAC7B,CAAC,sBAAsB,OAAO,CAAC,iBAAiB,OAAO,KAAK,CAAC;cAC7D,CAAC,qBAAqB,OAAO,CAAC,UAAU,CAAC;cACzC,CAAC,wBAAwB,OAAO,CAAC,iBAAiB,KAAK,CAAC;cACxD;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,CAAC,6BAA6B,OAAO,CAAC,UAAU,CAAC;cACjD,CAAC,oBAAoB,KAAK,KAAK;cAC/B,CAAC,iBAAiB,OAAO,GAAG;cAC5B,CAAC,6BAA6B,OAAO,CAAC,YAAY,UAAU,KAAK,CAAC;cAClE,CAAC,qBAAqB,KAAK,KAAK,KAAK;cACrC,CAAC,wBAAwB,QAAW,KAAK,KAAK;cAC9C,CAAC,6BAA6B,OAAO,KAAK,KAAK;cAC/C,CAAC,qBAAqB,KAAK,YAAY,UAAU,KAAK,KAAK;cAC3D,CAAC,iCAAiC,QAAW,CAAC,YAAY,KAAK,CAAC;cAChE,CAAC,oBAAoB,OAAO,OAAO,KAAK,KAAK,KAAK;cAClD,CAAC,2BAA2B,OAAO,CAAC,UAAU,CAAC;cAC/C;gBACE;gBACA;gBACA;kBACE;kBACA,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX,YAAY,wBAACK,UAASA,MAAK,CAAC,GAAhB;oBACZ,WAAW,wBAAC,aAAa;AACvB,6BAAO,CAAC,GAAG,IAAI,IAAI,IAAI,UAAU;AAC/B;0BACE;0BACA;0BACAL,MAAK,SAAS,EAAE;0BAChBA,MAAK,SAAS,EAAE;0BAChB;wBACF;sBACF;oBACF,GAVW;kBAWb,CAAC;kBACD;gBACF;cACF;cACA,CAAC,qBAAqB,OAAO,CAAC,oBAAoB,UAAU,KAAK,CAAC;cAClE,CAAC,uBAAuB,OAAO,gBAAgB;YACjD;AAEA,gBAAIA,MAAK,iBAAiB,CAAC,CAACA,MAAK,QAAQ,sBAAsB;AAC7D,cAAAA,MAAK,kBAAkB,MAAM;gBAC3B;kBACE;kBACA;kBACA,CAAC,YAAY,UAAU,mBAAmB,GAAG;gBAC/C;gBACA;kBACE;kBACA;kBACA,CAAC,YAAY,UAAU,mBAAmB,KAAK,GAAG;gBACpD;gBACA,CAAC,wBAAwB,OAAO,CAAC,YAAY,iBAAiB,CAAC;gBAC/D,CAAC,wBAAwB,OAAO,CAAC,YAAY,IAAI,CAAC;gBAClD,CAAC,0BAA0B,UAAU,uBAAuB,KAAK;gBACjE,CAAC,yBAAyB,OAAO,qBAAqB;gBACtD,CAAC,mBAAmB,OAAO,uBAAuB,OAAO,KAAK;gBAC9D,CAAC,yBAAyB,OAAO,kBAAkB,IAAI;gBACvD,CAAC,wBAAwB,OAAO,kBAAkB,IAAI;gBAEtD,CAAC,yBAAyB,OAAO,kBAAkB;gBACnD,CAAC,4BAA4B,OAAO,UAAU;gBAC9C;kBACE;kBACA;kBACA;kBACA;kBACA;gBACF;cACF;YACF;AAEA,gBAAIA,MAAK,iBAAiB,CAAC,CAACA,MAAK,QAAQ,wBAAwB;AAC/D,cAAAA,MAAK,kBAAkB,MAAM;gBAC3B,CAAC,+BAA+B,OAAO,UAAU;gBACjD,CAAC,2BAA2B,OAAO,UAAU;gBAC7C,CAAC,2BAA2B,OAAO,UAAU;gBAC7C;kBACE;kBACA;kBACA;oBACE;oBACA,IAAIA,MAAK,MAAM,eAAe;sBAC5B,MAAM;sBACN,WAAW;sBACX,YAAY,wBAACK,UAASA,MAAK,CAAC,GAAhB;sBACZ,WAAW,wBAAC,aAAa;AACvB,+BAAO,CAAC,GAAG,IAAI,IAAI,KAAK,MAAM,OAAO,UAAU;AAC7C;4BACE;4BACA;4BACA;4BACAL,MAAK,SAAS,GAAG;4BACjBA,MAAK,SAAS,IAAI;4BAClB;4BACA;0BACF;wBACF;sBACF,GAZW;oBAab,CAAC;oBACD;kBACF;gBACF;gBACA,CAAC,yBAAyB,OAAO,CAAC,YAAY,OAAO,IAAI,CAAC;gBAC1D,CAAC,yBAAyB,OAAO,CAAC,YAAY,OAAO,IAAI,CAAC;cAC5D;YACF;AAEA,gBACEA,MAAK,iBACL,CAAC,CAACA,MAAK,QAAQ,0BACf,CAAC,CAACA,MAAK,QAAQ,yBACf,CAAC,CAACA,MAAK,QAAQ,wBACf;AACA,oBAAM,aAAa;gBACjB,WAAW;gBACX,WAAW,wBAAC,aAAa;AACvB,yBAAO,CAAC,GAAGE,OAAM;AACf,wBAAI;AACF,6BAAO,SAAS,GAAGF,MAAK,SAASE,EAAC,CAAC,IAAI;oBACzC,SAASzD,IAAG;AACV,6BAAOA,GAAE,cAAc,KAAK;oBAC9B;kBACF;gBACF,GARW;cASb;AAEA,cAAAuD,MAAK,kBAAkB,MAAM;gBAC3B,GAAG;kBACD;oBACE;oBACA;oBACA,CAAC,wBAAwB,OAAO,OAAO;kBACzC;kBACA;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA,CAAC,sBAAsB;kBACzB;kBACA,CAAC,0BAA0B,OAAO,CAAC,IAAI,CAAC;kBACxC;oBACE;oBACA;oBACA,CAAC,wBAAwB,QAAQ,IAAI;kBACvC;kBACA;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA;sBACE;sBACA;sBACA;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,GAAG;sBACL,CAAC;sBACD,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,GAAG;sBACL,CAAC;sBACD,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA;sBACE;sBACA;sBACA;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,GAAG;sBACL,CAAC;sBACD,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;sBACA;sBACA;sBACA;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,GAAG;sBACL,CAAC;sBACD,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;sBACA;sBACA;sBACA;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA,CAAC,OAAO,SAAS,OAAO,SAAS,QAAQ,IAAI;kBAC/C;kBACA;oBACE;oBACA;oBACA;sBACE,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA,CAAC,2BAA2B,OAAO,IAAI;kBACzC;kBACA,CAAC,6BAA6B,OAAO,CAAC,yBAAyB,CAAC;kBAChE;oBACE;oBACA;oBACA,CAAC,2BAA2B,MAAM;kBACpC;kBACA;oBACE;oBACA;oBACA,CAAC,OAAO,SAAS,QAAQ,IAAI;kBAC/B;kBACA;oBACE;oBACA;oBACA;sBACE,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA,CAAC,2BAA2B,OAAO,IAAI;kBACzC;kBACA,CAAC,yBAAyB,OAAO,CAAC,yBAAyB,CAAC;kBAC5D;oBACE;oBACA;oBACA,CAAC,2BAA2B,OAAO,IAAI;kBACzC;kBACA;oBACE;oBACA;oBACA,CAAC,2BAA2B,MAAM,QAAQ,QAAQ,MAAM;kBAC1D;kBACA;oBACE;oBACA;oBACA,CAAC,2BAA2B,MAAM,MAAM;kBAC1C;kBACA,CAAC,0BAA0B,OAAO,CAAC,MAAM,OAAO,GAAG,CAAC;kBACpD;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA,CAAC,6BAA6B,OAAO,CAAC,MAAM,OAAO,KAAK,KAAK,CAAC;kBAC9D;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;sBACA;oBACF;kBACF;kBACA,CAAC,yBAAyB,OAAO,CAAC,oBAAoB,QAAQ,CAAC;kBAC/D;oBACE;oBACA;oBACA,CAAC,oBAAoB,QAAQ,IAAI;kBACnC;kBACA,CAAC,iCAAiC,OAAO,CAAC,kBAAkB,CAAC;kBAC7D;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA,CAAC,yBAAyB,OAAO,CAAC,OAAO,OAAO,CAAC;kBACjD,CAAC,yBAAyB,OAAO,CAAC,YAAY,UAAU,IAAI,CAAC;kBAE7D;oBACE;oBACA;oBACA,CAAC,oBAAoB,UAAU,UAAU,IAAI;kBAC/C;kBACA,CAAC,yBAAyB,OAAO,CAAC,oBAAoB,KAAK,CAAC;kBAC5D,CAAC,2BAA2B,OAAO,CAAC,oBAAoB,KAAK,CAAC;kBAC9D,CAAC,0BAA0B,OAAO,CAAC,kBAAkB,CAAC;kBACtD,CAAC,8BAA8B,OAAO,CAAC,kBAAkB,CAAC;kBAC1D;oBACE;oBACA;oBACA,CAAC,oBAAoB,OAAO,OAAO;kBACrC;kBACA;oBACE;oBACA;oBACA,CAAC,oBAAoB,KAAK,IAAI;kBAChC;kBACA;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,WAAW;wBACX,WAAW;sBACb,CAAC;sBACD;oBACF;kBACF;kBACA;oBACE;oBACA;oBACA;sBACE;sBACA,IAAIA,MAAK,MAAM,eAAe;wBAC5B,MAAM;wBACN,GAAG;wBACH,YAAY,wBAACK,OAAM,aAAaA,MAAK,CAAC,GAA1B;sBACd,CAAC;sBACD;oBACF;kBACF;gBACF;cACF;YACF;AAEA,YAAAL,MAAK,kBAAkB,eAAe;cACpC,CAAC,0BAA0B,OAAO,UAAU;cAC5C,CAAC,wBAAwB,gBAAgB,YAAY,QAAQ;cAC7D;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,CAAC,mCAAmC,OAAO,UAAU,KAAK,KAAK;cAC/D,CAAC,4BAA4B,OAAO,gBAAgB,QAAQ;cAC5D,CAAC,4BAA4B,kBAAkB,UAAU,KAAK;YAChE;AAEA,oBAAQ,eAAe,WAAW,UAAU;cAC1C,MAAM,IAAIA,MAAK,SAASA,MAAK;cAC7B,OAAOA,MAAK;cACZ,SAASA,MAAK;cACd,eAAeA,MAAK;cACpB,cAAc;YAChB,CAAC;AACD,mBAAO,WAAW;AAElB;AACE,oBAAM,YAAYA,MAAK,MAAM,WAAW,QAAQ;AAChD,cAAAA,MAAK,MAAM;gBAAW;gBAAmB,CAACzD,OACxC,UAAU,KAAK,eAAeA,EAAC,CAAC;cAClC;AAEA,cAAAyD,MAAK,MAAM;gBACT;gBACA,SAAUzD,IAAG;AACX,sBAAIyD,MAAK,MAAMzD,EAAC,EAAG,QAAOA;AAC1BA,uBAAI,KAAKA;AACT,sBAAI,KAAK,KAAKA,EAAC;AACf,yBAAO,OAAO,KAAKA,EAAC,IAAIyD,MAAK,aAAazD,EAAC;gBAC7C,EAAE,KAAK,uBAAO,OAAO,IAAI,CAAC;cAC5B;AAEA,oBAAM,YAAYyD,MAAK,MAAM,WAAW,GAAG;AAC3C,oBAAM,UAAU,kCAAY;cAAC,GAAb;AAChB,cAAAA,MAAK,MAAM,WAAW,oBAAoB,SAAS;gBACjD;gBACA;cACF,EAAE,kBAAkB,SAAS,EAAE,SAAS,SAAS;gBAC/C;gBACA;cACF,EAAE,2BAA2B,SAAS;gBACpC;gBACA;cACF;gBAAE;gBAAiB,CAACzD,OAClB;kBACEA,eAAc,SAAS,KAAK,QAAQ,WAAWA,GAAE,UAAUA;gBAC7D;cACF;gBAAE;gBAAY,CAACA,OACb;kBACEA,eAAc,SAAS,KAAK,MAAM,WAAWA,GAAE,UAAUA;gBAC3D;cACF,EAAE,gBAAgB,CAACA,OAAM;AACvB,oBAAI,aAAa,OAAOA,IAAG;AACzB,yBACE,KAAK,iBAAiBA,EAAC,KACvB,QAAQ,aAAa;oBACnB,KAAK;oBACL;oBACAA;kBACF;gBAEJ;AACA,uBAAO;kBACLA,eAAc,KAAK,eAAe,WAAWA,GAAE,UAAUA;gBAC3D;cACF,CAAC;AACD,kBAAIyD,MAAK,QAAQ,sBAAsB;AACrC,gBAAAA,MAAK,MAAM;kBAAW;kBAAuB,CAACzD,OAC5C;oBACEA,eAAc,KAAK,sBAAsB,WACrCA,GAAE,UACFA;kBACN;gBACF;kBAAE;kBAAmB,CAACA,OACpB;oBACEA,eAAc,KAAK,kBAAkB,WAAWA,GAAE,UAAUA;kBAC9D;gBACF;cACF;AAEA,oBAAM,WAAWyD,MAAK,MAAM,cAAc,GAAG;AAC7C,cAAAA,MAAK,MAAM,cAAc,YAAY,QAAQ;gBAC3C;gBACA;cACF,EAAE,iBAAiB,QAAQ,EAAE,kBAAkB,QAAQ;gBACrD;gBACA;cACF,EAAE,SAAS,QAAQ;AAEnB,kBAAI,MAAMA,MAAK,QAAQ,aAAa,QAAQ;AAC1C,gBAAAA,MAAK,MAAM,cAAc;AACzB,wBAAQ,OAAO;kBACb;gBACF;cACF;AACA,yBAAWvD,MAAKuD,MAAK,mBAAmB;AACtC,qBAAKvD,GAAE,CAAC,CAAC,IAAIuD,MAAK,MAAM,MAAM,MAAMvD,EAAC;cACvC;AACA,yBAAWA,MAAKuD,MAAK,kBAAkB,cAAc;AACnD,qBAAKvD,GAAE,CAAC,CAAC,IAAIuD,MAAK,MAAM,MAAM,MAAMvD,EAAC;cACvC;AAEA,oBAAM,eAAe,gCAAU,OAAO;AACpC,uBAAO,MACL;kBACE,QAAQ;kBACR;gBACF;cACJ,GANqB;AAOrB,yBAAWA,MAAKuD,MAAK,kBAAkB,OAAO;AAC5C,qBAAKvD,GAAE,CAAC,CAAC,IAAIuD,MAAK,gBACdA,MAAK,MAAM,MAAM,MAAMvD,EAAC,IACxB,aAAaA,GAAE,CAAC,CAAC;cACvB;AAEA,qBAAOuD,MAAK;AAEZ,kBAAIA,MAAK,QAAQ,wBAAwB;AACvC,sBAAM,WAAWA,MAAK;kBACpB;kBACA;kBACA;kBACA;kBACA;gBACF;AAEA,qBAAK,yBAAyB,SAAUC,MAAK,YAAY,SAAS;AAChE,sBAAI,sBAAsB,QAAQ,gBAAgB;AAChD,iCAAa,KAAK;AAClB,8BAAU;kBACZ,WAAW,sBAAsB,OAAO;AACtC,8BAAU,WAAW,KAAK;AAC1B,iCAAa,WAAW,cAAc,KAAK;kBAC7C;AACA,yBAAOA,OAAM,SAASA,MAAK,YAAY,OAAO,IAAI;gBACpD;cACF,OAAO;AACL,qBAAK,yBAAyB,SAAUA,MAAK,SAAS,KAAK;AACzD,0BAAQ;oBACN;oBACA;kBACF;AACA,yBAAO;gBACT;cACF;YACF;AAEA;AACE,oBAAM,QAAQD,MAAK,MAAM,yBAAyB;AAClD,kBAAI,CAAC,OAAO;AACV;kBACE;kBACA;gBACF;cACF;AAEA,cAAAA,MAAK,QAAQ,KAAK,MAAMA,MAAK,SAAS,KAAK,CAAC;AAE5C,oBAAM,eAAe;gBACnB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;AACA,kBAAIA,MAAK,eAAe;AACtB,6BAAa,KAAK,aAAa,WAAW,MAAM;cAClD;AACA,yBAAWtD,MAAK,cAAc;AAC5B,2BAAWD,MAAK,OAAO,QAAQuD,MAAK,MAAMtD,EAAC,CAAC,GAAG;AAC7C,uBAAKD,GAAE,CAAC,CAAC,IAAIA,GAAE,CAAC;gBAClB;cACF;AACA,kBAAI,CAACuD,MAAK,cAAc,KAAK,mBAAmB,GAAG;AACjD;kBACE;kBACA,kCAAkC,KAAK,sBAAsB;gBAC/D;cACF;AACA,oBAAM,UAAU,uBAAO,OAAO,IAAI;AAClC,yBAAWtD,MAAK,CAAC,aAAa,GAAG;AAC/B,2BAAWD,MAAK,OAAO,QAAQuD,MAAK,MAAMtD,EAAC,CAAC,GAAG;AAC7C,0BAAQD,GAAE,CAAC,CAAC,IAAIA,GAAE,CAAC;gBACrB;cACF;AAEA,mBAAK,oBAAoB,CAAC,OAAO,QAAQ,EAAE;AAE3C,oBAAM,WAAW,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;gBAClD,gBAAgB;gBAEhB,uBAAuB,CAAC,KAAK,WAAW;gBAExC,oBAAoB,CAACuD,MAAK;gBAC1B,0BAA0B,CAACA,MAAK;gBAChC,uBAAuB,CAACA,MAAK;gBAC7B,gCAAgC,CAACA,MAAK;cACxC,CAAC;AACD,yBAAWE,MAAKF,MAAK,MAAM,SAAS;AAClC,oBAAI,CAAC,SAASE,GAAE,IAAI,GAAG;AACrB,uBAAKA,GAAE,IAAI,IAAI,QAAQ,aAAaA,EAAC;gBACvC;cACF;AACA,kBAAI,KAAK,oBAAoB;AAC3B,2BAAW,KAAK;kBACd;kBACA;kBACA;gBACF,GAAG;AACD,uBAAK,mBAAmB,CAAC,IAAI,KAAK,CAAC;AACnC,yBAAO,KAAK,CAAC;gBACf;AACA,qBAAK,sBAAsBF,MAAK;kBAC9B;kBACA;kBACA,CAAC,YAAY,OAAO,KAAK;gBAC3B;cACF;YACF;AAEA,kBAAM,mBAAmB,wBAACC,MAAK,GAAGtD,OAAM;AACtC,qBAAO,KAAK;gBACVsD;gBACA,KAAK;gBACL,IAAI,iBAAiBtD,KAAI,eAAe,MAAMA,KAAI,KAAK,OAAO;cAChE;YACF,GANyB;AAQzB,kBAAM,gBAAgB,wBAACsD,SAAQ;AAC7B,qBAAO,KAAK;gBACVA;gBACA,KAAK;gBACL;cACF;YACF,GANsB;AAQtB,kBAAM,WAAW,wBAACA,SAAQD,MAAK,MAAM,WAAW,UAAU,EAAEC,IAAG,GAA9C;AACjB,kBAAM,WAAW,wBAAC,QAASD,MAAK,MAAM,GAAG,IAAIA,MAAK,SAAS,GAAG,IAAI,KAAjD;AACjB,kBAAM,iBAAiB,SAAUC,MAAK,MAAM;AAC1CA,qBAAM,SAASA,IAAG;AAClB,kBAAI,IAAI,KAAK,MAAM,IAAIA,IAAG;AAC1B,kBAAI,CAAC,MAAM;AACT,qBAAK,MAAM,OAAOA,IAAG;AACrB,uBAAO;cACT,WAAW,CAAC,KAAK,OAAO,GAAG;AACzB,qBAAK,MAAM,IAAIA,MAAM,IAAI,uBAAO,OAAO,IAAI,CAAE;cAC/C;AACA,qBAAO;YACT,EAAE;cACA,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;gBACjC,OAAO,oBAAI,IAAI;cACjB,CAAC;YACH;AAEA,2BAAe,eAAe,SAAUA,MAAK,MAAM;AACjD,oBAAM,IAAI,eAAeA,MAAK,CAAC;AAC/B,kBAAI,CAAC,EAAE,UAAW,GAAE,YAAY,oBAAI,IAAI;AACxC,gBAAE,UAAU,IAAI,SAAS,IAAI,EAAE,YAAY,CAAC;YAC9C;AAEA,2BAAe,UAAU,SAAUA,MAAK,MAAM,OAAO,KAAK;AACxD,qBAAO,SAAS,IAAI,EAAE,YAAY;AAClC,kBAAI,IAAI,IAAI,IAAI,IAAI;AACpB,kBAAI,CAAC,EAAG,KAAI,IAAI,MAAO,IAAI,oBAAI,IAAI,CAAE;AACrC,gBAAE,IAAI,QAAQ,IAAI,KAAK,KAAK;YAC9B;AAEA,2BAAe,cAAc,SAAUA,MAAK,MAAM,OAAO;AACvD,oBAAM,IAAI,eAAeA,MAAK,CAAC;AAC/B,kBAAI,CAAC,EAAE,IAAK,GAAE,MAAM,oBAAI,IAAI;AAC5B,mBAAK,QAAQA,MAAK,MAAM,OAAO,EAAE,GAAG;YACtC;AAEA,gBAAID,MAAK,QAAQ,gCAAgC;AAC/C,6BAAe,gBAAgB,SAAUC,MAAK,MAAM,OAAO;AACzD,sBAAM,IAAI,eAAeA,MAAK,CAAC;AAC/B,oBAAI,CAAC,EAAE,KAAM,GAAE,OAAO,oBAAI,IAAI;AAC9B,qBAAK,QAAQA,MAAK,MAAM,OAAO,EAAE,IAAI;cACvC;YACF;AAEA,2BAAe,UAAU,SAAUA,MAAK;AACtCA,qBAAM,SAASA,IAAG;AAElB,oBAAM,YAAY,CAACA,IAAG;AACtB,yBAAW,QAAQ;gBACjB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF,GAAG;AACD,sBAAM,IAAID,MAAK,QAAQ,IAAI;AAC3B,oBAAI,CAAC,GAAG;AACN;gBACF;AACA,0BAAU,SAAS,EAAE;AACrB,oBAAI;AACF,uBAAK,IAAI,EAAE,GAAG,SAAS;gBACzB,SAASvD,IAAG;AACV,0BAAQ,OAAO;oBACb;oBACA,OAAO;oBACP;oBACA;oBACAA;kBACF;gBACF;cACF;AACA,oBAAM,IAAI,eAAewD,MAAK,CAAC;AAC/B,kBAAI,CAAC,EAAG;AACR,kBAAI,EAAE,WAAW;AACf,2BAAW,QAAQ,EAAE,WAAW;AAC9B,sBAAI;AACF,yBAAK;sBACHA;sBACA;sBACA,KAAK;sBACL;sBACA;sBACA;oBACF;kBACF,SAASxD,IAAG;kBAAC;gBACf;AACA,uBAAO,EAAE;cACX;AACA,kBAAI;AACJ,mBAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,sBAAM,OAAO,IAAI,EAAE,OAAO,EAAE;AAC5B,oBAAI,CAAC,KAAM;AACX,sBAAM,OAAO,IACT,KAAK,iCACL,KAAK;AACT,2BAAWA,MAAK,MAAM;AACpB,wBAAM,OAAOA,GAAE,CAAC,GACd,UAAUA,GAAE,CAAC;AACf,wBAAM,QAAQ,CAACwD,MAAK,MAAM,GAAG,KAAK,aAAa,GAAG,GAAG,GAAG,GAAG,CAAC;AAC5D,sBAAI,EAAG,OAAM,KAAK,CAAC;AACnB,6BAAW,SAAS,SAAS;AAC3B,wBAAI;AACF,4BAAM,CAAC,IAAI;AACX,2BAAK,MAAM,MAAM,KAAK;oBACxB,SAASxD,IAAG;oBAAC;kBACf;AACA,0BAAQ,MAAM;gBAChB;AACA,qBAAK,MAAM;cACb;AACA,qBAAO,EAAE;AACT,qBAAO,EAAE;YACX;AAEA;AACE,oBAAM,mBAAmBuD,MAAK;gBAC5B;gBACA;gBACA;cACF;AACA,mBAAK,mBAAmB,SAAUC,MAAK;AACrC,oBAAI,MAAM,UAAU;AAClB,yBAAO,iBAAiBA,MAAK,oBAAoB,CAAC;AACpD,oBAAIA,MAAK;AACP,sBAAI;AACF,mCAAe,QAAQA,IAAG;kBAC5B,SAASxD,IAAG;kBAAC;gBACf;AACA,uBAAO,iBAAiBwD,IAAG;cAC7B;YACF;AAEA,gBAAI,KAAK,uBAAuB;AAC9B,oBAAM,yBAAyBD,MAAK;gBAClC;gBACA;gBACA,CAAC,kBAAkB;cACrB;AACA,mBAAK,wBAAwB,SAAU,UAAU;AAC/C,oBAAI,MAAM,UAAU,QAAQ;AAC1B,yBAAO,iBAAiB,KAAK,yBAAyB,CAAC;gBACzD,WAAW,UAAU;AACnB,uBAAK,4BAA4B,UAAU,GAAG,CAAC;gBACjD;AACA,uCAAuB,QAAQ;cACjC;YACF;AAEA;AACE,oBAAM,aAAa,wBAACK,OAAM,aAAa;AACrC,uBACE,UACA,WACA,OACAA,MAAK,CAAC,IACN,MACAL,MAAK,SAASK,MAAK,CAAC,CAAC,EAAE,YAAY;cAEvC,GATmB;AAUnB,oBAAM,6BAA6BL,MAAK;gBACtC;gBACA;gBACA;kBACE;kBACA;kBACA;kBACA;kBACA,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX;kBACF,CAAC;kBACD,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,WAAW;oBACX;kBACF,CAAC;gBACH;cACF;AAEA,mBAAK,8BAA8B,SACjCC,MACA,OACA,UACA,MACA,UACA,UACA;AACA,oBAAI,MAAM,UAAU;AAClB,yBAAO,iBAAiBA,MAAK,+BAA+B,CAAC;yBACtD,OAAO,WAAW,KAAM;AAC/B,8BAAY,KAAK;gBACnB,WAAW,KAAK,iBAAiB,WAAW,KAAM;AAChD,yBAAO,cAAcA,IAAG;gBAC1B;AACA,oBAAI;AACF,wBAAM,KAAK;oBACTA;oBACA;oBACA;oBACA;oBACA;oBACA;kBACF;AACA,sBAAI,MAAM,MAAM,oBAAoB,UAAU;AAC5C,mCAAe,aAAaA,MAAK,KAAK;kBACxC;AACA,yBAAO;gBACT,SAASxD,IAAG;AACV,yBAAO,KAAK,uBAAuBwD,MAAKxD,EAAC;gBAC3C;cACF;AAEA,mBAAK,2BAA2B,CAC9BwD,MACA,OACA,UACA,MACA,aACG;AACH,uBAAO,MAAM,UAAU,SACnB,KAAK;kBACHA;kBACA;kBACA;kBACA;kBACA;kBACA;gBACF,IACA,iBAAiBA,MAAK,4BAA4B,CAAC;cACzD;YACF;AAEA;AACE,oBAAM,aAAa,gCAAUI,OAAM,UAAU;AAC3C,uBACEA,MAAK,CAAC,IACN,OACCA,MAAK,CAAC,IAAI,IAAI,KAAKA,MAAK,CAAC,KAC1B,MACA,WACA,MACAL,MAAK,SAASK,MAAK,CAAC,CAAC,EAAE,YAAY;cAEvC,GAVmB;AAYnB,oBAAM,YAAY,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;gBACnD,iBAAiB;kBACf,WAAW;kBACX;kBACA,WAAW,wBAAC,aAAa;AACvB,2BAAO,CAAC,MAAM,MAAM,UAAU;AAC5B,0BAAI;AACF,iCAAS,MAAM,GAAG,KAAK,qBAAqB,MAAM,KAAK,CAAC;sBAC1D,SAAS5D,IAAG;AACV,6BAAK,wBAAwB,MAAMA,EAAC;sBACtC;oBACF;kBACF,GARW;gBASb;gBACA,gBAAgB;kBACd,WAAW;kBACX;kBACA,WAAW,wBAAC,aAAa;AACvB,2BAAO,CAAC,SAAS;AACf,0BAAI;AACF,6BAAK,kBAAkB,MAAM,SAAS,IAAI,CAAC;sBAC7C,SAASA,IAAG;AACV,6BAAK,wBAAwB,MAAMA,EAAC;sBACtC;oBACF;kBACF,GARW;gBASb;gBACA,OAAO;kBACL,WAAW;kBACX;kBACA,WAAW,wBAAC,aAAa;AACvB,2BAAO,CAAC,MAAM,MAAM,UAAU;AAC5B,0BAAI;AACF,6BAAK;0BACH;0BACA,SAAS,MAAM,GAAG,KAAK,qBAAqB,MAAM,KAAK,CAAC;wBAC1D;sBACF,SAASA,IAAG;AACV,6BAAK,wBAAwB,MAAMA,EAAC;sBACtC;oBACF;kBACF,GAXW;gBAYb;gBACA,UAAU;kBACR,WAAW;kBACX;kBAEA,WAAW,wBAAC,aAAa;AACvB,2BAAO,CAAC,UAAU;AAChB,0BAAI;AACF,iCAAS,KAAK;sBAChB,SAASA,IAAG;AACV,gCAAQ,MAAM,8BAA8BA,EAAC;sBAC/C;oBACF;kBACF,GARW;gBASb;cACF,CAAC;AAED,oBAAM,0BAA0BuD,MAAK;gBACnC;gBACA;gBACA;kBACE;kBACA;kBACA;kBACA;kBACA;kBACA,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,GAAG,UAAU;kBACf,CAAC;kBACD,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,GAAG,UAAU;kBACf,CAAC;kBACD,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,GAAG,UAAU;kBACf,CAAC;kBACD,IAAIA,MAAK,MAAM,eAAe;oBAC5B,MAAM;oBACN,GAAG,UAAU;kBACf,CAAC;gBACH;cACF;AAEA,oBAAM,gCAAgCA,MAAK,QACxC,iCACCA,MAAK,MAAM,kCAAkC,OAAO;gBAClD;gBACA;gBACA;gBACA;gBACA;gBACA,IAAIA,MAAK,MAAM,eAAe;kBAC5B,MAAM;kBACN,GAAG,UAAU;gBACf,CAAC;gBACD,IAAIA,MAAK,MAAM,eAAe;kBAC5B,MAAM;kBACN,GAAG,UAAU;gBACf,CAAC;gBACD,IAAIA,MAAK,MAAM,eAAe;kBAC5B,MAAM;kBACN,GAAG,UAAU;gBACf,CAAC;gBACD,IAAIA,MAAK,MAAM,eAAe;kBAC5B,MAAM;kBACN,GAAG,UAAU;gBACf,CAAC;gBACD,IAAIA,MAAK,MAAM,eAAe;kBAC5B,MAAM;kBACN,GAAG,UAAU;gBACf,CAAC;cACH,CAAC,IACD;AAEJ,mBAAK,6BAA6B,gCAAS,EACzCC,MACA,UACA,MACA,UACA,MACA,OACA,OACA,QACA,UACA;AACA,oBAAI,EAAE,WAAW,UAAU,QAAQ;AACjC,yBAAO;oBACLA;oBACA;oBACA,EAAE;kBACJ;gBACF,WAAW,OAAO,WAAW,KAAM;AACjC,8BAAY,KAAK;gBACnB,WAAW,KAAK,iBAAiB,WAAW,KAAM;AAChD,yBAAO,cAAcA,IAAG;gBAC1B;AACA,oBAAI;AACF,wBAAM,KAAK;oBACTA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;kBACF;AACA,sBACE,MAAM,OACL,iBAAiB,YAChB,iBAAiB,YACjB,kBAAkB,YAClB,oBAAoB,WACtB;AACA,mCAAe,YAAYA,MAAK,UAAU,IAAI;kBAChD;AACA,yBAAO;gBACT,SAASxD,IAAG;AACV,0BAAQ,MAAM,6CAA6CA,EAAC;AAC5D,yBAAO,KAAK;oBACVwD;oBACAxD;oBACA,4BAA4BA;kBAC9B;gBACF;cACF,GApDkC;AAsDlC,mBAAK,0BAA0B,gCAAS,EACtCwD,MACA,UACA,MACA,UACA,MACA,OACA,OACA,QACA;AACA,uBAAO,EAAE,WAAW,UAAU,SAC1B,KAAK;kBACHA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;gBACF,IACA,iBAAiBA,MAAK,2BAA2B,EAAE,MAAM;cAC/D,GAvB+B;AAyB/B,kBAAI,+BAA+B;AACjC,qBAAK,iCAAiC,gCAAS,EAC7CA,MACA,UACA,MACA,UACA,MACA,OACA,QACA,QACA,UACA,UACA;AACA,sBAAI,EAAE,WAAW,UAAU,QAAQ;AACjC,2BAAO;sBACLA;sBACA;sBACA,EAAE;oBACJ;kBACF,WAAW,OAAO,WAAW,KAAM;AACjC,gCAAY,KAAK;kBACnB,WAAW,KAAK,iBAAiB,WAAW,KAAM;AAChD,2BAAO,cAAcA,IAAG;kBAC1B;AACA,sBAAI;AACF,0BAAM,KAAK;sBACTA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;oBACF;AACA,wBACE,MAAM,OACL,iBAAiB,YAChB,kBAAkB,YAClB,kBAAkB,YAClB,oBAAoB,YACpB,oBAAoB,WACtB;AACA,qCAAe,cAAcA,MAAK,UAAU,IAAI;oBAClD;AACA,2BAAO;kBACT,SAASxD,IAAG;AACV,4BAAQ;sBACN;sBACAA;oBACF;AACA,2BAAO,KAAK;sBACVwD;sBACAxD;sBACA,4BAA4BA;oBAC9B;kBACF;gBACF,GA1DsC;cA2DxC,OAAO;AACL,uBAAO,KAAK;cACd;AAEA,mBAAK,2BAA2B,eAC9B,KAAK,wBAAwB,eAAe,KAAK;AACnD,kBAAI,KAAK,gCAAgC;AACvC,qBAAK,+BAA+B,eAClC,KAAK;cACT;AAEA,mBAAK,2BAA2B,iBAC9B,KAAK,wBAAwB,iBAC3B,KAAK;AACT,kBAAI,KAAK,gCAAgC;AACvC,qBAAK,+BAA+B,iBAClC,KAAK;cACT;AAEA,mBAAK,2BAA2B,cAC9B,KAAK,wBAAwB,cAC3B,KAAK;AACT,kBAAI,KAAK,gCAAgC;AACvC,qBAAK,+BAA+B,cAClC,KAAK;cACT;YACF;AAEA;AACE,oBAAM,gBAAgB,wBAACF,IAAGI,OAAM;AAC9B,oBAAI,aAAa,OAAOJ,IAAG;AACzBI,uBAAI;gBACN,WAAW,KAAK,oBAAoBJ,EAAC,GAAG;AACtCI,uBAAIJ,GAAE;AACNA,uBAAI,KAAK;oBACPA,cAAa,cAAc,IAAI,WAAWA,EAAC,IAAIA;kBACjD;gBACF,WAAW,MAAM,QAAQA,EAAC,GAAG;AAC3BA,uBAAIA,GAAE,KAAK,EAAE;AACbI,uBAAI;gBACN;AACA,uBAAO,CAACJ,IAAGI,EAAC;cACd,GAbsB;AAetB,oBAAM,YAAY;gBAChB,OAAOqD,MAAK,MAAM,sBAAsB,OAAO;kBAC7C;kBACA;kBACA;kBACA;kBACA;kBACA;gBACF,CAAC;gBAED,MAAMA,MAAK,MAAM,sBAAsB,OAAO;kBAC5C;kBACA;kBACA;kBACA;kBACA;kBACA;gBACF,CAAC;cACH;AAEA,mBAAK,qBAAqB,gCAAS,EACjCC,MACA,KACA,QACA,WACA,QACA,QACA;AACA,oBAAI,EAAE,WAAW,UAAU,QAAQ;AACjC,yBAAO,iBAAiBA,MAAK,sBAAsB,EAAE,MAAM;gBAC7D;AACA,sBAAM,CAAC,MAAM,OAAO,IAAI,cAAc,KAAK,MAAM;AACjD,wBAAQ,OAAO,MAAM;kBACnB,KAAK;AACH,2BAAO,UAAU;sBACfA;sBACA;sBACA;sBACA;sBACA;sBACA;oBACF;kBACF,KAAK;AACH,2BAAO,UAAU;sBACfA;sBACA;sBACA;sBACA;sBACA;sBACA;oBACF;kBACF;AACE,2BAAO,KAAK;sBACVA;sBACA,KAAK;sBACL;oBACF;gBACJ;cACF,GAtC0B;AAwC1B,mBAAK,qBAAqB,gCAAS,EACjCA,MACA,KACA,QACA,QACA,QACA;AACA,uBAAO,EAAE,WAAW,UAAU,SAC1B,KAAK,mBAAmBA,MAAK,KAAK,QAAQ,GAAG,QAAQ,MAAM,IAC3D,iBAAiBA,MAAK,sBAAsB,EAAE,MAAM;cAC1D,GAV0B;YAW5B;AAEA;AACE,oBAAM,aAAaD,MAAK,MAAM,qBAAqB,OAAO;gBACxD;gBACA;gBACA;gBACA;gBACA;cACF,CAAC;AACD,oBAAM,aAAaA,MAAK,MAAM,qBAAqB,OAAO;gBACxD;gBACA;gBACA;gBACA;gBACA;cACF,CAAC;AAED,mBAAK,oBAAoB,gCAAS,EAChC,OACA,MACAnE,OACA,OACA,UACA;AACA,oBAAI,EAAE,WAAW,UAAU,QAAQ;AACjC,yBAAO;oBACL,KAAK,kBAAkB,KAAK;oBAC5B;oBACA,EAAE;kBACJ;gBACF,WAAWmE,MAAK,MAAMnE,KAAI,KAAK,SAASA,OAAM;AAC5C,yBAAO,WAAW,OAAO,MAAMA,OAAM,OAAO,QAAQ;gBACtD,WAAWA,iBAAgB,aAAa;AACtCA,0BAAO,IAAI,WAAWA,KAAI;gBAC5B,WAAW,MAAM,QAAQ,IAAI,GAAG;AAC9BA,0BAAO,KAAK,KAAK,EAAE;gBACrB;AACA,oBAAI,GAAGc;AACP,oBAAI;AACF,sBAAI,KAAK,oBAAoBd,KAAI,GAAG;AAClC,wBAAImE,MAAK,oBAAoBnE,KAAI;AACjCc,yBAAId,MAAK;kBACX,WAAW,aAAa,OAAOA,OAAM;AACnC,qBAAC,GAAGc,EAAC,IAAIqD,MAAK,aAAanE,KAAI;kBACjC,OAAO;AACL,2BAAO,KAAK;sBACV,KAAK,kBAAkB,KAAK;sBAC5B,KAAK;sBACL;oBACF;kBACF;AACA,yBAAO,WAAW,OAAO,MAAM,GAAGc,IAAG,KAAK,mBAAmB;gBAC/D,SAASF,IAAG;AACV,kBAAAuD,MAAK,QAAQ,CAAC;AACd,yBAAO,KAAK;oBACV,KAAK,kBAAkB,KAAK;oBAC5BvD;kBACF;gBACF;cACF,GA1CyB;AA4CzB,mBAAK,oBAAoB,gCAAS,EAChC,OACA,MACAqE,OACA,MACA,UACA;AACA,oBAAI,EAAE,WAAW,UAAU,QAAQ;AACjC,yBAAO;oBACL,KAAK,kBAAkB,KAAK;oBAC5B;oBACA,EAAE;kBACJ;gBACF,WAAWd,MAAK,MAAMc,KAAI,KAAK,SAASA,OAAM;AAC5C,yBAAO,WAAW,OAAO,MAAMA,OAAM,MAAM,QAAQ;gBACrD,WAAWA,iBAAgB,aAAa;AACtCA,0BAAO,IAAI,WAAWA,KAAI;gBAC5B,WAAW,MAAM,QAAQA,KAAI,GAAG;AAC9BA,0BAAOA,MAAK,KAAK,EAAE;gBACrB;AACA,oBAAI,GAAGnE;AACP,oBAAI;AACF,sBAAI,KAAK,qBAAqBmE,KAAI,GAAG;AACnC,wBAAId,MAAK,oBAAoBc,KAAI;AACjCnE,yBAAI,QAAQ,IAAI,OAAOmE,MAAK;kBAC9B,WAAW,aAAa,OAAOA,OAAM;AACnC,qBAAC,GAAGnE,EAAC,IAAIqD,MAAK,aAAac,KAAI;kBACjC,OAAO;AACL,2BAAO,KAAK;sBACV,KAAK,kBAAkB,KAAK;sBAC5B,KAAK;sBACL;oBACF;kBACF;AACA,yBAAO,WAAW,OAAO,MAAM,GAAGnE,IAAG,KAAK,mBAAmB;gBAC/D,SAASF,IAAG;AACV,kBAAAuD,MAAK,QAAQ,CAAC;AACd,yBAAO,KAAK;oBACV,KAAK,kBAAkB,KAAK;oBAC5BvD;kBACF;gBACF;cACF,GA1CyB;YA2C3B;AAEA;AACE,mBAAK,iBAAiB,SAAU,OAAO,MAAM;AAC3C,oBAAI,UAAU,SAAS,EAAG,QAAO,KAAK;AACtC,wBAAQ,IAAI;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;AACR,2BAAOuD,MAAK,QAAQ,uBAAuB,IAAI,KAAK,CAAC,CAAC;kBACxD,KAAK,KAAK;AACR,2BAAOA,MAAK,QAAQ;sBAClB;sBACA,KAAK,CAAC;sBACN,KAAK,CAAC;oBACR;kBACF,KAAK,KAAK;AACR,2BAAOA,MAAK,QAAQ,uBAAuB,IAAI,KAAK,CAAC,CAAC;kBACxD,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV,KAAK,KAAK;kBACV;AACE,2BAAO,KAAK;gBAChB;cACF;YACF;AAEA;AACE,oBAAM,gBAAgB,oBAAI,IAAI;AAE9B,mBAAK,yBAAyB,SAAU,MAAM;AAC5C,oBAAI,gBAAgB,UAAU;AAC5B,yBAAOA,MAAK,gBAAgB,UAAU,IAAI;gBAC5C,WAAW,MAAM,UAAU,UAAU,CAACA,MAAK,MAAM,IAAI,GAAG;AACtD,yBAAO,KAAK;gBACd;AACA,sBAAM,KAAKA,MAAK,QAAQ,uBAAuB,IAAI;AACnD,oBAAI,SAAS,UAAU,CAAC,GAAG;AACzB,sBAAI,MAAM,GAAI,eAAc,IAAI,IAAI;sBAC/B,CAAAA,MAAK,kBAAkB,IAAI;gBAClC;AACA,uBAAO;cACT;AAEA,mBAAK,gCAAgC,SAAU,MAAM;AACnD,oBAAI,CAAC,QAAQ,MAAM,UAAU,UAAU,CAACA,MAAK,MAAM,IAAI,EAAG,QAAO;AACjE,uBAAOA,MAAK,QAAQ,8BAA8B,IAAI;cACxD;AAEA,mBAAK,+BAA+B,WAAY;AAC9C,gBAAAA,MAAK,QAAQ,6BAA6B;AAC1C,2BAAW,MAAM,cAAe,CAAAA,MAAK,kBAAkB,EAAE;AACzD,8BAAc,MAAM;cACtB;YACF;AAEA,kBAAM,SAAS,KAAK,iBAAiB,OAAO;AAC5C,gBAAI,QAAQ;AACV,kBAAI,KAAK,WAAW,GAAG;AACrB,sBAAM,eAAe,IAAI,KAAK;kBAC5BA,MAAK,QAAQ,4BAA4B;gBAC3C;AACA,uBAAO,KAAK;AAEZ,sBAAM,eACFA,MAAK,QAAQ,oCACf,SAASA,MAAK;AAEhB,sBAAM,eAAe,wBAAC,WACpB,QAAQA,MAAK,KAAK,MAAM,IAAI,iBAAiB,cAD1B;AAGrB,sBAAM,aAAa;kBACjB,OAAO,wBAAC,QAAQ,MAAM,MAAM,SAAS;AACnC,0BAAM,QAAQ,OAAO,SACnB,SAASA,MAAK,gBAAgB;AAChC,wBAAI;AACF,4BAAM,QAAQ,aAAa,QAAQ,IAAI;AACvC,0BAAI,CAAC,MAAO,QAAO;AACnB,4BAAM,OAAOA,MAAK,SAAS,KAAK;AAChC,4BAAM,KAAK,aAAa,MAAM,EAAE,QAAQ,IAAI;AAC5C,0BAAI,CAAC,GAAI,QAAO;AAChB,4BAAM,KAAK,GAAG;AACd,0BAAI,QAAQ,EAAG,QAAO;+BACb,MAAM,MAAM;AACnB,wBAAAA,MAAK,KAAK,MAAM,CAAC;AACjB,+BAAO;sBACT;AACA,4BAAM,KAAKA,MAAK,mBAAmB,EAAE;AACrC,0BAAI,OAAO,KAAK,EAAG,QAAO,KAAK;AAC/B,sBAAAA,MAAK,OAAO,EAAE,WAAW,MAAM,IAAI,KAAK,OAAO,CAAC;AAChD,sBAAAA,MAAK,KAAK,OAAO,OAAO,GAAG,CAAC;AAC5B,6BAAO,OAAO;oBAChB,SAASvD,IAAG;AACV,8BAAQ,MAAM,mBAAmBA,EAAC;AAClC,6BAAO;oBACT,UAAA;AACE,6BAAO,QAAQ,KAAK;AACpB,sBAAAuD,MAAK,eAAe,MAAM;oBAC5B;kBACF,GA3BO;kBA4BP,QAAQ,wBAAC,QAAQ,MAAM,UAAU;AAC/B,0BAAM,QAAQ,OAAO;AACrB,wBAAI;AACF,4BAAM,QAAQ,aAAa,QAAQ,IAAI;AACvC,0BAAI,CAAC,MAAO,QAAO;AACnB,4BAAM,OAAOA,MAAK,SAAS,KAAK;AAChC,mCAAa,MAAM,EAAE,QAAQ,MAAMA,MAAK,SAAS,KAAK,CAAC;AACvD,6BAAO;oBACT,SAASvD,IAAG;AACV,8BAAQ,MAAM,oBAAoBA,EAAC;AACnC,6BAAO,KAAK;oBACd,UAAA;AACE,6BAAO,QAAQ,KAAK;oBACtB;kBACF,GAdQ;kBAeR,SAAS,wBAAC,QAAQ,SAAS;AACzB,0BAAM,QAAQ,OAAO;AACrB,wBAAI;AACF,4BAAM,QAAQ,aAAa,QAAQ,IAAI;AACvC,0BAAI,CAAC,MAAO,QAAO;AACnB,mCAAa,MAAM,EAAE,WAAWuD,MAAK,SAAS,KAAK,CAAC;AACpD,6BAAO;oBACT,SAASvD,IAAG;AACV,8BAAQ,MAAM,qBAAqBA,EAAC;AACpC,6BAAO,KAAK;oBACd,UAAA;AACE,6BAAO,QAAQ,KAAK;oBACtB;kBACF,GAbS;gBAcX;AACA,2BAAW,KAAK,OAAO,KAAK,UAAU,GAAG;AACvC,+BAAa,aAAa,UAAU,CAAC,CAAC,IAAIuD,MAAK;oBAC7C,aAAa,gBAAgB,CAAC;oBAC9B,WAAW,CAAC;kBACd;gBACF;cACF,OAAO;AACL,qBAAK,uBAAuB,MAAM;cACpC;YACF;AAEA,YAAAA,MAAK,MAAM,eAAe,YAAY;AAEtC,kBAAM,eAAe,QAAQ;AAC7B,kBAAM,gBAAgB,gCAASe,QAC7B,KACA,MACA,MACA,iBAAiBA,QAAO,wBACxB;AACA,kBAAI,EAAE,eAAe,aAAa,aAAa;AAC7C,qBAAK,iDAAiD;cACxD,WAAW,EAAE,gBAAgB,aAAa,CAACf,MAAK,MAAM,IAAI,GAAG;AAC3D,qBAAK,2DAA2D;cAClE;AACA,kBAAI,MAAM,UAAU,QAAQ;AAC1B,uBAAO,CAACrD,IAAG,MAAMoE,QAAO,KAAKpE,IAAG,GAAG,cAAc;cACnD;AACA,kBAAI,CAACoE,QAAO,WAAW;AACrBA,wBAAO,YAAY,SAAUC,MAAK,UAAUC,OAAM,KAAK;AACrD,yBAAO,YAAa,MAAM;AACxB,wBAAIA,MAAK,WAAW,UAAU,QAAQ;AACpC;wBACE;wBACAD,KAAI,WAAW,OACb,OACA,WACA;wBACF;sBACF;oBACF;AACA,2BAAOC,MAAK,MAAM,MAAM,IAAI;kBAC9B;gBACF;AAEAF,wBAAO,iBAAiB,WAAY;AAClC,sBAAI,KAAK,UAAU,kBAAkB;AACnC,yBAAK,UAAU,iBAAiB,QAAQ,CAACxE,IAAG,QAAQ;AAClD,0BAAI,aAAa,OAAOA,IAAG;AACzB,4BAAI;AACF,0BAAAyD,MAAK,kBAAkBzD,EAAC;wBAC1B,SAASE,IAAG;wBAAC;sBACf;oBACF,CAAC;AACD,2BAAO,KAAK,UAAU;kBACxB;gBACF;cACF;AACA,oBAAM,OAAO,IAAI,gBAAgB,IAAI;AACrC,kBAAI,KAAK,SAAS,GAAG;AACnB;kBACE;kBACA;kBACA;kBACA;gBACF;cACF;AACA,oBAAM,SAAS,IAAI,UAAU,IAAI;AACjC,oBAAM,SACJ,kBAAkB,CAACuD,MAAK,MAAM,IAAI,IAC9Be,QAAO,UAAU,KAAK,QAAQ,MAAM,IAAI,IACxC;AACN,kBAAIf,MAAK,MAAM,MAAM,GAAG;AACtB,oBAAI,UAAU,CAACA,MAAK,cAAc,MAAM,GAAG;AACzC,uBAAK,WAAW,QAAQ,qCAAqC;gBAC/D;AACA,oBAAI,MAAM,IAAI;cAChB,OAAO;AACL,sBAAM,QAAQA,MAAK;kBACjB;kBACA,IAAI,gBAAgB,MAAM,IAAI;gBAChC;AACA,oBAAI,MAAM,IAAI;AACd,oBAAI,CAAC,IAAI,aAAa,CAAC,IAAI,UAAU,kBAAkB;AACrD,sBAAI;oBACF;oBACAe,QAAO;kBACT;AACA,sBAAI,UAAU,mBAAmB,CAAC;gBACpC;AACA,oBAAI,UAAU,iBAAiB,KAAK,QAAQ,KAAK;cACnD;AACA,qBAAO,CAACpE,IAAG,MAAMoE,QAAO,KAAKpE,IAAG,GAAG,cAAc;YACnD,GA/EsB;AAgFtB,0BAAc,yBAAyB;AAEvC,kBAAM,iBAAiB,gCACrB,gBACA,SACA,iBAAiB,cAAc,wBAC/B;AACA,oBAAM,OAAO,oBAAI,IAAI;AACrB,yBAAW,KAAK,OAAO,KAAK,OAAO,GAAG;AACpC,sBAAM,IAAI,QAAQ,CAAC;AACnB,sBAAM,QAAQ,KAAK,IAAI,CAAC;AACxB,oBAAI,OAAO;AACT,wBAAM,OAAO,eAAe,UAAU,CAAC;AACvC,iCAAe,IAAI,IACjB,eAAe,eAAe,UAAU,KAAK,CAAC;gBAClD,OAAO;AACL,gCAAc,gBAAgB,GAAG,GAAG,cAAc;AAClD,uBAAK,IAAI,GAAG,CAAC;gBACf;cACF;AACA,qBAAO;YACT,GAnBuB;AAqBvB,yBAAa,WAAW,UAAU,gBAAgB,gCAASoE,QACzD,MACA,MACA,iBAAiB,cAAc,wBAC/B;AACA,qBAAO,UAAU,SAAS,KAAK,QAAQ,aAAa,OAAO,OACvD,eAAe,MAAM,GAAG,SAAS,IACjC,cAAc,MAAM,GAAG,SAAS;YACtC,GARkD;AAUlD,yBAAa,WAAW,UAAU,iBAAiB,SACjD,SACA,iBAAiB,cAAc,wBAC/B;AACA,qBAAO,eAAe,MAAM,SAAS,cAAc;YACrD;UACF,CAAC;AAED,qBAAW,oBAAoB,aAAa,KAAK,SAAU,SAAS;AAClE,oBAAQ,UAAU;cAChB,YAAY;cACZ,kBAAkB;cAClB,UACE;cACF,iBAAiB;YACnB;UACF,CAAC;AAED,qBAAW,oBAAoB,aAAa,KAAK,SAAU,SAAS;AAClE,kBAAM,OAAO,2BAAI,SAAS;AACxB,oBAAM,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;YAChC,GAFa;AAGb,kBAAM,QAAQ,2BAAI,SAAS;AACzB,oBAAM,IAAI,QAAQ,aAAa,GAAG,IAAI;YACxC,GAFc;AAId,kBAAM,OAAO,QAAQ,MACnBf,QAAO,QAAQ,MACf,OAAO,QAAQ;AAEjB,kBAAM,WAAW,oBAAI,QAAQ;AAE7B,kBAAM,YAAY,oBAAI,QAAQ;AAE9B,kBAAM,eAAe,wBAAC,MAAM,GAAG,SAAS;AACtC,oBAAM,IAAI,OAAO,yBAAyB,MAAM,CAAC;AACjD,qBAAO,IAAI,EAAE,QAAQ;YACvB,GAHqB;AAKrB,kBAAM,iBAAiB,gCAAU,OAAO,kBAAkB;AACxD,kBAAI,kBAAkB;AACpB,oBAAI,iBAAiB,GAAI,SAAQ,MAAM;AACvC;kBACE;kBACA;kBACA,mBAAmB;kBACnB,QACI,KAAK,eAAe,KAAK,IACzB,KAAK,eAAe,gBAAgB;gBAC1C;cACF;AACA,qBAAO,UAAU,CAAC;YACpB,GAbuB;AAevB,kBAAM,qBAAqBA,MAAK;cAC9B;cACA,SAAUtD,IAAGI,IAAG,GAAG,GAAG;AACpB,oBAAI,KAAK,sBAAsBJ,IAAG;AAChC,0BAAQ;oBACN,gBAAgB,EAAE,KAAK,UAAU,kBAAkBI,KAAI;oBACvDkD,MAAK,SAAS,CAAC;kBACjB;gBACF;cACF,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;YACvB;AAEA,kBAAM,wBAAwB,uBAAO,OAAO,IAAI;AAEhD,kBAAM,eAAe,gCAAS,QAAQ,MAAM;AAC1C,kBAAI,CAAC,KAAK,WAAW;AACnB,qBAAK,YAAY,uBAAO,OAAO,IAAI;AACnC,sBAAM,iBACJ,eAAe,OAAO,gBAClB,CAACrD,OACC;kBACE;kBACAA;kBACA;gBACF,IACF;AACN,qBAAK,UAAU,gBAAgB,IAAI;kBACjC,KAAK;kBACL,UAAU,mBAAmB,MAAM;gBACrC;AACA,qBAAK,UAAU,kBAAkB,IAAI;kBACnC,KAAK;kBACL,UAAU,mBAAmB,MAAM;gBACrC;cACF;AACA,oBAAM,MAAM,KAAK,cAAc,GAAG,IAAI;AACtC,kBAAI,KAAK,IAAI,UACX,UAAU,IAAI,KACd,WAAW,IAAI;AACjB,kBACG,aAAa,OAAO,MAAM,aAAa,OAAO,MAC/C,aAAa,OAAO,YACnB,WACC,aAAa,OAAO,WACpB,aAAa,OAAO,SACtB;AACA,wBAAQ,OAAO,MAAM,wBAAwB,KAAK,SAAS;AAC3D,sBAAM,uCAAuC;cAC/C;AACA,kBAAI,OAAO,aAAa,OAAO,KAAKqD,MAAK,SAAS,EAAE,IAAI;AACxD,oBAAM,WAAW,KAAK,UAAU,IAAI;AACpC,kBAAI,UAAU;AACZ,0BAAU,SAAS;AACnB,qBAAK,OAAO,SAAS,SAAS,IAAI;cACpC;AACA,kBAAIC,MACF,SAAS;AACX,kBAAI,SAAS,QAAQ,GAAG,KAAK,GAAG;AAC9B,0BAAU,KAAK,qBAAqB,KAAK;cAC3C;AACA,kBAAI,SAAS,QAAQ,GAAG,KAAK,EAAG,WAAU,KAAK;AAC/C,kBAAI,MAAM,OAAQ,WAAU,KAAK;AACjC,wBAAU,KAAK;AACf,oBAAM,QAAQD,MAAK,OAAO;AAC1B,kBAAI;AACF,sBAAM,OAAOA,MAAK,OAAO,SAAS;AAClC,oBAAI,KAAK,KAAK,gBAAgB,IAAI,MAAM,QAAQ,WAAW,CAAC;AAC5DC,uBAAMD,MAAK,QAAQ,IAAI;AACvB,+BAAeC,MAAK,EAAE;AACtB,qBAAK,8BAA8BA,MAAK,CAAC;AACzC,oBAAI,SAAS,QAAQ,GAAG,KAAK,GAAG;AAC9B,uBAAK;oBACHA;oBACA,KAAK;oBACL;oBACAA;kBACF;gBACF;cACF,SAASxD,IAAG;AACV,oBAAIwD,KAAK,MAAK,iBAAiBA,IAAG;AAClC,sBAAMxD;cACR,UAAA;AACE,gBAAAuD,MAAK,OAAO,QAAQ,KAAK;cAC3B;AACA,mBAAK,WAAW;AAChB,uBAAS,IAAI,MAAMC,IAAG;AACtB,wBAAU,IAAI,MAAM,uBAAO,OAAO,IAAI,CAAC;AACvC,kBAAI;AACF,sBAAM,OACJ,KAAK,kBAAkBA,IAAG,KAC1B,MAAM,mDAAmD;AAC3D,sBAAM,cAAc,sBAAsB,IAAI;AAC9C,oBAAI,aAAa;AACf,sBAAI,uBAAuB,UAAU;AACnC,gCAAY,MAAM,OAAO;kBAC3B,OAAO;AACL;sBACEA;sBACA,KAAK,aAAaA,MAAK,aAAa,GAAG,GAAG,CAAC;oBAC7C;kBACF;gBACF;cACF,SAASxD,IAAG;AACV,qBAAK,MAAM;AACX,sBAAMA;cACR;YACF,GA5FqB;AA8FrB,yBAAa,yBAAyB,SAAU,MAAM,UAAU;AAC9D,kBAAI,EAAE,oBAAoB,WAAW;AACnC;kBACE;kBAEA;gBACF;cACF;AACA,oCAAsB,IAAI,IAAI;YAChC;AAEA,yBAAa,gBAAgB,SAC3B,WAAW,YACXU,SAAQ,KACR,MAAM,MACN;AACA,oBAAM,MAAM,CAAC;AACb,kBACE,MAAM,UAAU,UAChB,UAAU,CAAC,KACX,aAAa,OAAO,UAAU,CAAC,GAC/B;AACA,uBAAO,OAAO,KAAK,UAAU,CAAC,CAAC;AAC/B,oBAAI,WAAc,IAAI,MAAO,KAAI,QAAQ;AACzC,oBAAI,WAAc,IAAI,IAAK,KAAI,MAAM;AACrC,oBAAI,WAAc,IAAI,SAAU,KAAI,WAAW;cACjD,OAAO;AACL,oBAAI,WAAW;AACf,oBAAI,QAAQA;AACZ,oBAAI,MAAM;cACZ;AACA,qBAAO;YACT;AAEA,kBAAM,KAAK,mCAAa,MAAM;AAC5B,2BAAa,MAAM,MAAM,IAAI;YAC/B,GAFW;AAGX,eAAG,eAAe;AAElB,kBAAM,YAAY;cAChB,MAAM;cACN,QAAQ;cACR,QAAQ;cACR,SAAS;cACT,MAAM;YACR;AACA,sBAAU,WAAW,KAAK,UAAU;AACpC,gBAAI6C,MAAK,eAAe;AACtB,wBAAU,SAAS,UAAU;YAC/B;AAEA,kBAAM,OAAO,kCAAY;AACvB,kBAAI,cAAc,UAAU,CAAC,GAAG;AAC9B;kBACE,KAAK;kBACL;gBACF;cACF;AACA,mBAAK,KAAK,UAAU,CAAC;AACrB,uBAAS,IAAI,MAAM,UAAU,CAAC,CAAC;AAC/B,mBAAK,iBAAiB,KAAK,6BAA6B,KAAK,OAAO;YACtE,GAVa;AAYb,kBAAM,eAAe,gCAAU,IAAI;AACjC,kBAAI,CAAC,GAAG,QAAS,OAAM,qBAAqB;AAC5C,qBAAO;YACT,GAHqB;AAKrB,kBAAM,iBAAiB,gCAAU,MAAM,KAAK;AAC1C,kBAAI,SAAS,MAAM,MAAM,MAAM,KAAK,OAAO,KAAK,aAAa;AAC3D,sBAAM,gBAAgB,KAAK,kBAAkB;cAC/C;AACA,qBAAO;YACT,GALuB;AAOvB,kBAAM,gBAAgB,gCAAU,IAAI,MAAM;AACxC,oBAAMkB,OAAM,uBAAO,OAAO,IAAI;AAC9BA,mBAAI,MAAM,uBAAO,OAAO,IAAI;AAC5B,sBAAQ,KAAK,QAAQ;gBACnB,KAAK;AACH,sBACE,aAAa,OAAO,KAAK,CAAC,KAC1B,KAAK,oBAAoB,KAAK,CAAC,CAAC,GAChC;AACAA,yBAAI,MAAM,KAAK,CAAC;kBAClB,WAAW,MAAM,QAAQ,KAAK,CAAC,CAAC,GAAG;AACjCA,yBAAI,MAAM,KAAK,CAAC;kBAClB,WAAW,KAAK,CAAC,KAAK,aAAa,OAAO,KAAK,CAAC,GAAG;AACjDA,yBAAI,MAAM,KAAK,CAAC;AAChBA,yBAAI,MAAMA,KAAI,IAAI;kBACpB;AACA;gBACF,KAAK;AACHA,uBAAI,MAAM,KAAK,CAAC;AAChBA,uBAAI,MAAM,KAAK,CAAC;AAChB;gBACF;AACE,wBAAM,oCAAoC;cAC9C;AACAA,mBAAI,MAAM,KAAK,eAAeA,KAAI,GAAG;AACrC,kBAAI,aAAa,OAAOA,KAAI,KAAK;AAC/B,sBAAM,qDAAqD;cAC7D;AACA,oBAAM,MAAMA,KAAI;AAChB,sBAAQ,IAAI,aAAa;gBACvB,KAAK;AACH,sBAAI,CAAC,IAAI,WAAY,KAAI,aAAa,CAAC;AACvCA,uBAAI,YAAY,MAAM,IAAI;AAC1B;gBACF,KAAK;AACH,sBAAI,CAAC,IAAI,QAAS,KAAI,UAAU,CAAC;AACjCA,uBAAI,YAAY,MAAM,IAAI;AAC1B;gBACF,KAAK;gBACL,KAAK;AACHA,uBAAI,YAAY,MAAM;AACtB;gBACF;AACE,wBAAM,8BAA8B,IAAI,WAAW;cACvD;AACA,kBAAI,CAAC,IAAI,YAAY,CAAC,IAAI,eAAe,WAAc,IAAI,SAAS;AAClE,oBAAI,CAAC,IAAI,WAAY,KAAI,aAAa,CAAC;AACvCA,qBAAI,YAAY,MAAM,IAAI;cAC5B;AACA,kBAAI,IAAI,YAAY,IAAI,YAAY;AAClC,wBAAQ,WAAc,IAAI,UAAU,UAAU,IAAI,SAAS;kBACzD,KAAK;AACHA,yBAAI,QAAQ,CAAC,MAAM,UAAU;AAC3B,0BAAI,CAAC,MAAM;AACT,8BAAM,cAAc,KAAK,eAAe,CAAC,CAAC;AAE5C,4BAAM,MAAM,KAAK,IAAI,CAAC,CAAC;AACvB,4BAAM,KAAK,uBAAO,OAAO,IAAI;AAC7B,iCAAW,KAAK,MAAM;AACpB,2BAAG,MAAM,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC;AAClC,6BAAO;oBACT;AACA;kBACF,KAAK;AACHA,yBAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;AACjC;kBACF,KAAK;AACH,wBAAI,MAAM,QAAQ,IAAI,UAAU,GAAG;AACjC;wBACE;wBACA;wBACA;sBACF;oBACF;AACAA,yBAAI,QAAQ,CAAC,SAAS;AACtB;kBACF;AACE,wBAAI,KAAK,QAAQ,IAAI,OAAO,GAAG;AAC7BA,2BAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,IAAI,OAAO;AAC1C;oBACF,WACE,aAAa,OAAO,IAAI,WACxB,IAAI,QAAQ,SAAS,KACrB,QAAQ,IAAI,QAAQ,CAAC,GACrB;AACA,4BAAM,WAAW,IAAI,QAAQ,OAAO,CAAC;AACrCA,2BAAI,QAAQ,CAAC,SAAS;AACpB,8BAAM,KAAK,KAAK,IAAI,uBAAO,OAAO,IAAI,CAAC,EAAE,QAAQ;AACjD,+BAAO,WAAc,KACjB;0BACE,KAAK;0BACL;0BACA;wBACF,IACA;sBACN;AACA;oBACF;AACA,0BAAM,oBAAoB,IAAI,OAAO;gBACzC;cACF;AACA,qBAAOA;YACT,GAtGsB;AAwGtB,kBAAM,mBAAmB,wBAAC,IAAI,KAAK,SAAS,YAAY;AACtD,oBAAM,OAAO,GAAG,QAAQ,GAAG;AAC3B,kBAAI;AACF,sBAAM,KAAK,KAAK,KAAK,IAAI,EAAE,KAAK,IAC5B,KAAK,IAAI,GAAG,OAAO,IACnB;AACJ,qBAAK,MAAM;AACX,uBAAO;cACT,UAAA;AACE,qBAAK,SAAS;cAChB;YACF,GAXyB;AAazB,kBAAM,cAAc,wBAAC,IAAI,KAAK,MAAM,YAClC,GAAG,KAAK;cACN;cACA;cACA;cACA,aAAa;YACf,CAAC,GANiB;AAQpB,eAAG,UAAU,CAAC,IAAI,eAAe,eAAe,IAAI,UAAU;AAE9D,eAAG,YAAY;cACb,QAAQ,kCAAY;AAClB,uBAAO,CAAC,CAAC,KAAK;cAChB,GAFQ;cAIR,YAAY,kCAAY;AACtB,uBAAO,aAAa,IAAI;cAC1B,GAFY;cAIZ,OAAO,kCAAY;AACjB,oBAAI,KAAK,SAAS;AAChB,sBAAI,KAAK,WAAW,KAAK,QAAQ,kBAAkB,UAAU;AAC3D,wBAAI;AACF,2BAAK,QAAQ,OAAO,IAAI;oBAC1B,SAASzE,IAAG;oBAAC;kBACf;AACA,wBAAMwD,OAAM,KAAK;AACjB,yBAAO,KAAK,UAAU,IAAI,IAAI,CAAC,EAAE,QAAQ,CAAC,GAAGC,OAAM;AACjD,wBAAIA,MAAKA,GAAE,SAAS;AAClB,0BAAI;AACFA,2BAAE,SAAS;sBACb,SAASzD,IAAG;sBAAC;oBACf;kBACF,CAAC;AACD,2BAAS,OAAO,IAAI;AACpB,4BAAU,OAAO,IAAI;AACrB,uBAAK,iBAAiBwD,IAAG;AACzB,sBAAI,KAAK,WAAW,KAAK,QAAQ,iBAAiB,UAAU;AAC1D,wBAAI;AACF,2BAAK,QAAQ,MAAM,IAAI;oBACzB,SAASxD,IAAG;oBAAC;kBACf;AACA,yBAAO,KAAK;gBACd;cACF,GAzBO;cA2BP,SAAS,gCAAU,QAAQ,OAAO,YAAY,OAAO;AACnD,sBAAM,IAAI,aAAa,IAAI,EAAE;AAC7B,oBAAI,OAAO;AACT,yBAAO,YACH,KAAK,wBAAwB,CAAC,IAC9B,KAAK,sBAAsB,CAAC;gBAClC,OAAO;AACL,yBAAO,YACH,KAAK,kBAAkB,CAAC,IACxB,KAAK,gBAAgB,CAAC;gBAC5B;cACF,GAXS;cAaT,YAAY,gCAAU,SAAS,QAAQ;AACrC,uBAAO,KAAK,oBAAoB,aAAa,IAAI,EAAE,SAAS,MAAM;cACpE,GAFY;cAIZ,QAAQ,gCAAU,WAAW,GAAG;AAC9B,uBAAO,KAAK,gBAAgB,aAAa,IAAI,EAAE,SAAS,QAAQ;cAClE,GAFQ;cAIR,WAAW,gCAAU,SAAS,GAAG;AAC/B,oBAAI;AACJ,sBAAM,OAAO,KAAK;kBAChB,aAAa,IAAI,EAAE;kBACnB;gBACF;AACA,oBAAI,MAAM;AACR,wBAAMF,KAAI,IAAI,KAAK,YAAY,IAAI;AACnC,sBAAI;AACF,yBAAKyD,MAAK,SAASzD,GAAE,MAAM;kBAC7B,UAAA;AACEA,uBAAE,QAAQ;kBACZ;gBACF;AACA,uBAAO;cACT,GAfW;cAiBX,SAAS,gCAAU,KAAK;AACtB,6BAAa,IAAI;AACjB,sBAAM,QAAQyD,MAAK,OAAO;AAC1B,oBAAI,QAAQ;AACZ,oBAAI;AACF,2BAASA,MAAK,OAAO,MAAM,CAAC;AAC5B,qBAAG;oBACD;oBACA,KAAK,mBAAmB,KAAK,SAAS,KAAK,IAAI,QAAQ,IAAI;kBAC7D;AACA,0BAAQA,MAAK,QAAQ,MAAM;gBAC7B,UAAA;AACE,kBAAAA,MAAK,OAAO,QAAQ,KAAK;gBAC3B;AACA,oBAAI,CAAC,MAAO,OAAM,2BAA2B;AAC7C,sBAAM,OAAO,IAAI,KAAK,MAAM,OAAO,SAAS;AAC5C,0BAAU,IAAI,IAAI,EAAE,KAAK,IAAI;AAC7B,uBAAO;cACT,GAlBS;cAoBT,MAAM,kCAAY;AAChB,6BAAa,IAAI;AACjB,sBAAM,MAAM,cAAc,MAAM,SAAS;AACzC,oBAAI,CAAC,IAAI,KAAK;AACZ,yBAAO,MAAM,gCAAgC;gBAC/C;AACA,sBAAM,MAAM,IAAI;AAChB,sBAAM,WAAW,IAAI;AACrB,sBAAM,aAAa,MAAM,QAAQ,IAAI,UAAU,IAC3C,IAAI,aACJ;AACJ,oBAAI;AACJ,oBAAI,OAAO,IAAI;AACf,oBAAI,kBAAkB,CAAC,EACrB,IAAI,SACJ,IAAI,eACJ;AAEF,sBAAM,QAAQA,MAAK,gBAAgB;AACnC,sBAAM,UAAU,MAAM,QAAQ,IAAI,OAAO,IACrC,IAAI,UACJ;AACJ,oBAAI;AACF,wBAAM,OAAO,KAAK,oBAAoB,IAAI,GAAG;AAC7C,sBAAI,aAAa,OACb,IAAI,IAAI,aACRA,MAAK,QAAQ,IAAI,GAAG;AACxB,wBAAM,SAASA,MAAK;oBAClB,IAAIA,MAAK,aAAa,aAAa;kBACrC;AACA,wBAAM,SAAS,SAASA,MAAK;AAC7B,sBAAI,OAAO,SAASA,MAAK;AACzB,wBAAM,UAAU,OAAO;AACvB,sBAAI,KAAM,CAAAA,MAAK,MAAM,EAAE,IAAI,IAAI,KAAK,IAAI;sBACnC,CAAAA,MAAK,QAAQ,IAAI,KAAKA,MAAK,MAAM,GAAG,MAAM,YAAY,KAAK;AAChE,kBAAAA,MAAK,KAAK,OAAO,YAAY,CAAC;AAC9B,yBAAO,QAAQA,MAAK,KAAK,MAAM,IAAI,GAAG;AACpC,oBAAAA,MAAK,QAAQ,CAAC,QAAQ,MAAM,GAAG,CAAC;AAChC,uBAAG;sBACD;sBACA,KAAK;wBACH,KAAK;wBACL;wBACA;wBACA;wBACA;wBACA;sBACF;oBACF;AACA,0BAAM,QAAQA,MAAK,QAAQ,MAAM;AACjC,2BAAOA,MAAK,QAAQ,MAAM;AAC1B,iCAAa,UAAU;AACvB,wBAAI,CAAC,MAAO;AACZ,wBAAI,QAAS,SAAQ,KAAK,KAAK,YAAY,KAAK,EAAE,KAAK,CAAC;AACxD,2BAAO,IAAI,KAAK,MAAM,OAAO,SAAS;AACtC,wBAAI,QAAQ,KAAK,gBAAgB;AAC/B,2BAAK,KAAK,IAAI;AACd,6BAAO;oBACT;AACA,wBAAI,mBAAmB,KAAK,aAAa;AACvC,0BAAI,cAAc,MAAM,QAAQ,IAAI,WAAW,IAAI,IAAI;AACvD,wCAAkB;AAClB,0BAAI,IAAI,SAAS,YAAY;AAC3B,8BAAM,aAAa,uBAAO,OAAO,IAAI;AACrC,+BAAO,KAAK,KAAK,GAAG,KAAK,gBAAgB,OAAO;AAC9C,8BAAI,MAAM,eAAe;AACvB,iCAAK;8BACF,WAAW,cAAc,IAAI,eAAe,CAAC;4BAChD;0BACF;AACA,+BAAK,gBAAgB;AACrB,gCAAM,MAAM,IAAI,MAAM,MAAM,UAAU;AACtC,8BAAI,WAAY,YAAW,KAAK,GAAG;AACnC,8BAAI,YAAY,UAAU,SAAS,KAAK,KAAK,KAAK,IAAI,GAAG;AACvD;0BACF;wBACF;AACA,6BAAK,gBAAgB;sBACvB;AACA,0BAAI,MAAM,aAAa;AACrB,6BAAK,eAAe,IAAI,WAAW;sBACrC;oBACF,OAAO;AACL,2BAAK,KAAK;oBACZ;AACA,yBAAK,MAAM,EAAE,SAAS;AACtB,2BAAO;kBACT;gBACF,UAAA;AACE,kBAAAA,MAAK,eAAe,KAAK;AACzB,sBAAI,MAAM;AACR,2BAAO,KAAK;AACZ,yBAAK,SAAS;kBAChB;gBACF;AACA,uBAAO,IAAI,UAAU;cACvB,GAhGM;cAkGN,gBAAgB,gCAAS,EAAE,MAAM,OAAO,KAAK;AAC3C,sBAAM,SAAS,wBAACS,OAAMA,cAAa,UAApB;AACf,wBAAQ,UAAU,QAAQ;kBACxB,KAAK;AACH,0BAAM;AACN,2BAAO,IAAI;AACX,4BAAQ,IAAI,SAAS;AACrB;kBACF,KAAK;AACH,wBAAI,CAAC,OAAO,KAAK,GAAG;AAClB,4BAAM;AACN,8BAAQ,IAAI,SAAS;oBACvB;AACA;kBACF,KAAK;AACH;kBACF;AACE;gBACJ;AACA,oBAAI,CAAC,IAAK,OAAM,CAAC;AACjB,oBAAI,aAAa,OAAO,MAAM;AAC5B,wBAAM,2CAA2C;gBACnD;AACA,oBAAI,QAAQ,IAAI,SAAS;AACzB,oBAAI,SAAS,IAAI,UAAU;AAC3B,sBAAM,SAAS,IAAI,UAAU;AAC7B,sBAAM,WAAW,IAAI,YAAY;AACjC,oBAAI,WAAW;AACf,oBAAI,OAAO,KAAK,GAAG;AACjB,6BAAW;AACX,sBAAI,OAAO,KAAK,KAAK,OAAO,MAAM,GAAG;AACnC,0BAAM,2CAA2C;kBACnD;AACA,0BAAQ,SAAS;gBACnB,WAAW,OAAO,KAAK,GAAG;AACxB,sBAAI,CAAC,OAAO,MAAM,GAAG;AACnB,0BAAM,wDAAwD;kBAChE;AACA,0BAAQ;gBACV,WAAW,OAAO,MAAM,GAAG;AACzB,wBAAM,uDAAuD;gBAC/D,OAAO;AACL,wBAAM,mCAAmC;gBAC3C;AACA,oBAAI,UAAU,UAAU;AACtB,sBAAI,OAAO,MAAM,KAAK,OAAO,QAAQ,GAAG;AACtC;sBACE;oBACF;kBACF;gBACF,WAAW,OAAO,MAAM,GAAG;AACzB,sBAAI,CAAC,OAAO,QAAQ,GAAG;AACrB,0BAAM,yCAAyC;kBACjD;AACA,6BAAW;gBACb,WAAW,OAAO,QAAQ,GAAG;AAC3B,wBAAM,yCAAyC;gBACjD;AACA,sBAAM,OAAO,IAAI;AACjB,oBACE,WAAc,QACd,SAAS,SACR,aAAa,OAAO,QAAQ,CAAC,KAAK,QAAQ,IAAI,IAC/C;AACA;oBACE;kBACF;gBACF;AACA,sBAAM,WAAW,IAAI,YAAY;AACjC,oBAAI,YAAY,CAAC,OAAO,QAAQ,GAAG;AACjC,wBAAM,uCAAuC;gBAC/C;AACA,oBAAI,SAAS;AACb,oBAAI,aAAa,KAAK,eAAe;AACnC,4BAAU,KAAK;AACjB,oBAAI,aAAa,KAAK,YAAY;AAChC,4BAAU,KAAK;AACjB,oBAAI,aAAa,KAAK,WAAW,EAAG,WAAU,KAAK;AACnD,uBAAO,KAAK,YAAY;AACxB,sBAAM,SAAS,SAAS;AACxB,sBAAM,QAAQ,aAAa,KAAK,OAAO;AACvC,sBAAM,WACJ,aAAa,OAAO,QAChB,QACA,OAAO,SACL,OAAO,SAAS,IAChB;AACR,oBAAI;AACJ,oBAAI,UAAU;AACZ,uBAAK,KAAK;oBACR,KAAK;oBACL;oBACA;oBACA,KAAK,cAAc;oBACnB,QAAQ;oBACR;oBACA;oBACA;oBACA;oBACA;kBACF;gBACF,OAAO;AACL,uBAAK,KAAK;oBACR,KAAK;oBACL;oBACA;oBACA,KAAK,cAAc;oBACnB,QAAQ;oBACR;oBACA;oBACA;oBACA;kBACF;gBACF;AACA,mBAAG,QAAQ,MAAM,EAAE;AACnB,uBAAO;cACT,GApHgB;cAsHhB,aAAa,gCAAU,KAAK,MAAM,QAAQ;AACxC,uBAAO,iBAAiB,MAAM,KAAK,MAAM,GAAG,MAAM;cACpD,GAFa;cAIb,cAAc,gCAAU,KAAK,MAAM,QAAQ;AACzC,sBAAM,OAAO,KAAK,QAAQ,GAAG,GAC3B,KAAK,CAAC;AACR,oBAAI;AACF,uBAAK,KAAK,IAAI;AACd,yBAAO,KAAK,KAAK,EAAG,IAAG,KAAK,KAAK,IAAI,GAAG,MAAM,CAAC;AAC/C,uBAAK,MAAM;gBACb,UAAA;AACE,uBAAK,SAAS;gBAChB;AACA,uBAAO;cACT,GAXc;cAad,aAAa,gCAAU,KAAK,MAAM;AAChC,uBAAO,iBAAiB,MAAM,KAAK,MAAM,CAAC,CAAC;cAC7C,GAFa;cAIb,cAAc,gCAAU,KAAK,MAAM;AACjC,uBAAO,iBAAiB,MAAM,KAAK,MAAM,CAAC,CAAC;cAC7C,GAFc;cAId,cAAc,gCAAU,KAAK,MAAM;AACjC,uBAAO,YAAY,MAAM,KAAK,MAAM,OAAO;cAC7C,GAFc;cAId,eAAe,gCAAU,KAAK,MAAM;AAClC,uBAAO,YAAY,MAAM,KAAK,MAAM,QAAQ;cAC9C,GAFe;cAIf,oBAAoB,kCAAY;AAC9B,uBAAO,KAAK,UAAU,OAAO,KAAK,UAAU,IAAI,IAAI,CAAC,EAAE,SAAS;cAClE,GAFoB;cAIpB,aAAa,gCAAU,UAAU;AAC/B,oBAAI,SAAS;AACb,oBAAI,UAAU,SAAS,GAAG;AACxB,sBAAI,YAAY,KAAK,UAAU,CAAC,CAAC,GAAG;AAClC;sBACE,KAAK;sBACL;oBACF;kBACF;AACA,4BAAU,MAAM,UAAU,CAAC;AAC3B,6BAAW,UAAU,CAAC;gBACxB;AACA,6BAAa,IAAI,EAAE,KAAK,MAAM;AAC9B,oBAAI;AACF,wBAAM,KAAK,SAAS,IAAI;AACxB,uBAAK,KAAK,QAAQ;AAClB,yBAAO;gBACT,SAAShE,IAAG;AACV,uBAAK,KAAK,UAAU;AACpB,wBAAMA;gBACR;cACF,GArBa;cAuBb,WAAW,gCAAU,UAAU;AAC7B,6BAAa,IAAI,EAAE,KAAK,eAAe;AACvC,oBAAI;AACF,wBAAM,KAAK,SAAS,IAAI;AACxB,uBAAK,KAAK,aAAa;AACvB,yBAAO;gBACT,SAASA,IAAG;AACV,uBAAK,KAAK,kDAAkD;AAC5D,wBAAMA;gBACR;cACF,GAVW;cAYX,SAAS,gCAAU,YAAY;AAC7B,uBAAO,eAAe,MAAM,UAAU;cACxC,GAFS;YAGX;AAEA,kBAAM,iBAAiB,gCAAU,MAAM;AACrC,kBAAI,CAAC,KAAK,QAAS,OAAM,uBAAuB;AAChD,qBAAO;YACT,GAHuB;AAKvB,kBAAM,sBAAsB,gCAAUF,IAAG;AACvC,kBAAIG,KAAI,UAAU,SAASH,MAAK,WAAcA,KAAI,SAAS,OAAOA,EAAC;AACnE,sBAAQG,IAAG;gBACT,KAAK,UAAU;gBACf,KAAK,UAAU;gBACf,KAAK,UAAU;gBACf,KAAK,UAAU;AACb,yBAAOA;gBACT,KAAK,UAAU;AACb,sBAAIsD,MAAK,cAAe,QAAOtD;gBAEjC;AACE,yBAAO,KAAK,qBAAqBH,EAAC,IAAI,UAAU,OAAO;cAC3D;YACF,GAd4B;AAgB5B,kBAAM,0BAA0B,gCAAUA,IAAG;AAC3C,qBACE,oBAAoBA,EAAC,KACrB,MAAM,qCAAqC,OAAOA,EAAC;YAEvD,GALgC;AAOhC,kBAAM,mBAAmB,gCAAU,MAAMJ,MAAK;AAC5C,oBAAMQ,KACJ,aAAa,OAAOR,OAChBA,OACA,KAAK,6BAA6B,KAAK,SAASA,IAAG;AACzD,kBAAI,MAAMQ,MAAK,CAAC,KAAK,QAAQA,EAAC,GAAG;AAC/B,sBAAM,oCAAoCR,IAAG;cAC/C,WAAWQ,KAAI,KAAKA,KAAI,KAAK;AAC3B,sBAAM,cAAcR,MAAK,kBAAkB;AAC7C,qBAAOQ;YACT,GAVyB;AAYzB,kBAAM,wBAAwB,gCAAU,MAAM,eAAe;AAC3D,kBAAI,KAAK,eAAe;AACtB;kBACE;kBACA;gBACF;cACF;AACA,qBAAO;YACT,GAR8B;AAU9B,kBAAM,UAAU,gCAAS,EAAE,MAAM,KAAK,UAAU,KAAK;AACnD,oCAAsB,eAAe,IAAI,GAAG,QAAQ;AACpD,kBAAI,CAAC,EAAE,GAAG;AACR,kBAAE,aAAa,CAACJ,OACd;kBACE;kBACAA;gBACF;AACF,kBAAE,IAAI;kBACJ,QAAQ,gCAAU4E,OAAMC,MAAKC,MAAK,QAAQ;AACxC,0BAAM,CAAC,MAAM1E,EAAC,IAAIqD,MAAK,aAAaqB,MAAK,IAAI;AAC7C,0BAAMZ,KAAI,SACN,KAAK,oBACL,KAAK;AACT,2BAAOA,GAAEU,MAAK,SAASC,MAAK,MAAMzE,IAAG,KAAK,mBAAmB;kBAC/D,GANQ;gBAOV;cACF;AACA,sCAAwB,GAAG;AAC3B,oBAAM,iBAAiB,MAAM,GAAG;AAChC,kBAAI,KAAK;AACT,sBACE,SAAS,OAAO,WAAc,MAAM,UAAU,OAAO,UACrD;gBACA,KAAK,UAAU;AACb,uBAAK,KAAK,kBAAkB,KAAK,SAAS,GAAG;AAC7C;gBACF,KAAK,UAAU;AACb,uBAAK,EAAE,EAAE,OAAO,MAAM,KAAK,KAAK,KAAK;AACrC;gBACF,KAAK,UAAU,QAAQ;AACrB,sBAAI;AACJ,sBAAI,KAAK,QAAQ,GAAG,EAAG,KAAI,KAAK;2BACvB,aAAa,OAAO,KAAK;AAChC,wBAAI,CAAC,KAAK,aAAa,GAAG,GAAG;AAC3B,wBAAE,WAAW,GAAG;oBAClB,WAAWqD,MAAK,eAAe;AAC7B,0BAAI,KAAK;oBACX,WAAW,KAAK,iBAAiB,GAAG,GAAG;AACrC,4BAAM,OAAO,GAAG;AAChB,0BAAI,KAAK;oBACX,OAAO;AACL,wBAAE,WAAW,GAAG;oBAClB;kBACF,OAAO;AACL,0BAAM,OAAO,GAAG;AAChB,wBAAIA,MAAK,iBAAiB,OAAO,UAAU,GAAG,GAAG;AAC/C,0BAAI,KAAK;oBACX,OAAO;AACL,0BAAI,KAAK;oBACX;kBACF;AACA,uBAAK,EAAE,KAAK,SAAS,KAAK,GAAG;AAC7B;gBACF;gBACA,KAAK,UAAU;AACb,uBAAK,KAAK,iBAAiB,KAAK,SAAS,KAAK,MAAM,IAAI,CAAC;AACzD;gBACF,KAAK,UAAU,MAAM;AACnB,sBAAI,aAAa,OAAO,KAAK;AAC3B,yBAAK,EAAE,EAAE,OAAO,MAAM,KAAK,KAAK,IAAI;AACpC;kBACF,WAAW,eAAe,aAAa;AACrC,0BAAM,IAAI,WAAW,GAAG;kBAC1B,WAAW,CAAC,KAAK,qBAAqB,GAAG,GAAG;AAC1C;sBACE;sBACA;oBACF;kBACF;AACA,wBAAM,QAAQA,MAAK,MAAM,IAAI,cAAc,CAAC;AAC5C,kBAAAA,MAAK,MAAM,EAAE,IAAI,IAAI,aAAa,MAAM,CAAC,CAAC,GAAG,KAAK;AAClD,uBAAK,KAAK;oBACR,KAAK;oBACL;oBACA;oBACA,IAAI;oBACJ,KAAK;kBACP;AACA;gBACF;gBACA;AACE,0BAAQ,OAAO,KAAK,qCAAqC,GAAG;AAC5D,wBAAM,uCAAuC,OAAO,GAAG;cAC3D;AACA,kBAAI,GAAI,IAAG,QAAQ,KAAK,GAAG,SAAS,EAAE;AACtC,mBAAK,UAAU;AACf,qBAAO;YACT,GAxFgB;AA0FhB,iBAAK,YAAY;cACf,UAAU,kCAAY;AACpB,oBAAI,KAAK,SAAS;AAChB,wCAAsB,MAAM,YAAY;AACxC,wBAAM,KAAK,KAAK,iBAAiB,KAAK,OAAO;AAC7C,yBAAO,UAAU,IAAI,KAAK,EAAE,EAAE,KAAK,OAAO;AAC1C,2BAAS,OAAO,IAAI;AACpB,yBAAO,KAAK;AACZ,yBAAO,KAAK;AACZ,yBAAO,KAAK;AACZ,yBAAO,KAAK;AACZ,yBAAO;gBACT;cACF,GAZU;cAcV,eAAe,kCAAY;AACzB,sCAAsB,eAAe,IAAI,GAAG,iBAAiB;AAC7D,qBAAK,uBAAuB,KAAK,OAAO;AACxC,qBAAK,UAAU;AACf,uBAAO;cACT,GALe;cAOf,OAAO,gCAAU,gBAAgB;AAC/B,sCAAsB,MAAM,SAAS;AACrC,oBAAI,eAAgB,MAAK,cAAc;AACvC,sBAAM,KAAK,KAAK,cAAc,eAAe,IAAI,EAAE,OAAO;AAC1D,qBAAK,UAAU;AACf,+BAAe,KAAK,IAAI,EAAE;AAC1B,uBAAO;cACT,GAPO;cASP,MAAM,kCAAY;AAChB,+BAAe,IAAI;AACnB,oBAAI,KAAK;AACT,wBAAQ,UAAU,QAAQ;kBACxB,KAAK;AACH,0BAAM;AACN,0BAAM,UAAU,CAAC;AACjB;kBACF,KAAK;AACH,0BAAM,UAAU,CAAC;AACjB,0BAAM,UAAU,CAAC;AACjB;kBACF;AACE,0BAAM,2BAA2B;gBACrC;AACA,oBAAI,WAAc,KAAK;AACrB,yBAAO;gBACT,WAAW,CAAC,KAAK,gBAAgB;AAC/B,wBAAM,4CAA4C;gBACpD;AACA,qBAAK,UAAU;AACf,oBAAI,SAAS,KAAK;AAChB,yBAAO,QAAQ,MAAM,KAAK,UAAU,MAAM,GAAG;gBAC/C,WAAW,MAAM,QAAQ,GAAG,GAAG;AAC7B,sBAAI,MAAM,UAAU,QAAQ;AAC1B;sBACE;oBACF;kBACF;AACA,sBAAI;oBAAQ,CAACzD,IAAG,MACd,QAAQ,MAAM,IAAI,GAAG,wBAAwBA,EAAC,GAAGA,EAAC;kBACpD;AACA,yBAAO;gBACT,WAAW,eAAe,aAAa;AACrC,wBAAM,IAAI,WAAW,GAAG;gBAC1B;AACA,oBAAI,aAAa,OAAO,OAAO,CAAC,KAAK,qBAAqB,GAAG,GAAG;AAC9D,sBAAI,MAAM,UAAU,QAAQ;AAC1B;sBACE;oBACF;kBACF;AACA,yBAAO,KAAK,GAAG,EAAE;oBAAQ,CAAC,MACxB,QAAQ,MAAM,GAAG,wBAAwB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;kBAC1D;AACA,yBAAO;gBACT,OAAO;AACL,yBAAO,QAAQ,MAAM,KAAK,wBAAwB,GAAG,GAAG,GAAG;gBAC7D;AACA,sBAAM,8BAA8B;cACtC,GAlDM;cAoDN,YAAY,gCAAU,KAAK,KAAK;AAC9B,+BAAe,IAAI;AACnB,oBAAI,MAAM,UAAU,QAAQ;AAC1B,wBAAM;AACN,wBAAM;gBACR;AACA,sBAAMG,KAAI,wBAAwB,GAAG;AACrC,oBACE,UAAU,WAAWA,MACrB,UAAU,SAASA,MACnB,UAAU,SAASA,IACnB;AACA,wBAAM,qCAAqC;gBAC7C;AACA,uBAAO,QAAQ,MAAM,KAAK,UAAU,MAAM,GAAG;cAC/C,GAfY;cAiBZ,MAAM,kCAAY;AAChB,sCAAsB,MAAM,QAAQ;AACpC,sBAAM,KAAK,KAAK,aAAa,eAAe,IAAI,EAAE,OAAO;AACzD,wBAAQ,IAAI;kBACV,KAAK,KAAK;AACR,2BAAQ,KAAK,UAAU;kBACzB,KAAK,KAAK;AACR,2BAAQ,KAAK,UAAU;kBACzB;AACE,yBAAK,UAAU;AACf,4BAAQ,OAAO;sBACb;sBACA;sBACA,KAAK,kBAAkB,EAAE;sBACzB;sBACA,KAAK,YAAY,KAAK,OAAO;oBAC/B;AACA,uBAAG,QAAQ,KAAK,GAAG,SAAS,EAAE;gBAClC;cACF,GAnBM;cAqBN,WAAW,kCAAY;AACrB,qBAAK,KAAK;AACV,uBAAO,KAAK,MAAM;cACpB,GAHW;cAKX,cAAc,kCAAY;AACxB,oBAAI;AACF,wBAAM,KAAK,KAAK,KAAK;AACrB,uBAAK,MAAM;AACX,yBAAO;gBACT,UAAA;AACE,sBAAI;AACF,yBAAK,SAAS;kBAChB,SAASD,IAAG;kBAAC;gBACf;cACF,GAVc;cAYd,KAAK,gCAAU,KAAK,QAAQ;AAC1B,oBAAI,CAAC,eAAe,IAAI,EAAE,SAAS;AACjC,wBAAM,+CAA+C;gBACvD;AACA,oBAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,sBAAI,IAAI;AACR,wBAAME,KAAI,KAAK;AACf,yBAAO,IAAIA,IAAG;AACZ,wBAAI,CAAC,IAAI,KAAK,IAAI,GAAG;kBACvB;AACA,yBAAO;gBACT,WAAW,OAAO,aAAa,OAAO,KAAK;AACzC,sBAAI,IAAI;AACR,wBAAMA,KAAI,KAAK;AACf,yBAAO,IAAIA,IAAG;AACZ,wBAAI,KAAK,oBAAoB,KAAK,SAAS,CAAC,CAAC,IAAI,KAAK,IAAI,GAAG;kBAC/D;AACA,yBAAO;gBACT;AACA,+BAAe,MAAM,GAAG;AACxB,wBACE,WAAc,SACV,KAAK,oBAAoB,KAAK,SAAS,GAAG,IAC1C,QACJ;kBACA,KAAK,KAAK;AACR,2BAAO;kBACT,KAAK,KAAK,gBAAgB;AACxB,wBAAIqD,MAAK,eAAe;AACtB,4BAAM,KAAK,KAAK,qBAAqB,KAAK,SAAS,GAAG;AACtD,0BACE,MAAM,OAAO,oBACb,MAAM,OAAO,kBACb;AACA,+BAAO,OAAO,EAAE,EAAE,QAAQ;sBAC5B;AACA,6BAAO;oBACT,OAAO;AACL,4BAAM,KAAK,KAAK,sBAAsB,KAAK,SAAS,GAAG;AACvD,0BACE,KAAK,OAAO,oBACZ,KAAK,OAAO,kBACZ;AACA;0BACE,mDAAmD;wBACrD;sBACF;AAEA,6BAAO,KAAK,QAAQ,EAAE,IAAI,KAAK,IAAI;oBACrC;kBACF;kBACA,KAAK,KAAK;AACR,2BAAO,KAAK,sBAAsB,KAAK,SAAS,GAAG;kBACrD,KAAK,KAAK;AACR,2BAAO,KAAK,oBAAoB,KAAK,SAAS,GAAG;kBACnD,KAAK,KAAK,aAAa;AACrB,0BAAMrD,KAAI,KAAK,qBAAqB,KAAK,SAAS,GAAG,GACnD,MAAM,KAAK,oBAAoB,KAAK,SAAS,GAAG,GAChD,KAAK,IAAI,WAAWA,EAAC;AAEvB,wBAAIA,GAAG,IAAG,IAAIqD,MAAK,OAAO,EAAE,MAAM,KAAK,MAAMrD,EAAC,GAAG,CAAC;AAElD,wBAAIA,MAAK,KAAK,GAAG,qBAAqB,OAAO;AAC3C,2BAAK,GAAG,UAAU,KAAK,GAAG,MAAM;oBAClC;AACA,2BAAO;kBACT;kBACA;AACE;sBACE;sBACA,4BAA4B,MAAM;oBACpC;gBACJ;AACA,sBAAM,cAAc;cACtB,GA1EK;cA4EL,QAAQ,gCAAU,KAAK;AACrB,uBAAO,KAAK,IAAI,KAAK,KAAK,cAAc;cAC1C,GAFQ;cAIR,UAAU,gCAAU,KAAK;AACvB,uBAAO,KAAK,IAAI,KAAK,KAAK,YAAY;cACxC,GAFU;cAIV,WAAW,gCAAU,KAAK;AACxB,uBAAO,KAAK,IAAI,KAAK,KAAK,WAAW;cACvC,GAFW;cAIX,SAAS,gCAAU,KAAK;AACtB,uBAAO,KAAK,IAAI,KAAK,KAAK,WAAW;cACvC,GAFS;cAIT,SAAS,gCAAU,KAAK;AACtB,sBAAMuD,KAAI,KAAK,IAAI,KAAK,KAAK,aAAa;AAC1C,uBAAO,SAASA,KAAIA,KAAI,KAAK,MAAMA,EAAC;cACtC,GAHS;cAKT,eAAe,gCAAU,KAAK;AAC5B,uBAAO,KAAK;kBACV,eAAe,eAAe,IAAI,GAAG,GAAG,EAAE;kBAC1C;gBACF;cACF,GALe;cAOf,gBAAgB,gCAAU,MAAM,CAAC,GAAG;AAClC,+BAAe,eAAe,IAAI,GAAG,CAAC;AACtC,sBAAMvD,KAAI,KAAK;AACf,yBAAS,IAAI,GAAG,IAAIA,IAAG,EAAE,GAAG;AAC1B,sBAAI,KAAK,KAAK,oBAAoB,KAAK,SAAS,CAAC,CAAC;gBACpD;AACA,uBAAO;cACT,GAPgB;cAShB,eAAe,gCAAU,MAAM;AAC7B,uBAAO,eAAe,IAAI,EAAE,iBACxB,KAAK,6BAA6B,KAAK,SAAS,IAAI,IACpD;cACN,GAJe;cAMf,cAAc,gCAAU,KAAK;AAC3B,uBAAO,eAAe,IAAI,EAAE,iBACxB,KAAK,4BAA4B,KAAK,SAAS,GAAG,IAClD;cACN,GAJc;cAMd,QAAQ,kCAAY;AAClB,uBAAO,MAAM,KAAK,kBAAkB,eAAe,IAAI,CAAC;cAC1D,GAFQ;cAIR,YAAY,kCAAY;AACtB,uBAAO,MAAM,KAAK,sBAAsB,eAAe,IAAI,CAAC;cAC9D,GAFY;YAGd;AAEA;AACE,oBAAM,OAAO;gBACX,YAAY;gBACZ,KAAK,kCAAY;AACf,yBAAO,SAAS,IAAI,IAAI;gBAC1B,GAFK;gBAGL,KAAK,6BAAM,MAAM,oCAAoC,GAAhD;cACP;AACA,qBAAO,eAAe,KAAK,WAAW,WAAW,IAAI;AACrD,qBAAO,eAAe,GAAG,WAAW,WAAW,IAAI;YACrD;AAEA,mBAAO,eAAe,KAAK,WAAW,eAAe;cACnD,YAAY;cACZ,KAAK,kCAAY;AACf,uBAAO,KAAK,qBAAqB,KAAK,OAAO;cAC/C,GAFK;cAGL,KAAK,6BAAM,MAAM,wCAAwC,GAApD;YACP,CAAC;AAED,oBAAQ,MAAM;cACZ;cACA;YACF;AAEA,gBAAI,KAAK,WAAW,GAAG;AACrB,sBAAQ,IAAI,cAAc,SAAU,cAAc,WAAW;AAC3D,sBAAM,MAAM,aAAa,cAAc,GAAG,SAAS;AACnD,8BAAc,IAAI;AAClB,oBAAI,cAAc,eAAe,YAAY,aAAa;AACxD,wBAAM,0DAA0D;gBAClE;AACA,oBAAI,MAAM;AACV,6BAAa,KAAK,MAAM,GAAG;cAC7B;AACA,oBAAM,MAAM,QAAQ,IAAI;AACxB,kBAAI,YAAY,OAAO,OAAO,GAAG,SAAS;AAE1C,kBAAI,eAAe,KAAK;AAExB,kBAAI,UAAU,eAAe,WAAY;AACvC,uBAAO,IAAI,aAAa,aAAa,IAAI,EAAE,QAAQ;cACrD;AAEA,kBAAI,cAAc,KAAK;AAEvB,kBAAI,UAAU,cAAc,WAAY;AACtC,uBAAO,IAAI,YAAY,aAAa,IAAI,EAAE,QAAQ;cACpD;YACF;UACF,CAAC;AAED,qBAAW,oBAAoB,aAAa,KAAK,SAAU,SAAS;AAClE,kBAAM,OAAO,QAAQ;AACrB,oBAAQ,iBAAiB,WAAY;AACnC;AACA,oBAAM,OAAO,2BAAI,SAAS;AACxB,sBAAM,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;cAChC,GAFa;AAGb,kBAAI,EAAE,WAAW,6BAA6B,WAAW;AACvD,qBAAK,oDAAoD;cAC3D;AACA,oBAAM2E,WAAU,KAAK,WAAW,KAAK,8BAA8B;AACnE,oBAAM,KAAKA,SAAQ,IAAI;AAEvB,oBAAM,UAAU,gCAAU,IAAI;AAC5B,oBAAI,KAAK,OAAO,MAAM,IAAI,EAAE;AAC5B,oBAAI,GAAI,QAAO;AACf,qBAAK,QAAQ,EAAE,OAAO,QAAQ,MAAM,GAAG;AAEvC,uBAAO,MAAM,IAAI,IAAI,EAAE;AACvB,uBAAO;cACT,GAPgB;AAShB,oBAAM,SAAS;gBACb,QAAQ,CAAC;gBAET,OAAO;gBAEP,OAAO,oBAAI,QAAQ;gBAEnB,MAAM,CAAC;gBACP,MAAM,gCAAU,KAAK;AACnB,wBAAM,KAAK,IAAI,GAAG,GAAG;AACrB,uBAAK,IAAI,QAAQ,EAAE,CAAC,IAAI;AACxB,sBAAI,KAAK,OAAO,QAAQ,EAAE,IAAI,EAAG,MAAK,OAAO,KAAK,EAAE;AACpD,yBAAO;gBACT,GALM;gBAMN,OAAO,gCAAU,IAAI,YAAY;AAC/B,sBAAI,IAAI;AACN,2BAAO,KAAK,IAAI,QAAQ,EAAE,CAAC;AAC3B,0BAAM,WAAW,GAAG;AACpB,0BAAM,OAAO,KAAK,qBAAqB,GAAG,SAAS,CAAC;AACpD,uBAAG,MAAM;AACT,0BAAM,QAAQ,KAAK,OAAO,QAAQ,EAAE;AACpC,wBAAI,SAAS,EAAG,MAAK,OAAO,OAAO,OAAO,CAAC;AAC3C,wBAAI,cAAc,YAAY,MAAM;AAClC,2BAAK,yBAAyB,MAAM,QAAQ;oBAC9C;kBACF;gBACF,GAZO;gBAcP,MAAM,gCAAU,KAAK,UAAU;AAC7B,sBAAI,YAAY,SAAS,QAAQ;AAC/B,+BAAW,YAAY,KAAK,MAAM,KAAK,QAAQ,CAAC;AAChD,6BAAS,SAAS;kBACpB,OAAO;AACL,+BAAW,YAAY,GAAG;kBAC5B;gBACF,GAPM;gBASN,KAAK,uBAAO,OAAO,IAAI;gBAEvB,OAAO,gCAAU,IAAIC,WAAU,MAAM;AACnC,yBACE,KAAK,IAAI,EAAE,MACVA,WAAU,KAAK,8BAA8B,EAAE,IAAI;gBAExD,GALO;cAMT;AAEA,oBAAM,eAAe,gCAAU,KAAK,OAAO,OAAO,CAAC,GAAG;AACpD,uBAAO,MAAM,GAAG,UAAU,KAAK,KAAK,mBAAmB;cACzD,GAFqB;AAIrB,oBAAM,WAAW,gCAAU,SAAS,eAAe,MAAM;AACvD,sBAAM,KAAK,OAAO,MAAM,QAAQ,MAAM,KAAK,KAAK,OAAO,OAAO,CAAC;AAC/D,uBAAO,eAAe,aAAa,EAAE,IAAI;cAC3C,GAHiB;AAKjB,oBAAM,iBAAiB,kCAAY;AACjC,uBAAO,OAAO,OAAO,CAAC,KAAK,QAAQ,OAAO,OAAO,CAAC,CAAC;cACrD,GAFuB;AAIvB,oBAAM,sBAAsB,wBAAC5E,OAAM;AACjC,uBAAO,OAAOA,MAAK,QAAQA,GAAE,CAAC;cAChC,GAF4B;AAI5B,oBAAM,cAAc;gBAClB,MAAM,gCAAU,IAAI;AAClB,wBAAM,QAAQ,uBAAO,OAAO,IAAI,GAC9B,OAAO,GAAG,QAAQ,uBAAO,OAAO,IAAI;AACtC,sBAAI,KAAK,eAAe;AACtB,yBAAK,yCAAyC;kBAChD;AACA,wBAAM,KAAK,uBAAO,OAAO,IAAI;AAC7B,wBAAM,MAAM,KAAK;AACjB,wBAAM,WAAW,KAAK,YAAY;AAClC,wBAAM,KAAK,OAAO,KAAK,KAAK;AAC5B,qBAAG,WAAW,GAAG;AACjB,qBAAG,aAAa,CAAC,CAAC2E,SAAQ,KAAK;oBAC7B,GAAG;oBACH;kBACF;AACA,qBAAG,OAAO,QAAQ,EAAE;AACpB,qBAAG,MAAM,GAAG,UAAU;AACtB,yBAAO;gBACT,GAlBM;gBAoBN,OAAO,gCAAU,IAAI;AACnB,wBAAM,KAAK,SAAS,IAAI,KAAK;AAC7B,wBAAM,WAAW;oBACf,UAAU,MAAM,GAAG;kBACrB;AACA,sBAAI,IAAI;AACN,0BAAM,WACJ,GAAG,QAAQ,aAAa,OAAO,GAAG,OAC9B,CAAC,CAAC,GAAG,KAAK,SACV;AACN,2BAAO,MAAM,IAAI,QAAQ;kBAC3B;AACA,yBAAO;gBACT,GAbO;gBAeP,MAAM,gCAAU,IAAI;AAClB,wBAAM,KACJ,aAAa,OAAO,GAAG,OACnB,EAAE,KAAK,GAAG,KAAK,IACf,GAAG,QAAQ,uBAAO,OAAO,IAAI;AACnC,sBAAI,WAAW,GAAG,SAAS;AACzB;sBACE;sBACA;oBACF;kBACF,WAAW,CAAC,GAAG,KAAK;AAClB,yBAAK,4BAA4B;kBACnC;AACA,wBAAM,KAAK,SAAS,EAAE;AACtB,sBAAI,GAAG,YAAY,MAAM,QAAQ,GAAG,UAAU,GAAG;AAC/C,uBAAG,YAAY,OAAO;kBACxB;AACA,wBAAM,cAAc,GAAG;AACvB,sBAAI,YAAY;AAChB,wBAAM,cAAc,CAAC,CAAC,GAAG;AACzB,sBAAI,aAAa,OAAO,aAAa;AACnC,wBAAI,CAAC,YAAa,IAAG,cAAc,CAAC;AAEpC,uBAAG,WAAW,SAAU,KAAK,MAAM;AACjC,6BAAO;wBACL;0BACE,MAAM;0BACN,aAAa,GAAG;0BAChB,WAAW,EAAE;0BACb;wBACF;wBACA,OAAO;sBACT;oBACF;kBACF;AACA,sBAAI;AACF,0BAAM,cAAc,CAAC,CAAC,GAAG,eACrB,GAAG,QAAQ,MAAM,OAAO,GAAG,YAAY,IACvC;AACJ,uBAAG,KAAK,EAAE;AACV,wBAAI,WAAc,aAAa;AAC7B,yBAAG,cACD,GAAG,QAAQ,MAAM,OAAO,GAAG,YAAY,IAAI;oBAC/C;AACA,0BAAM,kBAAkB,CAAC,CAAC,GAAG,kBACzBA,SAAQ,KAAK,0BAA0B,EAAE,IACzC;AACJ,wBAAI,WAAc,iBAAiB;AACjC,yBAAG,kBAAkB;oBACvB;AACA,wBAAI,GAAG,oBAAoB,UAAU;AACnC,yBAAG,WAAW;AAEd,6BAAO,KAAK;wBACV,MAAM;wBACN,aAAa,GAAG;wBAChB,WAAW;wBACX,KAAK;sBACP,CAAC;oBACH;kBACF,UAAA;AACE,2BAAO,GAAG;AACV,wBAAI,GAAG,SAAU,IAAG,WAAW;kBACjC;AACA,yBAAO;gBACT,GAjEM;gBAmEN,cAAc,kCAAY;AACxB,wBAAM,KAAK,uBAAO,OAAO,IAAI,GAC3B,MAAMA,SAAQ;AAChB,mBAAC,eAAe,EAAE,QAAQ,SAAU,GAAG;AACrC,wBAAI,OAAO,yBAAyB,KAAK,CAAC,EAAG,IAAG,CAAC,IAAI,IAAI,CAAC;kBAC5D,CAAC;AACD,qBAAG,UAAUA,SAAQ;AACrB,qBAAG,UAAUA,SAAQ,KAAK,oBAAoB;AAC9C,yBAAO;gBACT,GATc;gBAWd,QAAQ,gCAAU,IAAI;AACpB,wBAAM,KAAK,SAAS,EAAE;AACtB,wBAAM,WAAW;oBACf,WAAWA,SAAQ,KAAK,qBAAqB,GAAG,OAAO;oBACvD,UAAU,GAAG;oBACb,UAAU;kBACZ;AACA,yBAAO,KAAK,KAAK,SAAS,UAAU,MAAM;AAC1C,yBAAO;gBACT,GATQ;gBAWR,MAAM,gCAAU,IAAI;AAClB,uBAAK,0BAA0B;gBACjC,GAFM;cAGR;AAEA,yBAAW,YAAY,eAAgB,IAAI;AACzC,qBAAK,GAAG;AACR,oBAAI,QACF,OAAO,GAAG,MACV,SAAS,GAAG;AACd,sBAAM,cAAc,YAAY,IAAI;AACpC,oBAAI;AACF,sBACE,YAAY,eAAe,MAAM,KACjC,YAAY,MAAM,aAAa,UAC/B;AACA,6BAAS,MAAM,YAAY,MAAM,EAAE,EAAE;kBACvC,OAAO;AACL,yBAAK,mCAAmC,GAAG,IAAI;kBACjD;gBACF,SAAS9C,MAAK;AACZ,2BAAS;AACT,2BAAS;oBACP,WAAW,GAAG;oBACd,SAASA,KAAI;oBACb,YAAYA,KAAI;oBAChB,OAAO;kBACT;AACA,sBAAIA,KAAI,OAAO;AACb,2BAAO,QACL,aAAa,OAAOA,KAAI,QACpBA,KAAI,MAAM,MAAM,OAAO,IACvBA,KAAI;kBACZ;AACA,sBAAI;AACF8C,6BAAQ,OAAO;sBACb;sBACA;sBACA9C;sBACA;oBACF;gBACJ;AACA,oBAAI,CAAC,MAAM;AACT,yBAAO,OAAO,QAAQ,eAAe;gBACvC;AAEA,uBAAO;kBACL;oBACE,MAAM;oBACN;oBACA,WAAW,GAAG;oBACd,oBAAoB;oBACpB,mBAAmB,YAAY,IAAI;oBACnC,eAAe,GAAG;oBAElB;kBACF;kBACA,OAAO;gBACT;cACF;AACA,yBAAW,YAAY;gBACrB,MAAM;gBACN,QAAQ;cACV,CAAC;YACH,EAAE,KAAK,EAAE,QAAQ,CAAC;UACpB,CAAC;AAEA;AACD,qBAAW,oBAAoB,aAAa,KAAK,SAAU,SAAS;AAClE,kBAAMwB,QAAO,QAAQ,MACnB,OAAO,QAAQ,MACf,OAAO,QAAQ,KAAK;AACtB,kBAAM,MAAM,uBAAO,OAAO,IAAI;AAC9B,oBAAQ,MAAM;AAEd,iBAAK,YAAY,UAAU,cAAc,SAAU,YAAY,OAAO;AACpE,kBAAI,EAAE,gBAAgB,QAAQ,KAAK,cAAc;AAC/C,qBAAK,wCAAwC;cAC/C;AACA,oBAAM,KAAK,KAAK,qBAAqB,MAAM,YAAY,IAAI,CAAC;AAC5D,kBAAI,IAAI;AACN,qBAAK,yBAAyB,MAAM,oBAAoB,EAAE;cAC5D;AACA,kBAAI,KAAK,YAAY,KAAK,iBAAiB,KAAK,MAAM,GAAG;AACvD;kBACE;kBACA;gBACF;cACF;AACA,qBAAO;YACT;AAEA,gBAAI,aAAa,SAAU,KAAK;AAC9B,kBAAIb,SAAQ;AACZ,oBAAM,WAAW,CAAC,MAAM,KAAK;AAC7B,yBAAWhD,QAAO,UAAU;AAC1B,sBAAMS,KAAI,IAAIT,IAAG;AACjB,oBAAIS,IAAG;AACL,oBAAEuC;AACFvC,qBAAE,OAAO,eAAeA,GAAE,SAAS,CAAC,CAACA,GAAE,cAAc;AACrD,sBAAI,UAAUT,MAAK;AACjB,wBAAI,CAACS,GAAE,OAAO,UAAU,aAAa,OAAOA,GAAE,MAAM;AAClDA,yBAAE,OAAO;wBACNA,GAAE,OAAO,SAASoD,MAAK,aAAapD,GAAE,IAAI;sBAC7C;oBACF;AACAA,uBAAE,OAAO,YAAY,CAAC,CAACA,GAAE,SAAS;kBACpC;gBACF;cACF;AACA,kBAAI,CAACuC;AACH;kBACE;kBACA;kBACA;gBACF;AACF,qBAAO;YACT;UACF,CAAC;AAEA;AACD,qBAAW,oBAAoB,aAAa,KAAK,SAAU,SAAS;AAClE,gBAAI,CAAC,QAAQ,KAAK,QAAQ,sBAAsB;AAC9C;YACF;AACA,kBAAMa,QAAO,QAAQ,MACnB,OAAO,QAAQ,MACf,OAAO,QAAQ,KAAK;AACtB,kBAAM,OAAO,uBAAO,OAAO,IAAI;AAC/B,oBAAQ,OAAO;AAEf,kBAAM,MAAM,KAAK;AAEjB,gBAAI,UAAU,gBAAgB,SAAUrD,IAAG,QAAQ,OAAO;AACxD,kBAAIA,KAAI,KAAKA,MAAK,KAAK,aAAc,QAAO;AAC5C,oBAAM,MACJ,KAAK,eACL,IAAI,yBAAyB,WAAW,SAASA;AACnD,qBAAO,QAAQ,MAAM,IAAI,IAAI,yBAAyB,GAAG;YAC3D;AAEA,gBAAI,UAAU,qBAAqB,SAAUA,IAAG,QAAQ,OAAO;AAC7D,kBAAIA,KAAI,KAAKA,MAAK,KAAK,aAAc,QAAO;AAC5C,oBAAM,MACJ,KAAK,oBACL,IAAI,+BAA+B,WAAW,SAASA;AACzD,qBAAO,QAAQ,MAAM,IAAI,IAAI,+BAA+B,GAAG;YACjE;AAEA,gBAAI,UAAU,aAAa,SAAUA,IAAG,QAAQ,OAAO;AACrD,kBAAIA,KAAI,KAAKA,MAAK,KAAK,UAAW,QAAO;AACzC,oBAAM,MACJ,KAAK,YAAY,IAAI,sBAAsB,WAAW,SAASA;AACjE,qBAAO,QAAQ,MAAM,IAAI,IAAI,sBAAsB,GAAG;YACxD;AAEA,kBAAM,iBAAiB,gCAAU,YAAY,YAAY;AACvD,qBAAO,SAAU,KAAK,gBAAgB,OAAO;AAC3C,oBAAI,MAAM,UAAU,OAAQ,OAAM,IAAI,WAAW;AACjD,oBAAI,eAAe,YAAY;AAC7B,uBAAK,IAAI,IAAI,SAAS,GAAG;AACzB,yBAAO;gBACT,WAAW,CAACqD,MAAK,MAAM,GAAG,GAAG;AAC3B,0BAAQ,aAAa;oBACnB;oBACA,aAAa;kBACf;gBACF;AACA,oBAAI,KAAK,KAAK,IAAI,GAAG;AACrB,oBAAI,cAAe,MAAK,OAAO,GAAG;AAClC,uBAAO;cACT,EAAE,KAAK,oBAAI,IAAI,CAAC;YAClB,GAhBuB;AAkBvB,kBAAM,kBAAkB,gCAAU,MAAM,YAAY;AAClD,oBAAM,UAAU,eAAe,MAAM,UAAU;AAE/C,qBAAO,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;gBACxC;gBAEA,QAAQ,wBAAC,UAAU;AACjB,wBAAM,KAAK,QAAQ;AACnB,kBAAAA,MAAK,QAAQ,OAAO,GAAG,OAAO;AAC9B,yBAAO;gBACT,GAJQ;gBAMR,KAAK,wBAAC,UAAU,QAAQ,KAAK,GAAxB;gBAEL,OAAO,wBAAC,UAAU,QAAQ,OAAO,IAAI,GAA9B;gBAEP,SAAS,wBAAC,UAAU;AAClB,wBAAMpD,KAAI,QAAQ,OAAO,IAAI;AAC7B,sBAAIA,GAAGA,IAAE,QAAQ;gBACnB,GAHS;cAIX,CAAC;YACH,GArBwB;AAuBxB,iBAAK,QAAQ,gBAAgB,SAAS,KAAK,YAAY;AAEvD,iBAAK,UAAU,gBAAgB,WAAW,KAAK,mBAAmB;AAElE,iBAAK,aAAa,CAAC,aAAa,IAAI,KAAK,mBAAmB,QAAQ;AAEpE,iBAAK,SAAS,gCAAS,EAAE,YAAY4B,MAAK,WAAW;AACnD,kBAAI,EAAE,yBAAyB,UAAU;AACvC,oBAAI;AACF,oBAAE;oBACA,qBAAqB,aAAa,SAASA,KAAI;kBACjD;gBACF,SAAS/B,IAAG;gBAAC;cACf;AACA,kBAAI;AACJ,kBAAI+B,gBAAe,QAAQ,eAAgB,MAAK,KAAK;uBAC5C,UAAU,SAAS,EAAG,MAAK;uBAC3BA,gBAAe,QAAQ,aAAc,MAAKA,KAAI;AACvD,qBAAO,MAAM,KAAK;YACpB,GAbc;AAcd,iBAAK,OAAO,gBAAgB,IAAI,QAAQ,MAAM,KAAK,OAAO,IAAI;AAE9D,iBAAK,SAAS,CAAC,WAAW,UAAUwB,MAAK,KAAK,WAAW,OAAO,KAAK;AAErE,iBAAK,cAAc,SAAU,KAAK;AAChC,kBAAI,aAAa;AACjB,oBAAM,MACJ,gBAAgB,KAAK,iBACjB,OACA,IAAI,WAAW,aAAa,IAAI,KAAK,eAAe;AAC1D,kBAAI;AACF,sBAAM,UAAU,IAAI,WAAW,KAAK,2BAA2B;AAC/D,2BAAWvD,MAAK,OAAO,QAAQ;kBAC7B,UAAU;kBACV,aAAa;gBACf,CAAC,GAAG;AACF,wBAAM,IAAIA,GAAE,CAAC,GACXF,KAAIE,GAAE,CAAC;AACT,sBAAI,SAAS,QAAQ,CAAC,EAAG,SAAQ,CAAC,IAAI,QAAQF,EAAC;2BACtC,SAAS,QAAQA,EAAC,EAAG,SAAQA,EAAC,IAAI,QAAQ,CAAC;gBACtD;AACA,oBAAI,IAAI,iBAAiB;AACvB,wBAAM,QAAQ,gCAAU,YAAY,MAAM;AACxC,wBAAI,CAAC,YAAY,SAAS,EAAE,QAAQ,UAAU,KAAK,GAAG;AACpD,6BAAO,SAAU0D,MAAK,MAAM,MAAMI,OAAM,QAAQ,OAAO;AACrD,4BAAI;AACF,iCAAO,KAAK,GAAG,SAAS,KAAK;wBAC/B,SAAS5D,IAAG;AACV,8BAAI,EAAEA,cAAa,QAAQ,iBAAiB;AAC1C,4BAAAuD,MAAK,QAAQA,MAAK,QAAQ,KAAK,CAAC;AAChC,4BAAAA,MAAK,QAAQ,OAAOA,MAAK,aAAavD,GAAE,OAAO,CAAC;0BAClD;AACA,iCAAO,KAAK,OAAO,YAAYA,EAAC;wBAClC;sBACF;oBACF,OAAO;AACL,6BAAO,YAAa,MAAM;AACxB,4BAAI;AACF,iCAAO,KAAK,GAAG,IAAI,KAAK;wBAC1B,SAASA,IAAG;AACV,iCAAO,KAAK,OAAO,YAAYA,EAAC;wBAClC;sBACF;oBACF;kBACF,GAtBc;AAuBd,wBAAM,SAAS;oBACb;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;kBACF;AACA,wBAAM,YAAY,uBAAO,OAAO,IAAI;AACpC,6BAAW,KAAK,QAAQ;AACtB,0BAAM,IAAI,QAAQ,CAAC;AACnB,wBAAI,EAAE,aAAa,UAAW;6BACrB,eAAe,KAAK,QAAQ,YAAY,GAAG;AAClD,gCAAU,CAAC,IAAI,QAAQ;oBACzB,WAAW,cAAc,KAAK,QAAQ,aAAa,GAAG;AACpD,gCAAU,CAAC,IAAI,QAAQ;oBACzB,OAAO;AACL,gCAAU,CAAC,IAAI,MAAM,GAAG,CAAC;oBAC3B;kBACF;AACA,sBAAI,eAAe,WAAW,KAAK;gBACrC,OAAO;AACL,sBAAI,eAAe,SAAS,CAAC,CAAC,IAAI,cAAc;gBAClD;AACA,oBAAI,MAAM,IAAI,WAAW;AACvB,sBAAIF;AACJ,sBAAI,aAAa,OAAO,IAAI,SAAUA,MAAI,IAAI;2BACrC,IAAI,aAAcA,MAAI;2BACtB,IAAI,eAAe,IAAI,aAAa,IAAI;AAC/CA,yBAAI;sBACDA,MAAI;AACT,sBAAI,YAAYA;gBAClB;cACF,SAASE,IAAG;AACV,oBAAI,WAAY,YAAW,QAAQ;AACnC,sBAAMA;cACR;AACA,qBAAO;YACT;AAEA,iBAAK,eAAe,UAAU,cAAc,SAAU,KAAK;AACzD,qBAAO,KAAK,YAAY,KAAK,MAAM,GAAG;YACxC;UACF,CAAC;AAEA;AACD,qBAAW,oBAAoB,aAAa,KAAK,SAAU,SAAS;AAClE,kBAAM,iBAAiB,gCAASsE,QAAO7D,UAAS;AAC9C,kBAAI,CAAC,WAAW,qBAAqB,CAAC,WAAW,SAAS;AACxD,uBAAO,QAAQ;kBACb,IAAI;oBACF;kBAGF;gBACF;cACF,WAAW,gBAAgB,OAAO,mBAAmB;AACnD,uBAAO,QAAQ;kBACb,IAAI;oBACF;kBAEF;gBACF;cACF,WACE,CAAC,WAAW,oBACZ,CAAC,WAAW,6BACZ,CAAC,WAAW,wBACZ,CAAC,WAAW,qBAAqB,UAAU,0BAC3C,CAAC,WAAW,SAAS,cACrB;AACA,uBAAO,QAAQ,OAAO,IAAI,MAAM,6BAA6B,CAAC;cAChE;AACA,kBAAI,CAACA,YAAW,aAAa,OAAOA,UAAS;AAC3CA,2BAAU,uBAAO,OAAO,IAAI;cAC9B;AACA,oBAAM,YAAY,IAAI,IAAI,WAAW,SAAS,IAAI,EAAE;AACpD,kBAAI,UAAU,IAAI,cAAc,GAAG;AACjC,uBAAO,QAAQ,QAAQ,OAAO;cAChC;AACA,kBAAI,WAAcA,SAAQ,SAAS;AACjCA,yBAAQ,UAAU,UAAU,IAAI,cAAc,IAC1C,CAAC,UAAU,IAAI,cAAc,KAAK,IAClC;cACN;AACA,kBAAI,WAAcA,SAAQ,cAAc;AACtCA,yBAAQ,eAAe,UAAU,IAAI,mBAAmB;cAC1D;AACA,kBAAI,WAAcA,SAAQ,UAAU;AAClCA,yBAAQ,WAAW6D,QAAO;cAC5B;AAEA,kBAAI,eAAe,OAAO7D,SAAQ,UAAU;AAC1CA,yBAAQ,WAAWA,SAAQ,SAAS;cACtC;AACA,oBAAM,aAAa,IAAI,QAAQ,SAC7B,iBACA,gBACA;AACA,sBAAM,UAAU;kBACd,QAAQ,OAAO;kBACf,QAAQ,OAAO;kBACf,QAAQ,OAAO;gBACjB;AACA,sBAAM,UAAU,wBAAC,UAAU,SAAS;AAClC,sBAAIA,SAAQ,UAAU;AACpB,4BAAQ,KAAK,EAAE,gBAAgB,GAAG,IAAI;gBAC1C,GAHgB;AAIhB,sBAAMoD,OAAM,2BAAI,SAAS,QAAQ,GAAG,GAAG,IAAI,GAA/B;AACZ,sBAAMkB,QAAO,2BAAI,SAAS,QAAQ,GAAG,GAAG,IAAI,GAA/B;AACb,sBAAMxE,UAAQ,2BAAI,SAAS,QAAQ,GAAG,GAAG,IAAI,GAA/B;AACd,sBAAM,OAAO,QAAQ,KAAK;AAC1B,sBAAM,OAAO,QAAQ;AACrB,sBAAM,OAAO,QAAQ;AACrB,sBAAMgD,QAAO,QAAQ;AACrB,sBAAM,cAAc,KAAK;AACzB,sBAAM,eAAe,KAAK;AAC1B,sBAAM,qBAAqB,KAAK;AAEhC,sBAAM,WAAW,uBAAO,OAAO,IAAI;AAEnC,sBAAM,oBAAoB,6BAAM;AAC9B,yBACE,WAAW,oBACX,WAAW,6BACX,WAAW,wBACX,WAAW,qBAAqB,UAC7B,0BACH,WAAW,SAAS;gBAExB,GAT0B;AAW1B,yBAAS,UAAU;kBACjB,MAAM,kCAAY;AAChB,wBAAI,GACFrD,KAAI,GACJD,KAAI,GACJ,IAAI;AACN,yBAAK,KAAK0D,OAAM,OAAO;AACrB,4BAAM,IAAI,QAAQ,CAAC;AACnBzD,4BAAK,EAAE;AACPD,4BAAK,EAAE;AACP,2BAAK,EAAE;AACP,wBAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;AACnD,wBAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;oBACrD;AACA,4BAAQ,OAAO;sBACb,WAAW,SAAS;sBACpB;sBACA,WAAW,SAAS;sBACpB;sBACA;sBACA;sBACAC;sBACA;sBACAD;sBACA,eAAe,IAAI;oBACrB;AACA,4BAAQ,OAAO,IAAI,0BAA0B,QAAQ,IAAI;AACzD,sBAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;kBAC9C,GA3BM;kBA4BN,OAAO,kCAAY;AACjB,wBAAI;AACJ,0BAAMqC,KAAI,wBAAC,MAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,GAApC;AACV,yBAAK,KAAKqB,OAAM,OAAO;AACrBrB,yBAAG,QAAQ,CAAC,IAAI,uBAAO,OAAO,IAAI,CAAE;oBACtC;AACA,wBAAImB,KAAK,QAAQ,OAAO,uBAAO,OAAO,IAAI;AAC1CA,yBAAIA,GAAE,YAAY,uBAAO,OAAO,IAAI;AACpCA,uBAAE,QAAQA,GAAE,OAAO;AACnBA,yBAAI,QAAQ,KAAK,cAAc,uBAAO,OAAO,IAAI;AACjDA,uBAAE,QAAQA,GAAE,OAAO;kBACrB,GAXO;gBAYT;AACA,sBAAM,gBAAgB,IAAI,mBAAmB;AAC7C,sBAAM,UAAU,IAAI,YAAY,EAAE;kBAAa,MAC7C,cAAc,QAAQ;gBACxB;AACA,oBAAI,qBAAqB;AACzB,sBAAM,gBAAgB,wBAAC1B,SAAQ;AAC7B,uCAAqB;AACrB,0BAAQ,QAAQ;AAChB,yBAAO,eAAeA,IAAG;gBAC3B,GAJsB;AAKtB,sBAAM,iBAAiB,6BAAM;AAC3B,uCAAqB;AACrB,yBAAO,gBAAgB,OAAO;gBAChC,GAHuB;AAIvB,sBAAM,IAAI,IAAI;kBACZ,IAAI,IAAI,+BAA+B,YAAY,GAAG;gBACxD;AACA,2BAAW,MAAM;AACf,sBAAI,WAAc,oBAAoB;AACpC;sBACE,IAAI;wBACF;sBACF;oBACF;kBACF;gBACF,GAAG,GAAI;AACP,kBAAE,mBAAmB,EAAE;AACvB,kBAAE,UAAU,SAAUA,MAAK;AACzBxB,kBAAAA,QAAM,oCAAoCwB,IAAG;AAC7C;oBACE,IAAI;sBACF;oBACF;kBACF;gBACF;AACA,sBAAM,QAAQ,KAAK,iBAAiB,IAAI;AACxC,sBAAM,OAAO,QAAQ,IAAI,YAAY,KAAK,IAAI;AAC9C,8BAAc,YAAY;AAC1B,wBAAQ,YAAY;AACpB,wBAAQ,YAAY,KAAK,aAAa,WAAW;AACjD,wBAAQ,cAAc;AACtB,wBAAQ,SAASwB,MAAK,aAAa,MAAM;AAEzC,wBAAQ,WACN,QAAQ,YACR,QAAQ,UACR,QAAQ,YACN;AACJ,wBAAQ;kBACN;kBACA,QAAQ;kBACR;kBACA,MAAO,OAAO,KAAK,QAAQ,IAAI;gBACjC;AAEA,sBAAMI,SAAQ,uBAAO,OAAO,IAAI;AAChCA,uBAAM,UAAUlD,SAAQ;AACxBkD,uBAAM,gBAAgB,MAAM;AAC1B,wBAAM,SAAS,IAAI,YAAY,CAAC;AAChC,sBAAI,SAAS,MAAM,EAAE,SAAS,GAAG,KAAK,IAAI;AAE1C,yBAAO,IAAI,WAAW,MAAM,EAAE,CAAC,MAAM;gBACvC,GAAG;AAEHA,uBAAM,oBAAoB;AAE1BA,uBAAM,sBAAsB;AAE5BA,uBAAM,iBAAiB,OAAO;AAC9BA,uBAAM,gBAAgBA,OAAM;AAE5BA,uBAAM,cAAc,QAAQ,cAAc;AAE1CA,uBAAM,QAAQ,IAAI;kBAChBA,OAAM,iBAAiBA,OAAM;gBAC/B;AACAA,uBAAM,QAAQ,uBAAO,OAAO,IAAI;AAChC,sBAAM,UAAU,uBAAO,OAAO,IAAI;AAClC;AACE,sBAAI,IAAI;AAERA,yBAAM,MAAM,UAAU;AAEtBA,yBAAM,MAAM,KAAK;AAEjBA,yBAAM,MAAM,UAAU;AACtBA,yBAAM,MAAM,SAAS;AACrBA,yBAAM,MAAM,UAAU;AACtBA,yBAAM,MAAM,gBAAgB;AAC5BA,yBAAM,MAAM,YAAY;AACxBA,yBAAM,MAAM,QAAQ;AACpBA,yBAAM,MAAM,QAAQ;AACpBA,yBAAM,MAAM,QAAQ;AACpBA,yBAAM,MAAM,SAAS;AACrBA,yBAAM,MAAM,QAAQ;AACpBA,yBAAM,MAAM,YAAY;AACxBA,yBAAM,MAAM,UAAU;AACtBA,yBAAM,MAAM,SAAS;AACrBA,yBAAM,MAAM,QAAQ;AACpBA,yBAAM,MAAM,oBAAoB,IAAI;AACpCA,yBAAM,MAAM,qBAAqB,IAAI;AAErCA,yBAAM,MAAM,QAAQ;AACpBA,yBAAM,QAAQ,IAAI,kBAAkB,IAAI,CAAC;AACzC,2BAAS,QAAQ,MAAM;gBACzB;AAEAA,uBAAM,WAAW,uBAAO,OAAO,IAAI;AACnC;kBACE;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;gBACF,EAAE,QAAQ,CAAC,MAAM;AACf,sBAAI,YAAeA,OAAM,SAAS,CAAC,IAAI,KAAK,CAAC,IAAI;AAC/C,yBAAK,oCAAoC,CAAC;kBAC5C;gBACF,CAAC;AACDA,uBAAM,YAAY,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;kBACnD,kBAAkB;kBAElB,yBAAyB;kBAEzB,mBAAmB;gBACrB,CAAC;AAED,sBAAM,QAAQ,wBAAC,OAAO,SAAS;AAC7B,wBAAM,QAAQA,OAAM,MAAM,EAAE,KAAK,KAAK,kBAAkB,EAAE;AAC1DA,yBAAM,KAAK,UAAU,GAAG,IAAI;AAC5B,0BAAQ,MAAMA,OAAM,WAAWA,OAAM,MAAM,IAAI,EAAE;AACjD,0BAAQ,MAAMA,OAAM,WAAWA,OAAM,MAAM,SAAS,KAAK;AACzD,0BAAQ,OAAOA,OAAM,WAAWA,OAAM,MAAM,OAAO;AACnD,wBAAM1D,KAAI,YAAY,IAAI;AAC1B,yBACE,gBACA,QAAQ,KAAK0D,OAAM,WAAWA,OAAM,MAAM,IAAI,EAAE,GAChD;kBAAC;AAEH,wBAAM,KAAK,QAAQ,KAAKA,OAAM,WAAWA,OAAM,MAAM,EAAE;AACvD,0BAAQ,EAAE,EAAE,QAAQ,YAAY,IAAI,IAAI1D;AACxC,sBAAI,MAAM0D,OAAM,qBAAqB;AACnC,0BAAM5B,OAAM4B,OAAM,KAAK,YAAY;AACnC,wBAAI5B,KAAKxB,CAAAA,QAAM,KAAK,mBAAmB,GAAGwB,IAAG;kBAC/C;AACA,yBAAO;gBACT,GAnBc;AAqBd,yBAAS,QAAQ;kBACf,eAAe,6BAAM;AACnB,oBAAAgD;sBACE;oBACF;AACA,0BAAM,qBAAqB;kBAC7B,GALe;kBAMf,cAAc,6BAAM;AAClB,oBAAAA;sBACE;oBACF;AACA,sBAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;kBAC9C,GALc;gBAMhB;AAEA,sBAAM,WAAW,6BAAM;AACrB,sBAAIpB,OAAM,KAAM,QAAOA,OAAM;AAC7B,wBAAM,cAAc,IAAI,YAAY,GAClC,cAAc,IAAI,YAAY,OAAO,GACrC,SAAS,IAAI;oBACXA,OAAM;oBACNA,OAAM;oBACNA,OAAM;kBACR,GACA,SAAS,IAAI;oBACXA,OAAM;oBACNA,OAAM;oBACNA,OAAM;kBACR;AACFA,yBAAM,OAAO,uBAAO,OAAO,IAAI;AAE/B,wBAAM,UAAU,uBAAO,OAAO,IAAI;AAClC,0BAAQ,SAAS;oBACf,IAAI;oBACJ,MAAM;oBACN,QAAQ;oBACR,QAAQ;kBACV;AACA,0BAAQ,SAAS;oBACf,IAAI;oBACJ,MAAM;oBACN,QAAQ;oBACR,QAAQ;kBACV;AACA,0BAAQ,UAAU;oBAChB,IAAI;oBACJ,MAAM;oBACN,QAAQ;oBACR,QAAQ;kBACV;AACA,0BAAQ,SAAS,EAAE,IAAI,EAAE;AAEzB,wBAAM,YAAY,wBAAC7D,OACjB,QAAQ,OAAOA,EAAC,KAChB;oBACE;oBACAA;kBACF,GALgB;AAMlB,wBAAM,gBAAgB,wBAAC,QAAQ;AAC7B,4BAAQ,KAAK;sBACX,KAAK,QAAQ,OAAO;AAClB,+BAAO,QAAQ;sBACjB,KAAK,QAAQ,OAAO;AAClB,+BAAO,QAAQ;sBACjB,KAAK,QAAQ,QAAQ;AACnB,+BAAO,QAAQ;sBACjB,KAAK,QAAQ,OAAO;AAClB,+BAAO,QAAQ;sBACjB;AACE,6BAAK,oBAAoB,GAAG;oBAChC;kBACF,GAbsB;AAetB6D,yBAAM,KAAK,cAAc,SAAUqB,SAAQ,OAAO;AAChD,sBAAE,QAAQ,KAAK,YAAY;AAC3B,0BAAM/E,KAAI,YAAY,IAAI;AAC1B,0BAAM,OAAO,OAAO,CAAC;AACrB,0BAAM,KAAK,OAAO,CAAC,IAAI;AACvB,wBAAI,MAAM;AACR,4BAAM,UAAU,CAAC;AACjB,0BAAI,SAAS,GACX,GACAC,IACAJ;AACF,2BAAK,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG,EAAE,QAAQ;AACnC,gCAAQ,KAAK,cAAc,OAAO,MAAM,CAAC,CAAC;sBAC5C;AACA,2BAAK,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AACzB,8BAAMG,KAAI,QAAQ,CAAC;AACnB,4BAAIA,GAAE,QAAQ;AACZH,+BAAI,OAAOG,GAAE,MAAM,EAAE,QAAQ0D,OAAM,YAAY;AAC/C,oCAAU1D,GAAE;wBACd,OAAO;AACLC,+BAAI,OAAO,SAAS,QAAQyD,OAAM,YAAY;AAC9C,oCAAU;AACV7D,+BAAI,YAAY,OAAO,OAAO,MAAM,QAAQ,SAASI,EAAC,CAAC;AACvD,oCAAUA;wBACZ;AACA,2BAAG,KAAKJ,EAAC;sBACX;oBACF;AACA,wBAAIkF,OAAO,QAAO,CAAC,IAAI;AAEvB,4BAAQ,KAAK,YAAY,QAAQ,YAAY,IAAI,IAAI/E;AACrD,2BAAO;kBACT;AAEA0D,yBAAM,KAAK,YAAY,YAAa,MAAM;AACxC,0BAAM1D,KAAI,YAAY,IAAI;AAC1B,sBAAE,QAAQ,KAAK,UAAU;AACzB,wBAAI,KAAK,QAAQ;AACf,4BAAM,UAAU,CAAC;AACjB,0BAAI,IAAI,GACN,SAAS;AACX,6BAAO,CAAC,IAAI,KAAK,SAAS;AAC1B,6BAAO,IAAI,KAAK,QAAQ,EAAE,GAAG,EAAE,QAAQ;AACrC,gCAAQ,KAAK,UAAU,KAAK,CAAC,CAAC,CAAC;AAC/B,+BAAO,MAAM,IAAI,QAAQ,CAAC,EAAE;sBAC9B;AACA,2BAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,8BAAMA,KAAI,QAAQ,CAAC;AACnB,4BAAIA,GAAE,QAAQ;AACZ,iCAAOA,GAAE,MAAM,EAAE,QAAQ,KAAK,CAAC,GAAG0D,OAAM,YAAY;AACpD,oCAAU1D,GAAE;wBACd,OAAO;AACL,gCAAMwD,KAAI,YAAY,OAAO,KAAK,CAAC,CAAC;AACpC,iCAAO,SAAS,QAAQA,GAAE,YAAYE,OAAM,YAAY;AACxD,oCAAU;AACV,iCAAO,IAAIF,IAAG,MAAM;AACpB,oCAAUA,GAAE;wBACd;sBACF;oBACF,OAAO;AACL,6BAAO,CAAC,IAAI;oBACd;AACA,4BAAQ,KAAK,UAAU,QAAQ,YAAY,IAAI,IAAIxD;kBACrD;AACA,yBAAO0D,OAAM;gBACf,GA3HiB;AA6HjB,sBAAM,iBAAiB,gCAAS,EAAE,MAAM,IAAI;AAC1C,sBAAI,CAAC,EAAE,QAAQ;AACb,sBAAE,SACA;AAGF,sBAAE,KAAK,EAAE,OAAO;kBAClB;AACA,wBAAM,IAAI,CAAC;AACX,sBAAI,IAAI;AACR,yBAAO,IAAI,KAAK,EAAE,GAAG;AACnB,0BAAM,MAAO,KAAK,OAAO,KAAK,EAAE,KAAK,MAAO,EAAE,KAAK;AACnD,sBAAE,CAAC,IAAI,EAAE,OAAO,GAAG;kBACrB;AACA,yBAAO,EAAE,KAAK,EAAE;gBAClB,GAfuB;AAiBvB,sBAAM,cAAc,uBAAO,OAAO,IAAI;AAEtC,sBAAM,UAAU,uBAAO,OAAO,IAAI;AAClC,wBAAQ,KAAK;AACb,wBAAQ,QAAQ;AAChB,sBAAM,aAAa,wBAAC,OAAO;AACzB,0BAAQ,QAAQ,YAAY,IAAI;AAChC,0BAAQ,KAAK;AACb,oBAAE,QAAQ,EAAE,EAAE;gBAChB,GAJmB;AAKnB,sBAAM,WAAW,6BACd,QAAQ,QAAQ,EAAE,EAAE,QAAQ,YAAY,IAAI,IAAI,QAAQ,OAD1C;AAGjB,sBAAM,iBAAiB;kBACrB,oBAAoB,gCAAU,OAAO,MAAM;AACzC,oBAAAJ,MAAK,KAAK,MAAM,GAAG,KAAK;AACxB,2BAAO;kBACT,GAHoB;kBAIpB,QAAQ,gCAAU,OAAO;AACvB,+BAAW,QAAQ;AACnB,wBAAI,KAAK;AACT,0BAAM,IAAI,YAAY,KAAK;AAC3B,wBAAI,GAAG;AACL,6BAAO,YAAY,KAAK;AACxB,2BAAK,MAAM,UAAU,KAAK;AAC1B,0BAAI,EAAE,QAAS,GAAE,QAAQ,QAAQ;oBACnC;AACA,6BAAS;AACT,2BAAO;kBACT,GAXQ;kBAYR,wBAAwB,gCAAU,OAAO;AACvC,2BAAO,KAAK;kBACd,GAFwB;kBAGxB,cAAc,gCAAU,OAAO,MAAM,MAAM;AACzC,2BAAO,KAAK;kBACd,GAFc;kBAGd,WAAW,gCAAU,OAAO,OAAO;AACjC,+BAAW,WAAW;AACtB,wBAAI,KAAK,MAAM,aAAa,KAAK;AACjC,wBAAI,KAAK,IAAI;AACX,0BAAI;AACF,8BAAM,KAAKI,OAAM,KAAK,YAAY,EAAE,CAAC;AACrC,wBAAAJ,MAAK,KAAK,OAAO,IAAI,KAAK;sBAC5B,SAASvD,IAAG;AACVO,wBAAAA,QAAM,gDAAgDP,EAAC;AACvD,6BAAK2D,OAAM,SAAS;sBACtB;oBACF;AACA,6BAAS;AACT,2BAAO;kBACT,GAdW;kBAeX,OAAO,gCAAU,OAAO,UAAU;AAChC,+BAAW,OAAO;AAClB,0BAAM,IAAI,YAAY,KAAK;AAC3B,wBAAI,KAAK;AAET,wBAAI,CAAC,EAAE,UAAU;AACf,2BAAK,MAAM,SAAS,OAAO,QAAQ;AACnC,0BAAI,MAAM,GAAI,GAAE,WAAW;oBAC7B,OAAO;AACL,wBAAE,WAAW;oBACf;AACA,6BAAS;AACT,2BAAO;kBACT,GAbO;kBAcP,OAAO,gCAAU,OAAO,OAAOzD,IAAG,UAAU;AAC1C,+BAAW,OAAO;AAClB,0BAAM,IAAI,YAAY,KAAK;AAC3B,wBAAI;AACJ,wBAAI;AACF,2BAAK,MAAM,SAAS,OAAOA,IAAG,OAAO,QAAQ,CAAC;AAC9C,0BAAI,MAAM,MAAM,KAAK,4BAA4B,IAAI;AACnD,wBAAAqD,MAAK,OAAO,EAAE,IAAI,EAAE,QAAQ,SAAS,GAAGrD,EAAC,GAAG,KAAK;sBACnD;oBACF,SAASF,IAAG;AACVO,sBAAAA,QAAM,UAAU,WAAW,aAAaP,IAAG,CAAC;AAC5C,2BAAK,KAAK;oBACZ;AACA,6BAAS;AACT,2BAAO;kBACT,GAfO;kBAgBP,OAAO,gCAAU,OAAOU,QAAO;AAC7B,+BAAW,OAAO;AAClB,sBAAE,QAAQ,MAAM;AAChB,0BAAM,KAAK,MAAM,SAAS,OAAOA,MAAK;AACtC,6BAAS;AACT,2BAAO;kBACT,GANO;kBAOP,WAAW,gCAAU,OAAO,MAAM;AAChC,+BAAW,WAAW;AACtB,0BAAM,KAAK,MAAM,aAAa,OAAO,OAAO,IAAI,CAAC;AACjD,6BAAS;AACT,2BAAO;kBACT,GALW;kBAMX,SAAS,gCAAU,OAAO,UAAU;AAClC,+BAAW,SAAS;AACpB,0BAAM,IAAI,YAAY,KAAK;AAC3B,wBAAI,KAAK;AACT,wBAAI,KAAK,qBAAqB,YAAY,EAAE,UAAU;AACpD,2BAAK,MAAM,WAAW,OAAO,QAAQ;oBACvC;AACA,wBAAI,MAAM,GAAI,GAAE,WAAW;AAC3B,6BAAS;AACT,2BAAO;kBACT,GAVS;kBAWT,QAAQ,gCAAU,OAAO,MAAMR,IAAG,UAAU;AAC1C,+BAAW,QAAQ;AACnB,0BAAM,IAAI,YAAY,KAAK;AAC3B,wBAAI;AACJ,wBAAI;AACF,wBAAE,QAAQ,IAAIqD,MAAK,OAAO,EAAE,SAAS,MAAM,OAAOrD,EAAC,CAAC;AACpD,2BAAK,MAAM,UAAU,OAAOA,IAAG,OAAO,QAAQ,CAAC;oBACjD,SAASF,IAAG;AACVO,sBAAAA,QAAM,WAAW,WAAW,aAAaP,IAAG,CAAC;AAC7C,2BAAK,KAAK;oBACZ;AACA,6BAAS;AACT,2BAAO;kBACT,GAbQ;gBAcV;AAEA,sBAAM,kBAAkB;kBACtB,SAAS,gCAAU,MAAM,OAAOU,QAAO,MAAM;AAC3C,+BAAW,SAAS;AACpB,0BAAM,KAAK,MAAM,WAAW6C,MAAK,SAAS,KAAK,CAAC;AAChD,oBAAAA,MAAK,KAAK,MAAM,KAAK,IAAI,GAAG,KAAK;AACjC,6BAAS;AACT,2BAAO;kBACT,GANS;kBAOT,cAAc,gCAAU,MAAM,MAAM;AAClC,oBAAAA,MAAK;sBACH;sBACA,eAAY,oBAAI,KAAK,GAAE,QAAQ,IAAI;sBACnC;oBACF;AACA,2BAAO;kBACT,GAPc;kBAQd,mBAAmB,gCAAU,MAAM,MAAM;AACvC,oBAAAA,MAAK;sBACH;sBACA,cAAY,SAAW,oBAAI,KAAK,GAAE,QAAQ;sBAC1C;oBACF;AACA,2BAAO;kBACT,GAPmB;kBAQnB,SAAS,gCAAU,MAAM,OAAO,WAAW;AACzC,+BAAW,SAAS;AACpB,0BAAM,KAAK;sBACT;sBACAA,MAAK,SAAS,KAAK;sBACnB;sBACA;oBACF;AACA,6BAAS;AACT,2BAAO;kBACT,GAVS;kBAWT,eAAe,gCAAU,MAAM,OAAO,MAAM,MAAM;AAChD,0BAAM,IAAIA,MAAK,SAAS,MAAM,OAAO,IAAI;AACzC,2BAAO,IAAI,OAAO,IAAI,KAAK;kBAC7B,GAHe;kBAIf,eAAe,gCAAU,MAAM,MAAM,MAAM;AACzC,oBAAAwB,MAAK,sDAAsD;AAC3D,2BAAO;kBACT,GAHe;kBAKf,OAAO,gCAAS,EAAE,MAAM,OAAO,OAAOrE,QAAO,WAAW;AACtD,+BAAW,OAAO;AAClB,wBAAI,YAAY;AAChB,wBAAI,MAAM,OAAO;AACf,8BAAQ,eAAe;oBACzB,WAAW6C,MAAK,MAAM,KAAK,GAAG;AAC5B,0BAAI,KAAK,oBAAoB,OAAO,oBAAoB,CAAC,GAAG;AAC1D,qCAAaI,OAAM,UAAU;sBAC/B;AACA,0BACE,KAAK,oBAAoB,OAAO,sBAAsB,CAAC,GACvD;AACA,qCAAaA,OAAM,UAAU;sBAC/B;AACA,8BAAQJ,MAAK,SAAS,KAAK;oBAC7B;AACA,0BAAM,KAAK,uBAAO,OAAO,IAAI;AAC7B,uBAAG,MAAM;AACT,uBAAG,WAAW;AACd,uBAAG,MAAM,IAAI,kBAAkBI,OAAM,cAAc;AACnD,uBAAG,QAAQjD;AACX,uBAAG,WACD,EAAE,QAAQ,qBAAqBA,WAC/B,CAAC,EAAEA,SAAQ,KAAK;AAClB,0BAAM,KAAK,MAAM,SAAS,OAAO,OAAOA,QAAO,SAAS;AACxD,wBAAI,CAAC,IAAI;AACP,0BAAI,GAAG,UAAU;AACf,wBAAA6C,MAAK,KAAK,WAAW,KAAK,sBAAsB,KAAK;sBACvD;AACA,kCAAY,KAAK,IAAI;AACrB,yBAAG,UAAUI,OAAM;AACnB,yBAAG,UAAU,IAAI,aAAa,KAAK;AACnC,yBAAG,QAAQ,YAAY,cAAc;AACrC,yBAAG,WAAW,KAAK;oBACrB;AACA,6BAAS;AACT,2BAAO;kBACT,GArCO;gBAsCT;AAEA,oBAAI,MAAM;AACR,0BAAQ,eAAe,KAAK;AAC5B,0BAAQ,UAAU,KAAK;gBACzB;AACA,oBAAI,CAAC,QAAQ,cAAc;AACzB,kCAAgB,cAAc,SAAU,MAAM,MAAM,MAAM;AACxD,0BAAM,OAAOJ,MAAK,OAAO;AACzB,wBAAI,IAAI;AACR,2BAAO,IAAI,MAAM,EAAE;AACjB,2BAAK,OAAO,CAAC,IAAK,KAAK,OAAO,IAAI,QAAU;AAC9C,2BAAO;kBACT;gBACF;AACA,oBAAI,CAAC,QAAQ,SAAS;AACpB,kCAAgB,SAAS,SAAU,MAAM,IAAI;AAC3C,4BAAQ,KAAKI,OAAM,WAAWA,OAAM,MAAM,QAAQ,GAAG,EAAE;AACvD,2BAAO;kBACT;gBACF;AAEA,yBAAS,kBAAkB,SAAU,UAAU,SAAS;AACtD,wBAAM,IAAI,IAAI,IAAI,UAAU,mBAAmB,EAAE;AACjD,yBAAO,UAAU,EAAE,MAAM,GAAG,EAAE,OAAO,CAAC7D,OAAM,CAAC,CAACA,EAAC,IAAI;gBACrD;AAEA,yBAAS,oBAAoB,sCAAe,EAC1C,aACA,aAAa,OACb;AACA,wBAAM,OAAO,SAAS,gBAAgB,aAAa,IAAI;AACvD,wBAAM,WAAW,KAAK,IAAI;AAC1B,sBAAI,KAAK,SAAS;AAClB,6BAAW,WAAW,MAAM;AAC1B,wBAAI,SAAS;AACX,2BAAK,MAAM,GAAG,mBAAmB,SAAS;wBACxC,QAAQ,CAAC,CAAC;sBACZ,CAAC;oBACH;kBACF;AACA,yBAAO,CAAC,IAAI,QAAQ;gBACtB,GAf6B;AAiB7B,yBAAS,QAAQ,eAAgB,YAAY;AAC3C,sBAAI;AACF,0BAAM,SAAS;sBACb,aAAa;sBACb;oBACF;AACA,2BAAO;kBACT,SAASE,IAAG;AACV,2BAAO;kBACT;gBACF;AAEA,yBAAS,cAAc,eAAgB,aAAa;AAClD,sBAAI;AACF,0BAAM,CAAC,IAAI,EAAE,IAAI,MAAM,SAAS,kBAAkB,WAAW;AAC7D,0BAAM,GAAG,cAAc,EAAE;AACzB,2BAAO;kBACT,SAASA,IAAG;AACV,2BAAO;kBACT;gBACF;AAEA,yBAAS,iBAAiB;AAE1B,yBAAS,WAAW,iBAAkB;AACpC,wBAAM,QAAQ,sCAAesE,QAAO,WAAW,KAAK;AAClD,wBAAI,OAAO,UAAU;AACrB,wBAAI,OAAO,CAAC;AACZ,wBAAI,QAAQ,CAAC;AACb,qCAAiBW,WAAU,UAAU,OAAO,GAAG;AAC7C,0BAAI,gBAAgBA,QAAO,MAAM;AAC/B,8BAAM,SAAS,uBAAO,OAAO,IAAI;AACjC,4BAAI,KAAK,KAAK,MAAM;AACpB,8BAAMX,QAAOW,SAAQ,MAAM;sBAC7B,OAAO;AACL,4BAAI,MAAM,KAAKA,QAAO,IAAI;sBAC5B;oBACF;kBACF,GAbc;AAcd,wBAAM7C,QAAO,uBAAO,OAAO,IAAI;AAC/B,wBAAM,MAAM,SAAS,eAAeA,KAAI;AACxC,yBAAOA;gBACT;AAEA,yBAAS,OAAO,iBAAkB;AAChC,wBAAMC,OAAM,SAAS,eACnB,MAAM,EAAE,SAAS,KAAK;AACxB,mCAAiB4C,WAAU5C,KAAI,OAAO,GAAG;AACvC,oBAAAA,KAAI,YAAY4C,QAAO,MAAM,GAAG;kBAClC;gBACF;AAEA,yBAAS,SAAS,eAChB,aACA,YAAY,OACZ,eAAe,OACf;AACA,sBAAI;AACF,0BAAM,CAAC,MAAM,YAAY,IAAI,MAAM,SAAS;sBAC1C;sBACA;oBACF;AACA,0BAAM,KAAK,YAAY,cAAc,EAAE,UAAU,CAAC;AAClD,2BAAO;kBACT,SAASjF,IAAG;AACV,wBAAI,cAAc;AAChB,4BAAM,IAAI;wBACR;wBACA,UAAU,CAAC;wBACX,eAAeA,GAAE;wBACjB;0BACE,OAAOA;wBACT;sBACF;oBACF;AACA,2BAAO;kBACT;gBACF;AAEA,yBAAS,WAAW,eAAgB,KAAK;AACvC,wBAAM,aAAa;oBACjB,WAAW;oBACX,WAAW,SAAS;kBACtB;AACA,sBAAI,eAAe,OAAO,KAAK;AAC7B,0BAAM,EAAE,UAAU,IAAI;kBACxB;AACA,wBAAM,OAAO,OAAO,YAAY,OAAO,CAAC,CAAC;AACzC,wBAAM,QAAQ,sCAAesE,QAAO,WAAW,OAAO;AACpD,qCAAiBW,WAAU,UAAU,OAAO,GAAG;AAC7C,0BAAI,UAAU,IAAI,SAASA,SAAQ,WAAW,KAAK;AACjD,+BAAO;+BACA,IAAI,aAAa,gBAAgBA,QAAO,MAAM;AACrD,4BAAI,UAAW,MAAMX,QAAOW,SAAQ,QAAQ,CAAC,EAAI;sBACnD;oBACF;kBACF,GARc;AASd,wBAAM,IAAI,WAAW,CAAC;gBACxB;AAEA,sBAAM,kBAAkB,sCAAgB,UAAU,UAAU;AAC1D,wBAAM,CAAC,MAAM,SAAS,IAAI,MAAM,SAAS;oBACvC;oBACA;kBACF;AACA,wBAAM,QAAQ,MAAM,KAAK,cAAc,WAAW;oBAChD,QAAQ;kBACV,CAAC;AACD,sBAAI,MAAM,MAAM,MAAM,uBAAuB;AAC7C,sBAAI,SAAS,GACX,OACA,gBAAgB,OAChBlD,OAAM;AACR,sBAAI;AACF,wBAAI,SAAS,CAAC;AACd,2BAAO,YAAe,QAAQ,MAAM,SAAS,IAAI;AAC/C,0BAAI,iBAAiB;AACnB,gCAAQ,IAAI,WAAW,KAAK;AAC9B,0BAAI,MAAM,UAAU,MAAM,cAAc,IAAI;AAC1C,6BAAK,eAAe,KAAK;AACzB,wCAAgB;sBAClB;AACA,0BAAI,MAAM,OAAO,EAAE,IAAI,OAAO,CAAC;AAC/B,gCAAU,MAAM;oBAClB;AACA,wBAAI,SAAS,OAAO,MAAM,SAAS,KAAK;AACtC;wBACE;wBACA;wBACA;sBACF;oBACF;AACA,wBAAI,CAAC,eAAe;AAClB,4BAAM,SAAS,IAAI,WAAW,EAAE;AAChC,0BAAI,KAAK,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC1B,2BAAK,eAAe,MAAM;oBAC5B;AACA,wBAAI,MAAM,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;AAC5C,2BAAO;kBACT,SAAS/B,IAAG;AACV,0BAAM,IAAI,MAAM;AAChB,0BAAM;AACN,0BAAM,KAAK,YAAY,SAAS,EAAE,MAAM,MAAM;oBAAC,CAAC;AAChD,0BAAMA;kBACR,UAAA;AACE,wBAAI,IAAK,OAAM,IAAI,MAAM;kBAC3B;gBACF,GA/CwB;AAiDxB,yBAAS,WAAW,eAAgB,UAAU,OAAO;AACnD,sBAAI,iBAAiB,UAAU;AAC7B,2BAAO,gBAAgB,UAAU,KAAK;kBACxC;AACA,sBAAI,iBAAiB,YAAa,SAAQ,IAAI,WAAW,KAAK;AAC9D,uBAAK,WAAW,KAAK;AACrB,wBAAME,KAAI,MAAM;AAChB,wBAAM,CAAC,MAAM,SAAS,IAAI,MAAM,SAAS;oBACvC;oBACA;kBACF;AACA,sBAAI,KACF6B,MACA,SAAS;AACX,sBAAI;AACF,0BAAM,QAAQ,MAAM,KAAK,cAAc,WAAW;sBAChD,QAAQ;oBACV,CAAC;AACD,0BAAM,MAAM,MAAM,uBAAuB;AACzC,wBAAI,SAAS,CAAC;AACd,6BAAS,IAAI,MAAM,OAAO,EAAE,IAAI,EAAE,CAAC;AACnC,wBAAI,UAAU7B,IAAG;AACf;wBACE,uBACEA,KACA,sBACA,SACA;sBACJ;oBACF;AACA,wBAAI,MAAM,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;AAC5C,2BAAO;kBACT,SAASF,IAAG;AACV,wBAAI,KAAK;AACP,4BAAM,IAAI,MAAM;AAChB,4BAAM;oBACR;AACA,0BAAM,KAAK,YAAY,SAAS,EAAE,MAAM,MAAM;oBAAC,CAAC;AAChD,0BAAMA;kBACR,UAAA;AACE,wBAAI,IAAK,OAAM,IAAI,MAAM;kBAC3B;gBACF;AAEA,oBAAI,QAAQ,KAAK;AACf,wBAAM,SAAS,mCAAa,MAAM;AAChC,0BAAM,MAAM,QAAQ,IAAI,GAAG,aAAa,cAAc,GAAG,IAAI;AAC7D,wBAAI,MAAM,QAAQ;AAClB,4BAAQ,IAAI,GAAG,aAAa,KAAK,MAAM,GAAG;kBAC5C,GAJe;AAKf,yBAAO,YAAY,OAAO,OAAO,QAAQ,IAAI,GAAG,SAAS;AACzD,0BAAQ,IAAI,SAAS;AACrB,yBAAO,WAAW,SAAS;AAC3B,0BAAQ,IAAI,GAAG,aAAa;oBAC1B,QAAQ;oBACR,SAAU,OAAO6E,UAAS;AACxBA,+BAAQ,KAAK,qBAAqB,OAAO,GAAK;oBAChD;kBACF;gBACF;AAEA,sBAAM,cAAc,kCAAY;AAC9B,wBAAM,QAAQtB,MAAK,gBAAgB;AACnC,wBAAM,UAAU,IAAI,aAAa;AACjC,sBAAI;AACF,0BAAM,MAAM,QAAQ;AACpB,0BAAM,YACJ,KAAK,qBACL,KAAK,wBACL,KAAK;AACP,0BAAM,OAAOA,MAAK,YAAY,CAAC;AAC/B,0BAAM,SAAS,uBAAuB,eAAe,CAAC;AACtD,0BAAM,UAAUA,MAAK,mBAAmB,MAAM;AAC9C,wBAAI;AACJI,2BAAM,KAAK,UAAU,sBAAmB;AACxC,yBAAKA,OAAM,KAAK,YAAY;AAC5B,oBAAAE,KAAI,uBAAuB,EAAE;AAC7B,wBAAI,2BAAwB,GAAG,CAAC,EAAG,MAAK,oBAAoB;AAC5D,oCAAgB,QAAQ,QAAQ,SAAS,SAAS,GAAG,IAAI;AACzD,yBAAKN,MAAK,KAAK,MAAM,KAAK;AAC1B,oBAAAM,KAAI,YAAY,QAAQ,eAAe,EAAE;AACzC,yBAAK,gBAAgB;sBACnB,QAAQ;sBACR;sBACA;sBACA;sBACA;oBACF;AACA,oBAAAA;sBACE;sBACA;sBACA;sBACAF,OAAM,UAAUA,OAAM,MAAM,KAAK;oBACnC;AACA,wBAAI,MAAM,IAAI;AACZpD,sBAAAA,QAAM,yBAAyB,EAAE;AACjC;oBACF;AACA,oCAAgB,QAAQ,QAAQ,SAAS,SAAS,GAAG,IAAI;AACzD,yBAAKgD,MAAK,KAAK,MAAM,KAAK;AAC1B,wBAAI,CAAC,GAAI,MAAK,kCAAkC;AAChD,yBAAK,eAAe,MAAM,QAAQ,SAAS,CAAC;AAC5C,wBAAI,GAAI,MAAK,qBAAqB,EAAE;AACpC,yBAAK,eAAe,UAAU,QAAQ,SAAS,IAAI;AACnD,wBAAI,GAAI,MAAK,yBAAyB,EAAE;AACxC,oBAAAA,MAAK,KAAK,MAAM,GAAG,KAAK;AACxB,yBAAK,eAAe,UAAU,QAAQ,SAAS,IAAI;AACnD,wBAAI,GAAI,MAAK,0BAA0B,EAAE;AACzC,oBAAAM,KAAI,mBAAmBN,MAAK,KAAK,MAAM,KAAK,CAAC;AAC7C,yBAAK,eAAe,OAAO,QAAQ,SAAS,SAAS,IAAI,CAAC;AAC1D,wBAAI,GAAI,MAAK,kBAAkB;AAC/B,0BAAM,UAAUA,MAAK,YAAY,EAAE;AACnC,yBAAK,eAAe,MAAM,QAAQ,SAAS,SAAS,GAAG,CAAC;AACxD,oBAAAA,MAAK,KAAK,UAAU,GAAG,CAAC;AACxB,wBAAI,QAAQA,MAAK,SAAS,OAAO;AACjC,oBAAAM,KAAI,gBAAgB,KAAK;AACzB,wBAAI,aAAa,MAAO,MAAK,2BAA2B;AACxD,wBAAI,gBAAgB,QAAQ;AAC1B,sBAAAA,KAAI,kCAAkC;AACtC,sCAAgB,OAAO,QAAQ,SAAS,GAAI;AAC5C,sBAAAA,KAAI,yBAAyB;oBAC/B;AACA,yBAAK,eAAe,OAAO,GAAG;AAC9B,oBAAAA,KAAI,eAAe,IAAI,eAAeF,OAAM,SAAS;AACrD,oBAAAE,KAAI,kBAAkB,MAAM;AAC5B,oCAAgB,QAAQ,QAAQ,SAAS,SAAS,IAAM;AACxD,oCAAgB,QAAQ,QAAQ,SAAS,SAAS,GAAG,IAAI;AACzD,yBAAKN,MAAK,KAAK,MAAM,KAAK;AAC1B,wBAAI;AACF;wBACE;wBACA;wBACA;sBACF;AACF,oBAAAwB,MAAK,4BAA4B;kBACnC,UAAA;AACE,4BAAQ,QAAQ;AAChB,oBAAAxB,MAAK,eAAe,KAAK;kBAC3B;gBACF,GA9EoB;AAgFpB,kBAAE,YAAY,SAAU,EAAE,KAAK,GAAG;AAChC,0BAAQ,KAAK,MAAM;oBACjB,KAAK;AACH,oCAAc,IAAI,MAAM,KAAK,QAAQ,KAAK,GAAG,CAAC,CAAC;AAC/C;oBACF,KAAK;AACH,wBAAE,YAAY,EAAE,MAAM,mBAAmB,MAAMI,OAAM,CAAC;AACtD;oBACF,KAAK,qBAAqB;AACxB,0BAAI,SAAS,oBAAoB;AAC/B;sBACF;AACA,0BAAI;AACF,gCAAQ,IAAI,WAAW;0BACrB,IAAI,EAAE,QAAQ,eAAe,SAAS,eAAe;0BACrD,KAAK,EAAE,QAAQ,SAAS,SAAS,gBAAgB;wBACnD,CAAC;AACDA,+BAAM,YAAY,IAAI,WAAWA,OAAM,KAAK;AAC5CA,+BAAM,iBAAiB,IAAI;0BACzBA,OAAM;0BACN;0BACAA,OAAM;wBACR;AACAA,+BAAM,cAAc,IAAI;0BACtBA,OAAM;0BACNA,OAAM;0BACNA,OAAM;wBACR;AACA,iCAAS;AACT,4BAAIlD,SAAQ,cAAc;AACxB,0BAAAsE;4BACE;0BACF;AACA,sCAAY;wBACd;AACA,4BAAI,kBAAkB,GAAG;AACvB,oCAAU,QACP,aAAa,EACb,KAAK,CAAC,MAAM;AACX,8BAAE,UAAU,EAAE;AACd,mCAAO,EAAE;AACT,oCAAQ,OAAO;AACf,qCAAS,gBAAgB;AACzB,4BAAAlB,KAAI,kCAAkC,OAAO;AAC7C,2CAAe;0BACjB,CAAC,EACA,MAAM,aAAa;wBACxB,OAAO;AACL,yCAAe;wBACjB;sBACF,SAAS7D,IAAG;AACVO,wBAAAA,QAAMP,EAAC;AACP,sCAAcA,EAAC;sBACjB;AACA;oBACF;oBACA,SAAS;AACP,4BAAM,SACJ,oDACA,KAAK,UAAU,IAAI;AACrBO,sBAAAA,QAAM,MAAM;AACZ,oCAAc,IAAI,MAAM,MAAM,CAAC;AAC/B;oBACF;kBACF;gBACF;cACF,CAAC;AACD,qBAAO;YACT,GAniCuB;AAoiCvB,2BAAe,kBAAkB;AACjC,uBAAW,oBAAoB,kBAAkB;cAC/C,OAAOsE,aAAY;AACjB,oBAAI;AACF,sBAAI,UAAU,eAAe;AAC7B,sBAAIA,SAAQ,WAAW,YAAY;AACjC,mCAAe,kBACbA,SAAQ,WAAW,aAAa;kBACpC;AACA,yBAAO,eAAe,EAAE,MAAM,CAAC7E,OAAM;AACnC6E,6BAAQ,OAAO;sBACb;sBACA7E,GAAE;oBACJ;kBACF,CAAC;gBACH,SAASA,IAAG;AACV6E,2BAAQ,OAAO,MAAM,+BAA+B7E,EAAC;AACrD,yBAAO,QAAQ,OAAOA,EAAC;gBACzB;cACF;YACF;UACF,CAAC;AAED,qBAAW,oBAAoB,aAAa,KAAK,SAAU,SAAS;AAClE;AACA,kBAAM,OAAO,QAAQ,KAAK;AAC1B,kBAAM,QAAQ,QAAQ,KAAK;AAC3B,kBAAM,eAAe,uBAAO,OAAO,IAAI;AACvC,kBAAM,OAAO,QAAQ;AACrB,kBAAM,OAAO,QAAQ;AACrB,kBAAMuD,QAAO,QAAQ;AAErB,kBAAM,cAAc;AACpB,kBAAM,uBAAuB;AAC7B,kBAAM,oBAAoB;AAC1B,kBAAM,qBAAqB;AAC3B,kBAAM,qBAAqB,uBAAuB;AAClD,kBAAM,sBAAsB;AAC5B,kBAAM,uBAAuB;AAC7B,kBAAM,qBAAqB;AAE3B,kBAAM,wBACJ,KAAK,sBACL,KAAK,2BACL,KAAK,4BACL,KAAK;AACP,kBAAM,yBAAyB,KAAK;AACpC,kBAAM,kBAAkB;AAExB,kBAAM,gBAAgB,6BAAM,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,GAAxC;AAEtB,kBAAM,cAAc,IAAI,YAAY;AACpC,kBAAM,cAAc,IAAI,YAAY;AAEpC,kBAAM,iBAAiB,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;cACxD,MAAM;cACN,WAAW;cACX,iBAAiB;cACjB,aAAa;cAEb,WAAW;cACX,+BAA+B;YACjC,CAAC;AAED,kBAAM,UAAU;cACd,QAAQ,OAAO;cACf,QAAQ,OAAO;cACf,QAAQ,OAAO;YACjB;AACA,kBAAMM,OAAM,QAAQ,OAAO;AAC3B,kBAAMkB,QAAO,QAAQ,OAAO;AAC5B,kBAAMxE,UAAQ,QAAQ,OAAO;AAE7B,kBAAM,iBAAiB,oBAAI,IAAI;AAC/B,kBAAM,gBAAgB,wBAAC,SAAS,eAAe,IAAI,IAAI,GAAjC;AACtB,kBAAM,gBAAgB,wBAAC,MAAM,SAAS;AACpC,kBAAI,KAAM,gBAAe,IAAI,MAAM,IAAI;kBAClC,gBAAe,OAAO,IAAI;YACjC,GAHsB;AAKtB,kBAAM,mBAAmB,oBAAI,IAAI;AACjC,kBAAM,kBAAkB,wBAAC,UAAU,iBAAiB,IAAI,KAAK,GAArC;AACxB,kBAAM,kBAAkB,wBAAC,OAAO,SAAS;AACvC,kBAAI,KAAM,kBAAiB,IAAI,OAAO,IAAI;kBACrC,kBAAiB,OAAO,KAAK;YACpC,GAHwB;AAKxB,kBAAM,YAAY;cAChB,oBAAoB,gCAAU,OAAO,MAAM;AACzC,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,IAAI,oBAAoB;AAC7B,qBAAK,SAAS;AACd,gBAAAgD,MAAK,OAAO,MAAM,CAAC;AACnB,uBAAO;cACT,GANoB;cAOpB,QAAQ,gCAAU,OAAO;AACvB,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,SAAS;AACd,sBAAM,OAAO,KAAK,kBAAkB,KAAK;AACzC,oBAAI,MAAM;AACR,sBAAI;AACF,yBAAK,IAAI,UAAU,KAAK,IAAI,EAAE;AAC9B,yBAAK,iBAAiB,OAAO,KAAK;AAClC,yBAAK,IAAI,MAAM;AACf,wBAAI,KAAK,QAAQ,KAAK,2BAA2B;AAC/C,2BAAK,WAAW,KAAK,IAAI;oBAC3B;kBACF,SAASvD,IAAG;AACV,2BAAO,KAAK,SAASA,IAAG,KAAK,YAAY;kBAC3C;gBACF;AACA,uBAAO;cACT,GAjBQ;cAkBR,wBAAwB,gCAAU,OAAO;AACvC,uBAAO,KAAK;cACd,GAFwB;cAGxB,cAAc,gCAAU,OAAO,MAAM,MAAM;AACzC,uBAAO,KAAK;cACd,GAFc;cAGd,WAAW,gCAAU,OAAO,OAAO;AACjC,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,IAAI,WAAW;AACpB,sBAAM,OAAO,KAAK,kBAAkB,KAAK;AACzC,sBAAM,OAAO,KAAK,IAAI,QAAQ,IAAI;AAElC,gBAAAuD,MAAK,OAAO,OAAO,OAAO,IAAI,CAAC;AAC/B,uBAAO;cACT,GARW;cASX,OAAO,gCAAU,OAAO,UAAU;AAChC,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,IAAI,SAAS,QAAQ,EAAE;AAC5B,qBAAK,SAAS;AACd,sBAAM,OAAO,KAAK,kBAAkB,KAAK;AACzC,qBAAK,WAAW;AAChB,uBAAO;cACT,GAPO;cAQP,OAAO,gCAAU,OAAO,OAAOrD,IAAG,UAAU;AAC1C,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,SAAS;AACd,sBAAM,OAAO,KAAK,kBAAkB,KAAK;AACzC,qBAAK,IAAI,SAAS,KAAK,IAAI,IAAIA,EAAC,MAAM,QAAQ,EAAE;AAChD,oBAAI;AACF,wBAAM,QAAQ,KAAK,IAAI;oBACrBqD,MAAK,OAAO,EAAE,SAAS,OAAO,QAAQrD,EAAC;oBACvC,EAAE,IAAI,qBAAqB,OAAO,QAAQ,EAAE;kBAC9C;AACA,sBAAI,QAAQA,IAAG;AACb,oBAAAqD,MAAK,OAAO,EAAE,KAAK,GAAG,QAAQ,OAAO,QAAQrD,EAAC;AAC9C,2BAAO,KAAK;kBACd;AACA,yBAAO;gBACT,SAASF,IAAG;AACV,yBAAO,KAAK,SAASA,IAAG,KAAK,YAAY;gBAC3C;cACF,GAlBO;cAmBP,aAAa,gCAAU,OAAO;AAC5B,uBAAO;cACT,GAFa;cAGb,OAAO,gCAAU,OAAOU,QAAO;AAC7B,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,IAAI,SAASA,MAAK,EAAE;AACzB,qBAAK,SAAS;AACd,sBAAM,OAAO,KAAK,kBAAkB,KAAK;AAEzC,oBAAI;AACF,uBAAK,IAAI,MAAM;AACf,yBAAO;gBACT,SAASV,IAAG;AACV,yBAAO,KAAK,SAASA,IAAG,KAAK,YAAY;gBAC3C;cACF,GAZO;cAaP,WAAW,gCAAU,OAAO,MAAM;AAChC,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,IAAI,aAAa,IAAI,EAAE;AAC5B,qBAAK,SAAS;AACd,sBAAM,OAAO,KAAK,kBAAkB,KAAK;AAEzC,oBAAI;AACF,uBAAK,IAAI,SAAS,qBAAqB,OAAO,IAAI,CAAC;AACnD,yBAAO;gBACT,SAASA,IAAG;AACV,yBAAO,KAAK,SAASA,IAAG,KAAK,YAAY;gBAC3C;cACF,GAZW;cAaX,SAAS,gCAAU,OAAO,UAAU;AAClC,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,IAAI,SAAS;AAClB,sBAAM,OAAO,KAAK,kBAAkB,KAAK;AACzC,qBAAK,WAAW;AAChB,uBAAO;cACT,GANS;cAOT,QAAQ,gCAAU,OAAO,MAAME,IAAG,UAAU;AAC1C,sBAAM,OAAO,gBAAgB,KAAK;AAClC,qBAAK,SAAS;AACd,sBAAM,OAAO,KAAK,kBAAkB,KAAK;AACzC,qBAAK,IAAI,UAAU,KAAK,IAAI,IAAIA,EAAC,IAAI,QAAQ,EAAE;AAC/C,oBAAI;AACF,wBAAM,SAAS,KAAK,IAAI;oBACtBqD,MAAK,OAAO,EAAE,SAAS,MAAM,OAAOrD,EAAC;oBACrC,EAAE,IAAI,qBAAqB,OAAO,QAAQ,EAAE;kBAC9C;AACA,yBAAOA,OAAM,SAAS,IAAI,KAAK,0BAA0B;gBAC3D,SAASF,IAAG;AACV,yBAAO,KAAK,SAASA,IAAG,KAAK,YAAY;gBAC3C;cACF,GAdQ;YAeV;AAEA,kBAAM,gBAAgB,IAAI,KAAK,mBAAmB;AAClD,0BAAc,YAAY;AAC1B,oBAAQ,IAAI,WAAW;cACrB,IAAI,EAAE,QAAQ,eAAe,SAAS,UAAU;YAClD,CAAC;AAED,kBAAM,aAAa;cACjB,SAAS,gCAAU,MAAM,OAAOU,QAAO,MAAM;AAC3C,sBAAM,OAAO,cAAc,IAAI;AAC/B,qBAAK,SAAS;AACd,oBAAI;AACF,wBAAM,OAAO,KAAK,QAAQ,KAAK;AAC/B,kBAAA6C,MAAK,OAAO,MAAM,KAAK,YAAY,IAAI,IAAI,IAAI,CAAC;gBAClD,SAASvD,IAAG;AACV,kBAAAuD,MAAK,OAAO,MAAM,CAAC;gBACrB;AACA,uBAAO;cACT,GAVS;cAWT,cAAc,gCAAU,MAAM,MAAM;AAClC,gBAAAA,MAAK;kBACH;kBACA,eAAY,oBAAI,KAAK,GAAE,QAAQ,IAAI;kBACnC;gBACF;AACA,uBAAO;cACT,GAPc;cAQd,mBAAmB,gCAAU,MAAM,MAAM;AACvC,gBAAAA,MAAK,KAAK,MAAM,cAAY,SAAW,oBAAI,KAAK,GAAE,QAAQ,GAAG,KAAK;AAClE,uBAAO;cACT,GAHmB;cAInB,SAAS,gCAAU,MAAM,OAAO,WAAW;AACzC,sBAAM,OAAO,cAAc,IAAI;AAC/B,qBAAK,IAAI,WAAWA,MAAK,SAAS,KAAK,CAAC,EAAE;AAC1C,qBAAK,SAAS;AACd,oBAAI;AACF,uBAAK,WAAW,KAAK,QAAQ,KAAK,CAAC;AACnC,yBAAO;gBACT,SAASvD,IAAG;AACV,uBAAK,SAASA,EAAC;AACf,yBAAO,KAAK;gBACd;cACF,GAXS;cAYT,eAAe,gCAAU,MAAM,OAAO,MAAM,MAAM;AAChD,sBAAM,IAAIuD,MAAK,SAAS,MAAM,OAAO,IAAI;AACzC,uBAAO,IAAI,OAAO,IAAI,KAAK;cAC7B,GAHe;cAIf,eAAe,gCAAU,MAAM,MAAM,MAAM;AACzC,sBAAM,OAAO,cAAc,IAAI;AAC/B,sBAAMvD,KAAI,KAAK,OAAO;AACtB,qBAAK,IAAI,iBAAiB,IAAI,QAAQA,EAAC;AACvC,oBAAIA,IAAG;AACL,wBAAM,QAAQuD,MAAK,gBAAgB;AACnC,sBAAI;AACF,0BAAM,CAAC,MAAMrD,EAAC,IAAIqD,MAAK,mBAAmBvD,GAAE,SAAS,IAAI;AACzD,oBAAAuD,MAAK,SAAS,MAAM,MAAM,IAAI;AAC9B,wBAAIrD,KAAI,KAAM,CAAAqD,MAAK,MAAM,OAAO,OAAO,GAAG,CAAC;kBAC7C,SAASvD,IAAG;AACV,2BAAO,KAAK;kBACd,UAAA;AACE,oBAAAuD,MAAK,eAAe,KAAK;kBAC3B;gBACF;AACA,uBAAOvD,KAAIA,GAAE,aAAa,KAAK,eAAe;cAChD,GAjBe;cAmBf,OAAO,gCAAS,EAAE,MAAM,OAAO,OAAOU,QAAO,WAAW;AACtD,sBAAM,OAAO,cAAc,IAAI;AAC/B,oBAAI;AACFA,4BAAS,CAAC;AACV,uBAAK,IAAI,SAAS6C,MAAK,SAAS,KAAK,CAAC,IAAI7C,MAAK,EAAE;AAEjD,wBAAM,OACJ,SAAS6C,MAAK,MAAM,KAAK,IACrB,KAAK,QAAQ,KAAK,IAClB,cAAc;AACpB,sBAAI,MAAM,KAAK,cAAc,IAAI;AACjC,sBAAI,CAAC,OAAO7C,SAAQ,KAAK,oBAAoB;AAC3C,wBAAI,KAAK,aAAa,IAAI,KAAK,YAAY,GAAG;AAC5C,4BAAM,KAAK,iBAAiB;AAC5B,2BAAK,kBAAkB,KAAK,MAAMA,MAAK;oBACzC,OAAO;AACL,2BAAK,wCAAwC,IAAI;oBACnD;kBACF;AACA,sBAAI,CAAC,KAAK;AACR,yBAAK,mBAAmB,IAAI;kBAC9B;AAEA,wBAAM,OAAO,EAAE,MAAM,OAAAA,QAAO,IAAI;AAChC,uBAAK,iBAAiB,OAAO,IAAI;AACjC,uBAAK,WAAW,KAAK;AACrB,wBAAM,UAAU,IAAI,KAAK,aAAa,KAAK;AAC3C,0BAAQ,YAAY,cAAc;AAClC,0BAAQ,QAAQ;AAChB,kBAAA6C,MAAK,OAAO,WAAW7C,MAAK;AAC5B,yBAAO;gBACT,SAASV,IAAG;AACV,uBAAK,SAASA,EAAC;AACf,yBAAO,KAAK;gBACd;cACF,GAnCO;YAoCT;AAEA,kBAAM,gBAAgB,gCAAU,SAAS;AACvC,kBAAI,QAAQ,KAAK,iBAAiB,OAAO,GAAG;AAC1C,sBAAM,mCAAmC,OAAO;cAClD;AACA,oBAAM,UAAU,IAAI,KAAK,YAAY;AAErC,oBAAM,QAAQ,KAAK,iBAAiB,IAAI;AACxC,oBAAM,OAAO,QAAQ,IAAI,KAAK,YAAY,KAAK,IAAI;AACnD,sBAAQ,YAAY;AACpB,sBAAQ,YAAY,KAAK,aAAa,WAAW;AACjD,sBAAQ,cAAc;AACtB,sBAAQ;gBACL,QAAQ,SAASuD,MAAK,aAAa,OAAO;gBAC3C,MAAM,cAAc,QAAQ,SAAS,CAAC;cACxC;AAEA,kBAAI,MAAM;AACR,wBAAQ,eAAe,KAAK;AAC5B,wBAAQ,UAAU,KAAK;AACvB,qBAAK,QAAQ;cACf;AACA,kBAAI,CAAC,QAAQ,gBAAgB,CAAC,WAAW,aAAa;AACpD,2BAAW,cAAc,SAAU,MAAM,MAAM,MAAM;AACnD,wBAAM,OAAOA,MAAK,OAAO;AACzB,sBAAI,IAAI;AACR,yBAAO,IAAI,MAAM,EAAE;AACjB,yBAAK,OAAO,CAAC,IAAK,KAAK,OAAO,IAAI,QAAU;AAC9C,yBAAO;gBACT;cACF;AACA,kBAAI,CAAC,QAAQ,WAAW,CAAC,WAAW,QAAQ;AAC1C,2BAAW,SAAS,CAAC,MAAM,OAAO;cACpC;AACA,sBAAQ,IAAI,WAAW;gBACrB,KAAK,EAAE,QAAQ,SAAS,SAAS,WAAW;cAC9C,CAAC;AACD,qBAAO;YACT,GArCsB;YAuCtB,MAAM,YAAY;qBAAA;;;cAChB;cAEA;cAEA;cAEA;cAEA,gBAAgB,oBAAI,IAAI;cAExB,oBAAoB,oBAAI,IAAI;cAE5B,gBAAgB,oBAAI,IAAI;cAExB,qBAAqB,oBAAI,IAAI;cAE7B,UAAU,IAAI,WAAW,kBAAkB;cAE3C;cAEA;cAEA;cAEA,YAAY9C,WAAU,uBAAO,OAAO,IAAI,GAAG;AACzC,qBAAK,aAAaA,SAAQ,aAAa,eAAe;AACtD,qBAAK,UAAUA,SAAQ,QAAQ,eAAe;AAC9C,qBAAK,QAAQ,cAAc,KAAK,OAAO;AACvC,8BAAc,KAAK,MAAM,SAAS,IAAI;AACtC,qBAAK,SAASA,SAAQ,aAAa,MAAM,KAAK;AAC9C,qBAAK,UAAU,IAAI;kBACjB,KAAK,QAAQ;kBACb,KAAK,QAAQ;gBACf;AACA,qBAAK,UAAU,KAAK;kBAClB,CAAC,EAAEA,SAAQ,eAAe,eAAe;gBAC3C,EAAE,KAAK,MAAM;AACX,sBAAI,KAAK,OAAQ,OAAM,KAAK;AAC5B,yBAAO,KAAK,YAAY,IACpB,QAAQ,QAAQ,MAAS,IACzB,KAAK;oBACHA,SAAQ,mBAAmB,eAAe;kBAC5C;gBACN,CAAC;cACH;cAEA,SAAS,UAAU,MAAM;AACvB,oBAAI,KAAK,aAAa;AACpB,0BAAQ,KAAK,EAAE,KAAK,UAAU,KAAK,GAAG,IAAI;cAC9C;cACA,OAAO,MAAM;AACX,qBAAK,SAAS,GAAG,GAAG,IAAI;cAC1B;cACA,QAAQ,MAAM;AACZ,qBAAK,SAAS,GAAG,GAAG,IAAI;cAC1B;cACA,SAAS,MAAM;AACb,qBAAK,SAAS,GAAG,GAAG,IAAI;cAC1B;cAEA,SAAS;AACP,uBAAO,KAAK;cACd;cAEA,cAAc;AACZ,uBAAO,KAAK,cAAc;cAC5B;cAEA,eAAe;AACb,uBAAO,KAAK,kBAAkB;cAChC;cAEA,eAAe;AACb,sBAAM,KAAK,CAAC;AACZ,2BAAWP,MAAK,KAAK,kBAAkB,KAAK,EAAG,IAAG,KAAKA,EAAC;AACxD,uBAAO;cACT;cAEA,MAAM,YAAYA,IAAG;AACnB,yBAAS,IAAI,GAAG,IAAIA,IAAG,EAAE,GAAG;AAC1B,wBAAM,OAAO,cAAc;AAC3B,wBAAM,IAAI,MAAM,KAAK,UAAU,cAAc,MAAM;oBACjD,QAAQ;kBACV,CAAC;AACD,wBAAM,KAAK,MAAM,EAAE,uBAAuB;AAC1C,uBAAK,cAAc,IAAI,IAAI,IAAI;AAC/B,uBAAK,kBAAkB,IAAI,IAAI,CAAC;gBAClC;AACA,uBAAO,KAAK,YAAY;cAC1B;cAEA,MAAM,eAAeA,IAAG;AACtB,oBAAI,MAAM;AACV,2BAAW,MAAM,MAAM,KAAK,KAAK,aAAa,GAAG;AAC/C,sBAAI,QAAQA,MAAK,KAAK,aAAa,MAAM,KAAK,YAAY,GAAG;AAC3D;kBACF;AACA,wBAAM,OAAO,KAAK,cAAc,IAAI,EAAE;AAEtC,qBAAG,MAAM;AACT,wBAAM,KAAK,UAAU,YAAY,IAAI;AACrC,uBAAK,cAAc,OAAO,EAAE;AAC5B,uBAAK,cAAc,OAAO,EAAE;AAC5B,oBAAE;gBACJ;AACA,uBAAO;cACT;cAEA,uBAAuB;AACrB,2BAAW,MAAM,KAAK,cAAc,KAAK,EAAG,IAAG,MAAM;AACrD,qBAAK,cAAc,MAAM;AACzB,qBAAK,kBAAkB,MAAM;AAC7B,qBAAK,cAAc,MAAM;cAC3B;cAEA,MAAM,qBAAqB,aAAa,OAAO;AAC7C,sBAAM,QAAQ,CAAC;AACf,iCAAiB,CAAC,MAAM,CAAC,KAAK,KAAK,WAAW;AAC5C,sBAAI,WAAW,EAAE,MAAM;AACrB,0BAAM,KAAK,CAAC,MAAM,CAAC,CAAC;kBACtB;gBACF;AACA,uBAAO,QAAQ;kBACb,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM;AAC7B,wBAAI;AACF,4BAAM,KAAK,MAAM,EAAE,uBAAuB;AAC1C,2BAAK,cAAc,IAAI,IAAI,IAAI;AAC/B,0BAAI,YAAY;AACd,2BAAG,SAAS,kBAAkB;AAC9B,6BAAK,kBAAkB,IAAI,IAAI,CAAC;sBAClC,OAAO;AACL,8BAAM,OAAO,KAAK,kBAAkB,EAAE;AACtC,4BAAI,MAAM;AACR,+BAAK,kBAAkB,IAAI,MAAM,EAAE;wBACrC,OAAO;AACL,+BAAK,cAAc,IAAI,EAAE;wBAC3B;sBACF;oBACF,SAASF,IAAG;AACV,2BAAK,SAASA,EAAC;AACf,2BAAK,qBAAqB;AAC1B,4BAAMA;oBACR;kBACF,CAAC;gBACH;cACF;cAEA,kBAAkB,KAAK;AACrB,oBAAI,KAAK,KAAK,SAAS,EAAE,IAAI,EAAE,CAAC;AAEhC,sBAAMU,SAAQ,KAAK,QAAQ,UAAU,mBAAmB;AACxD,oBACE,KAAK,QAAQ,CAAC,MACbA,SAAQ,KAAK,8BACXA,SAAQ,2BAA2B,IACtC;AACA,kBAAAqE;oBACE,uCAAuCrE,OAAM,SAAS,EAAE,CAAC;oBACzD,KAAK;kBACP;AACA,uBAAK,kBAAkB,KAAK,IAAI,CAAC;AACjC,yBAAO;gBACT;AAEA,sBAAM,aAAa,IAAI,YAAY,qBAAqB,CAAC;AACzD,oBAAI,KAAK,YAAY,EAAE,IAAI,qBAAqB,CAAC;AACjD,sBAAM,aAAa,KAAK,cAAc,KAAK,SAASA,MAAK;AAEzD,oBAAI,WAAW,MAAM,CAACZ,IAAG,MAAMA,OAAM,WAAW,CAAC,CAAC,GAAG;AACnD,wBAAM,YAAY,KAAK,QAAQ,UAAU,CAACA,OAAM,MAAMA,EAAC;AACvD,sBAAI,MAAM,WAAW;AACnB,wBAAI,SAAS,kBAAkB;kBACjC;AAEA,yBAAO,YACH,YAAY,OAAO,KAAK,QAAQ,SAAS,GAAG,SAAS,CAAC,IACtD;gBACN,OAAO;AACL,kBAAAiF,MAAK,sCAAsC;AAC3C,uBAAK,kBAAkB,KAAK,IAAI,CAAC;AACjC,yBAAO;gBACT;cACF;cAEA,kBAAkB,KAAK,MAAMrE,QAAO;AAClC,sBAAM,MAAM,YAAY,WAAW,MAAM,KAAK,OAAO;AACrD,oBAAI,wBAAwB,IAAI,UAAU,GAAG;AAC3C,uBAAK,kBAAkB,IAAI;gBAC7B;AACA,oBAAI,QAAQA,QAAO;AACjBA,4BAAS;gBACX;AACA,qBAAK,QAAQ,KAAK,GAAG,IAAI,SAAS,oBAAoB;AACtD,qBAAK,QAAQ,UAAU,qBAAqBA,MAAK;AACjD,sBAAM,SAAS,KAAK,cAAc,KAAK,SAASA,MAAK;AAErD,oBAAI,MAAM,KAAK,SAAS,EAAE,IAAI,EAAE,CAAC;AACjC,oBAAI,MAAM,QAAQ,EAAE,IAAI,qBAAqB,CAAC;AAC9C,oBAAI,MAAM;AAEV,oBAAI,MAAM;AACR,uBAAK,kBAAkB,IAAI,MAAM,GAAG;AACpC,uBAAK,cAAc,OAAO,GAAG;gBAC/B,OAAO;AACL,sBAAI,SAAS,kBAAkB;AAC/B,uBAAK,cAAc,IAAI,GAAG;gBAC5B;cACF;cAEA,cAAc,WAAW,WAAW;AAClC,oBAAI,YAAY,wBAAwB;AACtC,sBAAI,KAAK;AACT,sBAAI,KAAK;AACT,6BAAWZ,MAAK,WAAW;AACzB,yBAAK,KAAK,KAAK,KAAKA,IAAG,UAAU;AACjC,yBAAK,KAAK,KAAK,KAAKA,IAAG,MAAM;kBAC/B;AACA,yBAAO,IAAI,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;gBAC7C,OAAO;AACL,yBAAO,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;gBAC/B;cACF;cAEA,MAAM,MAAM,YAAY;AACtB,sBAAM,KAAK;AACX,oBAAI,IAAI,MAAM,UAAU,QAAQ,aAAa;AAC7C,oBAAI,MAAM;AACV,2BAAW,KAAK,KAAK,OAAO,MAAM,GAAG,GAAG;AACtC,sBAAI,GAAG;AACL,2BAAO;AACP,wBAAI,MAAM,EAAE,mBAAmB,GAAG,EAAE,QAAQ,KAAK,CAAC;kBACpD;gBACF;AACA,qBAAK,aAAa;AAClB,qBAAK,eAAe;AACpB,qBAAK,YAAY,MAAM,KAAK,WAAW;kBACrC;kBACA,EAAE,QAAQ,KAAK;gBACjB;AACA,qBAAK,qBAAqB;AAC1B,uBAAO,KAAK,qBAAqB,UAAU;cAC7C;cAEA,QAAQ,KAAK;AACX,oBAAIyD,MAAK,MAAM,GAAG,EAAG,OAAMA,MAAK,SAAS,GAAG;AAC5C,wBACE,eAAe,MAAM,MAAM,IAAI,IAAI,KAAK,mBAAmB,GAC3D;cACJ;cAEA,WAAW,MAAM;AACf,sBAAM,MAAM,KAAK,kBAAkB,IAAI,IAAI;AAC3C,oBAAI,KAAK;AACP,uBAAK,kBAAkB,OAAO,IAAI;AAClC,uBAAK,kBAAkB,KAAK,IAAI,CAAC;gBACnC;AACA,uBAAO,CAAC,CAAC;cACX;cAEA,SAASvD,IAAG,MAAM;AAChB,oBAAIA,IAAG;AACLA,qBAAE,YAAY,QAAQ,KAAK;AAC3B,uBAAK,MAAMA,EAAC;gBACd;AACA,qBAAK,SAASA;AACd,uBAAO;cACT;cAEA,SAAS;AACP,sBAAM,KAAK,KAAK;AAChB,qBAAK,SAAS;AACd,uBAAO;cACT;cAEA,mBAAmB;AACjB,sBAAM,CAAC,EAAE,IAAI,KAAK,cAAc,KAAK;AACrC,uBAAO;cACT;cAEA,kBAAkB,OAAO;AACvB,uBAAO,KAAK,mBAAmB,IAAI,KAAK;cAC1C;cAEA,iBAAiB,OAAO,MAAM;AAC5B,oBAAI,MAAM;AACR,uBAAK,mBAAmB,IAAI,OAAO,IAAI;AACvC,kCAAgB,OAAO,IAAI;gBAC7B,OAAO;AACL,uBAAK,mBAAmB,OAAO,KAAK;AACpC,kCAAgB,OAAO,KAAK;gBAC9B;cACF;cAEA,YAAY,MAAM;AAChB,uBAAO,KAAK,kBAAkB,IAAI,IAAI;cACxC;cAEA,cAAc,MAAM;AAClB,uBAAO,KAAK,kBAAkB,IAAI,IAAI;cACxC;cAEA,MAAM,YAAY;AAChB,oBAAI,CAAC,KAAK,MAAM,WAAW,CAAC,KAAK,UAAW,QAAO;AACnD,qBAAK,uBAAuB,KAAK,MAAM,OAAO;AAC9C,qBAAK,MAAM,QAAQ;AACnB,uBAAO,aAAa,KAAK,OAAO;AAChC,oBAAI;AACF,uBAAK,qBAAqB;AAC1B,wBAAM,KAAK,WAAW,YAAY,iBAAiB;oBACjD,WAAW;kBACb,CAAC;AACD,uBAAK,YAAY;AACjB,wBAAM,KAAK,aAAa,YAAY,KAAK,WAAW,MAAM;oBACxD,WAAW;kBACb,CAAC;AACD,uBAAK,aAAa,KAAK,eAAe;gBACxC,SAASA,IAAG;AACV,0BAAQ,OAAO;oBACb,KAAK;oBACL;oBACAA;kBACF;gBACF;AACA,uBAAO;cACT;cAEA,WAAW;AACT,oBAAI,KAAK,mBAAmB,OAAO,GAAG;AACpC,0BAAQ,aAAa;oBACnB,KAAK;oBACL;oBACA,KAAK;oBACL;kBACF;gBACF;AACA,oBAAI,KAAK,cAAc,OAAO,GAAG;AAC/B,uBAAK,uBAAuB,KAAK,OAAO;AACxC,uBAAK,qBAAqB;gBAC5B;AACA,uBAAO;cACT;cAEA,WAAW;AACT,uBAAO,MAAM,KAAK,cAAc;cAClC;cAEA,MAAM,aAAa;AACjB,oBAAI,MAAM,KAAK,cAAc,MAAM;AACjC,yBAAO,KAAK,qBAAqB,KAAK,EAAE;oBACtC,MAAM,KAAK,qBAAqB,KAAK,OAAO,CAAC;oBAC7C;kBACF;gBACF;AACA,uBAAO;cACT;cAEA,WAAW,MAAM;AACf,sBAAM,MACJ,KAAK,kBAAkB,IAAI,IAAI,KAAK,KAAK,mBAAmB,IAAI;AAClE,sBAAME,KAAI,IAAI,QAAQ,IAAI;AAC1B,sBAAM,IAAI,IAAI,WAAWA,KAAI,IAAIA,KAAI,CAAC;AACtC,oBAAIA,KAAI,GAAG;AACT,wBAAM,QAAQ,IAAI,KAAK,GAAG,EAAE,IAAI,mBAAmB,CAAC;AACpD,sBAAI,SAASA,IAAG;AACd;sBACE,sBAAsBA,KAAI,qBAAqB,QAAQ;oBACzD;kBACF;gBACF;AACA,uBAAO;cACT;cAEA,MAAM,gBAAgB,MAAM,UAAU;AACpC,sBAAM,MACJ,KAAK,kBAAkB,IAAI,IAAI,KAC/B,KAAK,iBAAiB,KACtB,KAAK,oCAAoC;AAC3C,oBAAI,SAAS,CAAC;AACd,oBAAI,SAAS,GACX,OACA,gBAAgB,OAChB6B,OAAM;AACR,oBAAI;AACF,yBAAO,YAAe,QAAQ,MAAM,SAAS,IAAI;AAC/C,wBAAI,iBAAiB,YAAa,SAAQ,IAAI,WAAW,KAAK;AAC9D,wBAAI,MAAM,UAAU,MAAM,cAAc,IAAI;AAC1C,2BAAK,eAAe,KAAK;AACzB,sCAAgB;oBAClB;AACA,wBAAI,MAAM,OAAO,EAAE,IAAI,qBAAqB,OAAO,CAAC;AACpD,8BAAU,MAAM;kBAClB;AACA,sBAAI,SAAS,OAAO,MAAM,SAAS,KAAK;AACtC;sBACE;sBACA;sBACA;oBACF;kBACF;AACA,sBAAI,CAAC,eAAe;AAClB,0BAAM,SAAS,IAAI,WAAW,EAAE;AAChC,wBAAI,KAAK,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC1B,yBAAK,eAAe,MAAM;kBAC5B;AACA,sBAAI,MAAM,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG;oBAChC,IAAI,qBAAqB;kBAC3B,CAAC;gBACH,SAAS/B,IAAG;AACV,uBAAK,kBAAkB,KAAK,IAAI,CAAC;AACjC,wBAAMA;gBACR;AACA,qBAAK,kBAAkB,KAAK,MAAM,KAAK,mBAAmB;AAC1D,uBAAO;cACT;cAEA,SAAS,MAAM,OAAO;AACpB,oBAAI,iBAAiB,YAAa,SAAQ,IAAI,WAAW,KAAK;yBACrD,iBAAiB;AACxB,yBAAO,KAAK,gBAAgB,MAAM,KAAK;AACzC,sBAAM,MACJ,KAAK,kBAAkB,IAAI,IAAI,KAC/B,KAAK,iBAAiB,KACtB,KAAK,oCAAoC;AAC3C,sBAAME,KAAI,MAAM;AAChB,oBAAIA,KAAI,OAAOA,KAAI,OAAO,GAAG;AAC3B,uBAAK,8CAA8C;gBACrD;AACA,sBAAM,SAAS;AACf,yBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,sBAAI,OAAO,WAAW,CAAC,MAAM,MAAM,CAAC,GAAG;AACrC,yBAAK,mDAAmD;kBAC1D;gBACF;AACA,sBAAM,SAAS,IAAI,MAAM,OAAO,EAAE,IAAI,mBAAmB,CAAC;AAC1D,oBAAI,UAAUA,IAAG;AACf,uBAAK,kBAAkB,KAAK,IAAI,CAAC;AACjC;oBACE,uBAAuBA,KAAI,sBAAsB,SAAS;kBAC5D;gBACF,OAAO;AACL,sBAAI,MAAM,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG;oBAChC,IAAI,qBAAqB;kBAC3B,CAAC;AACD,uBAAK,kBAAkB,KAAK,MAAM,KAAK,mBAAmB;gBAC5D;AACA,uBAAO;cACT;YACF;YAEA,MAAM,gBAAgB;qBAAA;;;cACpB;cAEA,YAAY,SAAS;AACnB,qBAAK,KAAK;AACV,qBAAK,UAAU,QAAQ;cACzB;cAEA,MAAM,YAAYA,IAAG;AACnB,uBAAO,KAAK,GAAG,YAAYA,EAAC;cAC9B;cAEA,MAAM,eAAeA,IAAG;AACtB,uBAAO,KAAK,GAAG,eAAeA,EAAC;cACjC;cAEA,cAAc;AACZ,uBAAO,KAAK,GAAG,YAAY,KAAK,EAAE;cACpC;cAEA,eAAe;AACb,uBAAO,KAAK,GAAG,aAAa;cAC9B;cACA,eAAe;AACb,uBAAO,KAAK,GAAG,aAAa;cAC9B;cAEA,MAAM,uBAAuB,KAAK;AAChC,sBAAMG,KAAI,KAAK,GAAG,YAAY;AAC9B,uBAAOA,KAAI,MAAM,KAAK,GAAG,YAAY,MAAMA,EAAC,IAAIA;cAClD;cAEA,WAAW,MAAM;AACf,uBAAO,KAAK,GAAG,WAAW,IAAI;cAChC;cAEA,SAAS,MAAM,OAAO;AACpB,uBAAO,KAAK,GAAG,SAAS,MAAM,KAAK;cACrC;cAEA,MAAM,YAAY;AAChB,uBAAO,KAAK,GAAG,MAAM,IAAI;cAC3B;cAEA,OAAO,UAAU;AACf,uBAAO,KAAK,GAAG,WAAW,QAAQ;cACpC;cAEA,MAAM,YAAY;AAChB,uBAAO,KAAK,GAAG,UAAU;cAC3B;cAEA,WAAW;AACT,qBAAK,GAAG,SAAS;AACjB,uBAAO;cACT;cACA,MAAM,aAAa;AACjB,uBAAO,KAAK,GAAG,WAAW,EAAE,KAAK,MAAM,IAAI;cAC7C;cACA,WAAW;AACT,uBAAO,KAAK,GAAG,SAAS;cAC1B;YACF;AAEA,kBAAM,kBAAkB,mCAAY;AAClC,oBAAM,KAAK,MAAM,UAAU,QAAQ,aAAa;AAChD,oBAAM,KAAK,8BAA8B,cAAc;AACvD,oBAAM,KAAK,MAAM,GAAG,cAAc,IAAI,EAAE,QAAQ,KAAK,CAAC;AACtD,oBAAM,KAAK,MAAM,GAAG,uBAAuB;AAC3C,oBAAM,QAAQ,GAAG,MAAM;AACvB,oBAAM;AACN,oBAAM,GAAG,YAAY,EAAE;AACvB,kBAAI,OAAO,MAAM;AACf;kBACE;kBACA;gBACF;cACF;AACA,qBAAO;YACT,GAfwB;AAiBxB,oBAAQ,wBAAwB,eAC9BI,WAAU,uBAAO,OAAO,IAAI,GAC5B;AACAA,yBAAU,OAAO;gBACf,uBAAO,OAAO,IAAI;gBAClB;gBACAA,YAAW,CAAC;cACd;AACA,oBAAM,UAAUA,SAAQ;AACxB,kBAAIA,SAAQ,kBAAkB;AAC5B,sBAAMA,SAAQ;cAChB;AACA,kBAAI,aAAa,OAAO,GAAG;AACzB,oBAAI;AACF,wBAAM,IAAI,MAAM,aAAa,OAAO;AAEpC,yBAAO;gBACT,SAAST,IAAG;AACV,sBAAIS,SAAQ,+BAA+B;AACzC,2BAAO,aAAa,OAAO;kBAC7B,OAAO;AACL,0BAAMT;kBACR;gBACF;cACF;AACA,kBACE,CAAC,WAAW,oBACZ,CAAC,WAAW,6BACZ,CAAC,WAAW,wBACZ,CAAC,WAAW,qBAAqB,UAAU,0BAC3C,CAAC,WAAW,SAAS,cACrB;AACA,uBAAQ,aAAa,OAAO,IAAI,QAAQ;kBACtC,IAAI,MAAM,6BAA6B;gBACzC;cACF;AAEA,qBAAQ,aAAa,OAAO,IAAI,gBAAgB,EAC7C,KAAK,iBAAkB;AACtB,oBAAIS,SAAQ,kBAAkB;AAC5B,wBAAMA,SAAQ;gBAChB;AACA,sBAAM,UAAU,IAAI,YAAYA,QAAO;AACvC,uBAAO,QAAQ,QACZ,KAAK,YAAY;AAChB,wBAAM,WAAW,IAAI,gBAAgB,OAAO;AAC5C,sBAAI,QAAQ,KAAK;AACf,0BAAM,MAAM,QAAQ;AACpB,0BAAM,SAAS,QAAQ,OAAO;AAC9B,0BAAM,gBAAgB,mCAAa,MAAM;AACvC,4BAAM,MAAM,IAAI,GAAG,aAAa,cAAc,GAAG,IAAI;AACrD,0BAAI,MAAM,OAAO;AACjB,0BAAI,GAAG,aAAa,KAAK,MAAM,GAAG;oBACpC,GAJsB;AAKtB,kCAAc,YAAY,OAAO,OAAO,IAAI,GAAG,SAAS;AACxD,6BAAS,gBAAgB;kBAC3B;AACA,0BAAQ,IAAI,kBAAkB;AAC9B,yBAAO;gBACT,CAAC,EACA,MAAM,OAAOT,OAAM;AAClB,wBAAM,QAAQ,UAAU,EAAE,MAAM,MAAM;kBAAC,CAAC;AACxC,wBAAMA;gBACR,CAAC;cACL,CAAC,EACA,MAAM,CAAC+B,SAAQ;AACd,uBAAQ,aAAa,OAAO,IAAI,QAAQ,OAAOA,IAAG;cACpD,CAAC;YACL;UACF,CAAC;AAEA;AACD,cAAI,gBAAgB,OAAO,QAAQ;AACjC,kBAAM,OAAO,OAAO;cAClB,uBAAO,OAAO,IAAI;cAClB;gBACE,SACE,gBAAgB,OAAO,cAAc,OAAO,KAAK,IAAI;gBACvD,QAAQ,OAAO;cACjB;cACA,WAAW,oBAAoB,CAAC;YAClC;AAEA,uBAAW,mBAAmB;AAC9B,gBAAI;AACJ,gBAAI;AACF,wBAAU,WAAW,oBAAoB;YAC3C,SAAS/B,IAAG;AACV,sBAAQ,MAAM,gCAAgCA,EAAC;AAC/C,oBAAMA;YACR,UAAA;AACE,qBAAO,WAAW;AAClB,qBAAO,WAAW;YACpB;AAEA,mBAAO,UAAU;UACnB,OAAO;AACL,oBAAQ;cACN;cACA;cACA;cACA;YACF;UACF;QACF;AAEA,oBAAY;AAEZ,eAAO;MACT;IACF,GAAG;AAEG,qBAAkB,WAAY;AAClC,YAAM,eAAe;AACrB,UAAI,CAAC,cAAc;AACjB,cAAM,IAAI;UACR;QACF;MACF;AAEA,YAAM,kBAAmB,WAAW,yBAAyB,OAAO;QAClE,uBAAO,OAAO,IAAI;QAClB;UACE,cAAc,YAAY,UAAU;UACpC,UAAU,gBAAgB,OAAO;UACjC,UAAU,WAAW;UACrB,WAAW,YAAY,UAAU,OAC7B,IAAI,IAAI,WAAW,SAAS,IAAI,EAAE,eAClC,IAAI,gBAAgB;QAC1B;MACF;AACA,sBAAgB,cAAc,gBAAgB,UAAU;QACtD;MACF,IACI,IAAI,SAAS,QAAQ,KAAK,wBAAwB,GAAG,IAAI,IACzD,MAAM;MAAC;AAEX,UAAI,gBAAgB,UAAU,IAAI,aAAa,GAAG;AAChD,wBAAgB,aACd,gBAAgB,UAAU,IAAI,aAAa,IAAI;MACnD,WAAW,gBAAgB,cAAc;AACvC,cAAM,KAAK,gBAAgB,aAAa,IAAI,MAAM,GAAG;AACrD,WAAG,IAAI;AACP,wBAAgB,aAAa,GAAG,KAAK,GAAG,IAAI;MAC9C;AAEA,iBAAW,oBAAoB,gCAAS,MAAM,MAAM;AAClD,eAAO,aAAa,GAAG,IAAI,EACxB,KAAK,CAAC,qBAAqB;AAC1B,2BAAiB,uBAAuB,gBAAgB;AACxD,gBAAMyD,KAAI,iBAAiB;AAC3BA,aAAE,aAAa;AAEf,cAAI,GAAG,cAAeA,IAAE,gBAAgB;AACxC,gBAAM,IAAIA,GAAE;AACZ,iBAAOA,GAAE;AACT,gBAAM,KAAK,EAAE;AACb,iBAAO;QACT,CAAC,EACA,MAAM,CAACzD,OAAM;AACZ,kBAAQ,MAAM,qCAAqCA,EAAC;AACpD,gBAAMA;QACR,CAAC;MACL,GAjB+B;AAkB/B,iBAAW,kBAAkB,QAAQ,aAAa;AAElD,UAAI,WAAW,uBAAuB,cAAc;AAClD,cAAM,MAAM,WAAW;AACvB,YAAI,MAAM,IAAI,aAAa,IAAI,MAAM,GAAG;AACxC,YAAI,IAAI;AACR,YAAI,YAAY,IAAI,KAAK,GAAG,IAAI;MAClC;AACA,sBAAgB,YAAY,4BAA4B,eAAe;AACvE,UAAI,GAAG;AACL,gBAAQ,KAAK,8BAA8B;AAC3C,gBAAQ,KAAK,8BAA8B,WAAW,SAAS,IAAI;AACnE,YAAI,gBAAgB,OAAO,UAAU;AACnC,kBAAQ;YACN;YACA,UAAU,eAAe;UAC3B;QACF;MACF;AACA,aAAO,WAAW;IACpB,EAAG;AACH,wBAAoB;EAAA;AAAA,CAAA;ACntbpB,IA0LO;AA1LP,IAAA,gCAAA,MAAA;EAAA,kJAAA;AAAA;AAyBA,eAAW,yBAAyB,gCAAS,OAC3CsD,UAAS,OAAO,eAChB;AACA,UAAI,MAAM,UAAU,UAAU,eAAe,OAAO,UAAU,CAAC,GAAG;AAChE,cAAM,IAAIA;AACV,QAAAA,UAAS,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG,OAAO,aAAa;AAChE,QAAAA,QAAO,UAAU;MACnB,OAAO;AACL,QAAAA,UAAS,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG,OAAO,eAAeA,OAAM;MAC1E;AACA,YAAM,aAAa,uBAAO,OAAO,IAAI;AACrC,YAAM4B,QAAO,kCAAY;MAAC,GAAb;AACb,YAAM,MAAM5B,QAAO,WAAW4B;AAC9B,YAAMC,SAAQ7B,QAAO,SAAS4B;AAC9B,YAAM,YAAY5B,QAAO,oBAAoB,SAAY,uBAAO,OAAO,IAAI;AAC3E,YAAM,WACJA,QAAO,qBACP,SAAU,KAAK;AACb,eACE,IAAI,OAAO,OAAO,UAAU,IAAI,IAAI,KAAK,UAAU,IAAI,IAAI,KAAK,KAAK;MAEzE;AACF,YAAM,OAAO,2BAAI,SAAS;AACxB,cAAM,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;MAChC,GAFa;AAGb,UAAI,CAACA,QAAO,OAAQ,CAAAA,QAAO,SAAS,OAAO,cAAc;AACzD,UAAI,eAAe,OAAOA,QAAO,OAAQ,CAAAA,QAAO,SAASA,QAAO,OAAO;AACvE,UAAI;AACJ,UAAI;AACJ,MAAAA,QAAO,OAAO,YAAY,SAAU,IAAI;AACtC,aAAK,GAAG;AACR,QAAA6B,OAAM,qBAAqB,EAAE;AAC7B,YAAI,aAAa,WAAW,GAAG,SAAS;AACxC,YAAI,CAAC,YAAY;AACf,cAAI,MAAM,kBAAkB,GAAG,QAAQ,oBAAoB,GAAG,QAAQ;AACpE,gBAAI7B,QAAO,QAAS,CAAAA,QAAO,QAAQ,YAAY;AAC/C;UACF;AACA,uBAAa,WAAW,GAAG,IAAI;AAC/B,cAAI,cAAc,WAAW,OAAO;AAClC,uBAAW,MAAM,EAAE;AACnB;UACF;AACA,cAAIA,QAAO,YAAa,CAAAA,QAAO,YAAY,UAAU,CAAC,CAAC;cAClD,KAAI,sDAAsD,EAAE;AACjE;QACF;AACA,eAAO,WAAW,GAAG,SAAS;AAC9B,gBAAQ,GAAG,MAAM;UACf,KAAK;AACH,uBAAW,OAAO,EAAE;AACpB;UACF,KAAK;AACH,gBAAI,CAAC,KAAM,QAAO,GAAG;AACrB;UACF,KAAK;AACH,gBAAI,GAAG,SAAS,KAAM,QAAO;AAC7B;UACF;AACE;QACJ;AACA,YAAI;AACF,qBAAW,QAAQ,EAAE;QACvB,SAAStD,IAAG;AACV,qBAAW,OAAOA,EAAC;QACrB;MACF;AACA,aAAQ,eAAe,kCAAY;AACjC,YAAI;AACJ,YAAI,MAAM,UAAU,QAAQ;AAC1B,gBAAM,UAAU,CAAC;QACnB,WAAW,MAAM,UAAU,QAAQ;AACjC,gBAAM,uBAAO,OAAO,IAAI;AACxB,cAAI,OAAO,UAAU,CAAC;AACtB,cAAI,OAAO,UAAU,CAAC;AACtB,cAAI,OAAO,IAAI,KAAK;QACtB,OAAO;AACL,eAAK,iEAAiE;QACxE;AACA,YAAI,CAAC,IAAI,QAAQ,IAAI,SAAS,OAAQ,KAAI,OAAO;AACjD,YAAI,YAAY,SAAS,GAAG;AAC5B,YAAI,gBAAgB,YAAY,IAAI;AACpC,cAAMoF,SAAQ,uBAAO,OAAO,IAAI;AAChCA,eAAM,UAAU;AAChB,YAAI;AACJ,YAAI,WAAW,IAAI,QAAQ,IAAI,MAAM;AACnC,cAAI,eAAe,OAAO,IAAI,KAAK,UAAU;AAC3C,4BAAgB,IAAI,YAAY;AAChCA,mBAAM,QAAQ,IAAI,KAAK;AACvB,gBAAI,KAAK,WAAW;AACpB,uBAAW,aAAa,IAAIA;UAC9B,WAAW,aAAa,OAAO,IAAI,KAAK,UAAU;AAChD;cACE;YACF;UACF;QACF;AAEA,YAAI,IAAI,IAAI,QAAQ,SAAU5F,UAAS,QAAQ;AAC7C4F,iBAAM,UAAU5F;AAChB4F,iBAAM,SAAS;AACf,qBAAW,IAAI,SAAS,IAAIA;AAC5B,UAAAD;YACE;YACA,IAAI;YACJ,6BAA6B,QAAQ,aAAa;YAClD;UACF;AACA,UAAA7B,QAAO,OAAO,YAAY,GAAG;QAC/B,CAAC;AACD,YAAI,cAAe,KAAI,EAAE,QAAQ,MAAM,OAAO,WAAW,aAAa,CAAC;AACvE,eAAO;MACT,GA7CuB;IA8CzB,GAjHoC;AAmHpC,eAAW,uBAAuB,gBAAgB;MAChD,QAAQ,kCAAY;AAClB,eAAO,IAAI;UACT,IAAI,IAAI,wCAAwC,YAAY,GAAG;UAC/D;YACE,MAAM;UACR;QACF;MACF,GAPQ;MAQR,SAAS,2BAAI,SAAS,QAAQ,MAAM,0BAA0B,GAAG,IAAI,GAA5D;IACX;AAEA,2BAAuB,KAAK,SAAUA,SAAQ;AAC5C,UAAI;AACJ,UAAI,cAAc,OAAOA,SAAQ;AAC/B,kBAAUA;AACV,QAAAA,UAAS,CAAC;MACZ,WAAW,eAAe,OAAOA,SAAQ,SAAS;AAChD,kBAAUA,QAAO;AACjB,eAAOA,QAAO;MAChB;AACA,YAAM,eAAe,uBAAO,OAAO,IAAI;AACvC,MAAAA,UAAS,OAAO,OAAOA,WAAU,uBAAO,OAAO,IAAI,GAAG;QACpD,SAAS,sCAAgB,MAAM;AAC7B,cAAI;AACF,gBAAI,QAAS,OAAM,QAAQ,IAAI;AAC/B,yBAAa,QAAQ,IAAI;UAC3B,SAAStD,IAAG;AACV,yBAAa,OAAOA,EAAC;UACvB;QACF,GAPS;MAQX,CAAC;AACD,YAAM,IAAI,IAAI,QAAQ,SAAUR,UAAS,QAAQ;AAC/C,qBAAa,UAAUA;AACvB,qBAAa,SAAS;MACxB,CAAC;AACD,UAAI;AACF,aAAK,SAAS8D,OAAM;MACtB,SAAStD,IAAG;AACV,qBAAa,OAAOA,EAAC;MACvB;AACA,aAAO;IACT,EAAE,KAAK;MACL,UAAU;IACZ,CAAC;AAEM,uCAAQ,uBAAuB;EAAA;AAAA,CAAA;AC1LtC,IAGMqF;AAHN,IAAA,mBAAA,MAAA;EAAA,4GAAA;AAAA,kCAAA;AACA,kCAAA;AAEMA,8BAAyB,WAAW;EAAA;AAAA,CAAA;ACH1C,IAAA,sBAAA,CAAA;AAAA,SAAA,qBAAA;EAAA,SAAA,6BAAA,OAAA;AAAA,CAAA;AAIA,SAAS,UAAU,IAAI;AAErB,cAAY,EAAE,WAAW,EAAE;AAC7B;AAHS;AAIT,SAAS,MAAM,YAAY,SAAS;AAClC,aAAW,UAAU,CAAC,gBAAgB;AACpC,UAAM,gBAAgB;MACpB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;AACA,aAAS,gBAAgB,OAAO;AAC9B,aAAO,IAAI,KAAK,KAAK,EAAE,eAAe;IACxC;AAFS;AAGT,aAAS,gBAAgB,OAAO;AAC9B,aAAO,MAAM,KAAK,KAAK;IACzB;AAFS;AAGT,aAAS,iBAAiB,UAAU,WAAW,gBAAgB;AAC7D,UAAI,SAAS,WAAW,GAAG;AACzB,eAAO,UAAU,IAAI,CAAC,UAAU,EAAE,MAAM,QAAQ,eAAe,EAAE;MACnE;AACA,YAAM,YAAY,SAAS,IAAI,CAAC,SAAS,KAAK,IAAI;AAClD,YAAM,aAAa,UAAU;AAC7B,YAAM,aAAa,UAAU;AAC7B,UAAI,eAAe,GAAG;AACpB,eAAO,UAAU,IAAI,CAAC,UAAU,EAAE,MAAM,QAAQ,eAAe,EAAE;MACnE;AACA,YAAM,KAAK,MAAM,KAAK,EAAE,QAAQ,aAAa,EAAE,GAAG,MAAM,IAAI,MAAM,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC;AACzF,eAAS,KAAK,aAAa,GAAG,MAAM,GAAG,MAAM,GAAG;AAC9C,iBAAS,KAAK,aAAa,GAAG,MAAM,GAAG,MAAM,GAAG;AAC9C,cAAI,UAAU,EAAE,MAAM,UAAU,EAAE,GAAG;AACnC,eAAG,EAAE,EAAE,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI;UACpC,OAAO;AACL,eAAG,EAAE,EAAE,EAAE,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;UACtD;QACF;MACF;AACA,YAAM,SAAS,CAAC;AAChB,UAAI,IAAI;AACR,UAAI,IAAI;AACR,aAAO,IAAI,cAAc,IAAI,YAAY;AACvC,YAAI,UAAU,CAAC,MAAM,UAAU,CAAC,GAAG;AACjC,iBAAO,KAAK,EAAE,MAAM,UAAU,CAAC,GAAG,QAAQ,SAAS,CAAC,EAAE,OAAO,CAAC;AAC9D,eAAK;AACL,eAAK;QACP,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG;AACvC,eAAK;QACP,OAAO;AACL,iBAAO,KAAK,EAAE,MAAM,UAAU,CAAC,GAAG,QAAQ,eAAe,CAAC;AAC1D,eAAK;QACP;MACF;AACA,aAAO,IAAI,YAAY;AACrB,eAAO,KAAK,EAAE,MAAM,UAAU,CAAC,GAAG,QAAQ,eAAe,CAAC;AAC1D,aAAK;MACP;AACA,aAAO;IACT;AAxCS;AAyCT,aAAS,uBAAuB,SAAS;AACvC,UAAI,cAAc,CAAC;AACnB,iBAAW,SAAS,SAAS;AAC3B,YAAI,CAAC,MAAM,SAAS;AAClB,wBAAc,CAAC;AACf;QACF;AACA,cAAMC,SAAQ,gBAAgB,MAAM,OAAO;AAC3C,YAAI,YAAY,WAAW,GAAG;AAC5B,wBAAcA,OAAM,IAAI,CAAC,UAAU,EAAE,MAAM,QAAQ,MAAM,KAAK,EAAE;AAChE;QACF;AACA,sBAAc,iBAAiB,aAAaA,QAAO,MAAM,IAAI;MAC/D;AACA,aAAO;IACT;AAfS;AAgBT,aAAS,gCAAgC7F,OAAM,SAAS,gBAAgB;AACtE,YAAM,eAAe,gBAAgB,OAAO;AAC5C,UAAIA,MAAK,WAAW,KAAK,aAAa,WAAW,GAAG;AAClD,eAAO,CAAC;MACV;AACA,aAAO,iBAAiBA,OAAM,cAAc,cAAc;IAC5D;AANS;AAOT,aAAS,eAAe,aAAa,gBAAgB;AACnD,UAAI,YAAY,WAAW,GAAG;AAC5B,eAAO,CAAC,CAAC,EAAE,QAAQ,gBAAgB,MAAM,GAAG,CAAC,CAAC;MAChD;AACA,YAAM,QAAQ,CAAC;AACf,UAAI,WAAW,CAAC;AAChB,UAAIJ,WAAU;AACd,YAAM,eAAe,6BAAM;AACzB,YAAIA,UAAS;AACX,mBAAS,KAAKA,QAAO;AACrBA,qBAAU;QACZ;MACF,GALqB;AAMrB,YAAM,YAAY,wBAAC,mBAAmB;AACpC,qBAAa;AACb,YAAI,SAAS,WAAW,GAAG;AACzB,mBAAS,KAAK,EAAE,QAAQ,gBAAgB,MAAM,GAAG,CAAC;QACpD;AACA,cAAM,KAAK,QAAQ;AACnB,mBAAW,CAAC;MACd,GAPkB;AAQlB,iBAAW,EAAE,MAAM,OAAO,KAAK,aAAa;AAC1C,YAAI,SAAS,MAAM;AACjB,oBAAU,MAAM;AAChB;QACF;AACA,YAAI,CAACA,YAAWA,SAAQ,WAAW,QAAQ;AACzC,uBAAa;AACbA,qBAAU,EAAE,QAAQ,MAAM,KAAK;QACjC,OAAO;AACLA,mBAAQ,QAAQ;QAClB;MACF;AACA,gBAAU,YAAY,GAAG,EAAE,GAAG,UAAU,cAAc;AACtD,aAAO;IACT;AAnCS;AAoCT,QAAI,OAAO,CAAC;AACZ,QAAI,mBAAmB;AACvB,QAAI,WAAW,CAAC;AAChB,QAAI,iBAAiB;AACrB,QAAI,WAAW;AACf,QAAI,mBAAmB;AACvB,QAAI,iBAAiB;AACrB,QAAI,kBAAkB;AACtB,QAAI,kBAAkB,CAAC;AACvB,QAAI,kBAAkB,CAAC;AACvB,QAAI,eAAe,CAAC;AACpB,QAAI,mBAAmB;AACvB,QAAI,gBAAgB;AACpB,QAAI,YAAY;AAChB,QAAI,cAAc;AAClB,QAAI,wBAAwB;AAC5B,QAAI,wBAAwB;AAC5B,QAAI,gBAAgB;AACpB,QAAI,gBAAgB,CAAC;AACrB,QAAI,mBAAmB;AACvB,QAAI,sBAAsB,CAAC;AAC3B,QAAI,qBAAqB,CAAC;AAC1B,UAAM,iBAAiB,wBAAC,YAAY;AAClC,YAAM,OAAO,SAAS,KAAK,KAAK;AAChC,UAAI,aAAa,IAAI,GAAG;AACtB;MACF;AACA,YAAM,QAAQ,cAAc,mBAAmB,cAAc,MAAM;AACnE,0BAAoB;AACpB,qBAAe,EAAE,GAAG,cAAc,CAAC,IAAI,GAAG,MAAM;IAClD,GARuB;AASvB,cAAU,MAAM;IAChB,CAAC;AACD;AACE,YAAM,eAAe,SAAS,KAAK,KAAK;AACxC,UAAI,CAAC,gBAAgB,QAAQ;AAC3B,YAAI,gBAAgB,WAAW,GAAG;AAChC,4BAAkB,CAAC;QACrB,OAAO;AACL,yBAAe,YAAY;AAC3B,4BAAkB,gCAAgC,CAAC,GAAG,iBAAiB,YAAY;QACrF;MACF,OAAO;AACL,cAAM,WAAW,gBAAgB,SAAS;AAC1C,cAAM,cAAc;AACpB,cAAM,SAAS,gBAAgB,MAAM,GAAG,cAAc,CAAC;AACvD,eAAO,QAAQ,CAAC,UAAU,eAAe,MAAM,IAAI,CAAC;AACpD,cAAM,kBAAkB,uBAAuB,MAAM;AACrD,cAAM,gBAAgB;AACtB,cAAM,mBAAmB,gCAAgC,iBAAiB,eAAe,YAAY;AACrG;AACE,yBAAe,YAAY;QAC7B;AACA,0BAAkB;MACpB;IACF;AACA,oBAAgB,gBAAgB;AAChC,gBAAY,gBAAgB,IAAI,gBAAgB,IAAI;AACpD,kBAAc,gBAAgB,IAAI,YAAY;AAC9C,4BAAwB,gBAAgB,IAAI,cAAc;AAC1D,4BAAwB,0BAA0B,OAAO,gBAAgB,qBAAqB,IAAI;AAClG,oBAAgB;AAChB,4BAAwB,GAAG,sBAAsB,IAAI,WAAM,gBAAgB,sBAAsB,SAAS,CAAC,KAAK;AAChH,oBAAgB,OAAO,QAAQ,YAAY,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;AACpF,kBAAc,SAAS;AACvB,uBAAmB,SAAS,KAAK,KAAK;AACtC,0BAAsB,gBAAgB,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,QAAQ,iBAAiB,EAAE;AACvG,yBAAqB,gBAAgB,SAAS,IAAI,kBAAkB;AACpE,mBAAe,oBAAoB,gBAAgB;AACnD,gBAAY,KAAK,4QAA4Q,KAAK,SAAS,QAAQ,CAAC,sGAAsG,KAAK,SAAS,cAAc,CAAC,qJAAqJ,KAAK,SAAS,gBAAgB,CAAC,2HAA2H,YAAY,SAAS,MAAM,CAAC,iBAAiB;AACnxB,UAAM,aAAa,kBAAkB,QAAQ;AAC7C,aAAS,UAAU,GAAG,WAAW,WAAW,QAAQ,UAAU,UAAU,WAAW;AACjF,UAAIkG,WAAU,WAAW,OAAO;AAChC,kBAAY,KAAK,OAAO,WAAW,gBAAgB,QAAQ,EAAE,UAAU,gBAAgB,OAAOA,SAAQ,GAAG,CAAC,CAAC,0DAA0D,YAAYA,SAAQ,IAAI,CAAC,oCAAoC,YAAY,IAAI,KAAKA,SAAQ,YAAY,EAAE,mBAAmB,CAAC,CAAC,kEAAkE,KAAK,SAASA,SAAQ,KAAK,CAAC,sCAAsC;IACxa;AACA,gBAAY,KAAK,kDAAkD;AACnE;AACE,kBAAY,KAAK,WAAW;AAC5B,kBAAY,KAAK,wKAAwK,WAAW,oBAAoB,gBAAgB,EAAE,CAAC,YAAY,YAAY,gBAAgB,CAAC,gBAAgB,WAAW,oBAAoB,OAAO,EAAE,CAAC,YAAY,YAAY,iBAAiB,CAAC,qBAAqB;IAC9Y;AACA,gBAAY,KAAK,2FAA2F;AAC5G,QAAI,KAAK,WAAW,GAAG;AACrB,kBAAY,KAAK,UAAU;AAC3B,kBAAY,KAAK,qDAAqD;IACxE,OAAO;AACL,kBAAY,KAAK,WAAW;AAC5B,kBAAY,KAAK,UAAU;AAC3B,YAAM,eAAe,kBAAkB,IAAI;AAC3C,eAASrE,SAAQ,GAAG,WAAW,aAAa,QAAQA,SAAQ,UAAUA,UAAS;AAC7E,YAAI2C,OAAM,aAAa3C,MAAK;AAC5B,oBAAY,KAAK,0BAA0B,YAAY2C,IAAG,CAAC,QAAQ;MACrE;AACA,kBAAY,KAAK,UAAU;IAC7B;AACA,gBAAY,KAAK,mCAAmC;EACtD,CAAC;AACH;AAtNS;AART,IAAA,mBAAA,MAAA;EAAA,MAAA,4DAAA;AAAA,gBAAA;AACA,iBAAA;AACA,UAAA,UAAA;AACA,qBAAA;EAAA;AAAA,CAAA;ACHA,IAAA9C,aAAA,CAAA;AAAA,SAAAA,YAAA;EAAA,WAAA,6BAAAP,YAAA;EAAA,OAAA,6BAAAQ,QAAA;EAAA,SAAA,6BAAAC,UAAA;EAAA,OAAA,6BAAAC,QAAA;EAAA,aAAA,6BAAAC,cAAA;EAAA,WAAA,6BAAA,WAAA;EAAA,cAAA,6BAAA,cAAA;AAAA,CAAA;AAAA,IAEaD;AAFb,IAGIE;AAHJ,IAIaZ;AAJb,IAKa;AALb,IAQa;AARb,IASaS;AATb,IAUaE;AAVb,IAWaH;AAXb,IAAAK,UAAA,MAAA;EAAA,yCAAA;AAEaH,aAAQ;AAERV,iBAAY,mCAAYY,sBAAqB,MAAM,iBAAA,EAAA,KAAA,MAAA,mBAAA,GAA4C,SAAnF;AACZ,gBAAY;MACvB,OAAO;IACT;AACa,mBAAe;AACfH,eAAU,CAAC,sCAAqC,qCAAoC,qCAAoC,qCAAoC,qCAAoC,qCAAoC,mCAAmC;AACvQE,mBAAc,CAAC;AACfH,aAAQ,CAAC;EAAA;AAAA,CAAA;ACXtB,IAAM,UAAU;AAChB,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAM,UAAU;AAChB,IAAM,WAAW;AACjB,IAAM,UAAU,EAAE,MAAM,OAAO;AAC/B,SAAS,SAAS,OAAO;AACvB,SAAO,MAAM;AACb,WAAS,MAAM;AACjB;AAHS;AAIT,SAAS,QAAQ;AACf,SAAO,QAAQ;AACf,WAAS,QAAQ;AACnB;AAHS;ACVT,cAAA;ACAA,IAAO,eAAQ;ACAf,IAAM,WAAW,WAAW,SAAS,KAAK;AAC1C,IAAO,uBAAQ,YAAY,CAAC,SAAS,YAAY,EAAE,WAAW,MAAM;ACC7D,IAAM,eAAe,IAAI,YAAY;AACrC,IAAM,eAAe,IAAI,YAAY;AHqErC,SAAST,OAAM,QAAQpB,OAAM;AACnC,OAAK,CAAC,gBAAW,0BAAS,MAAM,MAAM,KAAK,SAAS,OAAO,SAAS,MAAM;AACzE,UAAM,IAAI,MAAM,8DAAyD,MAAM,aAAa;EAC7F;AAEA,QAAM,IAAI,UAAU,QAAQA,KAAI;AACjC;AANgB,OAAAoB,QAAA;AA+DT,SAAS,KAAK,MAAMiF,OAAM;AAGhC,QAAMrG,QAAO,KAAK,UAAU,IAAI;AAKhC,QAAM2B,WAAU,IAAI,QAAQ0E,OAAM,OAAO;AACzC,MAAI,CAAC1E,SAAQ,IAAI,gBAAgB,GAAG;AACnCA,aAAQ,IAAI,kBAAkB,aAAa,OAAO3B,KAAI,EAAE,WAAW,SAAS,CAAC;EAC9E;AAEA,MAAI,CAAC2B,SAAQ,IAAI,cAAc,GAAG;AACjCA,aAAQ,IAAI,gBAAgB,kBAAkB;EAC/C;AAEA,SAAO,IAAI,SAAS3B,OAAM;IACzB,GAAGqG;IACH,SAAA1E;EACD,CAAC;AACF;AArBgB;AA4BT,SAAS,KAAK3B,OAAMqG,OAAM;AAChC,QAAM1E,WAAU,IAAI,QAAQ0E,OAAM,OAAO;AACzC,MAAI,CAAC1E,SAAQ,IAAI,gBAAgB,GAAG;AACnC,UAAM,UAAU,aAAa,OAAO3B,KAAI;AACxC2B,aAAQ,IAAI,kBAAkB,QAAQ,WAAW,SAAS,CAAC;AAC3D,WAAO,IAAI,SAAS,SAAS;MAC5B,GAAG0E;MACH,SAAA1E;IACD,CAAC;EACF;AAEA,SAAO,IAAI,SAAS3B,OAAM;IACzB,GAAGqG;IACH,SAAA1E;EACD,CAAC;AACF;AAfgB;AIjKhB,cAAA;AACA,YAAA;ACHA,WAAA;AACA,IAAM,UAAU;EACd,KAAK;EACL,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,KAAK;EACL,UAAU;EACV,UAAU;AACZ;AACA,IAAM,eAAN,cAA2B,MAAM;SAAA;;;;;;;EAK/B,YAAY,SAAS,MAAM;AACzB,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,OAAO,KAAK,KAAK,EAAE;EAC1B;AACF;AACA,SAAS,aAAa,OAAO;AAC3B,SAAO,OAAO,KAAK,MAAM;AAC3B;AAFS;AAGT,IAAM,qBAAqC,uBAAO;EAChD,OAAO;AACT,EAAE,KAAK,EAAE,KAAK,IAAI;AAClB,SAAS,gBAAgB,OAAO;AAC9B,QAAM,QAAQ,OAAO,eAAe,KAAK;AACzC,SAAO,UAAU,OAAO,aAAa,UAAU,QAAQ,OAAO,eAAe,KAAK,MAAM,QAAQ,OAAO,oBAAoB,KAAK,EAAE,KAAK,EAAE,KAAK,IAAI,MAAM;AAC1J;AAHS;AAIT,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,UAAU,SAAS,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE;AAC1D;AAFS;AAGT,SAAS,iBAAiB,MAAM;AAC9B,UAAQ,MAAM;IACZ,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AACE,aAAO,OAAO,MAAM,MAAM,KAAK,WAAW,CAAC,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,KAAK;EACnF;AACF;AAzBS;AA0BT,SAAS,iBAAiB,KAAK;AAC7B,MAAI,SAAS;AACb,MAAI,WAAW;AACf,QAAM,MAAM,IAAI;AAChB,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,UAAM,OAAO,IAAI,CAAC;AAClB,UAAM,cAAc,iBAAiB,IAAI;AACzC,QAAI,aAAa;AACf,gBAAU,IAAI,MAAM,UAAU,CAAC,IAAI;AACnC,iBAAW,IAAI;IACjB;EACF;AACA,SAAO,IAAI,aAAa,IAAI,MAAM,SAAS,IAAI,MAAM,QAAQ,CAAC;AAChE;AAbS;AAcT,SAAS,mBAAmB,QAAQ;AAClC,SAAO,OAAO,sBAAsB,MAAM,EAAE;IAC1C,CAAC,WAAW,OAAO,yBAAyB,QAAQ,MAAM,EAAE;EAC9D;AACF;AAJS;AAKT,IAAM,gBAAgB;AACtB,SAAS,cAAcpB,MAAK;AAC1B,SAAO,cAAc,KAAKA,IAAG,IAAI,MAAMA,OAAM,MAAM,KAAK,UAAUA,IAAG,IAAI;AAC3E;AAFS;AAGT,SAAS,SAAS,aAAa;AAC7B,QAAM,KAAK,IAAI,SAAS,WAAW;AACnC,MAAI,eAAe;AACnB,WAAS,IAAI,GAAG,IAAI,YAAY,YAAY,KAAK;AAC/C,oBAAgB,OAAO,aAAa,GAAG,SAAS,CAAC,CAAC;EACpD;AACA,SAAO,cAAc,YAAY;AACnC;AAPS;AAQT,SAAS,SAAS,QAAQ;AACxB,QAAM,eAAe,cAAc,MAAM;AACzC,QAAM,cAAc,IAAI,YAAY,aAAa,MAAM;AACvD,QAAM,KAAK,IAAI,SAAS,WAAW;AACnC,WAAS,IAAI,GAAG,IAAI,YAAY,YAAY,KAAK;AAC/C,OAAG,SAAS,GAAG,aAAa,WAAW,CAAC,CAAC;EAC3C;AACA,SAAO;AACT;AARS;AAST,IAAM,aAAa;AACnB,SAAS,cAAc,MAAM;AAC3B,MAAI,KAAK,SAAS,MAAM,GAAG;AACzB,WAAO,KAAK,QAAQ,QAAQ,EAAE;EAChC;AACA,MAAI,SAAS;AACb,MAAI,SAAS;AACb,MAAI,kBAAkB;AACtB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAW;AACX,cAAU,WAAW,QAAQ,KAAK,CAAC,CAAC;AACpC,uBAAmB;AACnB,QAAI,oBAAoB,IAAI;AAC1B,gBAAU,OAAO,cAAc,SAAS,aAAa,EAAE;AACvD,gBAAU,OAAO,cAAc,SAAS,UAAU,CAAC;AACnD,gBAAU,OAAO,aAAa,SAAS,GAAG;AAC1C,eAAS,kBAAkB;IAC7B;EACF;AACA,MAAI,oBAAoB,IAAI;AAC1B,eAAW;AACX,cAAU,OAAO,aAAa,MAAM;EACtC,WAAW,oBAAoB,IAAI;AACjC,eAAW;AACX,cAAU,OAAO,cAAc,SAAS,UAAU,CAAC;AACnD,cAAU,OAAO,aAAa,SAAS,GAAG;EAC5C;AACA,SAAO;AACT;AA3BS;AA4BT,SAAS,cAAc,KAAK;AAC1B,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG;AACtC,UAAM,cAAc,CAAC,QAAQ,QAAQ,QAAQ,MAAM;AACnD,gBAAY,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK;AACtC,gBAAY,CAAC,KAAK,IAAI,WAAW,CAAC,IAAI,MAAM;AAC5C,QAAI,IAAI,SAAS,IAAI,GAAG;AACtB,kBAAY,CAAC,KAAK,IAAI,WAAW,IAAI,CAAC,KAAK;AAC3C,kBAAY,CAAC,KAAK,IAAI,WAAW,IAAI,CAAC,IAAI,OAAO;IACnD;AACA,QAAI,IAAI,SAAS,IAAI,GAAG;AACtB,kBAAY,CAAC,KAAK,IAAI,WAAW,IAAI,CAAC,KAAK;AAC3C,kBAAY,CAAC,IAAI,IAAI,WAAW,IAAI,CAAC,IAAI;IAC3C;AACA,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,OAAO,YAAY,CAAC,MAAM,aAAa;AACzC,eAAO;MACT,OAAO;AACL,eAAO,WAAW,YAAY,CAAC,CAAC;MAClC;IACF;EACF;AACA,SAAO;AACT;AAvBS;AAwBT,IAAM,YAAY;AAClB,IAAM,OAAO;AACb,IAAM,MAAM;AACZ,IAAM,oBAAoB;AAC1B,IAAM,oBAAoB;AAC1B,IAAM,gBAAgB;AACtB,SAAS,MAAM,YAAY,UAAU;AACnC,SAAO,UAAU,KAAK,MAAM,UAAU,GAAG,QAAQ;AACnD;AAFS;AAGT,SAAS,UAAU,QAAQ,UAAU;AACnC,MAAI,OAAO,WAAW,SAAU,QAAO+F,SAAQ,QAAQ,IAAI;AAC3D,MAAI,CAAC,MAAM,QAAQ,MAAM,KAAK,OAAO,WAAW,GAAG;AACjD,UAAM,IAAI,MAAM,eAAe;EACjC;AACA,QAAM;;IAEJ;;AAEF,QAAM,WAAW,MAAM,OAAO,MAAM;AACpC,WAASA,SAAQvE,QAAO,aAAa,OAAO;AAC1C,QAAIA,WAAU,UAAW,QAAO;AAChC,QAAIA,WAAU,IAAK,QAAO;AAC1B,QAAIA,WAAU,kBAAmB,QAAO;AACxC,QAAIA,WAAU,kBAAmB,QAAO;AACxC,QAAIA,WAAU,cAAe,QAAO;AACpC,QAAI,cAAc,OAAOA,WAAU,UAAU;AAC3C,YAAM,IAAI,MAAM,eAAe;IACjC;AACA,QAAIA,UAAS,SAAU,QAAO,SAASA,MAAK;AAC5C,UAAM,QAAQ,OAAOA,MAAK;AAC1B,QAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,eAASA,MAAK,IAAI;IACpB,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,UAAI,OAAO,MAAM,CAAC,MAAM,UAAU;AAChC,cAAM,OAAO,MAAM,CAAC;AACpB,cAAM,UAAU,WAAW,IAAI;AAC/B,YAAI,SAAS;AACX,iBAAO,SAASA,MAAK,IAAI,QAAQuE,SAAQ,MAAM,CAAC,CAAC,CAAC;QACpD;AACA,gBAAQ,MAAM;UACZ,KAAK;AACH,qBAASvE,MAAK,IAAI,IAAI,KAAK,MAAM,CAAC,CAAC;AACnC;UACF,KAAK;AACH,kBAAMvB,OAAsB,oBAAI,IAAI;AACpC,qBAASuB,MAAK,IAAIvB;AAClB,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACxCA,mBAAI,IAAI8F,SAAQ,MAAM,CAAC,CAAC,CAAC;YAC3B;AACA;UACF,KAAK;AACH,kBAAM,MAAsB,oBAAI,IAAI;AACpC,qBAASvE,MAAK,IAAI;AAClB,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACxC,kBAAI,IAAIuE,SAAQ,MAAM,CAAC,CAAC,GAAGA,SAAQ,MAAM,IAAI,CAAC,CAAC,CAAC;YAClD;AACA;UACF,KAAK;AACH,qBAASvE,MAAK,IAAI,IAAI,OAAO,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAC/C;UACF,KAAK;AACH,qBAASA,MAAK,IAAI,OAAO,MAAM,CAAC,CAAC;AACjC;UACF,KAAK;AACH,qBAASA,MAAK,IAAI,OAAO,MAAM,CAAC,CAAC;AACjC;UACF,KAAK;AACH,kBAAM,MAAsB,uBAAO,OAAO,IAAI;AAC9C,qBAASA,MAAK,IAAI;AAClB,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACxC,kBAAI,MAAM,CAAC,CAAC,IAAIuE,SAAQ,MAAM,IAAI,CAAC,CAAC;YACtC;AACA;UACF,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK,kBAAkB;AACrB,kBAAM,wBAAwB,WAAW,IAAI;AAC7C,kBAAM,aAAa,IAAI,sBAAsBA,SAAQ,MAAM,CAAC,CAAC,CAAC;AAC9D,qBAASvE,MAAK,IAAI,MAAM,CAAC,MAAM,SAAS,WAAW,SAAS,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI;AAClF;UACF;UACA,KAAK,eAAe;AAClB,kBAAM,SAAS,MAAM,CAAC;AACtB,kBAAM,cAAc,SAAS,MAAM;AACnC,qBAASA,MAAK,IAAI;AAClB;UACF;UACA,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK,0BAA0B;AAC7B,kBAAM,eAAe,KAAK,MAAM,CAAC;AACjC,qBAASA,MAAK,IAAI,SAAS,YAAY,EAAE,KAAK,MAAM,CAAC,CAAC;AACtD;UACF;UACA,KAAK,OAAO;AACV,kBAAM,MAAM,IAAI,IAAI,MAAM,CAAC,CAAC;AAC5B,qBAASA,MAAK,IAAI;AAClB;UACF;UACA,KAAK,mBAAmB;AACtB,kBAAM,MAAM,IAAI,gBAAgB,MAAM,CAAC,CAAC;AACxC,qBAASA,MAAK,IAAI;AAClB;UACF;UACA;AACE,kBAAM,IAAI,MAAM,gBAAgB,IAAI,EAAE;QAC1C;MACF,OAAO;AACL,cAAMQ,SAAQ,IAAI,MAAM,MAAM,MAAM;AACpC,iBAASR,MAAK,IAAIQ;AAClB,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACxC,gBAAMxB,KAAI,MAAM,CAAC;AACjB,cAAIA,OAAM,KAAM;AAChBwB,iBAAM,CAAC,IAAI+D,SAAQvF,EAAC;QACtB;MACF;IACF,OAAO;AACL,YAAM,SAAS,CAAC;AAChB,eAASgB,MAAK,IAAI;AAClB,iBAAWxB,QAAO,OAAO;AACvB,YAAIA,SAAQ,aAAa;AACvB,gBAAM,IAAI,MAAM,oDAAoD;QACtE;AACA,cAAMQ,KAAI,MAAMR,IAAG;AACnB,eAAOA,IAAG,IAAI+F,SAAQvF,EAAC;MACzB;IACF;AACA,WAAO,SAASgB,MAAK;EACvB;AA1HSuE;AA2HT,SAAOA,SAAQ,CAAC;AAClB;AAtIS;AAuIT,SAAS,YAAY,OAAO,UAAU;AACpC,QAAM,cAAc,CAAC;AACrB,QAAM,UAA0B,oBAAI,IAAI;AACxC,QAAM,SAAS,CAAC;AAChB,MAAI,UAAU;AACZ,eAAW/F,QAAO,OAAO,oBAAoB,QAAQ,GAAG;AACtD,aAAO,KAAK,EAAE,KAAAA,MAAK,IAAI,SAASA,IAAG,EAAE,CAAC;IACxC;EACF;AACA,QAAM,OAAO,CAAC;AACd,MAAI,IAAI;AACR,WAAS,QAAQ,OAAO;AACtB,QAAI,OAAO,UAAU,YAAY;AAC/B,YAAM,IAAI,aAAa,+BAA+B,IAAI;IAC5D;AACA,QAAI,UAAU,OAAQ,QAAO;AAC7B,QAAI,OAAO,MAAM,KAAK,EAAG,QAAO;AAChC,QAAI,UAAU,SAAU,QAAO;AAC/B,QAAI,UAAU,UAAW,QAAO;AAChC,QAAI,UAAU,KAAK,IAAI,QAAQ,EAAG,QAAO;AACzC,QAAI,QAAQ,IAAI,KAAK,EAAG,QAAO,QAAQ,IAAI,KAAK;AAChD,UAAMgG,UAAS;AACf,YAAQ,IAAI,OAAOA,OAAM;AACzB,eAAW,EAAE,KAAAhG,MAAK,GAAG,KAAK,QAAQ;AAChC,YAAM,SAAS,GAAG,KAAK;AACvB,UAAI,QAAQ;AACV,oBAAYgG,OAAM,IAAI,KAAKhG,IAAG,KAAK,QAAQ,MAAM,CAAC;AAClD,eAAOgG;MACT;IACF;AACA,QAAI,MAAM;AACV,QAAI,aAAa,KAAK,GAAG;AACvB,YAAM,oBAAoB,KAAK;IACjC,OAAO;AACL,YAAM,OAAO,SAAS,KAAK;AAC3B,cAAQ,MAAM;QACZ,KAAK;QACL,KAAK;QACL,KAAK;AACH,gBAAM,aAAa,oBAAoB,KAAK,CAAC;AAC7C;QACF,KAAK;AACH,gBAAM,aAAa,KAAK;AACxB;QACF,KAAK;AACH,gBAAM,QAAQ,CAAC,MAAM,MAAM,QAAQ,CAAC;AACpC,gBAAM,YAAY,QAAQ,MAAM,YAAY,IAAI,EAAE;AAClD;QACF,KAAK;AACH,gBAAM,UAAU,iBAAiB,MAAM,SAAS,CAAC,CAAC;AAClD;QACF,KAAK;AACH,gBAAM,sBAAsB,iBAAiB,MAAM,SAAS,CAAC,CAAC;AAC9D;QACF,KAAK;AACH,gBAAM,EAAE,QAAAjE,SAAQ,OAAAf,OAAM,IAAI;AAC1B,gBAAMA,SAAQ,aAAa,iBAAiBe,OAAM,CAAC,KAAKf,MAAK,OAAO,aAAa,iBAAiBe,OAAM,CAAC;AACzG;QACF,KAAK;AACH,gBAAM;AACN,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACxC,gBAAI,IAAI,EAAG,QAAO;AAClB,gBAAI,KAAK,OAAO;AACd,mBAAK,KAAK,IAAI,CAAC,GAAG;AAClB,qBAAO,QAAQ,MAAM,CAAC,CAAC;AACvB,mBAAK,IAAI;YACX,OAAO;AACL,qBAAO;YACT;UACF;AACA,iBAAO;AACP;QACF,KAAK;AACH,gBAAM;AACN,qBAAW,UAAU,OAAO;AAC1B,mBAAO,IAAI,QAAQ,MAAM,CAAC;UAC5B;AACA,iBAAO;AACP;QACF,KAAK;AACH,gBAAM;AACN,qBAAW,CAAC/B,MAAK,MAAM,KAAK,OAAO;AACjC,iBAAK;cACH,QAAQ,aAAaA,IAAG,IAAI,oBAAoBA,IAAG,IAAI,KAAK;YAC9D;AACA,mBAAO,IAAI,QAAQA,IAAG,CAAC,IAAI,QAAQ,MAAM,CAAC;AAC1C,iBAAK,IAAI;UACX;AACA,iBAAO;AACP;QACF,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK,kBAAkB;AACrB,gBAAM,aAAa;AACnB,gBAAM,OAAO,OAAO,OAAO,QAAQ,WAAW,MAAM;AACpD,gBAAM,IAAI,MAAM;AAChB,gBAAM,IAAI,IAAI,MAAM;AACpB,cAAI,IAAI,KAAK,MAAM,WAAW,OAAO,YAAY;AAC/C,kBAAM,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC,IAAI;AACnC,mBAAO,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;UAC3B;AACA,iBAAO;AACP;QACF;QACA,KAAK,eAAe;AAClB,gBAAM,cAAc;AACpB,gBAAM,SAAS,SAAS,WAAW;AACnC,gBAAM,mBAAmB,MAAM;AAC/B;QACF;QACA,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH,gBAAM,KAAK,IAAI,KAAK,iBAAiB,MAAM,SAAS,CAAC,CAAC;AACtD;QACF;AACE,cAAI,CAAC,gBAAgB,KAAK,GAAG;AAC3B,kBAAM,IAAI;cACR;cACA;YACF;UACF;AACA,cAAI,mBAAmB,KAAK,EAAE,SAAS,GAAG;AACxC,kBAAM,IAAI;cACR;cACA;YACF;UACF;AACA,cAAI,OAAO,eAAe,KAAK,MAAM,MAAM;AACzC,kBAAM;AACN,uBAAWA,QAAO,OAAO;AACvB,mBAAK,KAAK,cAAcA,IAAG,CAAC;AAC5B,qBAAO,IAAI,iBAAiBA,IAAG,CAAC,IAAI,QAAQ,MAAMA,IAAG,CAAC,CAAC;AACvD,mBAAK,IAAI;YACX;AACA,mBAAO;UACT,OAAO;AACL,kBAAM;AACN,gBAAI,UAAU;AACd,uBAAWA,QAAO,OAAO;AACvB,kBAAI,QAAS,QAAO;AACpB,wBAAU;AACV,mBAAK,KAAK,cAAcA,IAAG,CAAC;AAC5B,qBAAO,GAAG,iBAAiBA,IAAG,CAAC,IAAI,QAAQ,MAAMA,IAAG,CAAC,CAAC;AACtD,mBAAK,IAAI;YACX;AACA,mBAAO;UACT;MACJ;IACF;AACA,gBAAYgG,OAAM,IAAI;AACtB,WAAOA;EACT;AA1JS;AA2JT,QAAMxE,SAAQ,QAAQ,KAAK;AAC3B,MAAIA,SAAQ,EAAG,QAAO,GAAGA,MAAK;AAC9B,SAAO,IAAI,YAAY,KAAK,GAAG,CAAC;AAClC;AAzKS;AA0KT,SAAS,oBAAoB,OAAO;AAClC,QAAM,OAAO,OAAO;AACpB,MAAI,SAAS,SAAU,QAAO,iBAAiB,KAAK;AACpD,MAAI,iBAAiB,OAAQ,QAAO,iBAAiB,MAAM,SAAS,CAAC;AACrE,MAAI,UAAU,OAAQ,QAAO,UAAU,SAAS;AAChD,MAAI,UAAU,KAAK,IAAI,QAAQ,EAAG,QAAO,cAAc,SAAS;AAChE,MAAI,SAAS,SAAU,QAAO,cAAc,KAAK;AACjD,SAAO,OAAO,KAAK;AACrB;AARS;AAST,IAAM,oBAAoB;AAC1B,IAAM,uBAAuB;AAC7B,SAAS,UAAU,MAAM,WAAW;AAClC,QAAM,WAAW,OAAO,YAAY,OAAO,QAAQ,SAAS,EAAE,IAAI,CAAC,CAAC,GAAGpB,EAAC,MAAM,CAAC,GAAGA,GAAE,MAAM,CAAC,CAAC;AAC5F,SAAO,YAAY,MAAM,QAAQ;AACnC;AAHS;AAUT,SAAS,iBAAiB,QAAQ,WAAW;AAC3C,MAAI,CAAC,OAAQ,QAAO;AACpB,QAAM,cAAcP,cAAa;;IAE/B,cAAc,OAAO,WAAW,KAAK,GAAG,EAAE,WAAW,KAAK,GAAG,CAAC;EAChE;AACA,QAAM,WAAW,OAAO,YAAY,OAAO,QAAQ,SAAS,EAAE,IAAI,CAAC,CAAC,GAAGO,EAAC,MAAM,CAAC,GAAGA,GAAE,MAAM,CAAC,CAAC;AAC5F,SAAO,MAAM,aAAa,QAAQ;AACpC;AARS;AAST,SAAS,wBAAwB,IAAI,SAAS;AAC5C,SAAO,KAAK,MAAM;AACpB;AAFS;AD9eT,aAAA;AACA,WAAA;AENA,YAAA;AAEA,YAAA;AACA,cAAA;AACA,aAAA;AACA,IAAI,aAAa,CAAC;AAClB,SAAS,gBAAgB,aAAa;AACtC;AADS;AAET,SAAS,eAAe,aAAa;AACnC,eAAa;AACf;AAFS;AAGT,SAAS,+BAA+B;AACtC;AACE,UAAM,IAAI,MAAM,mDAAmD;EACrE;AACF;AAJS;AAKT,SAAS,mBAAmB;AAC1B;AACE,UAAM,IAAI,MAAM,uCAAuC;EACzD;AACF;AAJS;AAKT,SAAS,0BAA0B;AACjC;AACE,UAAM,IAAI,MAAM,8CAA8C;EAChE;AACF;AAJS;AAKT,SAAS,wBAAwB;AAC/B;AACE,UAAM,IAAI,MAAM,4CAA4C;EAC9D;AACF;AAJS;AAKT,SAAS,wBAAwB;AAC/B;AACE,UAAM,IAAI,MAAM,4CAA4C;EAC9D;AACF;AAJS;AAKT,SAAS,gCAAgC;AACvC;AACE,UAAM,IAAI,MAAM,oDAAoD;EACtE;AACF;AAJS;AAKT,SAAS,mBAAmB,UAAU;AACpC;AACE,YAAQ,KAAK,yCAAyC;EACxD;AACF;AAJS;AAKT,SAAS,6BAA6B;AACpC;AACE,YAAQ,KAAK,iDAAiD;EAChE;AACF;AAJS;AAKT,IAAI,YAAY;AAChB,SAAS,cAAc,OAAO;AAC5B,cAAY;AACd;AAFS;AAGT,IAAI;AACJ,SAAS,iBAAiB,MAAM;AAC9B,MAAI,SAAS,MAAM;AACjB,uBAAmB;AACnB,UAAM;EACR;AACA,SAAO,eAAe;AACxB;AANS;AAOT,SAAS,eAAe;AACtB,SAAO;;IAEW,iCAAiB,YAAY;EAC/C;AACF;AALS;AAMT,SAAS,KAAK4C,SAAQ,GAAG;AACvB,MAAI,WAAW;AACb,QAAI,IAAIA;AACR,QAAI,OAAO;AACX,WAAO,KAAK;AACV;MACgB,iCAAiB,IAAI;IACvC;AACA,mBAAe;EACjB;AACF;AAVS;AAWT,SAAS,WAAW,SAAS,MAAM;AACjC,MAAI,QAAQ;AACZ,MAAI,OAAO;AACX,SAAO,MAAM;AACX,QAAI,KAAK,aAAa,cAAc;AAClC,UAAI;;QAEF,KAAK;;AAEP,UAAI,SAAS,eAAe;AAC1B,YAAI,UAAU,EAAG,QAAO;AACxB,iBAAS;MACX,WAAW,SAAS,mBAAmB,SAAS,sBAAsB;AACpE,iBAAS;MACX;IACF;AACA,QAAI;;MAEc,iCAAiB,IAAI;;AAEvC,QAAI,OAAQ,MAAK,OAAO;AACxB,WAAO;EACT;AACF;AAvBS;AAwBT,IAAI,oBAAoB;AACxB,IAAI,oBAAoB;AACxB,SAAS,sBAAsB3C,WAAS;AACtC,sBAAoBA;AACtB;AAFS;AAGT,SAAS4F,MAAK,OAAO,QAAQ,OAAO,IAAI;AACtC,sBAAoB;IAClB,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;EACL;AACF;AATSA;AAUT,SAASC,KAAIpF,YAAW;AACtB,MAAIT;;IAEF;;AAEF,MAAI,UAAUA,UAAQ;AACtB,MAAI,YAAY,MAAM;AACpBA,IAAAA,UAAQ,IAAI;AACZ,aAAS,MAAM,SAAS;AACtB,yBAAmB,EAAE;IACvB;EACF;AACA,sBAAoBA,UAAQ;AAC5B;;IAEE,CAAC;;AAEL;AAjBS6F;AAkBT,SAAS,WAAW;AAClB,SAAO;AACT;AAFS;AAGT,IAAI,cAAc,CAAC;AACnB,SAAS,kBAAkB;AACzB,MAAI,QAAQ;AACZ,gBAAc,CAAC;AACf,UAAQ,KAAK;AACf;AAJS;AAKT,SAAS,iBAAiB,IAAI;AAC5B,MAAI,YAAY,WAAW,KAAK,CAAC,kBAAkB;AACjD,QAAI,QAAQ;AACZ,mBAAe,MAAM;AACnB,UAAI,UAAU,YAAa,iBAAgB;IAC7C,CAAC;EACH;AACA,cAAY,KAAK,EAAE;AACrB;AARS;AAST,SAAS,cAAc;AACrB,SAAO,YAAY,SAAS,GAAG;AAC7B,oBAAgB;EAClB;AACF;AAJS;AAKT,IAAM,cAA8B,oBAAI,QAAQ;AAChD,SAAS,aAAarF,SAAO;AAC3B,MAAI,SAAS;AACb,MAAI,WAAW,MAAM;AACnB,oBAAgB,KAAK;AACrB,WAAOA;EACT;AACA,OAAK,OAAO,IAAI,gBAAgB,GAAG;AACjC,SAAK,OAAO,IAAI,qBAAqB,GAAG;AACtC,UAAI,CAAC,OAAO,UAAUA,mBAAiB,OAAO;AAC5C,0BAAkBA,OAAK;MACzB;AACA,YAAMA;IACR;AACA,WAAO,EAAE,MAAMA,OAAK;EACtB,OAAO;AACL,0BAAsBA,SAAO,MAAM;EACrC;AACF;AAjBS;AAkBT,SAAS,sBAAsBA,SAAO,QAAQ;AAC5C,SAAO,WAAW,MAAM;AACtB,SAAK,OAAO,IAAI,qBAAqB,GAAG;AACtC,UAAI;AACF,eAAO,EAAE,MAAMA,OAAK;AACpB;MACF,SAASP,IAAG;AACVO,QAAAA,UAAQP;MACV;IACF;AACA,aAAS,OAAO;EAClB;AACA,MAAIO,mBAAiB,OAAO;AAC1B,sBAAkBA,OAAK;EACzB;AACA,QAAMA;AACR;AAhBS;AAiBT,SAAS,kBAAkBA,SAAO;AAChC,QAAM,WAAW,YAAY,IAAIA,OAAK;AACtC,MAAI,UAAU;AACZ,oBAAgBA,SAAO,WAAW;MAChC,OAAO,SAAS;IAClB,CAAC;AACD,oBAAgBA,SAAO,SAAS;MAC9B,OAAO,SAAS;IAClB,CAAC;EACH;AACF;AAVS;AAWT,IAAM,UAA0B,oBAAI,IAAI;AACxC,IAAI,gBAAgB;AACpB,IAAI,yBAAyC,oBAAI,IAAI;AACrD,IAAI,sBAAsB,CAAC;AAC3B,IAAI,wBAAwB;AAC5B,IAAI,cAAc;AAClB,IAAI,mBAAmB;AACvB,IAAM,QAAN,MAAM,OAAM;SAAA;;;;;;;;EAMV,UAA0B,oBAAI,IAAI;;;;;;EAMlC,YAA4B,oBAAI,IAAI;;;;;;EAMpC,aAA6B,oBAAI,IAAI;;;;EAIrC,WAAW;;;;;;EAMX,YAAY;;;;;;EAMZ,0BAA0B,CAAC;;;;;;EAM3B,kBAAkB,CAAC;;;;;EAKnB,WAAW,CAAC;;;;;;EAMZ,iBAAiB,CAAC;;;;;EAKlB,iBAAiB,CAAC;;;;;EAKlB,uBAAuB,CAAC;;;;;;EAMxB,kBAAkC,oBAAI,IAAI;;;;;EAK1C,QAAQ,cAAc;AACpB,0BAAsB,CAAC;AACvB,QAAI,SAAS,OAAM,MAAM,IAAI;AAC7B,eAAW,SAAS,cAAc;AAChC,WAAK,sBAAsB,KAAK;IAClC;AACA,QAAI,KAAK,aAAa,GAAG;AACvB,WAAK,QAAQ;AACb,UAAI,iBAAiB,KAAK;AAC1B,UAAI,UAAU,KAAK;AACnB,WAAK,kBAAkB,CAAC;AACxB,WAAK,WAAW,CAAC;AACjB,WAAK,iBAAiB,CAAC;AACvB,sBAAgB;AAChB,2BAAqB,cAAc;AACnC,2BAAqB,OAAO;AAC5B,WAAK,WAAW,QAAQ;IAC1B,OAAO;AACL,WAAK,eAAe,KAAK,eAAe;AACxC,WAAK,eAAe,KAAK,QAAQ;AACjC,WAAK,eAAe,KAAK,cAAc;IACzC;AACA,WAAO;AACP,eAAW,UAAU,KAAK,yBAAyB;AACjD,oBAAc,MAAM;IACtB;AACA,SAAK,0BAA0B,CAAC;EAClC;;;;;;EAMA,sBAAsB,OAAO;AAC3B,UAAM,KAAK;AACX,QAAI,SAAS,MAAM;AACnB,WAAO,WAAW,MAAM;AACtB,UAAI,SAAS,OAAO;AACpB,UAAI,aAAa,UAAU,gBAAgB,kBAAkB;AAC7D,UAAI,sBAAsB,cAAc,SAAS,WAAW;AAC5D,UAAI,OAAO,wBAAwB,SAAS,WAAW,KAAK,KAAK,gBAAgB,IAAI,MAAM;AAC3F,UAAI,CAAC,QAAQ,OAAO,OAAO,MAAM;AAC/B,YAAI,WAAW;AACb,iBAAO,KAAK;QACd,YAAY,SAAS,YAAY,GAAG;AAClC,eAAK,SAAS,KAAK,MAAM;QAC3B,YAAY,SAAS,WAAW,GAAG;AACjC,eAAK,SAAS,WAAW,KAAK,OAAO,GAAG,WAAW,GAAG;AACpD,iBAAK,wBAAwB,KAAK,MAAM;UAC1C,WAAW,SAAS,MAAM,GAAG;AAC3B,iBAAK,OAAO,IAAI,kBAAkB,EAAG,MAAK,eAAe,KAAK,MAAM;AACpE,0BAAc,MAAM;UACtB;QACF;AACA,YAAI,QAAQ,OAAO;AACnB,YAAI,UAAU,MAAM;AAClB,mBAAS;AACT;QACF;MACF;AACA,UAAI,SAAS,OAAO;AACpB,eAAS,OAAO;AAChB,aAAO,WAAW,QAAQ,WAAW,MAAM;AACzC,iBAAS,OAAO;AAChB,iBAAS,OAAO;MAClB;IACF;EACF;;;;EAIA,eAAe,SAAS;AACtB,eAAWP,MAAK,SAAS;AACvB,YAAM,UAAUA,GAAE,IAAI,WAAW,IAAI,KAAK,iBAAiB,KAAK;AAChE,aAAO,KAAKA,EAAC;AACb,wBAAkBA,IAAG,KAAK;IAC5B;AACA,YAAQ,SAAS;EACnB;;;;;;;EAOA,QAAQ,SAAS,OAAO;AACtB,QAAI,CAAC,KAAK,UAAU,IAAI,OAAO,GAAG;AAChC,WAAK,UAAU,IAAI,SAAS,KAAK;IACnC;AACA,SAAK,QAAQ,IAAI,SAAS,QAAQ,CAAC;EACrC;EACA,WAAW;AACT,oBAAgB;EAClB;EACA,aAAa;AACX,oBAAgB;EAClB;EACA,QAAQ;AACN,QAAI,oBAAoB,SAAS,GAAG;AAClC,WAAK,SAAS;AACd,oBAAc;AACd,UAAI,kBAAkB,QAAQ,kBAAkB,MAAM;AACpD;MACF;IACF,WAAW,KAAK,aAAa,GAAG;AAC9B,WAAK,QAAQ;IACf;AACA,SAAK,WAAW;AAChB,eAAW,UAAU,wBAAwB;AAC3C,6BAAuB,OAAO,MAAM;AACpC,aAAO;AACP,UAAI,kBAAkB,MAAM;AAC1B;MACF;IACF;EACF;;;;EAIA,UAAU;AACR,eAAW,MAAM,KAAK,YAAY;AAChC,SAAG;IACL;AACA,SAAK,WAAW,MAAM;AACtB,QAAI,QAAQ,OAAO,GAAG;AACpB,WAAK,UAAU,MAAM;AACrB,UAAI,aAAa;AACjB,iBAAW,SAAS,SAAS;AAC3B,YAAI,UAAU,MAAM;AAClB,uBAAa;AACb;QACF;AACA,mBAAW,CAAC,SAAS,KAAK,KAAK,KAAK,SAAS;AAC3C,cAAI,MAAM,QAAQ,IAAI,OAAO,GAAG;AAC9B,gBAAI,YAAY;AACd,oBAAM,QAAQ,IAAI,SAAS,KAAK;YAClC,OAAO;AACL;YACF;UACF;AACA,uBAAa,OAAO;QACtB;AACA,YAAI,oBAAoB,SAAS,GAAG;AAClC,0BAAgB;AAChB,gBAAM,SAAS,OAAM,MAAM,KAAK;AAChC,qBAAW,SAAS,qBAAqB;AACvC,kBAAM,sBAAsB,KAAK;UACnC;AACA,gCAAsB,CAAC;AACvB,iBAAO;QACT;MACF;AACA,sBAAgB;IAClB;AACA,YAAQ,OAAO,IAAI;EACrB;EACA,YAAY;AACV,SAAK,YAAY;EACnB;EACA,YAAY;AACV,SAAK,YAAY;AACjB,eAAWA,MAAK,KAAK,gBAAgB;AACnC,wBAAkBA,IAAG,KAAK;AAC1B,sBAAgBA,EAAC;IACnB;AACA,eAAWA,MAAK,KAAK,sBAAsB;AACzC,wBAAkBA,IAAG,WAAW;AAChC,sBAAgBA,EAAC;IACnB;AACA,SAAK,MAAM;EACb;;EAEA,aAAa,IAAI;AACf,SAAK,WAAW,IAAI,EAAE;EACxB;EACA,UAAU;AACR,YAAQ,KAAK,cAAc,SAAS,GAAG;EACzC;EACA,OAAO,SAAS;AACd,QAAI,kBAAkB,MAAM;AAC1B,YAAM,QAAQ,gBAAgB,IAAI,OAAM;AACxC,cAAQ,IAAI,aAAa;AACzB,UAAI,CAAC,kBAAkB;AACrB,eAAM,QAAQ,MAAM;AAClB,cAAI,kBAAkB,OAAO;AAC3B;UACF;AACA,gBAAM,MAAM;QACd,CAAC;MACH;IACF;AACA,WAAO;EACT;;EAEA,OAAO,QAAQ,MAAM;AACnB,qBAAiB,IAAI;EACvB;;;;EAIA,OAAO,MAAM,gBAAgB;AAC3B;AACE,aAAO;IACT;EACF;AACF;AACA,SAAS,UAAU,IAAI;AACrB,MAAI,oBAAoB;AACxB,qBAAmB;AACnB,MAAI;AACF,QAAI;AACJ,QAAI,GAAI;AACR,WAAO,MAAM;AACX,kBAAY;AACZ,UAAI,oBAAoB,WAAW,GAAG;AACpC,uBAAe,MAAM;AACrB,YAAI,oBAAoB,WAAW,GAAG;AACpC,kCAAwB;AACxB;;YAEE;;QAEJ;MACF;AACA,oBAAc;IAChB;EACF,UAAA;AACE,uBAAmB;EACrB;AACF;AAvBS;AAwBT,SAAS,gBAAgB;AACvB,MAAI,sBAAsB;AAC1B,gBAAc;AACd,MAAI;AACF,QAAI,cAAc;AAClB,2BAAuB,IAAI;AAC3B,WAAO,oBAAoB,SAAS,GAAG;AACrC,UAAI,QAAQ,MAAM,OAAO;AACzB,UAAI,gBAAgB,KAAK;AACvB,YAAI,SAAS;AACb,YAAI,QAAS;AACb,4BAAoB;MACtB;AACA,YAAM,QAAQ,mBAAmB;AACjC,iBAAW,MAAM;IACnB;EACF,UAAA;AACE,kBAAc;AACd,2BAAuB,mBAAmB;AAC1C,4BAAwB;EAC1B;AACF;AArBS;AAsBT,SAAS,sBAAsB;AAC7B,MAAI;AACF,iCAA6B;EAC/B,SAASO,SAAO;AACd,0BAAsBA,SAAO,qBAAqB;EACpD;AACF;AANS;AAOT,IAAI,sBAAsB;AAC1B,SAAS,qBAAqB,SAAS;AACrC,MAAI,SAAS,QAAQ;AACrB,MAAI,WAAW,EAAG;AAClB,MAAI,IAAI;AACR,SAAO,IAAI,QAAQ;AACjB,QAAI,SAAS,QAAQ,GAAG;AACxB,SAAK,OAAO,KAAK,YAAY,YAAY,KAAK,SAAS,MAAM,GAAG;AAC9D,4BAAsB,CAAC;AACvB,oBAAc,MAAM;AACpB,UAAI,OAAO,SAAS,QAAQ,OAAO,UAAU,QAAQ,OAAO,gBAAgB,MAAM;AAChF,YAAI,OAAO,aAAa,QAAQ,OAAO,OAAO,MAAM;AAClD,wBAAc,MAAM;QACtB,OAAO;AACL,iBAAO,KAAK;QACd;MACF;AACA,UAAI,qBAAqB,SAAS,GAAG;AACnC,mBAAW,MAAM;AACjB,mBAAWP,MAAK,qBAAqB;AACnC,wBAAcA,EAAC;QACjB;AACA,8BAAsB,CAAC;MACzB;IACF;EACF;AACA,wBAAsB;AACxB;AA1BS;AA2BT,SAAS,aAAa,OAAO;AAC3B,MAAI,MAAM,cAAc,MAAM;AAC5B,eAAW,YAAY,MAAM,WAAW;AACtC,YAAM,SAAS,SAAS;AACxB,WAAK,SAAS,aAAa,GAAG;AAC5B;;UAEE;QACF;MACF,YAAY,UAAU,QAAQ,mBAAmB,GAAG;AAClD,0BAAkB,UAAU,KAAK;AACjC;;UAEE;QACF;MACF;IACF;EACF;AACF;AAlBS;AAmBT,SAAS,gBAAgB,QAAQ;AAC/B,MAAI,SAAS,wBAAwB;AACrC,SAAO,OAAO,WAAW,MAAM;AAC7B,aAAS,OAAO;AAChB,QAAI,SAAS,OAAO;AACpB,QAAI,eAAe,WAAW,kBAAkB,SAAS,kBAAkB,GAAG;AAC5E;IACF;AACA,SAAK,UAAU,cAAc,oBAAoB,GAAG;AAClD,WAAK,SAAS,WAAW,EAAG;AAC5B,aAAO,KAAK;IACd;EACF;AACA,sBAAoB,KAAK,MAAM;AACjC;AAdS;AAeT,SAAS,iBAAiB,OAAO;AAC/B,MAAI,cAAc;AAClB,MAAI6F,WAAU,OAAO,CAAC;AACtB,MAAI;AACJ,SAAO,MAAM;AACX,QAAI,gBAAgB,GAAG;AACrB,UAAIA,QAAO;AACX,oBAAc,MAAM;AAClB,YAAI,gBAAgB,GAAG;AACrB,iBAAO,QAAQ,MAAM,MAAM,MAAM,UAAUA,QAAO,CAAC,CAAC;QACtD;AACA,uBAAe;AACf,eAAO,MAAM;AACX,2BAAiB,MAAM;AACrB,2BAAe;AACf,gBAAI,gBAAgB,GAAG;AACrB,qBAAO;AACP,qBAAO;AACP,wBAAUA,QAAO;YACnB;UACF,CAAC;QACH;MACF,CAAC;IACH;EACF;AACF;AAzBS;AA0BT,IAAI,QAAQ,qBAAqB,mBAAmB;AACpD,SAAS,SAAS,MAAM,OAAO,UAAU;AACvC,MAAI,SAAS,MAAM,OAAO,QAAQ;AACpC;AAFS;AAGT,IAAM,WAAN,MAAe;SAAA;;;;EAEb;EACA,WAAW;;EAEX;;EAEA,gBAAgB,YAAY,eAAe;;EAE3C;;EAEA;;EAEA;;EAEA,eAAe;;EAEf,kBAAkB;;EAElB,iBAAiB;;EAEjB,sBAAsB;EACtB,uBAAuB;EACvB,iBAAiB;EACjB,wBAAwB;;;;;;;;EAQxB,kBAAkB;EAClB,yBAAyB,6BAAM;AAC7B,QAAI,KAAK,iBAAiB;AACxB,mBAAa,KAAK,iBAAiB,KAAK,oBAAoB;IAC9D;EACF,GAJyB;EAKzB,6BAA6B,iBAAiB,MAAM;AAClD,SAAK,kBAAkB,OAAO,KAAK,oBAAoB;AACvD,WAAO,MAAM;AACX,WAAK,kBAAkB;IACzB;EACF,CAAC;;;;;;EAMD,YAAY,MAAM,OAAO,UAAU;AACjC,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,YAAY;AACjB,SAAK;IACL,cAAc;AACd,SAAK,WAAW,CAAC,CAAC,KAAK,OAAO;AAC9B,SAAK,UAAU,MAAM,MAAM;AACzB,oBAAc,IAAI;AAClB,UAAI,WAAW;AACb,cAAM,UAAU,KAAK;AACrB,qBAAa;AACb,cAAM;;UAEJ,QAAQ,aAAa;UACrB,QAAQ,SAAS;;AAEnB,YAAI,yBAAyB;AAC3B,eAAK,yBAAyB;QAChC,OAAO;AACL,eAAK,0BAA0B;QACjC;MACF,OAAO;AACL,YAAI;AACF,eAAK,eAAe,OAAO,MAAM,SAAS,KAAK,OAAO,CAAC;QACzD,SAAStF,SAAO;AACd,eAAK,MAAMA,OAAK;QAClB;AACA,YAAI,KAAK,iBAAiB,GAAG;AAC3B,eAAK,sBAAsB;QAC7B,OAAO;AACL,eAAK,WAAW;QAClB;MACF;IACF,GAAG,KAAK;AACR,QAAI,WAAW;AACb,WAAK,UAAU;IACjB;EACF;EACA,4BAA4B;AAC1B,QAAI;AACF,WAAK,eAAe,OAAO,MAAM,KAAK,UAAU,KAAK,OAAO,CAAC;IAC/D,SAASA,SAAO;AACd,WAAK,MAAMA,OAAK;IAClB;AACA,SAAK,WAAW;EAClB;EACA,2BAA2B;AACzB,UAAM,UAAU,KAAK,OAAO;AAC5B,QAAI,CAAC,SAAS;AACZ;IACF;AACA,SAAK,kBAAkB,OAAO,MAAM,QAAQ,KAAK,OAAO,CAAC;AACzD,UAAM,QAAQ,MAAM;AAClB,WAAK,eAAe,KAAK,KAAK,MAAM;AAClC,cAAM,OAAO;AACb,eAAO,OAAO,MAAM,KAAK,UAAU,KAAK,OAAO,CAAC;MAClD,CAAC;AACD,UAAI,KAAK,iBAAiB,GAAG;AAC3B,aAAK,sBAAsB;MAC7B,OAAO;AACL;;UAEE,KAAK;UACL,MAAM;AACJ,iBAAK,kBAAkB;UACzB;QACF;AACA,aAAK,WAAW;MAClB;IACF,CAAC;EACH;;;;;EAKA,aAAa;AACX,WAAO,KAAK,YAAY,CAAC,CAAC,KAAK,UAAU,KAAK,OAAO,WAAW;EAClE;EACA,sBAAsB;AACpB,WAAO,CAAC,CAAC,KAAK,OAAO;EACvB;;;;EAIA,KAAK,IAAI;AACP,QAAI,kBAAkB;AACtB,QAAI,oBAAoB;AACxB,QAAI,eAAe;AACnB,sBAAkB,KAAK,OAAO;AAC9B,wBAAoB,KAAK,OAAO;AAChC,0BAAsB,KAAK,QAAQ,GAAG;AACtC,QAAI;AACF,aAAO,GAAG;IACZ,SAASP,IAAG;AACV,mBAAaA,EAAC;AACd,aAAO;IACT,UAAA;AACE,wBAAkB,eAAe;AACjC,0BAAoB,iBAAiB;AACrC,4BAAsB,YAAY;IACpC;EACF;EACA,wBAAwB;AACtB,UAAM;;MAEJ,KAAK,OAAO;;AAEd,QAAI,KAAK,iBAAiB,MAAM;AAC9B,WAAK,sBAAsB,SAAS,uBAAuB;AAC3D,kBAAY,KAAK,cAAc,KAAK,mBAAmB;IACzD;AACA,QAAI,KAAK,oBAAoB,MAAM;AACjC,WAAK,kBAAkB,OAAO,MAAM,QAAQ,KAAK,OAAO,CAAC;IAC3D;EACF;;;;;;EAMA,sBAAsB,GAAG;AACvB,QAAI,CAAC,KAAK,oBAAoB,GAAG;AAC/B,UAAI,KAAK,QAAQ;AACf,aAAK,OAAO,sBAAsB,CAAC;MACrC;AACA;IACF;AACA,SAAK,kBAAkB;AACvB,QAAI,KAAK,mBAAmB,GAAG;AAC7B,WAAK,WAAW;AAChB,UAAI,KAAK,iBAAiB;AACxB,qBAAa,KAAK,iBAAiB,MAAM;AACvC,eAAK,kBAAkB;QACzB,CAAC;MACH;AACA,UAAI,KAAK,qBAAqB;AAC5B,aAAK,QAAQ,OAAO,KAAK,mBAAmB;AAC5C,aAAK,sBAAsB;MAC7B;AACA,uBAAiB,MAAM;AACrB,cAAM,OAAO,EAAE,MAAM;MACvB,CAAC;IACH;EACF;;;;;;;EAOA,qBAAqB,GAAG;AACtB,SAAK,sBAAsB,CAAC;AAC5B,SAAK,wBAAwB;AAC7B,2BAAuB,IAAI,KAAK,sBAAsB;EACxD;EACA,qBAAqB;AACnB,SAAK,2BAA2B;AAChC,WAAO;;MAEL,KAAK;IACP;EACF;;EAEA,MAAMO,SAAO;AACX,QAAI,UAAU,KAAK,OAAO;AAC1B,QAAI,SAAS,KAAK,OAAO;AACzB,QAAI,KAAK,yBAAyB,CAAC,WAAW,CAAC,QAAQ;AACrD,YAAMA;IACR;AACA,QAAI,KAAK,cAAc;AACrB,qBAAe,KAAK,YAAY;AAChC,WAAK,eAAe;IACtB;AACA,QAAI,KAAK,iBAAiB;AACxB,qBAAe,KAAK,eAAe;AACnC,WAAK,kBAAkB;IACzB;AACA,QAAI,KAAK,gBAAgB;AACvB,qBAAe,KAAK,cAAc;AAClC,WAAK,iBAAiB;IACxB;AACA,QAAI,WAAW;AACb;;QAEE,KAAK;MACP;AACA,WAAK;AACL,uBAAiB,WAAW,CAAC;IAC/B;AACA,QAAI,YAAY;AAChB,QAAI,mBAAmB;AACvB,UAAMuF,SAAQ,6BAAM;AAClB,UAAI,WAAW;AACb,mCAA2B;AAC3B;MACF;AACA,kBAAY;AACZ,UAAI,kBAAkB;AACpB,sCAA8B;MAChC;AACA,YAAM,OAAO;AACb,WAAK,uBAAuB;AAC5B,UAAI,KAAK,mBAAmB,MAAM;AAChC,qBAAa,KAAK,gBAAgB,MAAM;AACtC,eAAK,iBAAiB;QACxB,CAAC;MACH;AACA,WAAK,WAAW,KAAK,oBAAoB;AACzC,WAAK,eAAe,KAAK,KAAK,MAAM;AAClC,aAAK,wBAAwB;AAC7B,eAAO,OAAO,MAAM,KAAK,UAAU,KAAK,OAAO,CAAC;MAClD,CAAC;AACD,UAAI,KAAK,iBAAiB,GAAG;AAC3B,aAAK,sBAAsB;MAC7B,OAAO;AACL,aAAK,WAAW;MAClB;IACF,GA1Bc;AA2Bd,QAAI,oBAAoB;AACxB,QAAI;AACF,0BAAoB,IAAI;AACxB,yBAAmB;AACnB,gBAAUvF,SAAOuF,MAAK;AACtB,yBAAmB;IACrB,SAASC,UAAQ;AACf,4BAAsBA,UAAQ,KAAK,WAAW,KAAK,QAAQ,MAAM;IACnE,UAAA;AACE,0BAAoB,iBAAiB;IACvC;AACA,QAAI,QAAQ;AACV,uBAAiB,MAAM;AACrB,aAAK,iBAAiB,KAAK,KAAK,MAAM;AACpC,eAAK,wBAAwB;AAC7B,cAAI;AACF,mBAAO,OAAO,MAAM;AAClB;gBACE,KAAK;gBACL,MAAMxF;gBACN,MAAMuF;cACR;YACF,CAAC;UACH,SAASC,UAAQ;AACf;cACEA;;cAEA,KAAK,QAAQ;YACf;AACA,mBAAO;UACT,UAAA;AACE,iBAAK,wBAAwB;UAC/B;QACF,CAAC;MACH,CAAC;IACH;EACF;AACF;AACA,SAAS,YAAY,QAAQ,UAAU;AACrC,MAAI,OAAO,OAAO;AAClB,MAAI,MAAM,OAAO;AACjB,SAAO,SAAS,MAAM;AACpB,QAAI,QAAQ,SAAS,MAAM;;MAET,iCAAiB,IAAI;;AAEvC,aAAS,OAAO,IAAI;AACpB,WAAO;EACT;AACF;AAXS;AAYT,SAAS,wBAAwB,SAAS;AACxC,MAAI,UAAU,QAAQ;AACtB,MAAI,YAAY,MAAM;AACpB,YAAQ,UAAU;AAClB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK,GAAG;AAC1C;;QAEE,QAAQ,CAAC;MACX;IACF;EACF;AACF;AAXS;AAYT,SAAS,0BAA0B,SAAS;AAC1C,MAAI,SAAS,QAAQ;AACrB,SAAO,WAAW,MAAM;AACtB,SAAK,OAAO,IAAI,aAAa,GAAG;AAC9B;;QAEE;;IAEJ;AACA,aAAS,OAAO;EAClB;AACA,SAAO;AACT;AAZS;AAaT,SAAS,gBAAgB,SAAS;AAChC,MAAI;AACJ,MAAI,qBAAqB;AACzB,oBAAkB,0BAA0B,OAAO,CAAC;AACpD;AACE,QAAI;AACF,8BAAwB,OAAO;AAC/B,cAAQ,gBAAgB,OAAO;IACjC,UAAA;AACE,wBAAkB,kBAAkB;IACtC;EACF;AACA,SAAO;AACT;AAbS;AAcT,SAAS,eAAe,SAAS;AAC/B,MAAI,QAAQ,gBAAgB,OAAO;AACnC,MAAI,CAAC,QAAQ,OAAO,KAAK,GAAG;AAC1B,YAAQ,IAAI;AACZ,YAAQ,KAAK,wBAAwB;EACvC;AACA,MAAI,sBAAsB;AACxB;EACF;AACA;AACE,QAAI,UAAU,kBAAkB,QAAQ,IAAI,aAAa,MAAM,QAAQ,SAAS,OAAO,cAAc;AACrG,sBAAkB,SAAS,MAAM;EACnC;AACF;AAbS;AAcT,IAAM,aAA6B,oBAAI,IAAI;AAC3C,SAAS,OAAOjG,IAAG,OAAO;AACxB,MAAI,SAAS;IACX,GAAG;;IAEH,GAAAA;IACA,WAAW;IACX;IACA,IAAI;IACJ,IAAI;EACN;AACA,SAAO;AACT;AAXS;;AAaT,SAAS,MAAMA,IAAG,OAAO;AACvB,QAAM2D,KAAI,OAAO3D,EAAC;AAClB,sBAAoB2D,EAAC;AACrB,SAAOA;AACT;AAJS;;AAMT,SAAS,eAAe,eAAeuC,aAAY,OAAO,YAAY,MAAM;AAC1E,QAAMvC,KAAI,OAAO,aAAa;AAC9B,MAAI,CAACuC,YAAW;AACdvC,OAAE,SAAS;EACb;AACA,SAAOA;AACT;AANS;AAOT,SAAS,IAAI,SAAS,OAAO,eAAe,OAAO;AACjD,MAAI,oBAAoB;;GAEvB,CAAC,eAAe,gBAAgB,IAAI,oBAAoB,MAAM,SAAS,MAAM,gBAAgB,KAAK,UAAU,eAAe,QAAQ,qBAAqB,KAAK,CAAC,iBAAiB,SAAS,OAAO,GAAG;AACjM,0BAAsB;EACxB;AACA,MAAI,YAAY,eAAe,MAAM,KAAK,IAAI;AAC9C,SAAO,aAAa,SAAS,SAAS;AACxC;AARS;AAST,SAAS,aAAa,SAAS,OAAO;AACpC,MAAI,CAAC,QAAQ,OAAO,KAAK,GAAG;AAC1B,QAAI,YAAY,QAAQ;AACxB,QAAI,sBAAsB;AACxB,iBAAW,IAAI,SAAS,KAAK;IAC/B,OAAO;AACL,iBAAW,IAAI,SAAS,SAAS;IACnC;AACA,YAAQ,IAAI;AACZ,QAAI,QAAQ,MAAM,OAAO;AACzB,UAAM,QAAQ,SAAS,SAAS;AAChC,SAAK,QAAQ,IAAI,aAAa,GAAG;AAC/B,WAAK,QAAQ,IAAI,WAAW,GAAG;AAC7B;;UAEE;QACF;MACF;AACA,wBAAkB,UAAU,QAAQ,IAAI,aAAa,IAAI,QAAQ,WAAW;IAC9E;AACA,YAAQ,KAAK,wBAAwB;AACrC,mBAAe,SAAS,KAAK;AAC7B,QAAI,kBAAkB,SAAS,cAAc,IAAI,WAAW,MAAM,cAAc,KAAK,gBAAgB,kBAAkB,GAAG;AACxH,UAAI,qBAAqB,MAAM;AAC7B,6BAAqB,CAAC,OAAO,CAAC;MAChC,OAAO;AACL,yBAAiB,KAAK,OAAO;MAC/B;IACF;EACF;AACA,SAAO;AACT;AA/BS;AAgCT,SAAS,UAAU,SAAS;AAC1B,MAAI,SAAS,QAAQ,IAAI,CAAC;AAC5B;AAFS;AAGT,SAAS,eAAe,QAAQ,QAAQ;AACtC,MAAI,YAAY,OAAO;AACvB,MAAI,cAAc,KAAM;AACxB,MAAI,SAAS,UAAU;AACvB,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,QAAI,WAAW,UAAU,CAAC;AAC1B,QAAI,SAAS,SAAS;AACtB,QAAI,aAAa,SAAS,WAAW;AACrC,QAAI,WAAW;AACb,wBAAkB,UAAU,MAAM;IACpC;AACA,SAAK,SAAS,aAAa,GAAG;AAC5B;;QAEE;QACA;MACF;IACF,WAAW,WAAW;AACpB,WAAK,SAAS,kBAAkB,GAAG;AACjC,YAAI,wBAAwB,MAAM;AAChC,8BAAoB;;YAElB;UACF;QACF;MACF;AACA;;QAEE;MACF;IACF;EACF;AACF;AAhCS;AAiCT,SAAS,MAAM,OAAO;AACpB,MAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,gBAAgB,OAAO;AACxE,WAAO;EACT;AACA,QAAM,YAAY,iBAAiB,KAAK;AACxC,MAAI,cAAc,oBAAoB,cAAc,iBAAiB;AACnE,WAAO;EACT;AACA,MAAI,UAA0B,oBAAI,IAAI;AACtC,MAAI,mBAAmB,SAAS,KAAK;AACrC,MAAIoC,WAA0B,sBAAM,CAAC;AACrC,MAAI,iBAAiB;AACrB,MAAI,cAAc,wBAAC,OAAO;AACxB,QAAI,mBAAmB,gBAAgB;AACrC,aAAO,GAAG;IACZ;AACA,QAAI,WAAW;AACf,QAAII,YAAW;AACf,wBAAoB,IAAI;AACxB,uBAAmB,cAAc;AACjC,QAAI,SAAS,GAAG;AAChB,wBAAoB,QAAQ;AAC5B,uBAAmBA,SAAQ;AAC3B,WAAO;EACT,GAZkB;AAalB,MAAI,kBAAkB;AACpB,YAAQ,IAAI,UAA0B;;MAEpC,MAAM;IACR,CAAC;EACH;AACA,SAAO,IAAI;;IAET;IACA;MACE,eAAe,GAAG,MAAM,YAAY;AAClC,YAAI,EAAE,WAAW,eAAe,WAAW,iBAAiB,SAAS,WAAW,eAAe,SAAS,WAAW,aAAa,OAAO;AACrI,kCAAwB;QAC1B;AACA,YAAIxC,KAAI,QAAQ,IAAI,IAAI;AACxB,YAAIA,OAAM,QAAQ;AAChBA,eAAI,YAAY,MAAM;AACpB,gBAAIW,MAAqB,sBAAM,WAAW,KAAK;AAC/C,oBAAQ,IAAI,MAAMA,GAAE;AACpB,mBAAOA;UACT,CAAC;QACH,OAAO;AACL,cAAIX,IAAG,WAAW,OAAO,IAAI;QAC/B;AACA,eAAO;MACT;MACA,eAAe,QAAQ,MAAM;AAC3B,YAAIA,KAAI,QAAQ,IAAI,IAAI;AACxB,YAAIA,OAAM,QAAQ;AAChB,cAAI,QAAQ,QAAQ;AAClB,kBAAMW,MAAK,YAAY,MAAsB,sBAAM,aAAa,CAAC;AACjE,oBAAQ,IAAI,MAAMA,GAAE;AACpB,sBAAUyB,QAAO;UACnB;QACF,OAAO;AACL,cAAIpC,IAAG,aAAa;AACpB,oBAAUoC,QAAO;QACnB;AACA,eAAO;MACT;MACA,IAAI,QAAQ,MAAM,UAAU;AAC1B,YAAI,SAAS,cAAc;AACzB,iBAAO;QACT;AACA,YAAIpC,KAAI,QAAQ,IAAI,IAAI;AACxB,YAAI,SAAS,QAAQ;AACrB,YAAIA,OAAM,WAAW,CAAC,UAAU,eAAe,QAAQ,IAAI,GAAG,WAAW;AACvEA,eAAI,YAAY,MAAM;AACpB,gBAAI,IAAI,MAAM,SAAS,OAAO,IAAI,IAAI,aAAa;AACnD,gBAAIW,MAAqB,sBAAM,CAAC;AAChC,mBAAOA;UACT,CAAC;AACD,kBAAQ,IAAI,MAAMX,EAAC;QACrB;AACA,YAAIA,OAAM,QAAQ;AAChB,cAAI3D,KAAI,IAAI2D,EAAC;AACb,iBAAO3D,OAAM,gBAAgB,SAASA;QACxC;AACA,eAAO,QAAQ,IAAI,QAAQ,MAAM,QAAQ;MAC3C;MACA,yBAAyB,QAAQ,MAAM;AACrC,YAAI,aAAa,QAAQ,yBAAyB,QAAQ,IAAI;AAC9D,YAAI,cAAc,WAAW,YAAY;AACvC,cAAI2D,KAAI,QAAQ,IAAI,IAAI;AACxB,cAAIA,GAAG,YAAW,QAAQ,IAAIA,EAAC;QACjC,WAAW,eAAe,QAAQ;AAChC,cAAI,UAAU,QAAQ,IAAI,IAAI;AAC9B,cAAI,SAAS,SAAS;AACtB,cAAI,YAAY,UAAU,WAAW,eAAe;AAClD,mBAAO;cACL,YAAY;cACZ,cAAc;cACd,OAAO;cACP,UAAU;YACZ;UACF;QACF;AACA,eAAO;MACT;MACA,IAAI,QAAQ,MAAM;AAChB,YAAI,SAAS,cAAc;AACzB,iBAAO;QACT;AACA,YAAIA,KAAI,QAAQ,IAAI,IAAI;AACxB,YAAI,MAAMA,OAAM,UAAUA,GAAE,MAAM,iBAAiB,QAAQ,IAAI,QAAQ,IAAI;AAC3E,YAAIA,OAAM,UAAU,kBAAkB,SAAS,CAAC,OAAO,eAAe,QAAQ,IAAI,GAAG,WAAW;AAC9F,cAAIA,OAAM,QAAQ;AAChBA,iBAAI,YAAY,MAAM;AACpB,kBAAI,IAAI,MAAM,MAAM,OAAO,IAAI,CAAC,IAAI;AACpC,kBAAIW,MAAqB,sBAAM,CAAC;AAChC,qBAAOA;YACT,CAAC;AACD,oBAAQ,IAAI,MAAMX,EAAC;UACrB;AACA,cAAI,SAAS,IAAIA,EAAC;AAClB,cAAI,WAAW,eAAe;AAC5B,mBAAO;UACT;QACF;AACA,eAAO;MACT;MACA,IAAI,QAAQ,MAAM,QAAQ,UAAU;AAClC,YAAIA,KAAI,QAAQ,IAAI,IAAI;AACxB,YAAI,MAAM,QAAQ;AAClB,YAAI,oBAAoB,SAAS,UAAU;AACzC,mBAAS,IAAI,QAAQ;UACrBA,GAAE,GAAG,KAAK,GAAG;AACX,gBAAI,UAAU,QAAQ,IAAI,IAAI,EAAE;AAChC,gBAAI,YAAY,QAAQ;AACtB,kBAAI,SAAS,aAAa;YAC5B,WAAW,KAAK,QAAQ;AACtB,wBAAU,YAAY,MAAsB,sBAAM,aAAa,CAAC;AAChE,sBAAQ,IAAI,IAAI,IAAI,OAAO;YAC7B;UACF;QACF;AACA,YAAIA,OAAM,QAAQ;AAChB,cAAI,CAAC,OAAO,eAAe,QAAQ,IAAI,GAAG,UAAU;AAClDA,iBAAI,YAAY,MAAsB,sBAAM,MAAM,CAAC;AACnD,gBAAIA,IAAG,MAAM,MAAM,CAAC;AACpB,oBAAQ,IAAI,MAAMA,EAAC;UACrB;QACF,OAAO;AACL,gBAAMA,GAAE,MAAM;AACd,cAAI,IAAI,YAAY,MAAM,MAAM,MAAM,CAAC;AACvC,cAAIA,IAAG,CAAC;QACV;AACA,YAAI,aAAa,QAAQ,yBAAyB,QAAQ,IAAI;AAC9D,YAAI,YAAY,KAAK;AACnB,qBAAW,IAAI,KAAK,UAAU,MAAM;QACtC;AACA,YAAI,CAAC,KAAK;AACR,cAAI,oBAAoB,OAAO,SAAS,UAAU;AAChD,gBAAI;;cAEF,QAAQ,IAAI,QAAQ;;AAEtB,gBAAIvD,KAAI,OAAO,IAAI;AACnB,gBAAI,OAAO,UAAUA,EAAC,KAAKA,MAAK,GAAG,GAAG;AACpC,kBAAI,IAAIA,KAAI,CAAC;YACf;UACF;AACA,oBAAU2F,QAAO;QACnB;AACA,eAAO;MACT;MACA,QAAQ,QAAQ;AACd,YAAIA,QAAO;AACX,YAAI,WAAW,QAAQ,QAAQ,MAAM,EAAE,OAAO,CAACK,UAAS;AACtD,cAAI,UAAU,QAAQ,IAAIA,KAAI;AAC9B,iBAAO,YAAY,UAAU,QAAQ,MAAM;QAC7C,CAAC;AACD,iBAAS,CAACxG,MAAK,OAAO,KAAK,SAAS;AAClC,cAAI,QAAQ,MAAM,iBAAiB,EAAEA,QAAO,SAAS;AACnD,qBAAS,KAAKA,IAAG;UACnB;QACF;AACA,eAAO;MACT;MACA,iBAAiB;AACf,8BAAsB;MACxB;IACF;EACF;AACF;AA7LS;AA8LT,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,SAAS,kBAAkB;AACzB,MAAI,YAAY,QAAQ;AACtB;EACF;AACA,YAAU;AACV,MAAI,oBAAoB,QAAQ;AAChC,MAAI,iBAAiB,KAAK;AAC1B,MAAI,iBAAiB,KAAK;AAC1B,uBAAqB,eAAe,gBAAgB,YAAY,EAAE;AAClE,wBAAsB,eAAe,gBAAgB,aAAa,EAAE;AACpE,MAAI,cAAc,iBAAiB,GAAG;AACpC,sBAAkB,UAAU;AAC5B,sBAAkB,cAAc;AAChC,sBAAkB,eAAe;AACjC,sBAAkB,UAAU;AAC5B,sBAAkB,MAAM;EAC1B;AACA,MAAI,cAAc,cAAc,GAAG;AACjC,mBAAe,MAAM;EACvB;AACF;AApBS;AAqBT,SAAS,YAAY,QAAQ,IAAI;AAC/B,SAAO,SAAS,eAAe,KAAK;AACtC;AAFS;;AAIT,SAAS,gBAAgB,MAAM;AAC7B,SAAO,mBAAmB,KAAK,IAAI;AACrC;AAFS;;AAIT,SAAS,iBAAiB,MAAM;AAC9B,SAAO,oBAAoB,KAAK,IAAI;AACtC;AAFS;AAGT,SAAS,mBAAmB,MAAM;AAChC,OAAK,cAAc;AACrB;AAFS;AAGT,SAAS,yBAAyB,IAAI;AACpC,MAAI,oBAAoB;AACxB,MAAI,kBAAkB;AACtB,sBAAoB,IAAI;AACxB,oBAAkB,IAAI;AACtB,MAAI;AACF,WAAO,GAAG;EACZ,UAAA;AACE,wBAAoB,iBAAiB;AACrC,sBAAkB,eAAe;EACnC;AACF;AAXS;AAYT,SAAS,YAAY,QAAQ,eAAe;AAC1C,MAAI,cAAc,cAAc;AAChC,MAAI,gBAAgB,MAAM;AACxB,kBAAc,OAAO,cAAc,QAAQ;EAC7C,OAAO;AACL,gBAAY,OAAO;AACnB,WAAO,OAAO;AACd,kBAAc,OAAO;EACvB;AACF;AATS;AAUT,SAAS,cAAc,MAAM,IAAI,MAAMyG,SAAQ,MAAM;AACnD,MAAI,SAAS;AACb,MAAI,WAAW,SAAS,OAAO,IAAI,WAAW,GAAG;AAC/C,YAAQ;EACV;AACA,MAAI,SAAS;IACX,KAAK;IACL,MAAM;IACN,aAAa;IACb,WAAW;IACX,GAAG,OAAO;IACV,OAAO;IACP;IACA,MAAM;IACN,MAAM;IACN;IACA,GAAG,UAAU,OAAO;IACpB,MAAM;IACN,UAAU;IACV,aAAa;IACb,IAAI;IACJ,IAAI;EACN;AACA,MAAI,MAAM;AACR,QAAI;AACF,oBAAc,MAAM;AACpB,aAAO,KAAK;IACd,SAASC,KAAI;AACX,qBAAe,MAAM;AACrB,YAAMA;IACR;EACF,WAAW,OAAO,MAAM;AACtB,oBAAgB,MAAM;EACxB;AACA,MAAID,QAAO;AACT,QAAInG,KAAI;AACR,QAAI,QAAQA,GAAE,SAAS,QAAQA,GAAE,aAAa,QAAQA,GAAE,gBAAgB,QAAQA,GAAE,UAAUA,GAAE;KAC7FA,GAAE,IAAI,sBAAsB,GAAG;AAC9BA,WAAIA,GAAE;IACR;AACA,QAAIA,OAAM,MAAM;AACdA,SAAE,SAAS;AACX,UAAI,WAAW,MAAM;AACnB,oBAAYA,IAAG,MAAM;MACvB;AACA,UAAI,oBAAoB,SAAS,gBAAgB,IAAI,aAAa,MAAM,OAAO,iBAAiB,GAAG;AACjG,YAAI;;UAEF;;AAEF,SAAC,QAAQ,YAAY,CAAC,GAAG,KAAKA,EAAC;MACjC;IACF;EACF;AACA,SAAO;AACT;AAvDS;AAwDT,SAAS,kBAAkB;AACzB,SAAO,oBAAoB,QAAQ,CAAC;AACtC;AAFS;AAGT,SAAS,mBAAmB,IAAI;AAC9B,SAAO,cAAc,SAAS,aAAa,IAAI,KAAK;AACtD;AAFS;AAGT,SAAS,eAAe,IAAI;AAC1B,QAAM,OAAO;AACb,QAAM,SAAS,cAAc,cAAc,kBAAkB,IAAI,IAAI;AACrE,SAAO,CAAC,WAAW,CAAC,MAAM;AACxB,WAAO,IAAI,QAAQ,CAAC,WAAW;AAC7B,UAAI,SAAS,OAAO;AAClB,qBAAa,QAAQ,MAAM;AACzB,yBAAe,MAAM;AACrB,iBAAO,MAAM;QACf,CAAC;MACH,OAAO;AACL,uBAAe,MAAM;AACrB,eAAO,MAAM;MACf;IACF,CAAC;EACH;AACF;AAhBS;AAiBT,SAAS,cAAc,IAAI,SAAS,GAAG;AACrC,SAAO,cAAc,gBAAgB,QAAQ,IAAI,IAAI;AACvD;AAFS;AAGT,SAAS,MAAM,IAAI,SAAS,GAAG;AAC7B,MAAI,SAAS,cAAc,eAAe,QAAQ,IAAI,IAAI;AAC1D,SAAO;AACT;AAHS;AAIT,SAAS,OAAO,IAAImG,SAAQ,MAAM;AAChC,SAAO,cAAc,gBAAgB,kBAAkB,IAAI,MAAMA,MAAK;AACxE;AAFS;AAGT,SAAS,wBAAwB,QAAQ;AACvC,MAAI,WAAW,OAAO;AACtB,MAAI,aAAa,MAAM;AACrB,UAAM,+BAA+B;AACrC,UAAM,oBAAoB;AAC1B,6BAAyB,IAAI;AAC7B,wBAAoB,IAAI;AACxB,QAAI;AACF,eAAS,KAAK,IAAI;IACpB,UAAA;AACE,+BAAyB,4BAA4B;AACrD,0BAAoB,iBAAiB;IACvC;EACF;AACF;AAdS;AAeT,SAAS,wBAAwB,QAAQ,aAAa,OAAO;AAC3D,MAAI,SAAS,OAAO;AACpB,SAAO,QAAQ,OAAO,OAAO;AAC7B,SAAO,WAAW,MAAM;AACtB,UAAME,cAAa,OAAO;AAC1B,QAAIA,gBAAe,MAAM;AACvB,+BAAyB,MAAM;AAC7BA,oBAAW,MAAM,cAAc;MACjC,CAAC;IACH;AACA,QAAI,QAAQ,OAAO;AACnB,SAAK,OAAO,IAAI,iBAAiB,GAAG;AAClC,aAAO,SAAS;IAClB,OAAO;AACL,qBAAe,QAAQ,UAAU;IACnC;AACA,aAAS;EACX;AACF;AAlBS;AAmBT,SAAS,8BAA8B,QAAQ;AAC7C,MAAI,SAAS,OAAO;AACpB,SAAO,WAAW,MAAM;AACtB,QAAI,QAAQ,OAAO;AACnB,SAAK,OAAO,IAAI,mBAAmB,GAAG;AACpC,qBAAe,MAAM;IACvB;AACA,aAAS;EACX;AACF;AATS;AAUT,SAAS,eAAe,QAAQ,aAAa,MAAM;AACjD,MAAI,UAAU;AACd,OAAK,eAAe,OAAO,IAAI,iBAAiB,MAAM,OAAO,gBAAgB,QAAQ,OAAO,cAAc,MAAM;AAC9G;MACE,OAAO;;MAEP,OAAO;IACT;AACA,cAAU;EACZ;AACA,0BAAwB,QAAQ,cAAc,CAAC,OAAO;AACtD,mBAAiB,QAAQ,CAAC;AAC1B,oBAAkB,QAAQ,SAAS;AACnC,MAAI,cAAc,OAAO;AACzB,MAAI,gBAAgB,MAAM;AACxB,eAAW,cAAc,aAAa;AACpC,iBAAW,KAAK;IAClB;EACF;AACA,0BAAwB,MAAM;AAC9B,MAAI,SAAS,OAAO;AACpB,MAAI,WAAW,QAAQ,OAAO,UAAU,MAAM;AAC5C,kBAAc,MAAM;EACtB;AACA,SAAO,OAAO,OAAO,OAAO,OAAO,WAAW,OAAO,MAAM,OAAO,OAAO,OAAO,KAAK,OAAO,cAAc,OAAO,YAAY,OAAO,KAAK;AAC3I;AAzBS;AA0BT,SAAS,kBAAkB,MAAM,KAAK;AACpC,SAAO,SAAS,MAAM;AACpB,QAAI,QAAQ,SAAS,MAAM;;MAET,iCAAiB,IAAI;;AAEvC,SAAK,OAAO;AACZ,WAAO;EACT;AACF;AATS;AAUT,SAAS,cAAc,QAAQ;AAC7B,MAAI,SAAS,OAAO;AACpB,MAAI,OAAO,OAAO;AAClB,MAAI,QAAQ,OAAO;AACnB,MAAI,SAAS,KAAM,MAAK,OAAO;AAC/B,MAAI,UAAU,KAAM,OAAM,OAAO;AACjC,MAAI,WAAW,MAAM;AACnB,QAAI,OAAO,UAAU,OAAQ,QAAO,QAAQ;AAC5C,QAAI,OAAO,SAAS,OAAQ,QAAO,OAAO;EAC5C;AACF;AAVS;AAWT,SAAS,aAAa,QAAQ,UAAU;AACtC,MAAI,cAAc,CAAC;AACnB,iBAAe,QAAQ,aAAa,IAAI;AACxC,sBAAoB,aAAa,MAAM;AACrC,mBAAe,MAAM;AACrB,QAAI,SAAU,UAAS;EACzB,CAAC;AACH;AAPS;AAQT,SAAS,oBAAoB,aAAa,IAAI;AAC5C,MAAI,YAAY,YAAY;AAC5B,MAAI,YAAY,GAAG;AACjB,QAAI,QAAQ,6BAAM,EAAE,aAAa,GAAG,GAAxB;AACZ,aAAS,cAAc,aAAa;AAClC,iBAAW,IAAI,KAAK;IACtB;EACF,OAAO;AACL,OAAG;EACL;AACF;AAVS;AAWT,SAAS,eAAe,QAAQ,aAAa,OAAO;AAClD,OAAK,OAAO,IAAI,WAAW,EAAG;AAC9B,SAAO,KAAK;AACZ,MAAI,OAAO,gBAAgB,MAAM;AAC/B,eAAW,cAAc,OAAO,aAAa;AAC3C,UAAI,WAAW,aAAa,OAAO;AACjC,oBAAY,KAAK,UAAU;MAC7B;IACF;EACF;AACA,MAAI,QAAQ,OAAO;AACnB,SAAO,UAAU,MAAM;AACrB,QAAI,UAAU,MAAM;AACpB,QAAI,eAAe,MAAM,IAAI,wBAAwB,MAAM,MAAM,IAAI,mBAAmB;AACxF,mBAAe,OAAO,aAAa,cAAc,QAAQ,KAAK;AAC9D,YAAQ;EACV;AACF;AAjBS;AAkBT,IAAI,qBAAqB;AACzB,SAAS,uBAAuB,OAAO;AACrC,uBAAqB;AACvB;AAFS;AAGT,IAAI,uBAAuB;AAC3B,SAAS,yBAAyB,OAAO;AACvC,yBAAuB;AACzB;AAFS;AAGT,IAAI,kBAAkB;AACtB,IAAI,aAAa;AACjB,SAAS,oBAAoB,UAAU;AACrC,oBAAkB;AACpB;AAFS;AAGT,IAAI,gBAAgB;AACpB,SAAS,kBAAkB,QAAQ;AACjC,kBAAgB;AAClB;AAFS;AAGT,IAAI,kBAAkB;AACtB,SAAS,oBAAoB,OAAO;AAClC,MAAI,oBAAoB,QAAQ,MAAM;AACpC,QAAI,oBAAoB,MAAM;AAC5B,wBAAkB,CAAC,KAAK;IAC1B,OAAO;AACL,sBAAgB,KAAK,KAAK;IAC5B;EACF;AACF;AARS;AAST,IAAI,WAAW;AACf,IAAI,eAAe;AACnB,IAAI,mBAAmB;AACvB,SAAS,qBAAqB,OAAO;AACnC,qBAAmB;AACrB;AAFS;AAGT,IAAI,gBAAgB;AACpB,IAAI,eAAe;AACnB,IAAI,iBAAiB;AACrB,SAAS,mBAAmB,OAAO;AACjC,mBAAiB;AACnB;AAFS;AAGT,IAAI,gBAAgB;AACpB,SAAS,0BAA0B;AACjC,SAAO,EAAE;AACX;AAFS;AAGT,SAAS,SAAS,UAAU;AAC1B,MAAI,SAAS,SAAS;AACtB,OAAK,SAAS,WAAW,GAAG;AAC1B,WAAO;EACT;AACA,OAAK,SAAS,iBAAiB,GAAG;AAChC,QAAI,eAAe,SAAS;AAC5B,QAAI,cAAc,SAAS,aAAa;AACxC,QAAI,iBAAiB,MAAM;AACzB,UAAI;AACJ,UAAI;AACJ,UAAI,mBAAmB,SAAS,kBAAkB;AAClD,UAAI,uBAAuB,cAAc,kBAAkB,QAAQ,CAAC;AACpE,UAAI,SAAS,aAAa;AAC1B,WAAK,mBAAmB,0BAA0B,kBAAkB,SAAS,cAAc,IAAI,eAAe,IAAI;AAChH,YAAI;;UAEF;;AAEF,YAAI,SAAS,QAAQ;AACrB,aAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,uBAAa,aAAa,CAAC;AAC3B,cAAI,mBAAmB,CAAC,YAAY,WAAW,SAAS,OAAO,GAAG;AAChE,aAAC,WAAW,cAAc,CAAC,GAAG,KAAK,OAAO;UAC5C;QACF;AACA,YAAI,iBAAiB;AACnB,kBAAQ,KAAK;QACf;AACA,YAAI,wBAAwB,WAAW,SAAS,OAAO,IAAI,aAAa,GAAG;AACzE,kBAAQ,KAAK;QACf;MACF;AACA,WAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC3B,qBAAa,aAAa,CAAC;AAC3B,YAAI;;UAEF;QACF,GAAG;AACD;;YAEE;UACF;QACF;AACA,YAAI,WAAW,KAAK,SAAS,IAAI;AAC/B,iBAAO;QACT;MACF;IACF;AACA,QAAI,CAAC,cAAc,kBAAkB,QAAQ,CAAC,eAAe;AAC3D,wBAAkB,UAAU,KAAK;IACnC;EACF;AACA,SAAO;AACT;AAtDS;AAuDT,SAAS,2CAA2C,QAAQ,QAAQ,QAAQ,MAAM;AAChF,MAAI,YAAY,OAAO;AACvB,MAAI,cAAc,KAAM;AACxB,MAAI,iBAAiB,SAAS,MAAM,GAAG;AACrC;EACF;AACA,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,QAAI,WAAW,UAAU,CAAC;AAC1B,SAAK,SAAS,IAAI,aAAa,GAAG;AAChC;;QAEE;QACA;QACA;MACF;IACF,WAAW,WAAW,UAAU;AAC9B,UAAI,OAAO;AACT,0BAAkB,UAAU,KAAK;MACnC,YAAY,SAAS,IAAI,WAAW,GAAG;AACrC,0BAAkB,UAAU,WAAW;MACzC;AACA;;QAEE;MACF;IACF;EACF;AACF;AA3BS;AA4BT,SAAS,gBAAgB,UAAU;AACjC,MAAI,gBAAgB;AACpB,MAAI,wBAAwB;AAC5B,MAAI,4BAA4B;AAChC,MAAI,oBAAoB;AACxB,MAAI,yBAAyB;AAC7B,MAAI,mBAAmB;AACvB,MAAI,6BAA6B;AACjC,MAAI,sBAAsB;AAC1B,MAAI,0BAA0B;AAC9B,MAAI,SAAS,SAAS;AACtB;EACA;AACA,iBAAe;AACf,qBAAmB;AACnB,mBAAiB,SAAS,aAAa,MAAM,cAAc,CAAC,sBAAsB,oBAAoB;AACtG,qBAAmB,UAAU,gBAAgB,kBAAkB,IAAI,WAAW;AAC9E,oBAAkB;AAClB,wBAAsB,SAAS,GAAG;AAClC,eAAa;AACb,mBAAiB,EAAE;AACnB,MAAI,SAAS,OAAO,MAAM;AACxB,6BAAyB,MAAM;AAC7B,eAAS,GAAG,MAAM,cAAc;IAClC,CAAC;AACD,aAAS,KAAK;EAChB;AACA,MAAI;AACF,aAAS,KAAK;AACd,QAAI;;MAEF,SAAS;;AAEX,QAAI,SAAS,GAAG;AAChB,QAAI,OAAO,SAAS;AACpB,QAAI,aAAa,MAAM;AACrB,UAAI;AACJ,uBAAiB,UAAU,YAAY;AACvC,UAAI,SAAS,QAAQ,eAAe,GAAG;AACrC,aAAK,SAAS,eAAe,SAAS;AACtC,aAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACpC,eAAK,eAAe,CAAC,IAAI,SAAS,CAAC;QACrC;MACF,OAAO;AACL,iBAAS,OAAO,OAAO;MACzB;AACA,UAAI,CAAC;OACJ,SAAS,aAAa;MACvB,SAAS,cAAc,MAAM;AAC3B,aAAK,IAAI,cAAc,IAAI,KAAK,QAAQ,KAAK;AAC3C,WAAC,KAAK,CAAC,EAAE,cAAc,CAAC,GAAG,KAAK,QAAQ;QAC1C;MACF;IACF,WAAW,SAAS,QAAQ,eAAe,KAAK,QAAQ;AACtD,uBAAiB,UAAU,YAAY;AACvC,WAAK,SAAS;IAChB;AACA,QAAI,SAAS,KAAK,qBAAqB,QAAQ,CAAC,cAAc,SAAS,SAAS,SAAS,KAAK,UAAU,cAAc,YAAY,GAAG;AACnI,WAAK,IAAI,GAAG;MACZ,iBAAiB,QAAQ,KAAK;AAC5B;UACE,iBAAiB,CAAC;;UAElB;QACF;MACF;IACF;AACA,QAAI,sBAAsB,QAAQ,sBAAsB,UAAU;AAChE;AACA,UAAI,qBAAqB,MAAM;AAC7B,YAAI,8BAA8B,MAAM;AACtC,sCAA4B;QAC9B,OAAO;AACL,oCAA0B,KAAK;UAC/B,gBAAgB;QAClB;MACF;IACF;AACA,SAAK,SAAS,IAAI,iBAAiB,GAAG;AACpC,eAAS,KAAK;IAChB;AACA,WAAO;EACT,SAAS9F,SAAO;AACd,WAAO,aAAaA,OAAK;EAC3B,UAAA;AACE,aAAS,KAAK;AACd,eAAW;AACX,mBAAe;AACf,uBAAmB;AACnB,sBAAkB;AAClB,oBAAgB;AAChB,sBAAkB;AAClB,0BAAsB,0BAA0B;AAChD,iBAAa;AACb,qBAAiB;EACnB;AACF;AAhGS;AAiGT,SAAS,gBAAgB,QAAQ,YAAY;AAC3C,MAAI,YAAY,WAAW;AAC3B,MAAI,cAAc,MAAM;AACtB,QAAIW,SAAQ,SAAS,KAAK,WAAW,MAAM;AAC3C,QAAIA,WAAU,IAAI;AAChB,UAAI,aAAa,UAAU,SAAS;AACpC,UAAI,eAAe,GAAG;AACpB,oBAAY,WAAW,YAAY;MACrC,OAAO;AACL,kBAAUA,MAAK,IAAI,UAAU,UAAU;AACvC,kBAAU,IAAI;MAChB;IACF;EACF;AACA,MAAI,cAAc,SAAS,WAAW,IAAI,aAAa;;;GAGtD,aAAa,QAAQ,CAAC,SAAS,SAAS,UAAU,IAAI;AACrD,sBAAkB,YAAY,WAAW;AACzC,SAAK,WAAW,KAAK,UAAU,mBAAmB,GAAG;AACnD,iBAAW,KAAK;IAClB;AACA;;MAEE;IACF;AACA;;MAEE;MACA;IACF;EACF;AACF;AAhCS;AAiCT,SAAS,iBAAiB,QAAQ,aAAa;AAC7C,MAAI,eAAe,OAAO;AAC1B,MAAI,iBAAiB,KAAM;AAC3B,WAAS,IAAI,aAAa,IAAI,aAAa,QAAQ,KAAK;AACtD,oBAAgB,QAAQ,aAAa,CAAC,CAAC;EACzC;AACF;AANS;AAOT,SAAS,cAAc,QAAQ;AAC7B,MAAI,SAAS,OAAO;AACpB,OAAK,SAAS,eAAe,GAAG;AAC9B;EACF;AACA,oBAAkB,QAAQ,KAAK;AAC/B,MAAI,kBAAkB;AACtB,MAAI,sBAAsB;AAC1B,kBAAgB;AAChB,uBAAqB;AACrB,MAAI;AACF,SAAK,SAAS,kBAAkB,GAAG;AACjC,oCAA8B,MAAM;IACtC,OAAO;AACL,8BAAwB,MAAM;IAChC;AACA,4BAAwB,MAAM;AAC9B,QAAI,WAAW,gBAAgB,MAAM;AACrC,WAAO,WAAW,OAAO,aAAa,aAAa,WAAW;AAC9D,WAAO,KAAK;AACZ,QAAI;AACJ,QAAI,WAAW,sBAAsB,OAAO,IAAI,WAAW,KAAK,OAAO,SAAS,KAAM;EACxF,UAAA;AACE,yBAAqB;AACrB,oBAAgB;EAClB;AACF;AA1BS;AA2BT,SAAS,IAAI,QAAQ;AACnB,MAAI,SAAS,OAAO;AACpB,MAAI,cAAc,SAAS,aAAa;AACxC,MAAI,oBAAoB,QAAQ,CAAC,YAAY;AAC3C,QAAI,YAAY,kBAAkB,SAAS,cAAc,IAAI,eAAe;AAC5E,QAAI,CAAC,aAAa,CAAC,iBAAiB,SAAS,MAAM,GAAG;AACpD,UAAI,OAAO,gBAAgB;AAC3B,WAAK,gBAAgB,IAAI,0BAA0B,GAAG;AACpD,YAAI,OAAO,KAAK,cAAc;AAC5B,iBAAO,KAAK;AACZ,cAAI,aAAa,QAAQ,SAAS,QAAQ,KAAK,YAAY,MAAM,QAAQ;AACvE;UACF,WAAW,aAAa,MAAM;AAC5B,uBAAW,CAAC,MAAM;UACpB,WAAW,CAAC,iBAAiB,CAAC,SAAS,SAAS,MAAM,GAAG;AACvD,qBAAS,KAAK,MAAM;UACtB;QACF;MACF,OAAO;AACL,SAAC,gBAAgB,SAAS,CAAC,GAAG,KAAK,MAAM;AACzC,YAAI,YAAY,OAAO;AACvB,YAAI,cAAc,MAAM;AACtB,iBAAO,YAAY,CAAC,eAAe;QACrC,WAAW,CAAC,UAAU,SAAS,eAAe,GAAG;AAC/C,oBAAU,KAAK,eAAe;QAChC;MACF;IACF;EACF,WAAW;EACX,OAAO,SAAS;EAChB,OAAO,YAAY,MAAM;AACvB,QAAI;;MAEF;;AAEF,QAAI,SAAS,QAAQ;AACrB,QAAI,WAAW,SAAS,OAAO,IAAI,aAAa,GAAG;AACjD,cAAQ,KAAK;IACf;EACF;AACA,MAAI,sBAAsB;AACxB,QAAI,WAAW,IAAI,MAAM,GAAG;AAC1B,aAAO,WAAW,IAAI,MAAM;IAC9B;AACA,QAAI,YAAY;AACd;MACA;AACA,UAAI,QAAQ,QAAQ;AACpB,WAAK,QAAQ,IAAI,WAAW,KAAK,QAAQ,cAAc,QAAQ,sBAAsB,OAAO,GAAG;AAC7F,gBAAQ,gBAAgB,OAAO;MACjC;AACA,iBAAW,IAAI,SAAS,KAAK;AAC7B,aAAO;IACT;EACF,WAAW,YAAY;AACrB;IACA;AACA,QAAI,SAAS,OAAO,GAAG;AACrB,qBAAe,OAAO;IACxB;EACF;AACA,OAAK,OAAO,IAAI,iBAAiB,GAAG;AAClC,UAAM,OAAO;EACf;AACA,SAAO,OAAO;AAChB;AAjES;AAkET,SAAS,sBAAsB,SAAS;AACtC,MAAI,QAAQ,MAAM,cAAe,QAAO;AACxC,MAAI,QAAQ,SAAS,KAAM,QAAO;AAClC,aAAW,OAAO,QAAQ,MAAM;AAC9B,QAAI,WAAW,IAAI,GAAG,GAAG;AACvB,aAAO;IACT;AACA,SAAK,IAAI,IAAI,aAAa,KAAK;;MAE7B;IACF,GAAG;AACD,aAAO;IACT;EACF;AACA,SAAO;AACT;AAfS;AAgBT,SAAS,QAAQ,IAAI;AACnB,MAAI,sBAAsB;AAC1B,MAAI;AACF,iBAAa;AACb,WAAO,GAAG;EACZ,UAAA;AACE,iBAAa;EACf;AACF;AARS;AAST,IAAM,cAAc;AACpB,SAAS,kBAAkB,QAAQ,QAAQ;AACzC,SAAO,IAAI,OAAO,IAAI,cAAc;AACtC;AAFS;AAGT,IAAM,wBAAwC,oBAAI,IAAI;AACtD,IAAM,qBAAqC,oBAAI,IAAI;AACnD,IAAI,wBAAwB;AAC5B,SAAS,yBAAyB,OAAO;AACvC,MAAI,kBAAkB;AACtB,MAAI;;IAEF,gBAAgB;;AAElB,MAAI,aAAa,MAAM;AACvB,MAAI,OAAO,MAAM,eAAe,KAAK,CAAC;AACtC,MAAI;;IAEF,KAAK,CAAC,KAAK,MAAM;;AAEnB,0BAAwB;AACxB,MAAI,WAAW;AACf,MAAI,aAAa,0BAA0B,SAAS,MAAM;AAC1D,MAAI,YAAY;AACd,QAAI,SAAS,KAAK,QAAQ,UAAU;AACpC,QAAI,WAAW,OAAO,oBAAoB,YAAY;IACtD,SAAS;AACP,YAAM,SAAS;AACf;IACF;AACA,QAAI,cAAc,KAAK,QAAQ,eAAe;AAC9C,QAAI,gBAAgB,IAAI;AACtB;IACF;AACA,QAAI,UAAU,aAAa;AACzB,iBAAW;IACb;EACF;AACA;EACA,KAAK,QAAQ,KAAK,MAAM;AACxB,MAAI,mBAAmB,gBAAiB;AACxC,kBAAgB,OAAO,iBAAiB;IACtC,cAAc;IACd,MAAM;AACJ,aAAO,kBAAkB;IAC3B;EACF,CAAC;AACD,MAAI,oBAAoB;AACxB,MAAI,kBAAkB;AACtB,sBAAoB,IAAI;AACxB,oBAAkB,IAAI;AACtB,MAAI;AACF,QAAI;AACJ,QAAI,eAAe,CAAC;AACpB,WAAO,mBAAmB,MAAM;AAC9B,UAAI,iBAAiB,eAAe,gBAAgB,eAAe;MACnE,eAAe,QAAQ;AACvB,UAAI;AACF,YAAI,YAAY,eAAe,OAAO,UAAU;AAChD,YAAI,aAAa,SAAS;QAC1B,eAAe;;QAEf,MAAM,WAAW,iBAAiB;AAChC,cAAI,SAAS,SAAS,GAAG;AACvB,gBAAI,CAAC,IAAI,GAAG,IAAI,IAAI;AACpB,eAAG,MAAM,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC;UAC3C,OAAO;AACL,sBAAU,KAAK,gBAAgB,KAAK;UACtC;QACF;MACF,SAASX,SAAO;AACd,YAAI,aAAa;AACf,uBAAa,KAAKA,OAAK;QACzB,OAAO;AACL,wBAAcA;QAChB;MACF;AACA,UAAI,MAAM,gBAAgB,mBAAmB,mBAAmB,mBAAmB,MAAM;AACvF;MACF;AACA,uBAAiB;IACnB;AACA,QAAI,aAAa;AACf,eAASA,WAAS,cAAc;AAC9B,uBAAe,MAAM;AACnB,gBAAMA;QACR,CAAC;MACH;AACA,YAAM;IACR;EACF,UAAA;AACE,UAAM,SAAS;AACf,WAAO,MAAM;AACb,wBAAoB,iBAAiB;AACrC,sBAAkB,eAAe;EACnC;AACF;AAxFS;AAyFT,SAAS,aAAa,OAAO,KAAK;AAChC,MAAI;;IAEF;;AAEF,MAAI,OAAO,gBAAgB,MAAM;AAC/B,WAAO,cAAc;AACrB,WAAO,YAAY;EACrB;AACF;AATS;AAUT,SAAS,MAAMC,YAAW,UAAU;AAClC,SAAO,OAAOA,YAAW,QAAQ;AACnC;AAFS;AAGT,SAAS,QAAQA,YAAW,UAAU;AACpC,kBAAgB;AAChB,WAAS,QAAQ,SAAS,SAAS;AACnC,QAAM,SAAS,SAAS;AACxB,QAAM,gBAAgB;AACtB,QAAM,wBAAwB;AAC9B,MAAI;AACF,QAAI;;MAEc,gCAAgB,MAAM;;AAExC,WAAO,WAAW,OAAO,aAAa;IACtC,OAAO,SAAS,kBAAkB;AAChC;MACgB,iCAAiB,MAAM;IACzC;AACA,QAAI,CAAC,QAAQ;AACX,YAAM;IACR;AACA,kBAAc,IAAI;AAClB;;MAEE;IACF;AACA,UAAM,WAAW,OAAOA,YAAW,EAAE,GAAG,UAAU,OAAO,CAAC;AAC1D,kBAAc,KAAK;AACnB;;MAEE;;EAEJ,SAASD,SAAO;AACd,QAAIA,mBAAiB,SAASA,QAAM,QAAQ,MAAM,IAAI,EAAE,KAAK,CAAC,SAAS,KAAK,WAAW,uBAAuB,CAAC,GAAG;AAChH,YAAMA;IACR;AACA,QAAIA,YAAU,iBAAiB;AAC7B,cAAQ,KAAK,uBAAuBA,OAAK;IAC3C;AACA,QAAI,SAAS,YAAY,OAAO;AAC9B,uBAAiB;IACnB;AACA,oBAAgB;AAChB,uBAAmB,MAAM;AACzB,kBAAc,KAAK;AACnB,WAAO,MAAMC,YAAW,QAAQ;EAClC,UAAA;AACE,kBAAc,aAAa;AAC3B,qBAAiB,qBAAqB;EACxC;AACF;AAhDS;AAiDT,IAAM,qBAAqC,oBAAI,IAAI;AACnD,SAAS,OAAO,WAAW,EAAE,QAAQ,QAAQ,QAAQ,CAAC,GAAG,QAAQ,SAAAT,WAAS,QAAQ,KAAK,GAAG;AACxF,kBAAgB;AAChB,MAAI,oBAAoC,oBAAI,IAAI;AAChD,MAAI,eAAe,wBAAC,YAAY;AAC9B,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,UAAI,aAAa,QAAQ,CAAC;AAC1B,UAAI,kBAAkB,IAAI,UAAU,EAAG;AACvC,wBAAkB,IAAI,UAAU;AAChC,UAAI,UAAU,iBAAiB,UAAU;AACzC,aAAO,iBAAiB,YAAY,0BAA0B,EAAE,QAAQ,CAAC;AACzE,UAAIG,KAAI,mBAAmB,IAAI,UAAU;AACzC,UAAIA,OAAM,QAAQ;AAChB,iBAAS,iBAAiB,YAAY,0BAA0B,EAAE,QAAQ,CAAC;AAC3E,2BAAmB,IAAI,YAAY,CAAC;MACtC,OAAO;AACL,2BAAmB,IAAI,YAAYA,KAAI,CAAC;MAC1C;IACF;EACF,GAfmB;AAgBnB,eAAa,WAAW,qBAAqB,CAAC;AAC9C,qBAAmB,IAAI,YAAY;AACnC,MAAIM,aAAY;AAChB,MAAI,WAAW,eAAe,MAAM;AAClC,QAAI,cAAc,UAAU,OAAO,YAAY,YAAY,CAAC;AAC5D;;MAEE;MACA;QACE,SAAS,6BAAM;QACf,GADS;MAEX;MACA,CAAC,iBAAiB;AAChB,YAAIT,WAAS;AACX4F,gBAAK,CAAC,CAAC;AACP,cAAI;;YAEF;;AAEF,cAAI,IAAI5F;QACV;AACA,YAAI,QAAQ;AACV,gBAAM,WAAW;QACnB;AACA,YAAI,WAAW;AACb;;YAEE;YACA;UACF;QACF;AACAS,qBAAY,UAAU,cAAc,KAAK,KAAK,CAAC;AAC/C,YAAI,WAAW;AACb,wBAAc,YAAY;AAC1B,cAAI,iBAAiB,QAAQ,aAAa,aAAa;UACvD,aAAa,SAAS,eAAe;AACnC,+BAAmB;AACnB,kBAAM;UACR;QACF;AACA,YAAIT,WAAS;AACX6F,eAAI;QACN;MACF;IACF;AACA,WAAO,MAAM;AACX,eAAS,cAAc,mBAAmB;AACxC,eAAO,oBAAoB,YAAY,wBAAwB;AAC/D,YAAI1F;;UAEF,mBAAmB,IAAI,UAAU;;AAEnC,YAAI,EAAEA,OAAM,GAAG;AACb,mBAAS,oBAAoB,YAAY,wBAAwB;AACjE,6BAAmB,OAAO,UAAU;QACtC,OAAO;AACL,6BAAmB,IAAI,YAAYA,EAAC;QACtC;MACF;AACA,yBAAmB,OAAO,YAAY;AACtC,UAAI,gBAAgB,QAAQ;AAC1B,oBAAY,YAAY,YAAY,WAAW;MACjD;IACF;EACF,CAAC;AACD,qBAAmB,IAAIM,YAAW,QAAQ;AAC1C,SAAOA;AACT;AAtFS;AAuFT,IAAI,qBAAqC,oBAAI,QAAQ;AACrD,SAAS,QAAQA,YAAW,UAAU;AACpC,QAAM,KAAK,mBAAmB,IAAIA,UAAS;AAC3C,MAAI,IAAI;AACN,uBAAmB,OAAOA,UAAS;AACnC,WAAO,GAAG,QAAQ;EACpB;AACA,SAAO,QAAQ,QAAQ;AACzB;AAPS;AAQT,SAAS,mBAAmBA,YAAW;AACrC,SAAO,cAAc,iBAAiB;;IAEpC,YAAY,UAAU;AACpB,YAAM;QACJ,WAAAA;QACA,GAAG;MACL,CAAC;IACH;EACF;AACF;AAVS;AAWT,IAAM,mBAAN,MAAuB;SAAA;;;;EAErB;;EAEA;;;;;;EAMA,YAAY,UAAU;AACpB,QAAI,UAA0B,oBAAI,IAAI;AACtC,QAAI,aAAa,wBAACd,MAAK,UAAU;AAC/B,UAAI+D,KAAoB,+BAAe,OAAO,OAAO,KAAK;AAC1D,cAAQ,IAAI/D,MAAK+D,EAAC;AAClB,aAAOA;IACT,GAJiB;AAKjB,UAAM,QAAQ,IAAI;MAChB,EAAE,GAAG,SAAS,SAAS,CAAC,GAAG,UAAU,CAAC,EAAE;MACxC;QACE,IAAI,QAAQ,MAAM;AAChB,iBAAO,IAAI,QAAQ,IAAI,IAAI,KAAK,WAAW,MAAM,QAAQ,IAAI,QAAQ,IAAI,CAAC,CAAC;QAC7E;QACA,IAAI,QAAQ,MAAM;AAChB,cAAI,SAAS,aAAc,QAAO;AAClC,cAAI,QAAQ,IAAI,IAAI,KAAK,WAAW,MAAM,QAAQ,IAAI,QAAQ,IAAI,CAAC,CAAC;AACpE,iBAAO,QAAQ,IAAI,QAAQ,IAAI;QACjC;QACA,IAAI,QAAQ,MAAM,OAAO;AACvB,cAAI,QAAQ,IAAI,IAAI,KAAK,WAAW,MAAM,KAAK,GAAG,KAAK;AACvD,iBAAO,QAAQ,IAAI,QAAQ,MAAM,KAAK;QACxC;MACF;IACF;AACA,SAAK,aAAa,SAAS,UAAU,UAAU,OAAO,SAAS,WAAW;MACxE,QAAQ,SAAS;MACjB,QAAQ,SAAS;MACjB;MACA,SAAS,SAAS;MAClB,OAAO,SAAS,SAAS;MACzB,SAAS,SAAS;IACpB,CAAC;AACD,QAAI,CAAC,UAAU,OAAO,UAAU,SAAS,SAAS,OAAO;AACvD,gBAAU;IACZ;AACA,SAAK,UAAU,MAAM;AACrB,eAAW/D,QAAO,OAAO,KAAK,KAAK,SAAS,GAAG;AAC7C,UAAIA,SAAQ,UAAUA,SAAQ,cAAcA,SAAQ,MAAO;AAC3D,sBAAgB,MAAMA,MAAK;QACzB,MAAM;AACJ,iBAAO,KAAK,UAAUA,IAAG;QAC3B;;QAEA,IAAI,OAAO;AACT,eAAK,UAAUA,IAAG,IAAI;QACxB;QACA,YAAY;MACd,CAAC;IACH;AACA,SAAK,UAAU;IACf,CAAC,UAAU;AACT,aAAO,OAAO,OAAO,KAAK;IAC5B;AACA,SAAK,UAAU,WAAW,MAAM;AAC9B,cAAQ,KAAK,SAAS;IACxB;EACF;;EAEA,KAAK,OAAO;AACV,SAAK,UAAU,KAAK,KAAK;EAC3B;;;;;;EAMA,IAAI,OAAO,UAAU;AACnB,SAAK,QAAQ,KAAK,IAAI,KAAK,QAAQ,KAAK,KAAK,CAAC;AAC9C,UAAM,KAAK,2BAAI,SAAS,SAAS,KAAK,MAAM,GAAG,IAAI,GAAxC;AACX,SAAK,QAAQ,KAAK,EAAE,KAAK,EAAE;AAC3B,WAAO,MAAM;AACX,WAAK,QAAQ,KAAK,IAAI,KAAK,QAAQ,KAAK,EAAE;;QAExC,CAAC,OAAO,OAAO;MACjB;IACF;EACF;EACA,WAAW;AACT,SAAK,UAAU,SAAS;EAC1B;AACF;AACA,IAAI,sBAAsB;AAC1B,SAAS,wBAAwB,IAAI;AACnC,wBAAsB;AACxB;AAFS;AAKT,SAAS,iBAAiBc,YAAW;AACnC,QAAM,wBAAwB,mBAAmBA,UAAS;AAC1D,QAAM,UAAU,wBAAC,OAAO,EAAE,SAAAT,UAAQ,IAAI,CAAC,MAAM;AAC3C,UAAM,SAAS,OAAOS,YAAW,EAAE,OAAO,SAAAT,UAAQ,CAAC;AACnD,UAAM,SAAS,OAAO;;MAEpB,CAAC;MACD;QACE,KAAK;UACH,OAAO,EAAE,MAAM,IAAI,KAAK,KAAK;QAC/B;QACA,MAAM;UACJ,KAAK,6BAAM,OAAO,MAAb;QACP;QACA,MAAM;UACJ,KAAK,6BAAM,OAAO,MAAb;QACP;QACA,MAAM;;;;;;;;;UASJ,OAAO,wBAAC,aAAa,eAAe;AAClC;AACE,qCAAuB;AACvB,oBAAM,cAAc,YAAY;gBAC9B,KAAK,OAAO;gBACZ,MAAM,OAAO;gBACb,MAAM,OAAO;cACf,CAAC;AACD,qBAAO,QAAQ,QAAQ,WAAW;YACpC;UACF,GAVO;QAWT;MACF;IACF;AACA,WAAO;EACT,GAvCgB;AAwChB,wBAAsB,SAAS;AAC/B,SAAO;AACT;AA5CS;AA6CT,SAAS,KAAK,YAAY,SAAS;AACjC,aAAW,UAAU,CAAC,gBAAgB;AACpC,QAAI;MACF,QAAAuG;MACA,MAAAC;MACA;MACA,aAAa,CAAC;MACd;MACA,SAAS;MACT,SAAS;IACX,IAAI;AACJ;AACE,iBAAW,cAAcD,OAAM;IACjC;AACA;AACEA,cAAO,KAAK,IAAIC,KAAI;IACtB;AACA,UAAM,YAAY,aAAa,CAAC;AAChC,QAAI,aAAa,CAAC,GAAG;AACnB,kBAAY,KAAK,UAAU;AAC3B,YAAM,YAAY,aAAa,CAAC;AAChC,kBAAY,KAAK,SAAS;AAC1B,gBAAU,aAAa;QACrB,MAAM;QACN;QACA,QAAQA,MAAK;QACb,UAAU,wBAAC,gBAAgB;AACzB,sBAAY,KAAK,SAAS;AAC1B,oBAAU,aAAa,EAAE,MAAM,QAAQ,MAAM,QAAQA,MAAK,OAAO,CAAC;AAClE,sBAAY,KAAK,SAAS;QAC5B,GAJU;QAKV,SAAS,EAAE,SAAS,KAAK;MAC3B,CAAC;AACD,kBAAY,KAAK,SAAS;IAC5B,OAAO;AACL,kBAAY,KAAK,WAAW;AAC5B,YAAM,YAAY,aAAa,CAAC;AAChC,kBAAY,KAAK,SAAS;AAC1B,gBAAU,aAAa,EAAE,MAAM,QAAQ,MAAM,QAAQA,MAAK,OAAO,CAAC;AAClE,kBAAY,KAAK,SAAS;IAC5B;AACA,gBAAY,KAAK,WAAW;AAC5B;AACE,kBAAY,KAAK,WAAW;IAC9B;AACA,gBAAY,KAAK,UAAU;EAC7B,CAAC;AACH;AA/CS;AAgDT,IAAM,OAAO,iBAAiB,IAAI;AAClC,IAAM,UAAU;EACd,6BAA6B;EAC7B,OAAO;EACP,KAAK,EAAE,QAAQ,QAAQ,cAAc,EAAE,6BAA6B,OAAO,2BAA2B,MAAM,GAAG,cAAc,EAAE,6BAA6B,OAAO,2BAA2B,MAAM,EAAE;EACtM,mBAAmB;EACnB,sBAAsB,CAAC;EACvB,UAAU;EACV,mBAAmB;EACnB,oBAAoB;EACpB,cAAc;EACd,OAAO;;EAEP,kBAAkB;EAClB;EACA,gBAAgB;EAChB,wBAAwB;EACxB,WAAW;IACT,KAAK,wBAAC,EAAE,MAAM,MAAApH,OAAM,QAAAqH,SAAQ,OAAO,KAAAnD,KAAI,MAAM,2GAA2GmD,UAAS,uGAAuG,OAAO,gCAAgCrH,QAAO,0BAAjT;IACL,OAAO,wBAAC,EAAE,QAAQ,QAAQ,MAAM,sFAAsF,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAqExG,SAAS,gDAAgD,UAAU,mDArEpF;EAsET;EACA,cAAc;AAChB;AACA,eAAe,YAAY;AACzB,MAAI8F;AACJ,MAAI;AACJ,MAAIwB;AACJ,MAAI;AACJ,MAAIjB;AACJ,GAAC,EAAE,QAAAP,SAAQ,aAAa,aAAAwB,cAAa,uBAAuB,MAAAjB,MAAK,IAAI,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,kBAAA,GAAA,qBAAA;AAC3E,MAAI;AACJ,MAAI;AACJ,SAAO;IACL,QAAAP;IACA;IACA,aAAAwB;IACA;IACA,MAAAjB;IACA;IACA;EACF;AACF;AAlBe;AFp8Ef,SAAS,iBAAiB;AACxB,MAAI;AACJ,MAAI;AACJ,QAAM,UAAU,IAAI,QAAQ,CAAC,KAAK,QAAQ;AACxC,eAAW;AACX,aAAS;EACX,CAAC;AACD,SAAO,EAAE,SAAS,SAAS,UAAU,OAAO;AAC9C;AARS;AAST,IAAM,mBAAmB,CAAC,KAAK,KAAK,KAAK,KAAK,GAAG;AACjD,IAAMkB,mBAAkB,CAAC,CAAC,WAAW,SAAS,UAAU;AACxD,IAAM,oBAAoB;AAC1B,IAAM,mBAAmB,CAAC,OAAO,QAAQ,OAAO,SAAS,UAAU,WAAW,MAAM;AACpF,IAAM,eAAe,CAAC,OAAO,QAAQ,MAAM;AAC3C,SAAS,UAAU,QAAQ,OAAO;AAChC,QAAM,QAAQ,CAAC;AACf,SAAO,MAAM,GAAG,EAAE,QAAQ,CAAC,KAAK,MAAM;AACpC,UAAM,QAAQ,sDAAsD,KAAK,GAAG;AAC5E,QAAI,OAAO;AACT,YAAM,CAAC,EAAE,MAAM,SAAS,IAAI,GAAG,IAAI;AACnC,YAAM,KAAK,EAAE,MAAM,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC;IACxC;EACF,CAAC;AACD,QAAM,KAAK,CAAC,GAAG,MAAM;AACnB,QAAI,EAAE,MAAM,EAAE,GAAG;AACf,aAAO,EAAE,IAAI,EAAE;IACjB;AACA,QAAI,EAAE,YAAY,SAAS,EAAE,YAAY,MAAM;AAC7C,aAAO,EAAE,YAAY,MAAM,IAAI;IACjC;AACA,QAAI,EAAE,SAAS,SAAS,EAAE,SAAS,MAAM;AACvC,aAAO,EAAE,SAAS,MAAM,IAAI;IAC9B;AACA,WAAO,EAAE,IAAI,EAAE;EACjB,CAAC;AACD,MAAI;AACJ,MAAI,eAAe;AACnB,aAAW,YAAY,OAAO;AAC5B,UAAM,CAAC,MAAM,OAAO,IAAI,SAAS,MAAM,GAAG;AAC1C,UAAM,WAAW,MAAM;MACrB,CAAC,UAAU,KAAK,SAAS,QAAQ,KAAK,SAAS,SAAS,KAAK,YAAY,WAAW,KAAK,YAAY;IACvG;AACA,QAAI,aAAa,MAAM,WAAW,cAAc;AAC9C,iBAAW;AACX,qBAAe;IACjB;EACF;AACA,SAAO;AACT;AAlCS;AAmCT,SAAS,gBAAgB,YAAY,OAAO;AAC1C,QAAM,OAAO,QAAQ,QAAQ,IAAI,cAAc,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK;AAC7E,SAAO,MAAM,SAAS,KAAK,YAAY,CAAC;AAC1C;AAHS;AAIT,SAAS,qBAAqB,SAAS;AACrC,SAAO;IACL;IACA;IACA;IACA;EACF;AACF;AAPS;AAQT,SAAS,kBAAkB,KAAK;AAC9B,SAAO,eAAe,SAAS;EAC/B,IAAI;EACJ,IAAI;;IAEF;MACE,IAAI,MAAM,KAAK,UAAU,GAAG,CAAC;AACnC;AAPS;AAQT,SAAS,gBAAgBX,SAAQ;AAC/B;;IAEEA;;AAEJ;AALS;AAMT,SAAS,WAAWA,SAAQ;AAC1B,SAAOA,mBAAkB,aAAaA,mBAAkB,iBAAiBA,QAAO,SAAS;AAC3F;AAFS;AAGT,SAAS,YAAYA,SAAQ;AAC3B,SAAOA,mBAAkB,iBAAiBA,QAAO,OAAO;AAC1D;AAFS;AAGT,IAAM,wBAAwB;EAC5B,KAAK;EACL,KAAK;;;;AAIP;AACA,IAAM,mBAAmB;EACvB,KAAK;EACL,KAAK;AACP;AACA,IAAM;;EAEJ;;AAEF,IAAM,yBAAyB,IAAI;EACjC,IAAI,OAAO,KAAK,qBAAqB,EAAE,KAAK,EAAE,CAAC,OAAO;EACtD;AACF;AACA,IAAM,oBAAoB,IAAI;EAC5B,IAAI,OAAO,KAAK,gBAAgB,EAAE,KAAK,EAAE,CAAC,OAAO;EACjD;AACF;AACA,SAASY,aAAY,KAAK,SAAS;AACjC,QAAM,OAAO,UAAU,wBAAwB;AAC/C,QAAM,cAAc,IAAI,QAAQ,UAAU,yBAAyB,mBAAmB,CAAC,UAAU;AAC/F,QAAI,MAAM,WAAW,GAAG;AACtB,aAAO;IACT;AACA,WAAO,KAAK,KAAK,KAAK,KAAK,MAAM,WAAW,CAAC,CAAC;EAChD,CAAC;AACD,SAAO;AACT;AATSA;AAUT,SAAS,mBAAmB,KAAK,QAAQ;AACvC,SAAO,KAAK,GAAG,MAAM,uBAAuB;IAC1C,QAAQ;IACR,SAAS;;;MAGP,OAAO,gBAAgB,GAAG,EAAE,KAAK,IAAI;IACvC;EACF,CAAC;AACH;AATS;AAUT,SAAS,gBAAgB,KAAK;AAC5B,QAAM,UAAU,iBAAiB,OAAO,CAAC,WAAW,UAAU,GAAG;AACjE,MAAI,SAAS,OAAO,EAAE,UAAU,MAAM;AACpC,YAAQ,KAAK,MAAM;EACrB;AACA,SAAO;AACT;AANS;AAOT,SAAS,gBAAgB,UAAU;AACjC,SAAO,eAAe,SAAS,YAAY;AAC7C;AAFS;AAGT,SAAS,kBAAkB,UAAU,QAAQ,SAAS;AACpD,MAAIJ,QAAO,SAAS,UAAU,MAAM,EAAE,QAAQ,SAASI,aAAY,OAAO,EAAE,CAAC;AAC7E,SAAO,KAAKJ,OAAM;IAChB,SAAS,EAAE,gBAAgB,2BAA2B;IACtD;EACF,CAAC;AACH;AANS;AAOT,eAAe,mBAAmB,OAAO5C,QAAO,UAAUoC,SAAQ;AAChE,EAAAA,UAASA,mBAAkB,YAAYA,UAAS,kBAAkBA,OAAM;AACxE,QAAM,SAAS,WAAWA,OAAM;AAChC,QAAM,QAAQ,MAAM,yBAAyB,OAAOpC,QAAO,UAAUoC,OAAM;AAC3E,QAAM,OAAO,UAAU,MAAM,QAAQ,QAAQ,IAAI,QAAQ,KAAK,aAAa;IACzE;IACA;EACF,CAAC;AACD,MAAI,MAAM,iBAAiB,SAAS,oBAAoB;AACtD,WAAO,KAAK,OAAO;MACjB;IACF,CAAC;EACH;AACA,SAAO,kBAAkB,UAAU,QAAQ,MAAM,OAAO;AAC1D;AAde;AAef,eAAe,yBAAyB,OAAOpC,QAAO,UAAUoC,SAAQ;AACtE,MAAIA,mBAAkB,WAAW;AAC/B,WAAO,EAAE,SAAS,iBAAiB,GAAGA,QAAO,KAAK;EACpD;AACA,QAAM,SAAS,WAAWA,OAAM;AAChC,QAAM,UAAU,YAAYA,OAAM;AAClC,SAAO,MAAM;IACX,EAAE,OAAO,OAAApC,OAAM;IACf,MAAM,SAAS,MAAM,YAAY,EAAE,OAAOoC,SAAQ,OAAO,QAAQ,QAAQ,CAAC;EAC5E,KAAK,EAAE,QAAQ;AACjB;AAVe;AAWf,SAAS,kBAAkB,QAAQ,UAAU;AAC3C,QAAM,WAAW,IAAI,SAAS,QAAQ;IACpC;IACA,SAAS,EAAE,SAAS;EACtB,CAAC;AACD,SAAO;AACT;AANS;AAOT,SAAS,sBAAsB,OAAOA,SAAQ;AAC5C,MAAIA,QAAO,MAAM;AACf,WAAO,+CAA+C,MAAM,MAAM,EAAE,yBAAyBA,QAAO,OAAO,KAAKA,QAAO,IAAI;EAC7H;AACA,MAAIA,QAAO,SAAS,IAAI;AACtB,WAAO,+CAA+C,MAAM,MAAM,EAAE;EACtE;AACA,SAAOA,QAAO;AAChB;AARS;AAST,SAAS,eAAe,MAAM;AAC5B,QAAM,OAAO,CAAC;AACd,MAAI,KAAK,QAAQ,KAAK,KAAK,aAAa,OAAO,GAAG;AAChD,SAAK,eAAe,MAAM,KAAK,KAAK,KAAK,YAAY;EACvD;AACA,MAAI,KAAK,QAAQ,KAAK,KAAK,cAAc,OAAO,GAAG;AACjD,SAAK,gBAAgB,MAAM,KAAK,KAAK,KAAK,aAAa;EACzD;AACA,MAAI,KAAK,QAAQ,KAAK,KAAK,OAAO,OAAO,GAAG;AAC1C,SAAK,SAAS,MAAM,KAAK,KAAK,KAAK,MAAM;EAC3C;AACA,MAAI,KAAK,MAAM,OAAQ,MAAK,SAAS;AACrC,MAAI,KAAK,MAAM,MAAO,MAAK,QAAQ;AACnC,MAAI,KAAK,MAAM,IAAK,MAAK,MAAM;AAC/B,SAAO;AACT;AAfS;AAgBT,SAAS,qBAAqBa,WAAU,UAAU;AAChD,SAAOA,UAAS,EAAE,mBAAmB,IAAI,QAAQ,KAAK,SAAS,GAAG,EAAE,MAAM,OAAOA,UAAS,EAAE,mBAAmB,IAAI,SAAS,MAAM,GAAG,EAAE,CAAC;AAC1I;AAFS;AAGT,SAAS,oBAAoB,QAAQb,SAAQ,OAAO;AAClD,QAAM,iBAAiB;aACZ,MAAM,KAAK,MAAM,QAAQ,MAAM,IAAI,MAAM,IAAI,QAAQ;AAChE,MAAI,WAAW,KAAK;AAClB,WAAO;EACT;AACA,SAAO,GAAG,cAAc;EACxBA,QAAO,KAAK;AACd;AARS;AAST,SAAS,cAAc,SAAS;AAC9B,QAAM,QAAQ,SAAS,MAAM,GAAG;AAChC,QAAM,WAAW,OAAO,GAAG,EAAE;AAC7B,MAAI,CAAC,SAAU,QAAO;AACtB,QAAM,YAAY,SAAS,MAAM,GAAG;AACpC,SAAO,UAAU,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG;AACxC;AANS;AAOT,eAAe,gBAAgB,OAAO,aAAa,KAAKpC,QAAO;AAC7D,QAAM;;IAEJ,MAAM,QAAQ;;AAEhB,MAAI,UAAU,IAAI,MAAM,KAAK,IAAI;AACjC,MAAI,WAAW,UAAU,CAAC,IAAI,QAAQ,IAAI,KAAK;AAC7C,cAAU,IAAI;EAChB;AACA,MAAI,CAAC,SAAS;AACZ,WAAO,mBAAmB,KAAK,MAAM;EACvC;AACA,QAAM,YAAY,IAAI,aAAaA,OAAM;AACzC,MAAI,cAAc,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,SAAS;AACjE,UAAM,IAAI,MAAM,uDAAuD;EACzE;AACA,MAAIA,OAAM,gBAAgB,CAACA,OAAM,aAAa,kBAAkB,CAAC,WAAW;AAC1E,QAAIA,OAAM,QAAQ,GAAG;AACnB,YAAM,IAAI,MAAM,GAAG,MAAM,MAAM,EAAE,uBAAuB;IAC1D,OAAO;AACL,aAAO,IAAI,SAAS,QAAQ,EAAE,QAAQ,IAAI,CAAC;IAC7C;EACF;AACA,cAAY,sBAAsB;AAClC,MAAI;AACF,UAAM,WAAW,MAAM;MACrB,EAAE,OAAO,OAAO,YAAY;MAC5B,MAAM;;QAEJ;MACF;IACF;AACA,QAAI,EAAE,oBAAoB,WAAW;AACnC,YAAM,IAAI;QACR,+BAA+B,MAAM,IAAI,QAAQ;MACnD;IACF;AACA,QAAIA,OAAM,iBAAiB,CAACA,OAAM,aAAa,kBAAkB,YAAY;AAC3E,YAAM,SAAS,IAAI,SAAS,SAAS,MAAM,EAAE,MAAM;QACjD,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,SAAS,IAAI,QAAQ,SAAS,OAAO;MACvC,CAAC;AACD,aAAO,QAAQ,IAAI,yBAAyB,OAAO,SAAS,CAAC;AAC7D,UAAIA,OAAM,aAAa,kBAAkB,WAAW;AAClD,eAAO,QAAQ;UACb;UACA;;YAEE,MAAM,MAAM;UACd;QACF;AACAA,eAAM,aAAa,aAAa,IAAI,MAAM,IAAI,UAAU,EAAE,UAAU,QAAQ,MAAM,KAAK,CAAC;MAC1F,OAAO;AACL,eAAO;MACT;IACF;AACA,WAAO;EACT,SAAS3D,IAAG;AACV,QAAIA,cAAa,UAAU;AACzB,aAAO,IAAI,SAAS,QAAQ;QAC1B,QAAQA,GAAE;QACV,SAAS,EAAE,UAAUA,GAAE,SAAS;MAClC,CAAC;IACH;AACA,UAAMA;EACR;AACF;AAnEe;AAoEf,SAAS,oBAAoB,OAAO;AAClC,QAAM,EAAE,QAAQ,SAAS,SAAS,IAAI,MAAM;AAC5C,MAAI,iBAAiB,SAAS,MAAM,KAAK,CAAC,aAAa,SAAS,MAAM,GAAG;AACvE,WAAO;EACT;AACA,MAAI,WAAW,UAAU,SAAS,IAAI,oBAAoB,MAAM,OAAQ,QAAO;AAC/E,QAAM,SAAS,MAAM,QAAQ,QAAQ,IAAI,QAAQ,KAAK;AACtD,SAAO,UAAU,QAAQ,CAAC,KAAK,WAAW,CAAC,MAAM;AACnD;AARS;AAST,SAAS,QAAQ,KAAK;AACpB,SAAO,IAAI;;IAET,CAAC,QAAQ,OAAO;EAClB;AACF;AALS;AAMT,IAAM,cAAc;AACpB,IAAM,mBAAmB;AACzB,SAAS6G,iBAAgB,UAAU;AACjC,SAAO,SAAS,SAAS,WAAW,KAAK,SAAS,SAAS,gBAAgB;AAC7E;AAFSA;AAGT,SAASC,iBAAgB,UAAU;AACjC,MAAI,SAAS,SAAS,OAAO,EAAG,QAAO,SAAS,QAAQ,WAAW,gBAAgB;AACnF,SAAO,SAAS,QAAQ,OAAO,EAAE,IAAI;AACvC;AAHSA;AAIT,SAASC,mBAAkB,UAAU;AACnC,MAAI,SAAS,SAAS,gBAAgB,GAAG;AACvC,WAAO,SAAS,MAAM,GAAG,CAAC,iBAAiB,MAAM,IAAI;EACvD;AACA,SAAO,SAAS,MAAM,GAAG,CAAC,YAAY,MAAM;AAC9C;AALSA;AAMT,IAAM,eAAe;AACrB,SAASC,uBAAsB,UAAU;AACvC,SAAO,SAAS,SAAS,YAAY;AACvC;AAFSA;AAGT,SAASC,uBAAsB,UAAU;AACvC,SAAO,SAAS,QAAQ,OAAO,EAAE,IAAI;AACvC;AAFSA;AAGT,SAASC,yBAAwB,UAAU;AACzC,SAAO,SAAS,MAAM,GAAG,CAAC,aAAa,MAAM;AAC/C;AAFSA;AAGT,IAAM,QAAQ;AACd,IAAM,eAAe;AACrB,IAAM,WAAW;AACjB,SAAS,OAAO,OAAO,UAAU;AAC/B,QAAM,SAAyB,oBAAI,IAAI;AACvC,QAAM,OAAO,CAAC;AACd,QAAM,SAAyB,oBAAI,IAAI;AACvC,WAAS,KAAK,OAAO;AACnB,QAAI,OAAO,UAAU,YAAY;AAC/B,YAAM,IAAI,aAAa,+BAA+B,IAAI;IAC5D;AACA,QAAI,CAAC,aAAa,KAAK,GAAG;AACxB,UAAI,OAAO,IAAI,KAAK,GAAG;AACrB,eAAO,IAAI,OAAO,OAAO,IAAI,KAAK,IAAI,CAAC;AACvC;MACF;AACA,aAAO,IAAI,OAAO,CAAC;AACnB,UAAI,UAAU;AACZ,cAAM,OAAO,SAAS,KAAK;AAC3B,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO,IAAI,OAAO,IAAI;AACtB;QACF;MACF;AACA,YAAM,OAAO,SAAS,KAAK;AAC3B,cAAQ,MAAM;QACZ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH;QACF,KAAK;AACH,gBAAM,QAAQ,CAAC,QAAQ,MAAM;AAC3B,iBAAK,KAAK,IAAI,CAAC,GAAG;AAClB,iBAAK,MAAM;AACX,iBAAK,IAAI;UACX,CAAC;AACD;QACF,KAAK;AACH,gBAAM,KAAK,KAAK,EAAE,QAAQ,IAAI;AAC9B;QACF,KAAK;AACH,qBAAW,CAAC,MAAM,MAAM,KAAK,OAAO;AAClC,iBAAK;cACH,QAAQ,aAAa,IAAI,IAAIC,qBAAoB,IAAI,IAAI,KAAK;YAChE;AACA,iBAAK,MAAM;AACX,iBAAK,IAAI;UACX;AACA;QACF,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH,eAAK,MAAM,MAAM;AACjB;QACF,KAAK;AACH;QACF,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH;QACF;AACE,cAAI,CAAC,gBAAgB,KAAK,GAAG;AAC3B,kBAAM,IAAI;cACR;cACA;YACF;UACF;AACA,cAAI,mBAAmB,KAAK,EAAE,SAAS,GAAG;AACxC,kBAAM,IAAI;cACR;cACA;YACF;UACF;AACA,qBAAW,QAAQ,OAAO;AACxB,iBAAK,KAAK,cAAc,IAAI,CAAC;AAC7B,iBAAK,MAAM,IAAI,CAAC;AAChB,iBAAK,IAAI;UACX;MACJ;IACF;EACF;AA3FS;AA4FT,OAAK,KAAK;AACV,QAAM,QAAwB,oBAAI,IAAI;AACtC,QAAM,KAAK,MAAM,EAAE,OAAO,CAAC,UAAU,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,MAAM;AACnG,UAAM,IAAI,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC;EACjC,CAAC;AACD,WAAS,WAAW,OAAO;AACzB,QAAI,MAAM,IAAI,KAAK,GAAG;AACpB,aAAO,MAAM,IAAI,KAAK;IACxB;AACA,QAAI,aAAa,KAAK,GAAG;AACvB,aAAOA,qBAAoB,KAAK;IAClC;AACA,QAAI,OAAO,IAAI,KAAK,GAAG;AACrB,aAAO,OAAO,IAAI,KAAK;IACzB;AACA,UAAM,OAAO,SAAS,KAAK;AAC3B,YAAQ,MAAM;MACZ,KAAK;MACL,KAAK;MACL,KAAK;AACH,eAAO,UAAU,WAAW,MAAM,QAAQ,CAAC,CAAC;MAC9C,KAAK;AACH,eAAO,cAAc,iBAAiB,MAAM,MAAM,CAAC,MAAM,MAAM,KAAK;MACtE,KAAK;AACH,eAAO,YAAY,MAAM,QAAQ,CAAC;MACpC,KAAK;AACH,eAAO,WAAW,iBAAiB,MAAM,SAAS,CAAC,CAAC;MACtD,KAAK;AACH,eAAO,uBAAuB,iBAAiB,MAAM,SAAS,CAAC,CAAC;MAClE,KAAK;AACH,cAAM;;UAEJ,MAAM;YACJ,CAACrH,IAAG,MAAM,KAAK,QAAQ,WAAWA,EAAC,IAAI;UACzC;;AAEF,cAAM,OAAO,MAAM,WAAW,KAAK,MAAM,SAAS,KAAK,QAAQ,KAAK;AACpE,eAAO,IAAI,QAAQ,KAAK,GAAG,CAAC,GAAG,IAAI;MACrC,KAAK;MACL,KAAK;AACH,eAAO,OAAO,IAAI,KAAK,MAAM,KAAK,KAAK,EAAE,IAAI,UAAU,EAAE,KAAK,GAAG,CAAC;MACpE,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK,kBAAkB;AACrB,YAAI,OAAO,OAAO,IAAI;AACtB,YAAI,OAAO,IAAI,MAAM,MAAM,MAAM,GAAG;AAClC,gBAAM,SAAS,IAAI,MAAM,YAAY,MAAM,MAAM;AACjD,kBAAQ,KAAK,MAAM;QACrB,OAAO;AACL,kBAAQ,KAAK,WAAW,MAAM,MAAM,CAAC;QACvC;AACA,cAAM,IAAI,MAAM;AAChB,cAAM,IAAI,IAAI,MAAM;AACpB,YAAI,IAAI,KAAK,MAAM,MAAM,OAAO,YAAY;AAC1C,gBAAM,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC,IAAI;AACnC,kBAAQ,aAAa,IAAI,CAAC,IAAI,IAAI,CAAC;QACrC;AACA,eAAO;MACT;MACA,KAAK,eAAe;AAClB,cAAM,MAAM,IAAI,WAAW,KAAK;AAChC,eAAO,mBAAmB,IAAI,SAAS,CAAC;MAC1C;MACA,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;AACH,eAAO,GAAG,IAAI,SAAS,iBAAiB,MAAM,SAAS,CAAC,CAAC;MAC3D;AACE,cAAM,MAAM,IAAI,OAAO,KAAK,KAAK,EAAE,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,CAAC,IAAI,WAAW,MAAM,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,GAAG,CAAC;AAC1G,cAAM,QAAQ,OAAO,eAAe,KAAK;AACzC,YAAI,UAAU,MAAM;AAClB,iBAAO,OAAO,KAAK,KAAK,EAAE,SAAS,IAAI,qCAAqC,GAAG,MAAM;QACvF;AACA,eAAO;IACX;EACF;AAnFS;AAoFT,QAAM,MAAM,WAAW,KAAK;AAC5B,MAAI,MAAM,MAAM;AACd,UAAM,SAAS,CAAC;AAChB,UAAM,aAAa,CAAC;AACpB,UAAM,SAAS,CAAC;AAChB,UAAM,QAAQ,CAAC,MAAM,UAAU;AAC7B,aAAO,KAAK,IAAI;AAChB,UAAI,OAAO,IAAI,KAAK,GAAG;AACrB,eAAO;;UAEL,OAAO,IAAI,KAAK;QAClB;AACA;MACF;AACA,UAAI,aAAa,KAAK,GAAG;AACvB,eAAO,KAAKqH,qBAAoB,KAAK,CAAC;AACtC;MACF;AACA,YAAM,OAAO,SAAS,KAAK;AAC3B,cAAQ,MAAM;QACZ,KAAK;QACL,KAAK;QACL,KAAK;AACH,iBAAO,KAAK,UAAU,WAAW,MAAM,QAAQ,CAAC,CAAC,GAAG;AACpD;QACF,KAAK;AACH,iBAAO,KAAK,MAAM,SAAS,CAAC;AAC5B;QACF,KAAK;AACH,iBAAO,KAAK,YAAY,MAAM,QAAQ,CAAC,GAAG;AAC1C;QACF,KAAK;AACH,iBAAO,KAAK,SAAS,MAAM,MAAM,GAAG;AACpC,gBAAM,QAAQ,CAACrH,IAAG,MAAM;AACtB,uBAAW,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,WAAWA,EAAC,CAAC,EAAE;UAClD,CAAC;AACD;QACF,KAAK;AACH,iBAAO,KAAK,SAAS;AACrB,qBAAW;YACT,GAAG,IAAI,IAAI,MAAM,KAAK,KAAK,EAAE,IAAI,CAACA,OAAM,OAAO,WAAWA,EAAC,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC;UAC5E;AACA;QACF,KAAK;AACH,iBAAO,KAAK,SAAS;AACrB,qBAAW;YACT,GAAG,IAAI,IAAI,MAAM,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,GAAGA,EAAC,MAAM,OAAO,WAAW,CAAC,CAAC,KAAK,WAAWA,EAAC,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC;UACnG;AACA;QACF,KAAK;AACH,iBAAO;YACL,mBAAmB,IAAI,WAAW,KAAK,EAAE,KAAK,GAAG,CAAC;UACpD;AACA;QACF;AACE,iBAAO;YACL,OAAO,eAAe,KAAK,MAAM,OAAO,wBAAwB;UAClE;AACA,iBAAO,KAAK,KAAK,EAAE,QAAQ,CAAC,SAAS;AACnC,uBAAW;cACT,GAAG,IAAI,GAAG,UAAU,IAAI,CAAC,IAAI,WAAW,MAAM,IAAI,CAAC,CAAC;YACtD;UACF,CAAC;MACL;IACF,CAAC;AACD,eAAW,KAAK,UAAU,GAAG,EAAE;AAC/B,WAAO,aAAa,OAAO,KAAK,GAAG,CAAC,KAAK,WAAW;MAClD;IACF,CAAC,KAAK,OAAO,KAAK,GAAG,CAAC;EACxB,OAAO;AACL,WAAO;EACT;AACF;AAjQS;AAkQT,SAAS,SAAS,KAAK;AACrB,MAAI,OAAO;AACX,KAAG;AACD,WAAO,MAAM,MAAM,MAAM,MAAM,IAAI;AACnC,UAAM,CAAC,EAAE,MAAM,MAAM,UAAU;EACjC,SAAS,OAAO;AAChB,SAAO,SAAS,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM;AAC5C;AAPS;AAQT,SAAS,mBAAmBO,IAAG;AAC7B,SAAO,QAAQA,EAAC,KAAKA;AACvB;AAFS;AAGT,SAAS,oBAAoB,KAAK;AAChC,SAAO,IAAI,QAAQ,cAAc,kBAAkB;AACrD;AAFS;AAGT,SAAS,SAAS,MAAM;AACtB,SAAO,6BAA6B,KAAK,IAAI,IAAI,OAAO,oBAAoB,KAAK,UAAU,IAAI,CAAC;AAClG;AAFS;AAGT,SAAS,UAAU,MAAM;AACvB,SAAO,6BAA6B,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,oBAAoB,KAAK,UAAU,IAAI,CAAC,CAAC;AAC7G;AAFS;AAGT,SAAS8G,qBAAoB,OAAO;AAClC,MAAI,OAAO,UAAU,SAAU,QAAO,iBAAiB,KAAK;AAC5D,MAAI,UAAU,OAAQ,QAAO;AAC7B,MAAI,UAAU,KAAK,IAAI,QAAQ,EAAG,QAAO;AACzC,QAAM,MAAM,OAAO,KAAK;AACxB,MAAI,OAAO,UAAU,SAAU,QAAO,IAAI,QAAQ,YAAY,KAAK;AACnE,MAAI,OAAO,UAAU,SAAU,QAAO,QAAQ;AAC9C,SAAO;AACT;AARSA;AAST,IAAM,YAAY;EAChB,cAAc;AACZ,WAAO;EACT;EACA,eAAe;AACb,WAAO;EACT;EACA,gBAAgB;AACd,WAAO;EACT;EACA,WAAW;AACT,WAAO;EACT;EACA,YAAY;AACV,WAAO;EACT;EACA,aAAa;AACX,WAAO;EACT;EACA,MAAM;AACJ,WAAO;EACT;EACA,cAAc;AACZ,WAAO;EACT;EACA,kBAAkB;AAChB,WAAO;EACT;EACA,UAAU;AACR,WAAO;EACT;EACA,WAAW;AACT,WAAO;EACT;AACF;AACA,IAAM,oBAAoB;EACxB,SAAS;EACT,QAAQ;EACR,YAAY;AACd;AACA,eAAe,YAAY,EAAE,MAAM,YAAA7F,aAAY,GAAG,GAAG;AACnD;AACE,WAAO,GAAG,SAAS;EACrB;AACF;AAJe;AAKf,SAAS,uBAAuB,OAAO;AACrC,QAAM,SAAS,UAAU,MAAM,QAAQ,QAAQ,IAAI,QAAQ,KAAK,OAAO;IACrE;IACA;EACF,CAAC;AACD,SAAO,WAAW,sBAAsB,MAAM,QAAQ,WAAW;AACnE;AANS;AAOT,eAAe,2BAA2B,OAAO,aAAa,UAAU8F,SAAQ;AAC9E,QAAM,UAAUA,SAAQ;AACxB,MAAI,CAAC,SAAS;AACZ,UAAM,mBAAmB,IAAI;MAC3B;MACA;MACA,sDAAsD,WAAW;IACnE;AACA,WAAO;MACL;QACE,MAAM;QACN,OAAO,MAAM,yBAAyB,OAAO,aAAa,UAAU,gBAAgB;MACtF;MACA;QACE,QAAQ,iBAAiB;QACzB,SAAS;;;UAGP,OAAO;QACT;MACF;IACF;EACF;AACA,+BAA6B,OAAO;AACpC,MAAI;AACF,UAAM,OAAO,MAAM,YAAY,OAAO,aAAa,OAAO;AAC1D,QAAI,QAAS;AACb,QAAI,gBAAgB,eAAe;AACjC,aAAO,YAAY;QACjB,MAAM;QACN,QAAQ,KAAK;;;;QAIb,MAAM;UACJ,KAAK;;UAEL,MAAM,MAAM;UACZ,SAAS,MAAM;QACjB;MACF,CAAC;IACH,OAAO;AACL,aAAO,YAAY;QACjB,MAAM;QACN,QAAQ,OAAO,MAAM;;QAErB,MAAM;UACJ;;UAEA,MAAM,MAAM;UACZ,SAAS,MAAM;QACjB;MACF,CAAC;IACH;EACF,SAASpH,IAAG;AACV,UAAM,MAAM,gBAAgBA,EAAC;AAC7B,QAAI,eAAe,UAAU;AAC3B,aAAO,qBAAqB,GAAG;IACjC;AACA,WAAO;MACL;QACE,MAAM;QACN,OAAO,MAAM;UACX;UACA;UACA;UACA,yBAAyB,GAAG;QAC9B;MACF;MACA;QACE,QAAQ,WAAW,GAAG;MACxB;IACF;EACF;AACF;AA1Ee;AA2Ef,SAAS,yBAAyB+F,SAAQ;AACxC,SAAOA,mBAAkB,gBAAgB,IAAI,MAAM,4CAA4C,IAAIA;AACrG;AAFS;AAGT,SAAS,qBAAqB,UAAU;AACtC,SAAO,YAAY;IACjB,MAAM;IACN,QAAQ,SAAS;IACjB,UAAU,SAAS;EACrB,CAAC;AACH;AANS;AAOT,SAAS,YAAY,MAAM,OAAO;AAChC,SAAO,KAAK,MAAM,KAAK;AACzB;AAFS;AAGT,SAAS,kBAAkB,OAAO;AAChC,SAAO,MAAM,QAAQ,WAAW;AAClC;AAFS;AAGT,eAAe,sBAAsB,OAAO,aAAaqB,SAAQ;AAC/D,QAAM,UAAUA,SAAQ;AACxB,MAAI,CAAC,SAAS;AACZ,UAAM,WAAW;;;MAGf,OAAO;IACT,CAAC;AACD,WAAO;MACL,MAAM;MACN,OAAO,IAAI;QACT;QACA;QACA,sDAAsD,WAAW;MACnE;IACF;EACF;AACA,+BAA6B,OAAO;AACpC,MAAI;AACF,UAAM,OAAO,MAAM,YAAY,OAAO,aAAa,OAAO;AAC1D,QAAI,QAAS;AACb,QAAI,gBAAgB,eAAe;AACjC,aAAO;QACL,MAAM;QACN,QAAQ,KAAK;QACb,MAAM,KAAK;MACb;IACF,OAAO;AACL,aAAO;QACL,MAAM;QACN,QAAQ;;QAER;MACF;IACF;EACF,SAASpH,IAAG;AACV,UAAM,MAAM,gBAAgBA,EAAC;AAC7B,QAAI,eAAe,UAAU;AAC3B,aAAO;QACL,MAAM;QACN,QAAQ,IAAI;QACZ,UAAU,IAAI;MAChB;IACF;AACA,WAAO;MACL,MAAM;MACN,OAAO,yBAAyB,GAAG;IACrC;EACF;AACF;AAjDe;AAkDf,SAAS,6BAA6B,SAAS;AAC7C,MAAI,QAAQ,WAAW,OAAO,KAAK,OAAO,EAAE,SAAS,GAAG;AACtD,UAAM,IAAI;MACR;IACF;EACF;AACF;AANS;AAOT,eAAe,YAAY,OAAO,aAAa,SAAS;AACtD,QAAM,MAAM,IAAI,IAAI,MAAM,QAAQ,GAAG;AACrC,MAAI,OAAO;AACX,aAAW,SAAS,IAAI,cAAc;AACpC,QAAI,MAAM,CAAC,EAAE,WAAW,GAAG,GAAG;AAC5B,aAAO,MAAM,CAAC,EAAE,MAAM,CAAC;AACvB,UAAI,SAAS,WAAW;AACtB,cAAM,IAAI,MAAM,2CAA2C;MAC7D;AACA;IACF;EACF;AACA,QAAM,SAAS,QAAQ,IAAI;AAC3B,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,eAAe,KAAK,aAAa,wBAAwB,IAAI,SAAS;EAClF;AACA,MAAI,CAAC,qBAAqB,MAAM,OAAO,GAAG;AACxC,UAAM,IAAI;MACR;MACA;MACA,yDAAoD,MAAM,QAAQ,QAAQ;QACxE;MACF,CAAC;IACH;EACF;AACA,SAAO,YAAY;IACjB,MAAM;IACN,YAAY;MACV,cAAc,MAAM,MAAM,MAAM;IAClC;IACA,IAAI,8BAAO,aAAa;AACtB,YAAM,eAAe,cAAc,OAAO,QAAQ;AAClD,YAAM,SAAS,MAAM;QACnB,EAAE,OAAO,cAAc,OAAO,YAAY;QAC1C,MAAM,OAAO,YAAY;MAC3B;AACA,UAAI,kBAAkB,eAAe;AACnC,iBAAS,cAAc;UACrB,qCAAqC;UACrC,uCAAuC,OAAO;QAChD,CAAC;MACH;AACA,aAAO;IACT,GAbI;EAcN,CAAC;AACH;AA7Ce;AAsDf,SAAS,uBAAuB,MAAM,UAAU,WAAW;AACzD,QAAM,WAAW,wBAAC,UAAU;AAC1B,eAAW,QAAQ,WAAW;AAC5B,YAAM,UAAU,UAAU,IAAI,EAAE,OAAO,KAAK;AAC5C,UAAI,SAAS;AACX,eAAO,eAAe,IAAI,MAAM,OAAO,SAAS,QAAQ,CAAC;MAC3D;IACF;EACF,GAPiB;AAQjB,SAAO,cAAc,MAAM,CAAC,UAAU,OAAO,OAAO,QAAQ,GAAG,QAAQ;AACzE;AAVS;AAWT,SAAS,0BAA0B,MAAM,UAAU,WAAW;AAC5D,QAAM,WAAW,OAAO;IACtB,OAAO,QAAQ,SAAS,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,MAAM,MAAM,CAAC;EACvE;AACA,SAAO,cAAc,MAAM,CAAC,UAAU,YAAU,OAAO,QAAQ,GAAG,QAAQ;AAC5E;AALS;AAMT,SAAS,cAAc,MAAM,IAAI,UAAU;AACzC,MAAI;AACF,WAAO,GAAG,IAAI;EAChB,SAASA,IAAG;AACV,UAAM+F;;MAEJ/F;;AAEF,QAAI,gBAAgB,UAAU;AAC5B,YAAM,IAAI;QACR,oCAAoC,QAAQ;MAC9C;IACF;AACA,QAAI,UAAU+F,SAAQ;AACpB,UAAI,UAAU,oCAAoC,QAAQ,yBAAyBA,QAAO,OAAO;AACjG,UAAIA,QAAO,SAAS,GAAI,YAAW,UAAUA,QAAO,IAAI;AACxD,YAAM,IAAI,MAAM,OAAO;IACzB;AACA,UAAMA;EACR;AACF;AApBS;AAqBT,SAAS,QAAQ;AACf,MAAI;AACJ,MAAI;AACJ,QAAM,UAAU,IAAI,QAAQ,CAAC,GAAGzD,OAAM;AACpC,aAAS;AACT,aAASA;EACX,CAAC;AACD,SAAO,EAAE,SAAS,QAAQ,OAAO;AACnC;AARS;AAST,SAAS,wBAAwB;AAC/B,MAAII,SAAQ;AACZ,QAAM2E,YAAW,CAAC,MAAM,CAAC;AACzB,SAAO;IACL,SAAS,wBAAC,YAAY,CAAC,MAAM,MAAM;AACjC,aAAO;QACL,CAAC,OAAO,aAAa,IAAI;AACvB,iBAAO;YACL,MAAM,mCAAY;AAChB,oBAAM1E,QAAO,MAAM0E,UAAS,CAAC,EAAE;AAC/B,kBAAI,CAAC1E,MAAK,MAAM;AACd0E,0BAAS,MAAM;AACf,uBAAO,EAAE,OAAO,UAAU1E,MAAK,KAAK,GAAG,MAAM,MAAM;cACrD;AACA,qBAAOA;YACT,GAPM;UAQR;QACF;MACF;IACF,GAfS;IAgBT,KAAK,wBAAC,YAAY;AAChB,MAAAD,UAAS;AACT,WAAK,QAAQ,KAAK,CAAC,UAAU;AAC3B2E,kBAASA,UAAS,SAAS,CAAC,EAAE,OAAO;UACnC;UACA,MAAM;QACR,CAAC;AACDA,kBAAS,KAAK,MAAM,CAAC;AACrB,YAAI,EAAE3E,WAAU,GAAG;AACjB2E,oBAASA,UAAS,SAAS,CAAC,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;QACrD;MACF,CAAC;IACH,GAZK;EAaP;AACF;AAlCS;AAmCT,SAAS,uBAAuB,OAAO,aAAa,UAAU;AAC5D,MAAI,aAAa;AACjB,MAAI,YAAY;AAChB,QAAM,WAAW,sBAAsB;AACvC,QAAM1G,UAAS,gBAAgB,QAAQ;AACvC,WAAS,aAAaO,QAAO;AAC3B,WAAO,gCAAS,SAAS,OAAO;AAC9B,UAAI,OAAO,OAAO,SAAS,YAAY;AACrC,cAAM,KAAK;AACX,cAAM,UAAU,MAAM;;UAEpB,CAAC,UAAU,EAAE,KAAK;QACpB,EAAE;;UAEA,OAAO6E,aAAY;YACjB,OAAO,MAAM,yBAAyB,OAAO,aAAa,UAAUA,OAAM;UAC5E;QACF,EAAE;;;;UAIA,OAAO,EAAE,MAAM,OAAOA,QAAO,MAAM;AACjC,gBAAI;AACJ,gBAAI;AACF,oBAAM,OAAOA,UAAS,CAAC,EAAEA,OAAM,IAAI,CAAC,IAAI,GAAG,QAAQ;YACrD,QAAQ;AACN,cAAAA,UAAS,MAAM;gBACb;gBACA;gBACA;gBACA,IAAI,MAAM,+CAA+C,MAAM,MAAM,EAAE,EAAE;cAC3E;AACA,qBAAO;AACP,oBAAM,OAAO,CAAC,EAAEA,OAAM,GAAG,QAAQ;YACnC;AACA,mBAAO;cACL,OAAA7E;cACA,KAAK,GAAGP,OAAM,YAAY,EAAE,KAAK,IAAI,SAAS,YAAY,IAAI,YAAY,GAAG,KAAK,SAAS,GAAG,EAAE;YAClG;UACF;QACF;AACA,iBAAS,IAAI,OAAO;AACpB,eAAO,GAAGA,OAAM,UAAU,EAAE;MAC9B,OAAO;AACL,mBAAW,QAAQ,SAAS,MAAM,WAAW;AAC3C,gBAAM,UAAU,SAAS,MAAM,UAAU,IAAI,EAAE,OAAO,KAAK;AAC3D,cAAI,SAAS;AACX,mBAAO,eAAe,IAAI,MAAM,OAAO,SAAS,QAAQ,CAAC;UAC3D;QACF;MACF;IACF,GA7CO;EA8CT;AA/CS;AAgDT,QAAM;;IAEJ,CAAC;;AAEH,SAAO;IACL,cAAc,GAAG;AACf,kBAAY;IACd;IACA,SAAS,GAAG,MAAM;AAChB,UAAI;AACF,YAAI,CAAC,MAAM;AACT,kBAAQ,CAAC,IAAI;AACb;QACF;AACA,cAAM,UAAU,EAAE,MAAM,QAAQ,MAAM,KAAK,MAAM,MAAM,eAAe,IAAI,EAAE;AAC5E,YAAI,KAAK,MAAO,SAAQ,QAAQ,KAAK;AACrC,gBAAQ,CAAC,IAAI,OAAO,SAAS,aAAa,CAAC,CAAC;MAC9C,SAASX,IAAG;AACVA,WAAE,OAAOA,GAAE,KAAK,MAAM,CAAC;AACvB,cAAM,IAAI,MAAM;UACd;;UAEAA;QACF,CAAC;MACH;IACF;IACA,SAAS,KAAK;AACZ,YAAM,OAAO,UAAU,IAAI,qBAAqB,WAAW,IAAI,KAAK,MAAM,EAAE;AAC5E,YAAM,QAAQ;;AAEd,aAAO;QACL,MAAM,IAAI,QAAQ,YAAY,KAAK,QAAQ,MAAM,GAAG,SAAS,IAAI,OAAO,EAAE,KAAK,GAAG,CAAC;QACnF,QAAQ,aAAa,IAAI,SAAS,QAAQ,CAAC,EAAE,OAAAkB,QAAO,IAAI,MAAM;AAC5D,cAAI,YAAY,MAAMA,UAAS,WAAW;AACxC,mBAAO;UACT;AACA,iBAAO,OAAO,MAAM;QACtB,CAAC,IAAI;MACP;IACF;EACF;AACF;AA9FS;AA+FT,SAAS,4BAA4B,OAAO,aAAa,UAAU;AACjE,MAAI,aAAa;AACjB,QAAM,WAAW,sBAAsB;AACvC,QAAM,WAAW;IACf,GAAG,OAAO;MACR,OAAO,QAAQ,SAAS,MAAM,SAAS,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,MAAM,MAAM,CAAC;IACtF;;IAEA,SAAS,wBAAC,UAAU;AAClB,UAAI,OAAO,OAAO,SAAS,YAAY;AACrC;MACF;AACA,YAAM,KAAK;AACX,UAAI,OAAO;AACX,YAAM,UAAU,MAAM;;QAEpB,OAAOlB,OAAM;AACX,iBAAO;AACP,iBAAO;YACL;YACA;YACA;;YAEAA;UACF;QACF;MACF,EAAE;;QAEA,OAAO,UAAU;AACf,cAAI;AACJ,cAAI;AACF,kBAAM,YAAU,OAAO,QAAQ;UACjC,QAAQ;AACN,kBAAM+F,UAAS,MAAM;cACnB;cACA;cACA;cACA,IAAI,MAAM,+CAA+C,MAAM,MAAM,EAAE,EAAE;YAC3E;AACA,mBAAO;AACP,kBAAM,YAAUA,SAAQ,QAAQ;UAClC;AACA,iBAAO,wBAAwB,EAAE,KAAK,IAAI,KAAK,GAAG;;QAEpD;MACF;AACA,eAAS,IAAI,OAAO;AACpB,aAAO;IACT,GAxCS;EAyCX;AACA,QAAM;;IAEJ,CAAC;;AAEH,SAAO;IACL,SAAS,GAAG,MAAM;AAChB,UAAI;AACF,YAAI,CAAC,MAAM;AACT,kBAAQ,CAAC,IAAI;AACb;QACF;AACA,YAAI,KAAK,SAAS,WAAW,KAAK,SAAS,QAAQ;AACjD,kBAAQ,CAAC,IAAI,KAAK,UAAU,IAAI;AAChC;QACF;AACA,gBAAQ,CAAC,IAAI,yBAAyB,YAAU,KAAK,MAAM,QAAQ,CAAC,WAAW,KAAK;UAClF,eAAe,IAAI;QACrB,CAAC,GAAG,KAAK,QAAQ,YAAY,KAAK,UAAU,KAAK,KAAK,CAAC,KAAK,EAAE;MAChE,SAAS/F,IAAG;AACVA,WAAE,OAAO,SAASA,GAAE;AACpB,cAAM,IAAI,MAAM;UACd;;UAEAA;QACF,CAAC;MACH;IACF;IACA,WAAW;AACT,aAAO;QACL,MAAM,2BAA2B,QAAQ,KAAK,GAAG,CAAC;;QAElD,QAAQ,aAAa,IAAI,SAAS,QAAQ,IAAI;MAChD;IACF;EACF;AACF;AArFS;AAsFT,eAAe,iBAAiB,EAAE,OAAO,aAAa,OAAA2D,QAAO,MAAM,OAAO,GAAG;AAC3E,MAAI,CAAC,MAAM,OAAQ,QAAO;AAC1B,MAAI,cAAc;AAClB,QAAM,OAAO;IACX,cAA8B,oBAAI,IAAI;IACtC,QAAwB,oBAAI,IAAI;IAChC,QAAQ;IACR,OAAO;IACP,KAAK;IACL,eAA+B,oBAAI,IAAI;EACzC;AACA,QAAM,OAAO,KAAK,OAAO;AACzB,QAAM,QAAQ,KAAK,OAAO;AAC1B,MAAI,CAAC,MAAM;AACT,WAAO,EAAE,MAAM,QAAQ,MAAM,MAAM,MAAM,MAAM;EACjD;AACA,QAAM,MAAM;IACV,MAAM;IACN,MAAM;AACJ,UAAI,aAAa;AACf,aAAK,MAAM;MACb;IACF;IACA,CAAC,UAAU;AACT,UAAI,aAAa;AACf,aAAK,cAAc,IAAI,KAAK;MAC9B;IACF;EACF;AACA,MAAIA,OAAM,cAAc;AACtB,mBAAe,GAAG;EACpB;AACA,QAAM,SAAS,MAAM,YAAY;IAC/B,MAAM;IACN,YAAY;MACV,0BAA0B,KAAK,aAAa;MAC5C,4BAA4B,cAAc,KAAK,SAAS;MACxD,cAAc,MAAM,MAAM,MAAM;IAClC;IACA,IAAI,8BAAO,aAAa;AACtB,YAAM,eAAe,cAAc,OAAO,QAAQ;AAClD,YAAM,UAAU,MAAM;QACpB,EAAE,OAAO,cAAc,OAAO,YAAY;QAC1C,MAAM,KAAK,KAAK,MAAM;UACpB,GAAG;UACH,OAAO,wBAACxB,OAAM,UAAU;AACtB,gBAAI,IAAIA,iBAAgB,UAAUA,MAAK,MAAMA,OAAM,MAAM,GAAG;AAC5D,mBAAO,MAAM,MAAMA,OAAM,KAAK;UAChC,GAHO;;UAKP,SAAS,2BAAI,SAAS;AACpB,uBAAW,OAAO,MAAM;AACtB,oBAAM,EAAE,KAAK,IAAI,IAAI,IAAI,KAAK,MAAM,GAAG;AACvC,mBAAK,aAAa,IAAI,IAAI;YAC5B;UACF,GALS;UAMT,QAAQ,IAAI,MAAM,MAAM,QAAQ;YAC9B,KAAK,wBAAC,QAAQ,SAAS;AACrB,kBAAI,aAAa;AACf,qBAAK,OAAO,IAAI,IAAI;cACtB;AACA,qBAAO;;gBAEL;cACF;YACF,GARK;UASP,CAAC;UACD,QAAQ,mCAAY;AAClB,gBAAI,aAAa;AACf,mBAAK,SAAS;YAChB;AACA,mBAAO,OAAO;UAChB,GALQ;UAMR,OAAO,IAAI,MAAM,MAAM,OAAO;YAC5B,KAAK,wBAAC,QAAQ,SAAS;AACrB,kBAAI,aAAa;AACf,qBAAK,QAAQ;cACf;AACA,qBAAO;;gBAEL;cACF;YACF,GARK;UASP,CAAC;UACD;UACA,QAAQ,IAAI;AACV,0BAAc;AACd,gBAAI;AACF,qBAAO,GAAG;YACZ,UAAA;AACE,4BAAc;YAChB;UACF;QACF,CAAC;MACH;AACA,aAAO;IACT,GAzDI;EA0DN,CAAC;AACD,SAAO;IACL,MAAM;IACN,MAAM,UAAU;IAChB;IACA;EACF;AACF;AAxGe;AAyGf,eAAe,UAAU;EACvB;EACA;EACA;EACA;EACA;EACA;EACA,OAAAwB;EACA;EACA;AACF,GAAG;AACD,QAAM,mBAAmB,MAAM;AAC/B,QAAM,OAAO,MAAM,WAAW;AAC9B,MAAI,CAAC,MAAM;AACT,WAAO,kBAAkB,QAAQ;EACnC;AACA,QAAM,SAAS,MAAM,YAAY;IAC/B,MAAM;IACN,YAAY;MACV,0BAA0B,KAAK,gBAAgB;MAC/C,4BAA4B,cAAc,KAAK,YAAY;MAC3D,cAAc,MAAM,MAAM,MAAM;IAClC;IACA,IAAI,8BAAO,aAAa;AACtB,YAAM,eAAe,cAAc,OAAO,QAAQ;AAClD,aAAO,MAAM;QACX,EAAE,OAAO,cAAc,OAAO,YAAY;QAC1C,MAAM,KAAK,KAAK,MAAM;UACpB,KAAK,MAAM;UACX,QAAQ,MAAM;UACd,MAAM,kBAAkB,QAAQ;UAChC,OAAO,MAAM;UACb,OAAO,uBAAuB,OAAOA,QAAO,SAAS,KAAK,YAAY;UACtE,YAAY,MAAM;UAClB,SAAS,6BAAM;UACf,GADS;UAET;UACA,SAAS,wBAAC,OAAO,GAAG,GAAX;UACT,SAAS,aAAa;QACxB,CAAC;MACH;IACF,GAlBI;EAmBN,CAAC;AACD,SAAO,UAAU;AACnB;AA5Ce;AA6Cf,SAAS,uBAAuB,OAAOA,QAAO,SAAS,KAAK,cAAc;AACxE,QAAM,kBAAkB,8BAAO,OAAO,UAAU;AAC9C,UAAM,cAAc,iBAAiB,WAAW,MAAM,OAAO,MAAM,MAAM,EAAE,OAAO;AAClF,UAAM,iBAAiB,iBAAiB,WAAW,CAAC,GAAG,MAAM,OAAO,EAAE,SAAS,IAAI,QAAQ,MAAM,OAAO,IAAI,OAAO;AACnH,QAAI,WAAW,MAAM,MAAM,MAAM,OAAO,KAAK;AAC7C,UAAM,MAAM,IAAI,IAAI,iBAAiB,UAAU,MAAM,MAAM,OAAO,MAAM,GAAG;AAC3E,UAAM,cAAc,IAAI,WAAW,MAAM,IAAI;AAC7C,QAAI;AACJ,QAAI,aAAa;AACf,UAAIA,OAAM,cAAc;AACtB,qBAAa,EAAE,UAAU,MAAM,KAAK;AACpCA,eAAM,aAAa,aAAa,IAAI,IAAI,UAAU,UAAU;MAC9D;IACF,WAAW,IAAI,aAAa,YAAY,IAAI,aAAa,SAAS;AAChE,YAAM,OAAO,iBAAiB,UAAU,MAAM,OAAO,OAAO,QAAQ;AACpE,UAAI,SAAS,WAAW;AACtB,mBAAW,IAAI,SAAS,IAAI;UAC1B,QAAQ,SAAS;UACjB,YAAY,SAAS;UACrB,SAAS,SAAS;QACpB,CAAC;MACH,OAAO;AACL,cAAM,OAAO,SAAS,QAAQ,IAAI,6BAA6B;AAC/D,YAAI,CAAC,QAAQ,SAAS,MAAM,IAAI,UAAU,SAAS,KAAK;AACtD,gBAAM,IAAI;YACR,eAAe,OAAO,cAAc,IAAI;UAC1C;QACF;MACF;IACF;AACA,QAAI;AACJ,UAAMyB,SAAQ,IAAI,MAAM,UAAU;MAChC,IAAI,WAAW,MAAM,WAAW;AAC9B,uBAAe,aAAa,OAAO,QAAQ;AACzC,gBAAM,gBAAgB,OAAO,UAAU,MAAM;AAC7C,cAAI,MAAM,aAAa,GAAG;AACxB,kBAAM,IAAI;cACR,4CAA4C,UAAU,MAAM,WAAW,OAAO,UAAU,MAAM;YAChG;UACF;AACA,kBAAQ,KAAK;YACX,KAAK,cAAc,IAAI,KAAK,MAAM,MAAM,IAAI,OAAO,MAAM,IAAI,IAAI;YACjE,QAAQ,MAAM,QAAQ;YACtB;;cAEE,iBAAiB,WAAW,cAAc,MAAM,iBAAiB,WAAW,IAAI,OAAO;;YAEzF,iBAAiB;YACjB,eAAe;YACf,UAAU;YACV;UACF,CAAC;QACH;AAnBe;AAoBf,YAAI,SAAS,QAAQ;AACnB,cAAI,UAAU,SAAS,MAAM;AAC3B,mBAAO;UACT;AACA,cAAI,WAAW;AACb,mBAAO;UACT;AACA,gBAAM,CAAC,GAAG,CAAC,IAAI,UAAU,KAAK,IAAI;AAClC,gBAAM,YAAY;AAChB,gBAAI,SAAS,IAAI,WAAW;AAC5B,6BAAiB,SAAS,GAAG;AAC3B,oBAAM,WAAW,IAAI,WAAW,OAAO,SAAS,MAAM,MAAM;AAC5D,uBAAS,IAAI,QAAQ,CAAC;AACtB,uBAAS,IAAI,OAAO,OAAO,MAAM;AACjC,uBAAS;YACX;AACA,gBAAI,YAAY;AACd,yBAAW,OAAO,IAAI,WAAW,MAAM;YACzC;AACA,iBAAK,aAAa,cAAc,MAAM,GAAG,IAAI;UAC/C,GAAG;AACH,iBAAO,YAAY;QACrB;AACA,YAAI,SAAS,eAAe;AAC1B,iBAAO,YAAY;AACjB,kBAAM,SAAS,MAAM,UAAU,YAAY;AAC3C,kBAAM,QAAQ,IAAI,WAAW,MAAM;AACnC,gBAAI,YAAY;AACd,yBAAW,OAAO;YACpB;AACA,gBAAI,kBAAkB,aAAa;AACjC,oBAAM,aAAa,cAAc,KAAK,GAAG,IAAI;YAC/C;AACA,mBAAO;UACT;QACF;AACA,uBAAe,QAAQ;AACrB,gBAAM,QAAQ,MAAM,UAAU,KAAK;AACnC,cAAI,UAAU,MAAM,iBAAiB,SAAS,UAAU,MAAM,GAAG;AAC/D,kBAAM,aAAa,QAAQ,KAAK;AAChC,mBAAO;UACT;AACA,cAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,kBAAM,aAAa,OAAO,KAAK;UACjC;AACA,cAAI,YAAY;AACd,uBAAW,OAAO;UACpB;AACA,iBAAO;QACT;AAbe;AAcf,YAAI,SAAS,QAAQ;AACnB,iBAAO;QACT;AACA,YAAI,SAAS,QAAQ;AACnB,iBAAO,YAAY;AACjB,kBAAM,QAAQ,MAAM,MAAM;AAC1B,mBAAO,QAAQ,KAAK,MAAM,KAAK,IAAI;UACrC;QACF;AACA,eAAO,QAAQ,IAAI,WAAW,MAAM,SAAS;MAC/C;IACF,CAAC;AACD,QAAI,KAAK;AACP,YAAMkC,OAAM,SAAS,QAAQ;AAC7B,eAAS,QAAQ,MAAM,CAAC,SAAS;AAC/B,cAAM,QAAQ,KAAK,YAAY;AAC/B,cAAM,QAAQA,KAAI,KAAK,SAAS,SAAS,KAAK;AAC9C,YAAI,SAAS,CAAC,MAAM,WAAW,cAAc,GAAG;AAC9C,gBAAM,WAAW,aAAa,gCAAgC,OAAO,KAAK;AAC1E,cAAI,CAAC,UAAU;AACb,kBAAM,IAAI;cACR,kCAAkC,KAAK,6IAAwI,MAAM,MAAM,EAAE;YAC/L;UACF;QACF;AACA,eAAO;MACT;IACF;AACA,WAAOlC;EACT,GAnIwB;AAoIxB,SAAO,CAAC,OAAO,UAAU;AACvB,UAAM,WAAW,gBAAgB,OAAO,KAAK;AAC7C,aAAS,MAAM,MAAM;IACrB,CAAC;AACD,WAAO;EACT;AACF;AA3IS;AA4IT,eAAe,iBAAiB,QAAQ;AACtC,MAAI,SAAS;AACb,QAAM,SAAS,OAAO,UAAU;AAChC,SAAO,MAAM;AACX,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAC1C,QAAI,MAAM;AACR;IACF;AACA,cAAU7F,cAAa,OAAO,KAAK;EACrC;AACA,SAAO;AACT;AAXe;AAYf,SAAS,QAAQ,QAAQ;AACvB,MAAI,QAAQ;AACZ,aAAW,SAAS,QAAQ;AAC1B,QAAI,OAAO,UAAU,UAAU;AAC7B,UAAI,IAAI,MAAM;AACd,aAAO,EAAG,SAAQ,QAAQ,KAAK,MAAM,WAAW,EAAE,CAAC;IACrD,WAAW,YAAY,OAAO,KAAK,GAAG;AACpC,YAAM,SAAS,IAAI,WAAW,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU;AAC9E,UAAI,IAAI,OAAO;AACf,aAAO,EAAG,SAAQ,QAAQ,KAAK,OAAO,EAAE,CAAC;IAC3C,OAAO;AACL,YAAM,IAAI,UAAU,sCAAsC;IAC5D;EACF;AACA,UAAQ,UAAU,GAAG,SAAS,EAAE;AAClC;AAfS;AAgBT,IAAMgI,gBAAe;EACnB,KAAK;EACL,UAAU;EACV,UAAU;AACZ;AACA,IAAM,UAAU,IAAI,OAAO,IAAI,OAAO,KAAKA,aAAY,EAAE,KAAK,EAAE,CAAC,KAAK,GAAG;AACzE,SAAS,eAAe,SAAS,QAAQ,eAAe,OAAO;AAC7D,QAAM,WAAW,CAAC;AAClB,MAAI,gBAAgB;AACpB,MAAI,MAAM;AACV,MAAI,UAAU;AACd,aAAW,CAAC,MAAM,KAAK,KAAK,QAAQ,SAAS,SAAS;AACpD,QAAI,OAAO,MAAM,KAAK,GAAG;AACvB,eAAS,IAAI,IAAI;IACnB;AACA,QAAI,SAAS,gBAAiB,iBAAgB;aACrC,SAAS,MAAO,OAAM;aACtB,SAAS,UAAU,MAAM,KAAK,MAAM,IAAK,WAAU;EAC9D;AACA,QAAM,UAAU;IACd,QAAQ,QAAQ,SAAS;IACzB,YAAY,QAAQ,SAAS;IAC7B,SAAS;IACT,MAAM,QAAQ;EAChB;AACA,QAAM,eAAe,KAAK,UAAU,OAAO,EAAE,QAAQ,SAAS,CAAC,UAAUA,cAAa,KAAK,CAAC;AAC5F,QAAM,QAAQ;IACZ;IACA;IACA,aAAaZ,aAAY,QAAQ,KAAK,IAAI,CAAC;EAC7C;AACA,MAAI,QAAQ,QAAQ;AAClB,UAAM,KAAK,UAAU;EACvB;AACA,MAAI,QAAQ,mBAAmB,QAAQ,cAAc;AACnD,UAAM,SAAS,CAAC;AAChB,QAAI,QAAQ,iBAAiB;AAC3B,aAAO,KAAK,CAAC,GAAG,IAAI,QAAQ,QAAQ,eAAe,CAAC,EAAE,KAAK,GAAG,CAAC;IACjE;AACA,QAAI,QAAQ,cAAc;AACxB,aAAO,KAAK,QAAQ,YAAY;IAClC;AACA,UAAM,KAAK,cAAc,KAAK,GAAG,MAAM,CAAC,GAAG;EAC7C;AACA,MAAI,CAAC,gBAAgB,QAAQ,WAAW,SAAS,iBAAiB,CAAC,SAAS;AAC1E,UAAM,QAAQ,kBAAkB,KAAK,aAAa,KAAK,iBAAiB,KAAK,aAAa;AAC1F,QAAI,OAAO;AACT,YAAM,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO;AACjC,YAAM,KAAK,aAAa,GAAG,GAAG;IAChC;EACF;AACA,SAAO,WAAW,MAAM,KAAK,GAAG,CAAC,IAAI,YAAY;AACnD;AA9CS;AA+CT,IAAM,IAAI,KAAK;AACf,SAAS,OAAO,MAAM;AACpB,MAAI,CAAC,IAAI,CAAC,EAAG,YAAW;AACxB,QAAM,MAAM,KAAK,MAAM,CAAC;AACxB,QAAM,SAAS,SAAS,IAAI;AAC5B,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,IAAI;AAC1C,UAAM,IAAI,OAAO,SAAS,GAAG,IAAI,EAAE;AACnC,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI,OAAO,IAAI,CAAC;AAChB,QAAI,OAAO,IAAI,CAAC;AAChB,QAAI,OAAO,IAAI,CAAC;AAChB,QAAI,OAAO,IAAI,CAAC;AAChB,QAAI,OAAO,IAAI,CAAC;AAChB,QAAI,OAAO,IAAI,CAAC;AAChB,QAAI,OAAO,IAAI,CAAC;AAChB,QAAI,OAAO,IAAI,CAAC;AAChB,aAAS,KAAK,GAAG,KAAK,IAAI,MAAM;AAC9B,UAAI,KAAK,IAAI;AACX,cAAM,EAAE,EAAE;MACZ,OAAO;AACL,YAAI,EAAE,KAAK,IAAI,EAAE;AACjB,YAAI,EAAE,KAAK,KAAK,EAAE;AAClB,cAAM,EAAE,KAAK,EAAE,KAAK,MAAM,IAAI,MAAM,KAAK,MAAM,IAAI,KAAK,KAAK,KAAK,OAAO,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI;MAC/J;AACA,YAAM,MAAM,QAAQ,SAAS,IAAI,SAAS,KAAK,SAAS,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,OAAO,QAAQ,OAAO,SAAS,IAAI,EAAE;AAC1I,aAAO;AACP,aAAO;AACP,aAAO;AACP,aAAO,OAAO,MAAM;AACpB,aAAO;AACP,aAAO;AACP,aAAO;AACP,aAAO,OAAO,OAAO,OAAO,QAAQ,OAAO,UAAU,SAAS,IAAI,SAAS,KAAK,SAAS,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM;IACxI;AACA,QAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO;AACzB,QAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO;AACzB,QAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO;AACzB,QAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO;AACzB,QAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO;AACzB,QAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO;AACzB,QAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO;AACzB,QAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO;EAC3B;AACA,QAAM,QAAQ,IAAI,WAAW,IAAI,MAAM;AACvC,qBAAmB,KAAK;AACxB,SAAO,KAAK,OAAO,aAAa,GAAG,KAAK,CAAC;AAC3C;AA/CS;AAgDT,IAAM,OAAO,IAAI,YAAY,CAAC;AAC9B,IAAM,MAAM,IAAI,YAAY,EAAE;AAC9B,SAAS,aAAa;AACpB,WAAS,KAAK,GAAG;AACf,YAAQ,IAAI,KAAK,MAAM,CAAC,KAAK;EAC/B;AAFS;AAGT,MAAI,QAAQ;AACZ,WAAS,IAAI,GAAG,IAAI,IAAI,SAAS;AAC/B,QAAI,WAAW;AACf,aAAS,SAAS,GAAG,SAAS,UAAU,OAAO,UAAU;AACvD,UAAI,QAAQ,WAAW,GAAG;AACxB,mBAAW;AACX;MACF;IACF;AACA,QAAI,UAAU;AACZ,UAAI,IAAI,GAAG;AACT,aAAK,CAAC,IAAI,KAAK,UAAU,IAAI,EAAE;MACjC;AACA,UAAI,CAAC,IAAI,KAAK,UAAU,IAAI,EAAE;AAC9B;IACF;EACF;AACF;AArBS;AAsBT,SAAS,mBAAmB,OAAO;AACjC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACxC,UAAM,IAAI,MAAM,IAAI,CAAC;AACrB,UAAM,IAAI,MAAM,IAAI,CAAC;AACrB,UAAMtG,KAAI,MAAM,IAAI,CAAC;AACrB,UAAM,IAAI,MAAM,IAAI,CAAC;AACrB,UAAM,IAAI,CAAC,IAAI;AACf,UAAM,IAAI,CAAC,IAAIA;AACf,UAAM,IAAI,CAAC,IAAI;AACf,UAAM,IAAI,CAAC,IAAI;EACjB;AACF;AAXS;AAYT,SAAS,SAAS,KAAK;AACrB,QAAM,UAAUf,cAAa,OAAO,GAAG;AACvC,QAAM,SAAS,QAAQ,SAAS;AAChC,QAAM,OAAO,MAAM,KAAK,MAAM,SAAS,MAAM,GAAG;AAChD,QAAM,QAAQ,IAAI,WAAW,OAAO,CAAC;AACrC,QAAM,IAAI,OAAO;AACjB,QAAM,QAAQ,MAAM,IAAI;AACxB,qBAAmB,KAAK;AACxB,QAAM,QAAQ,IAAI,YAAY,MAAM,MAAM;AAC1C,QAAM,MAAM,SAAS,CAAC,IAAI,KAAK,MAAM,SAAS,UAAU;AACxD,QAAM,MAAM,SAAS,CAAC,IAAI;AAC1B,SAAO;AACT;AAZS;AAaT,IAAM,QAAQ,IAAI,WAAW,EAAE;AAC/B,SAAS,iBAAiB;AACxB,SAAO,gBAAgB,KAAK;AAC5B,SAAO,KAAK,OAAO,aAAa,GAAG,KAAK,CAAC;AAC3C;AAHS;AAIT,IAAM,SAAyB,oBAAI,IAAI;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AACD,IAAM,iBAAiB;AACvB,IAAM,eAAN,MAAmB;SAAA;;;;EAEjB;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;;;;;;EAMA,YAAY,YAAY,YAAY,OAAO;AACzC,SAAK,cAAc;AACnB,SAAK,cAAc;AACnB,UAAM,IAAI,KAAK;AACf,SAAK,cAAc,CAAC;AACpB,SAAK,mBAAmB,CAAC;AACzB,SAAK,aAAa,CAAC;AACnB,SAAK,kBAAkB,CAAC;AACxB,SAAK,kBAAkB,CAAC;AACxB,UAAM,uBAAuB,EAAE,YAAY,KAAK,EAAE,aAAa;AAC/D,UAAM,kBAAkB,EAAE,iBAAiB;AAC3C,UAAM,sBAAsB,EAAE,WAAW,KAAK,EAAE,aAAa;AAC7D,UAAM,iBAAiB,EAAE,gBAAgB;AACzC,UAAM,iBAAiB,EAAE,gBAAgB;AACzC,UAAM,YAAY,wBAAC,cAAc,CAAC,CAAC,aAAa,CAAC,UAAU,KAAK,CAAC,UAAU,UAAU,eAAe,GAAlF;AAClB,SAAK,wBAAwB,UAAU,oBAAoB;AAC3D,SAAK,6BAA6B,UAAU,eAAe;AAC3D,SAAK,uBAAuB,UAAU,mBAAmB;AACzD,SAAK,4BAA4B,UAAU,cAAc;AACzD,SAAK,4BAA4B,UAAU,cAAc;AACzD,SAAK,oBAAoB,KAAK,yBAAyB,KAAK;AAC5D,SAAK,mBAAmB,KAAK,wBAAwB,KAAK,6BAA6B,KAAK;AAC5F,SAAK,qBAAqB,KAAK,qBAAqB,CAAC,KAAK;AAC1D,SAAK,oBAAoB,KAAK,oBAAoB,CAAC,KAAK;AACxD,SAAK,SAAS;EAChB;;EAEA,WAAW,SAAS;AAClB,QAAI,CAAC,KAAK,kBAAmB;AAC7B,UAAMmC,UAAS,KAAK,cAAc,UAAU,OAAO,OAAO,CAAC,KAAK,SAAS,KAAK,MAAM;AACpF,QAAI,KAAK,uBAAuB;AAC9B,WAAK,YAAY,KAAKA,OAAM;IAC9B;AACA,QAAI,KAAK,4BAA4B;AACnC,WAAK,iBAAiB,KAAKA,OAAM;IACnC;EACF;;EAEA,UAAU,SAAS;AACjB,QAAI,CAAC,KAAK,iBAAkB;AAC5B,UAAMA,UAAS,KAAK,cAAc,UAAU,OAAO,OAAO,CAAC,KAAK,SAAS,KAAK,MAAM;AACpF,QAAI,KAAK,sBAAsB;AAC7B,WAAK,WAAW,KAAKA,OAAM;IAC7B;AACA,QAAI,KAAK,2BAA2B;AAClC,WAAK,gBAAgB,KAAKA,OAAM;IAClC;AACA,QAAI,KAAK,2BAA2B;AAClC,YAAM,4BAA4B;AAClC,YAAM,IAAI,KAAK;AACf,UAAI,EAAE,gBAAgB,KAAK,CAAC,EAAE,gBAAgB,EAAE,SAAS,yBAAyB,KAAK,CAAC,KAAK,gBAAgB,SAAS,yBAAyB,GAAG;AAChJ,aAAK,gBAAgB,KAAK,yBAAyB;MACrD;AACA,UAAIA,YAAW,2BAA2B;AACxC,aAAK,gBAAgB,KAAKA,OAAM;MAClC;IACF;EACF;;;;EAIA,WAAW,UAAU,OAAO;AAC1B,UAAM,SAAS,CAAC;AAChB,UAAM,aAAa,EAAE,GAAG,KAAK,YAAY;AACzC,QAAI,KAAK,WAAW,SAAS,GAAG;AAC9B,iBAAW,WAAW,IAAI;QACxB,GAAG,WAAW,WAAW,KAAK,WAAW,aAAa,KAAK,CAAC;QAC5D,GAAG,KAAK;MACV;IACF;AACA,QAAI,KAAK,gBAAgB,SAAS,GAAG;AACnC,iBAAW,gBAAgB,IAAI;QAC7B,GAAG,WAAW,gBAAgB,KAAK,CAAC;QACpC,GAAG,KAAK;MACV;IACF;AACA,QAAI,KAAK,gBAAgB,SAAS,GAAG;AACnC,iBAAW,gBAAgB,IAAI;QAC7B,GAAG,WAAW,gBAAgB,KAAK,CAAC;QACpC,GAAG,KAAK;MACV;IACF;AACA,QAAI,KAAK,YAAY,SAAS,GAAG;AAC/B,iBAAW,YAAY,IAAI;QACzB,GAAG,WAAW,YAAY,KAAK,WAAW,aAAa,KAAK,CAAC;QAC7D,GAAG,KAAK;MACV;IACF;AACA,QAAI,KAAK,iBAAiB,SAAS,GAAG;AACpC,iBAAW,iBAAiB,IAAI;QAC9B,GAAG,WAAW,iBAAiB,KAAK,CAAC;QACrC,GAAG,KAAK;MACV;IACF;AACA,eAAW,QAAQ,YAAY;AAC7B,UAAI,YAAY,SAAS,qBAAqB,SAAS,gBAAgB,SAAS,YAAY;AAC1F;MACF;AACA,YAAM;;QAEJ,WAAW,IAAI;;AAEjB,UAAI,CAAC,MAAO;AACZ,YAAM,YAAY,CAAC,IAAI;AACvB,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,cAAM,QAAQ,CAAC,WAAW;AACxB,cAAI,OAAO,IAAI,MAAM,KAAK,eAAe,KAAK,MAAM,GAAG;AACrD,sBAAU,KAAK,IAAI,MAAM,GAAG;UAC9B,OAAO;AACL,sBAAU,KAAK,MAAM;UACvB;QACF,CAAC;MACH;AACA,aAAO,KAAK,UAAU,KAAK,GAAG,CAAC;IACjC;AACA,WAAO,OAAO,KAAK,IAAI;EACzB;AACF;AACA,IAAM,cAAN,cAA0B,aAAa;SAAA;;;EACrC,WAAW;AACT,UAAM,UAAU,KAAK,WAAW,IAAI;AACpC,QAAI,CAAC,SAAS;AACZ;IACF;AACA,WAAO,uDAAuDkF,aAAY,SAAS,IAAI,CAAC;EAC1F;AACF;AACA,IAAM,wBAAN,cAAoC,aAAa;SAAA;;;;;;;;EAM/C,YAAY,YAAY,YAAY,OAAO;AACzC,UAAM,YAAY,YAAY,KAAK;AACnC,QAAI,OAAO,OAAO,UAAU,EAAE,OAAO,CAAC7G,OAAM,CAAC,CAACA,EAAC,EAAE,SAAS,GAAG;AAC3D,YAAM,gBAAgB,WAAW,WAAW,GAAG,UAAU,IAAI;AAC7D,YAAM,iBAAiB,WAAW,YAAY,GAAG,UAAU,IAAI;AAC/D,UAAI,CAAC,iBAAiB,CAAC,gBAAgB;AACrC,cAAM;UACJ;QACF;MACF;IACF;EACF;AACF;AACA,IAAM,MAAN,MAAU;SAAA;;;;EAER,QAAQ,eAAe;;EAEvB;;EAEA;;;;;EAKA,YAAY,EAAE,MAAM,YAAY,WAAW,GAAG,EAAE,UAAU,GAAG;AAC3D,UAAM,aAAa,SAAS,UAAU,SAAS,UAAU;AACzD,SAAK,eAAe,IAAI,YAAY,YAAY,YAAY,KAAK,KAAK;AACtE,SAAK,uBAAuB,IAAI,sBAAsB,YAAY,YAAY,KAAK,KAAK;EAC1F;EACA,IAAI,qBAAqB;AACvB,WAAO,KAAK,aAAa,sBAAsB,KAAK,qBAAqB;EAC3E;EACA,IAAI,oBAAoB;AACtB,WAAO,KAAK,aAAa,qBAAqB,KAAK,qBAAqB;EAC1E;;EAEA,WAAW,SAAS;AAClB,SAAK,aAAa,WAAW,OAAO;AACpC,SAAK,qBAAqB,WAAW,OAAO;EAC9C;;EAEA,UAAU,SAAS;AACjB,SAAK,aAAa,UAAU,OAAO;AACnC,SAAK,qBAAqB,UAAU,OAAO;EAC7C;AACF;AACA,SAAS,KAAK,OAAO,QAAQ,UAAU;AACrC,QAAM,SAAS,CAAC;AAChB,QAAM,SAAS,MAAM,MAAM,CAAC;AAC5B,QAAM,uBAAuB,OAAO,OAAO,CAAC,UAAU,UAAU,MAAM;AACtE,MAAI,WAAW;AACf,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAG;AACzC,UAAM,QAAQ,OAAO,CAAC;AACtB,QAAI,QAAQ,OAAO,IAAI,QAAQ;AAC/B,QAAI,MAAM,WAAW,MAAM,QAAQ,UAAU;AAC3C,cAAQ,OAAO,MAAM,IAAI,UAAU,IAAI,CAAC,EAAE,OAAO,CAACsE,QAAOA,GAAE,EAAE,KAAK,GAAG;AACrE,iBAAW;IACb;AACA,QAAI,UAAU,QAAQ;AACpB,UAAI,MAAM,KAAM,QAAO,MAAM,IAAI,IAAI;AACrC;IACF;AACA,QAAI,CAAC,MAAM,WAAW,SAAS,MAAM,OAAO,EAAE,KAAK,GAAG;AACpD,aAAO,MAAM,IAAI,IAAI;AACrB,YAAM,aAAa,OAAO,IAAI,CAAC;AAC/B,YAAM,aAAa,OAAO,IAAI,CAAC;AAC/B,UAAI,cAAc,CAAC,WAAW,QAAQ,WAAW,YAAY,cAAc,MAAM,SAAS;AACxF,mBAAW;MACb;AACA,UAAI,CAAC,cAAc,CAAC,cAAc,OAAO,KAAK,MAAM,EAAE,WAAW,qBAAqB,QAAQ;AAC5F,mBAAW;MACb;AACA;IACF;AACA,QAAI,MAAM,YAAY,MAAM,SAAS;AACnC;AACA;IACF;AACA;EACF;AACA,MAAI,SAAU;AACd,SAAO;AACT;AApCS;AAqCT,SAAS,sBAAsB,OAAO,KAAKwC,WAAU;AACnD,QAAM,EAAE,QAAQ,SAAS,KAAK,IAAI;AAClC,QAAM,QAAQ,CAAC,GAAG,QAAQ,GAAG,QAAQ,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC1G,OAAM,OAAOA,OAAM,QAAQ,EAAE,IAAI,CAACA,OAAM,IAAIA,EAAC,YAAY,qBAAqB0G,UAAS,EAAE,OAAO,QAAQ1G,EAAC,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,OAAO;AAC1M,SAAO;IACL;OACG,EAAE,MAAM,EAAE,CAAC;IACd,WAAW,EAAE,MAAM,MAAM,CAAC;IAC1B,YAAY,EAAE,MAAM,OAAO,CAAC;IAC5B,SAAS,EAAE,MAAM,IAAI,CAAC;IACtB;IACA,KAAK;;;EAGP,EAAE,KAAK,MAAM;AACf;AAdS;AAeT,SAAS,qBAAqB,aAAa,KAAK;AAC9C,MAAI,CAAC,YAAa,QAAO;AACzB,MAAI,YAAY,CAAC,MAAM,KAAK;AAC1B,WAAO,WAAW,WAAW;EAC/B;AACA,MAAI,WAAW,IAAI;AACjB,WAAO,WAAW,MAAM,IAAI,WAAW;EACzC;AACA,MAAI,OAAO,kBAAkB,IAAI,UAAU,GAAG,IAAI,IAAI,WAAW,EAAE;AACnE,MAAI,KAAK,CAAC,MAAM,IAAK,QAAO,KAAK,IAAI;AACrC,SAAO,WAAW,IAAI;AACxB;AAXS;AAYT,eAAe,cAAc,eAAe,KAAK0G,WAAU;AACzD,MAAI,CAACA,UAAS,EAAE,OAAO,QAAQ;AAC7B,WAAO,KAAK,yCAAyC,EAAE,QAAQ,IAAI,CAAC;EACtE;AACA,MAAI,QAAQ;AACZ,MAAI,SAAS,CAAC;AACd,QAAM,WAAW,MAAMA,UAAS,EAAE,SAAS;AAC3C,aAAW,aAAaA,UAAS,EAAE,OAAO,QAAQ;AAChD,UAAM,QAAQ,UAAU,QAAQ,KAAK,aAAa;AAClD,QAAI,CAAC,MAAO;AACZ,UAAM,UAAU,KAAK,OAAO,UAAU,QAAQ,QAAQ;AACtD,QAAI,SAAS;AACX,cAAQ;AACR,eAAS,cAAc,OAAO;AAC9B;IACF;EACF;AACA,SAAO,+BAA+B,OAAO,QAAQ,KAAKA,SAAQ,EAAE;AACtE;AAlBe;AAmBf,SAAS,+BAA+B,OAAO,QAAQ,KAAKA,WAAU;AACpE,QAAM,WAAW,IAAI,QAAQ;IAC3B,gBAAgB;EAClB,CAAC;AACD,MAAI,OAAO;AACT,UAAM,YAAY,sBAAsB,OAAO,KAAKA,SAAQ;AAC5D,UAAM,QAAQ,GAAG,kBAAkB,OAAO,KAAKA,SAAQ,CAAC;uBACrC,SAAS,2BAA2B,KAAK,UAAU,MAAM,CAAC;AAC7E,WAAO,EAAE,UAAU,KAAK,OAAO,EAAE,SAAS,SAAS,CAAC,GAAG,MAAM,MAAM;EACrE,OAAO;AACL,WAAO,EAAE,UAAU,KAAK,IAAI,EAAE,SAAS,SAAS,CAAC,GAAG,MAAM,GAAG;EAC/D;AACF;AAZS;AAaT,SAAS,kBAAkB,OAAO,KAAKA,WAAU;AAC/C,QAAM,EAAE,QAAQ,SAAS,KAAK,IAAI;AAClC,MAAI,MAAM;AACV,aAAW,QAAQ,CAAC,GAAG,QAAQ,GAAG,QAAQ,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG;AACtE,QAAI,OAAO,SAAS,SAAU;AAC9B,UAAM,WAAWA,UAAS,EAAE,OAAO,MAAM,IAAI;AAC7C,eAAW,YAAY,YAAY,CAAC,GAAG;AACrC,aAAO,IAAI,UAAU,IAAI,IAAI,QAAQ;IACvC;EACF;AACA,MAAI,CAAC,IAAK,QAAO;AACjB,SAAO,GAAG;;IAERA,UAAS,EAAE,OAAO;IAClB;EACF,CAAC,0BAA0B,GAAG;AAChC;AAhBS;AAiBT,IAAM,UAAU;EACd,GAAG,SAAS,KAAK;EACjB,OAAO,6BAAM,OAAN;AACT;AACA,eAAe,gBAAgB;EAC7B,QAAAY;EACA;EACA,SAAS;EACT,UAAAZ;EACA,OAAAjD;EACA;EACA;EACA,OAAOoC,UAAS;EAChB;EACA;EACA;EACA;EACA;AACF,GAAG;AACD,MAAIpC,OAAM,cAAc;AACtB,QAAI,SAAS,IAAI,SAAS,SAAS;AACjC,YAAM,IAAI,MAAM,4DAA4D;IAC9E;AACA,QAAI,SAAS,6BAA6B;AACxC,YAAM,IAAI,MAAM,qEAAqE;IACvF;EACF;AACA,QAAM,EAAE,OAAO,IAAIiD,UAAS;AAC5B,QAAM,iBAAiB,IAAI,IAAI,OAAO,OAAO;AAC7C,QAAMzF,eAAc,IAAI,IAAI,OAAO,WAAW;AAC9C,QAAMH,SAAQ,IAAI,IAAI,OAAO,KAAK;AAClC,QAAM,eAA+B,oBAAI,IAAI;AAC7C,QAAM,YAA4B,oBAAI,IAAI;AAC1C,QAAM,gBAAgC,oBAAI,IAAI;AAC9C,MAAI;AACJ,QAAM,aAAa,eAAe,SAAS,aAAa,eAAe,SAAS,YAAY,cAAc,QAAQ,OAAO;AACzH,MAAI,SAAS;AACb,MAAI,WAAW;AACf,MAAI,kBAAkB,EAAE,IAAI;AAC5B;AACE,QAAI,CAAC2C,OAAM,cAAc,UAAU;AACjC,YAAM,WAAW,MAAM,IAAI,SAAS,MAAM,KAAK,MAAM,EAAE,MAAM,GAAG,EAAE,MAAM,CAAC;AACzE,eAAS,SAAS,IAAI,MAAM,IAAI,EAAE,KAAK,GAAG,KAAK;AAC/C,wBAAkB,WAAW,EAAE,MAAM,CAAC;AACtC,UAAI,CAAC,UAAU,OAAO,CAAC,MAAM,OAAO,WAAW,mBAAmB;AAChE,mBAAW;MACb;IACF,WAAW,SAAS,cAAc;AAChC,wBAAkB;IACpB;EACF;AACA,MAAI,YAAY,KAAK;AACnB,UAAM,QAAQ;MACZ,QAAQ;QACN,MAAM,SAAS,IAAI;QACnB,YAAY,SAAS,IAAI;QACzB;MACF;MACA,cAAc,MAAM,QAAQ;QAC1B6D,QAAO,IAAI,CAAC,EAAE,KAAK,MAAM;AACvB,cAAI,CAAC,KAAK,WAAW;AACnB,kBAAM,IAAI,MAAM,4CAA4C,MAAM,MAAM,EAAE,EAAE;UAC9E;AACA,iBAAO,KAAK,UAAU;QACxB,CAAC;MACH;MACA,MAAM;IACR;AACA,QAAI,QAAQ,CAAC;AACb,aAAS,IAAI,GAAG,IAAIA,QAAO,QAAQ,KAAK,GAAG;AACzC,cAAQ,EAAE,GAAG,OAAO,GAAGA,QAAO,CAAC,EAAE,KAAK;AACtC,YAAM,QAAQ,CAAC,EAAE,IAAI;IACvB;AACA,UAAM,OAAO;MACX,OAAOzB;MACP;;QAEE,MAAM;;MAER,OAAO,MAAM;MACb;MACA,KAAK,MAAM;MACX,MAAM;MACN,MAAM;MACN,OAAO,CAAC;IACV;AACA,UAAM,cAAc;MAClB,SAAyB,oBAAI,IAAI;QAC/B;UACE;UACA;YACE,MAAM,MAAM;UACd;QACF;MACF,CAAC;IACH;AACA,UAAM,SAAS,WAAW;AAC1B,QAAI;AACF,UAAI,QAAS;AACb,iBAAW,MAAM,mBAAmB,EAAE,OAAO,OAAO,YAAY,GAAG,YAAY;AAC7E,YAAI,SAAU,UAAS,EAAE,MAAM,QAAQ,QAAQ,SAAS,CAAC;AACzD,cAAM,gBAAgB,SAAS,KAAK,OAAO,OAAO,WAAW;AAC7D,cAAM,YAAY,SAAS,SAAS,UAAU;;UAE5C,cAAc,KAAK,CAACzD,OAAMA,EAAC;YACzB;AACJ,YAAI,SAAS,OAAO;AAClB,gBAAM;QACR;AACA,cAAM,EAAE,MAAM,OAAO,MAAM,OAAO,IAAI,IAAI,SAAS,QAAQ,MAAM,YAAY;AAC7E,eAAO,EAAE,MAAM,OAAO,MAAM,OAAO,IAAI;MACzC,CAAC;IACH,UAAA;AACE,YAAM;IACR;AACA,eAAW,EAAE,KAAK,KAAKkF,SAAQ;AAC7B,iBAAW,OAAO,KAAK,QAAS,gBAAe,IAAI,GAAG;AACtD,iBAAW,OAAO,KAAK,YAAarG,cAAY,IAAI,GAAG;AACvD,iBAAW,OAAO,KAAK,MAAOH,QAAM,IAAI,GAAG;AAC3C,UAAI,KAAK,iBAAiB,CAAC,OAAO,QAAQ;AACxC,eAAO,QAAQ,MAAM,KAAK,cAAc,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAGlB,EAAC,MAAM,cAAc,IAAI,GAAGA,EAAC,CAAC;MACxF;IACF;EACF,OAAO;AACL,eAAW,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK,EAAE,MAAM,IAAI,KAAK,KAAK,EAAE;EAChE;AACA,MAAI,OAAO;AACX,MAAI,QAAQ,SAAS;AACrB,QAAM,MAAM,IAAI,IAAI,SAAS,KAAK;IAChC,WAAW,CAAC,CAAC6D,OAAM;EACrB,CAAC;AACD,QAAM,WAAW,wBAAC,SAAS;AACzB,QAAI,KAAK,WAAW,GAAG,GAAG;AACxB,aAAO,OAAO;IAChB;AACA,WAAO,GAAG,QAAQ,IAAI,IAAI;EAC5B,GALiB;AAMjB,QAAM,QAAQ,OAAO,SAAS,OAAO,QAAQ,QAAQ,MAAM,KAAK,cAAc,OAAO,CAAC,EAAE,KAAK,IAAI;AACjG,MAAI,OAAO;AACT,UAAMrC,cAAa,CAAC;AACpB,QAAI,IAAI,kBAAmBA,aAAW,KAAK,WAAW,IAAI,KAAK,GAAG;AAClE,QAAI,UAAU,KAAK;AACnB,YAAQ;SACHA,YAAW,KAAK,EAAE,CAAC,IAAI,KAAK;EACnC;AACA,aAAW,OAAOH,cAAa;AAC7B,UAAM,OAAO,SAAS,GAAG;AACzB,UAAMG,cAAa,CAAC,kBAAkB;AACtC,QAAI,cAAc,IAAI,GAAG,GAAG;AAC1BA,kBAAW,KAAK,YAAY,wBAAwB;IACtD,OAAO;AACL,UAAI,aAAa,QAAQ,EAAE,MAAM,OAAO,KAAK,CAAC,GAAG;AAC/C,qBAAa,IAAI,IAAI,UAAU,IAAI,CAAC,sCAAsC;MAC5E;IACF;AACA,YAAQ;gBACI,IAAI,KAAKA,YAAW,KAAK,GAAG,CAAC;EAC3C;AACA,aAAW,OAAON,QAAO;AACvB,UAAM,OAAO,SAAS,GAAG;AACzB,QAAI,aAAa,QAAQ,EAAE,MAAM,QAAQ,KAAK,CAAC,GAAG;AAChD,YAAM,MAAM,IAAI,MAAM,IAAI,YAAY,GAAG,IAAI,CAAC;AAC9C,gBAAU,IAAI,4CAA4C,GAAG,WAAW,IAAI,gBAAgB;AAC5F,mBAAa;QACX,IAAI,UAAU,IAAI,CAAC,2CAA2C,GAAG;MACnE;IACF;EACF;AACA,QAAML,UAAS,gBAAgB,QAAQ;AACvC,QAAM,EAAE,MAAM,OAAO,IAAI,gBAAgB,SAAS,GAAG;AACrD,MAAI,YAAY,OAAO,YAAY,KAAK;AACtC,aAAS;KACR,QAAQ;MACP,CAAC,SAAS,eAAe,MAAM,aAAa,iCAAiC,CAAC,CAACgD,OAAM,YAAY;IACnG,EAAE,KAAK,OAAO,CAAC;EACjB;AACA,MAAI,YAAY,KAAK;AACnB,UAAM,QAAQiD,UAAS,EAAE,OAAO,QAAQ,KAAK,CAACtE,OAAMA,GAAE,OAAO,MAAM,MAAM,EAAE,KAAK;AAChF,QAAI,OAAO,2BAA2BqB,OAAM,cAAc;AACxD,qBAAe,IAAI,GAAG,OAAO,SAAS;IACxC;AACA,QAAI,CAAC,OAAO,QAAQ;AAClB,YAAM,0BAA0B,MAAM,KAAK,gBAAgB,CAAC,QAAQ,SAAS,GAAG,CAAC,EAAE;QACjF,CAAC,SAAS,aAAa,QAAQ,EAAE,MAAM,MAAM,KAAK,CAAC;MACrD;AACA,iBAAW,QAAQ,yBAAyB;AAC1C,qBAAa,IAAI,IAAI,UAAU,IAAI,CAAC,gCAAgC;AACpE,YAAI,SAAS,qBAAqB,iBAAiB;AACjD,kBAAQ;kEACgD,IAAI;QAC9D,OAAO;AACL,oBAAU,IAAI,mCAAmC,IAAI,IAAI;QAC3D;MACF;IACF;AACA,QAAIA,OAAM,gBAAgB,UAAU,OAAO,GAAG;AAC5C,cAAQ,MAAM,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ;IAC7C,GAAG,EAAE,EAAE,KAAK,EAAE;IACd;AACA,QAAIiD,UAAS,EAAE,OAAO,UAAUjD,OAAM,gBAAgB,CAACA,OAAM,aAAa,UAAU;AAClF,YAAM,WAAWsD,uBAAsB,MAAM,IAAI,QAAQ;AACzDtD,aAAM,aAAa,aAAa;QAC9B;QACA,+BAA+B,OAAO,MAAM,QAAQ,IAAI,IAAI,UAAU,MAAM,GAAG,GAAGiD,SAAQ;MAC5F;IACF;AACA,UAAM,SAAS,CAAC;AAChB,UAAM,mBAAmB,OAAO,2BAA2BjD,OAAM;AACjE,UAAM,aAAa,CAAC,SAAS,eAAe,EAAE;AAC9C,QAAI,QAAQ;AACV,iBAAW,KAAK,WAAW,EAAE,MAAM,CAAC,EAAE;IACxC;AACA,QAAI,OAAO,yBAAyB;AAClC,iBAAW,KAAK,QAAQ,mBAAmB,SAAS,EAAE,UAAU,CAAC,EAAE;IACrE;AACA,QAAI,QAAQ;AACV,aAAO,KAAK,6BAA6B;AACzC,iBAAW,KAAK;;SAEb;AACH,UAAI,kBAAkB;AACtB,UAAI,OAAO,KAAK,SAAS,MAAM,SAAS,EAAE,SAAS,GAAG;AACpD,YAAI,OAAO,QAAQ;AACjB,4BAAkB,2BAA2B,SAAS,YAAY;QACpE,WAAW,OAAO,KAAK;AACrB,4BAAkB,4BAA4B,EAAE,SAAS,OAAO,GAAG,CAAC,CAAC;QACvE,OAAO;AACL,4BAAkB,gCAAgC,EAAE,SAAS,OAAO,KAAK,CAAC,CAAC;QAC7E;MACF;AACA,YAAM,UAAU,kBAAkB,GAAG,eAAe;yCACjB;AACnC,iBAAW,KAAK;SACb,OAAO;;;;;;;;;;;;;QAaR;IACJ;AACA,WAAO,KAAK,GAAGhD,OAAM;QACjB,WAAW,KAAK,WAAW,CAAC;QAC5B;AACJ,UAAM,OAAO,CAAC,SAAS;AACvB,WAAO,KAAK,uDAAuD;AACnE,QAAI,YAAY,KAAK;AACnB,YAAM,aAAa,EAAE,MAAM,QAAQ,OAAO,OAAO;AACjD,UAAI,YAAY;AACd,mBAAW,OAAO;UAChB;;UAEA,MAAM,MAAM;UACZ,SAAS,MAAM;QACjB;MACF;AACA,UAAIoF,SAAQ;AACV,mBAAW,QAAQ,OAAOA,OAAM;MAClC;AACA,YAAMN,WAAU;QACd,cAAc+B,QAAO,IAAI,CAAC,EAAE,KAAK,MAAM,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC;QAC7D,SAAS,IAAI;QACb,SAAS,WAAW,IAAI;QACxB,UAAU,WAAW,KAAK;MAC5B;AACA,UAAI,WAAW,KAAK;AAClB/B,iBAAQ,KAAK,WAAW,MAAM,EAAE;MAClC;AACA,UAAImB,UAAS,EAAE,OAAO,QAAQ;AAC5B,YAAI,OAAO;AACT,gBAAM,cAAc,sBAAsB,OAAO,MAAM,KAAKA,SAAQ,EAAE;YACpE;YACA;UACF;AACAnB,mBAAQ,KAAK,WAAW,OAAO,MAAM,MAAM,CAAC,IAAI,iBAAiB,WAAW,EAAE;QAChF;MACF,WAAW,SAAS,UAAU;AAC5BA,iBAAQ,KAAK,WAAW,OAAO,MAAM,MAAM,CAAC,IAAI,UAAU,EAAE,MAAM,KAAK,CAAC,EAAE;MAC5E;AACA,YAAM,SAAS,IAAI,OAAO,mBAAmB,IAAI,CAAC;AAClD,WAAK,KAAK;EACd,MAAM,IAAIA,SAAQ,KAAK;EACvB,MAAM,GAAG,CAAC;EACV,MAAM,GAAG;IACP;AACA,UAAM,EAAE,aAAa,aAAa,IAAI;AACtC,QAAI,yBAAyB;AAC7B,QAAI,cAAc;AAChB,YAAM,SAAS,CAAC;AAChB,iBAAW,CAACtD,OAAM,KAAK,KAAK,cAAc;AACxC,YAAI,CAACA,MAAK,GAAI;AACd,mBAAW,QAAQ,OAAO;AACxB,iBAAO,wBAAwBA,MAAK,IAAI,IAAI,CAAC,IAAI,MAAM,MAAM,IAAI;QACnE;MACF;AACA,YAAM,WAAW,wBAAC,UAAU;AAC1B,mBAAW,QAAQ,SAAS,MAAM,WAAW;AAC3C,gBAAM,UAAU,SAAS,MAAM,UAAU,IAAI,EAAE,OAAO,KAAK;AAC3D,cAAI,SAAS;AACX,mBAAO,eAAe,IAAI,MAAM,OAAO,SAAS,QAAQ,CAAC;UAC3D;QACF;MACF,GAPiB;AAQjB,+BAAyB,GAAGxB,OAAM,WAAW,OAAO,QAAQ,QAAQ,CAAC;;;IAGvE;AACA,UAAM,OAAO,OAAO,SAAS,GAAG,OAAO,OAAO,MAAM;;OAEjD,sBAAsB,GAAGA,OAAM,cAAc,KAAK,KAAK,IAAI,CAAC,OAAO,OAAO,MAAM;eACxE,EAAE,SAAS,OAAO,KAAK,CAAC,CAAC;eACzB,EAAE,SAAS,OAAO,GAAG,CAAC,CAAC;;QAE9B,sBAAsB,kBAAkB,KAAK,KAAK,IAAI,CAAC;YACnD,UAAU,EAAE,SAAS,OAAO,KAAK,CAAC,CAAC;QACvC,sBAAsB,aAAa,KAAK,KAAK,IAAI,CAAC;;AAEtD,QAAI,kBAAkB;AACpB,aAAO,KAAK,UAAU,EAAE,GAAG,MAAM,IAAI,OAAO,SAAS,CAAC;QACpDA,OAAM;;QAEN,KAAK,QAAQ,OAAO,KAAK,CAAC;SACzB;IACL,OAAO;AACL,aAAO,KAAK,IAAI;IAClB;AACA,QAAI,SAAS,gBAAgB;AAC3B,UAAI,OAAO;AACX,UAAI,SAAS,0BAA0B,MAAM;AAC3C,cAAM,yBAAyB,EAAE,GAAG,SAAS,uBAAuB;AACpE,eAAO,KAAK,EAAE,sBAAsB,CAAC;MACvC;AACA,aAAO,KAAK;;2CAEyB,SAAS,mBAAmB,CAAC,IAAI,IAAI;;OAEzE;IACH;AACA,UAAM,WAAW;;OAEd,OAAO,KAAK,WAAW,CAAC;;;AAG3B,QAAI,WAAW,QAAQ;AACvB,aAAS;YACD,IAAI,qBAAqB,WAAW,IAAI,KAAK,MAAM,EAAE,IAAI,QAAQ;;EAE3E;AACA,QAAM,WAAW,IAAI,QAAQ;IAC3B,oBAAoB;IACpB,gBAAgB;EAClB,CAAC;AACD,MAAIgD,OAAM,cAAc;AACtB,UAAM,aAAa,CAAC;AACpB,UAAM,cAAc,IAAI,aAAa,SAAS;AAC9C,QAAI,aAAa;AACf,iBAAW,KAAK,WAAW;IAC7B;AACA,QAAIA,OAAM,aAAa,OAAO;AAC5B,iBAAW,KAAK,6CAA6CA,OAAM,aAAa,KAAK,IAAI;IAC3F;AACA,QAAI,WAAW,SAAS,GAAG;AACzB,aAAO,WAAW,KAAK,IAAI,IAAI;IACjC;EACF,OAAO;AACL,UAAM,aAAa,IAAI,aAAa,WAAW;AAC/C,QAAI,YAAY;AACd,eAAS,IAAI,2BAA2B,UAAU;IACpD;AACA,UAAM,qBAAqB,IAAI,qBAAqB,WAAW;AAC/D,QAAI,oBAAoB;AACtB,eAAS,IAAI,uCAAuC,kBAAkB;IACxE;AACA,QAAI,aAAa,MAAM;AACrB,eAAS,IAAI,QAAQ,MAAM,KAAK,YAAY,EAAE,KAAK,IAAI,CAAC;IAC1D;EACF;AACA,UAAQ,SAAS;AACjB,QAAM,OAAO,SAAS,UAAU,IAAI;IAClC;IACA,MAAM;IACN,QAAQ;IACR;;MAEE,IAAI;;IAEN,KAAK;EACP,CAAC;AACD,QAAM,cAAc,MAAM,aAAa,mBAAmB;IACxD;IACA,MAAM;EACR,CAAC,KAAK;AACN,MAAI,CAAC,QAAQ;AACX,aAAS,IAAI,QAAQ,IAAI,KAAK,WAAW,CAAC,GAAG;EAC/C;AACA,SAAO,CAAC,SAAS,KAAK,aAAa;IACjC;IACA,SAAS;EACX,CAAC,IAAI,IAAI;IACP,IAAI,eAAe;MACjB,MAAM,MAAM0C,aAAY;AACtBA,oBAAW,QAAQ/G,cAAa,OAAO,cAAc,IAAI,CAAC;AAC1D,yBAAiB,SAAS,QAAQ;AAChC+G,sBAAW,QAAQ/G,cAAa,OAAO,KAAK,CAAC;QAC/C;AACA+G,oBAAW,MAAM;MACnB;MACA,MAAM;IACR,CAAC;IACD;MACE,SAAS;IACX;EACF;AACF;AAhae;AAiaf,IAAM,YAAN,MAAgB;SAAA;;;EACd;;;;EAIA,YAAY,OAAO;AACjB,SAAK,OAAO;EACd;EACA,UAAU;AACR,WAAO,KAAK,KAAK,MAAM,GAAG,EAAE;EAC9B;EACA,OAAO;AACL,WAAO,KAAK,KAAK,GAAG,EAAE;EACxB;EACA,WAAW;AACT,eAAW,UAAU,KAAK,QAAQ,GAAG;AACnC,UAAI,QAAQ;AACV;UACE,OAAO;;UAEP,OAAO;QACT;AACA;UACE,OAAO;;UAEP,OAAO;QACT;MACF;IACF;AACA,UAAME,QAAO,KAAK,KAAK;AACvB,QAAIA,OAAM;AACR;QACEA,MAAK;;QAELA,MAAK;MACP;AACA;QACEA,MAAK;;QAELA,MAAK;MACP;IACF;EACF;;;;;;EAMA,YAAY,QAAQ;AAClB,WAAO,KAAK,KAAK;MACf,CAAC,OAAO,SAAS;AACf,eAAO,MAAM,YAAY,MAAM,KAAK,MAAM,SAAS,MAAM,KAAK;MAChE;;MAEA;IACF;EACF;EACA,MAAM;AACJ,WAAO,KAAK,YAAY,KAAK,KAAK;EACpC;EACA,MAAM;AACJ,WAAO,KAAK,YAAY,KAAK,KAAK;EACpC;EACA,YAAY;AACV,WAAO,KAAK,YAAY,WAAW,KAAK;EAC1C;EACA,iBAAiB;AACf,WAAO,KAAK,YAAY,eAAe,KAAK;EAC9C;EACA,aAAa;AACX,QAAI,WAAW,CAAC;AAChB,eAAW,QAAQ,KAAK,MAAM;AAC5B,UAAI,CAAC,MAAM,WAAW,UAAU,CAAC,MAAM,QAAQ,OAAQ;AACvD,iBAAW;QACT,GAAG;;QAEH,GAAG,MAAM,WAAW;QACpB,GAAG,MAAM,QAAQ;MACnB;IACF;AACA,WAAO,OAAO,KAAK,QAAQ,EAAE,SAAS,WAAW;EACnD;EACA,wBAAwB;AACtB,WAAO,KAAK,KAAK;;MAEf,CAAC,SAAS,MAAM,QAAQ,QAAQ,MAAM,QAAQ,kBAAkB;IAClE;EACF;AACF;AACA,eAAe,mBAAmB;EAChC;EACA;EACA,SAAS;EACT,UAAAK;EACA,OAAAjD;EACA;EACA,OAAOoC;EACP;AACF,GAAG;AACD,MAAI,MAAM,QAAQ,QAAQ,IAAI,mBAAmB,GAAG;AAClD,WAAO;MACL;MACA;;MAEAA,QAAO;IACT;EACF;AACA,QAAM,UAAU,CAAC;AACjB,MAAI;AACF,UAAMyB,UAAS,CAAC;AAChB,UAAM,iBAAiB,MAAMZ,UAAS,EAAE,MAAM,CAAC,EAAE;AACjD,UAAM,QAAQ,IAAI,UAAU,CAAC,cAAc,CAAC;AAC5C,UAAM,MAAM,MAAM,IAAI;AACtB,UAAM,MAAM,MAAM,IAAI;AACtB,UAAM,kBAAkB,uBAAuB,OAAO,aAAa,QAAQ;AAC3E,QAAI,KAAK;AACPjD,aAAM,QAAQ;AACd,YAAM,sBAAsB,iBAAiB;QAC3C;QACA;QACA,OAAAA;QACA,MAAM;;QAEN,QAAQ,oCAAa,CAAC,IAAd;MACV,CAAC;AACD,YAAM,cAAc,MAAM;AAC1B,sBAAgB,SAAS,GAAG,WAAW;AACvC,YAAM,OAAO,MAAM,UAAU;QAC3B;QACA;QACA;QACA,MAAM;;QAEN,QAAQ,oCAAa,CAAC,IAAd;QACR;QACA;QACA,OAAAA;QACA;MACF,CAAC;AACD6D,cAAO;QACL;UACE,MAAM;UACN;UACA;QACF;QACA;UACE,MAAM,MAAMZ,UAAS,EAAE,MAAM,CAAC,EAAE;;UAEhC,MAAM;UACN,aAAa;QACf;MACF;IACF;AACA,WAAO,MAAM,gBAAgB;MAC3B,SAAS;MACT,UAAAA;MACA,OAAAjD;MACA,aAAa;QACX;QACA;MACF;MACA;MACA,OAAO,MAAM,yBAAyB,OAAO,aAAa,UAAUoC,OAAM;MAC1E,QAAAyB;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;EACH,SAASxH,IAAG;AACV,QAAIA,cAAa,UAAU;AACzB,aAAO,kBAAkBA,GAAE,QAAQA,GAAE,QAAQ;IAC/C;AACA,WAAO;MACL;MACA,WAAWA,EAAC;OACX,MAAM,yBAAyB,OAAO,aAAa,UAAUA,EAAC,GAAG;IACpE;EACF;AACF;AA3Fe;AA4Ff,eAAe,mBAAmB,OAAO2D,QAAO,UAAUiD,WAAU,IAAI;AACtE,SAAO,YAAY;IACjB,MAAM;IACN,YAAY,CAAC;IACb,IAAI,wBAAC,aAAa;AAChB,YAAM,eAAe,cAAc,OAAO,QAAQ;AAClD,aAAO;QACL,EAAE,OAAO,cAAc,OAAAjD,OAAM;QAC7B,MAAM,4BAA4B,cAAcA,QAAO,UAAUiD,WAAU,EAAE;MAC/E;IACF,GANI;EAON,CAAC;AACH;AAZe;AAaf,eAAe,4BAA4B,OAAOjD,QAAO,UAAUiD,WAAU,IAAI;AAC/E,QAAM,CAAC,OAAO,MAAM,eAAe,IAAI,GAAG,MAAM,GAAG;AACnD,QAAM,UAAUA,UAAS,EAAE;AAC3B,MAAI,CAAC,QAAQ,KAAK,EAAG,CAAArG,OAAM,GAAG;AAC9B,QAAM,SAAS,MAAM,QAAQ,KAAK,EAAE;AACpC,QAAM,KAAK,OAAO,QAAQ,IAAI;AAC9B,MAAI,CAAC,GAAI,CAAAA,OAAM,GAAG;AAClB,QAAM4B,QAAO,GAAG;AAChB,QAAM,YAAY,SAAS,MAAM;AACjC,QAAM,QAAQ,QAAQ,cAAc;IAClC,8BAA8BA,MAAK;IACnC,8BAA8BA,MAAK;EACrC,CAAC;AACD,MAAI;AACJ,MAAI;AACF,QAAIA,MAAK,SAAS,eAAe;AAC/B,UAAI,MAAM,QAAQ,WAAW,QAAQ;AACnC,cAAM,IAAI;UACR;UACA;UACA,mEAAmE,MAAM,QAAQ,MAAM;QACzF;MACF;AACA,YAAM,EAAE,SAAS,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC9C,YAAM,OAAO,SAAS,IAAI,CAAC,aAAa,iBAAiB,UAAU,SAAS,CAAC;AAC7E,YAAM,aAAa,MAAM,mBAAmB,EAAE,OAAO,OAAAwB,OAAM,GAAG,MAAMxB,MAAK,IAAI,IAAI,CAAC;AAClF,YAAM,UAAU,MAAM,QAAQ;QAC5B,KAAK,IAAI,OAAO,KAAK,MAAM;AACzB,cAAI;AACF,mBAAO,EAAE,MAAM,UAAU,MAAM,WAAW,KAAK,CAAC,EAAE;UACpD,SAAS4D,SAAQ;AACf,mBAAO;cACL,MAAM;cACN,OAAO,MAAM,yBAAyB,OAAOpC,QAAO,UAAUoC,OAAM;cACpE,QAAQA,mBAAkB,aAAaA,mBAAkB,iBAAiBA,QAAO,SAAS;YAC5F;UACF;QACF,CAAC;MACH;AACA,aAAO;;QAEL;UACE,MAAM;UACN,QAAQ,UAAY,SAAS,SAAS;QACxC;MACF;IACF;AACA,QAAI5D,MAAK,SAAS,QAAQ;AACxB,UAAI,MAAM,QAAQ,WAAW,QAAQ;AACnC,cAAM,IAAI;UACR;UACA;UACA,4DAA4D,MAAM,QAAQ,MAAM;QAClF;MACF;AACA,UAAI,CAAC,qBAAqB,MAAM,OAAO,GAAG;AACxC,cAAM,IAAI;UACR;UACA;UACA,+DAA0D,MAAM,QAAQ,QAAQ;YAC9E;UACF,CAAC;QACH;MACF;AACA,YAAM,YAAY,MAAM,MAAM,QAAQ,SAAS;AAC/C;MACA,KAAK;;QAEH,UAAU,IAAI,4BAA4B,KAAK;MACjD;AACA,gBAAU,OAAO,4BAA4B;AAC7C,UAAI,iBAAiB;AACnB,kBAAU,IAAI,gBAAgB,mBAAmB,eAAe,CAAC;MACnE;AACA,YAAM,MAAMA,MAAK;AACjB,YAAM,QAAQ,MAAM,mBAAmB,EAAE,OAAO,OAAAwB,OAAM,GAAG,MAAM,IAAI,SAAS,CAAC;AAC7E,aAAO;;QAEL;UACE,MAAM;UACN,QAAQ,UAAY,OAAO,SAAS;UACpC,WAAW,MAAM,SAAS,CAAC,IAAI,MAAM,oBAAoB,qBAAqB;QAChF;MACF;IACF;AACA,QAAIxB,MAAK,SAAS,WAAW;AAC3B,YAAM,EAAE,SAAS,UAAU,UAAU,IAAI,MAAM,MAAM,QAAQ,KAAK;AAClE,YAAM,MAAM,iBAAiB,UAAU,SAAS;AAChD,YAAM,QAAQ,MAAM,mBAAmB,EAAE,OAAO,OAAAwB,OAAM,GAAG,MAAM,GAAG,GAAG,CAAC;AACtE,aAAO;;QAEL;UACE,MAAM;UACN,QAAQ,UAAY,OAAO,SAAS;UACpC,WAAW,MAAM,oBAAoB,SAAS;QAChD;MACF;IACF;AACA,UAAM,UAAUxB,MAAK,SAAS,cAAc;;;MAG1C,IAAI,IAAI,MAAM,QAAQ,GAAG,EAAE,aAAa,IAAI,SAAS;;AAEvD,UAAM,OAAO,MAAM;MACjB,EAAE,OAAO,OAAAwB,OAAM;MACf,MAAM,GAAG,iBAAiB,SAAS,SAAS,CAAC;IAC/C;AACA,WAAO;;MAEL;QACE,MAAM;QACN,QAAQ,UAAY,MAAM,SAAS;MACrC;IACF;EACF,SAASoC,SAAQ;AACf,QAAIA,mBAAkB,UAAU;AAC9B,aAAO;;QAEL;UACE,MAAM;UACN,UAAUA,QAAO;UACjB,WAAW,MAAM,oBAAoB,yBAAyB,CAAC,CAAC;QAClE;MACF;IACF;AACA,UAAM,SAASA,mBAAkB,aAAaA,mBAAkB,iBAAiBA,QAAO,SAAS;AACjG,WAAO;;MAEL;QACE,MAAM;QACN,OAAO,MAAM,yBAAyB,OAAOpC,QAAO,UAAUoC,OAAM;QACpE;MACF;MACA;;;QAGE,QAAQpC,OAAM,eAAe,SAAS;QACtC,SAAS;UACP,iBAAiB;QACnB;MACF;IACF;EACF;AACA,iBAAe,oBAAoB,kBAAkB;AACnD,UAAM,YAAYA,OAAM,aAAa,CAAC;AACtC,eAAW,QAAQ,kBAAkB;AACnC,UAAI,UAAU,IAAI,MAAM,OAAQ;AAChC,YAAM,CAAC,OAAO,OAAO,OAAO,IAAI,KAAK,MAAM,GAAG;AAC9C,YAAM,SAASiD,UAAS,EAAE,QAAQ,KAAK;AACvC,YAAM,OAAO,MAAM,SAAS,IAAI,UAAU,KAAK;AAC/C,UAAI,CAAC,IAAK,CAAArG,OAAM,KAAK,aAAa;AAClC,gBAAU,IAAI,IAAI;QAChB,EAAE,OAAO,OAAAoD,OAAM;QACf,MAAM,IAAI,iBAAiB,SAAS,SAAS,CAAC;MAChD;IACF;AACA,QAAI,OAAO,KAAK,SAAS,EAAE,WAAW,GAAG;AACvC,aAAO;IACT;AACA,WAAO;MACL,OAAO;QACL,MAAM,QAAQ;UACZ,OAAO,QAAQ,SAAS,EAAE,IAAI,OAAO,CAAC,MAAM,OAAO,MAAM,CAAC,MAAM,MAAM,OAAO,CAAC;QAChF;MACF;MACA;IACF;EACF;AAxBe;AAyBjB;AAxKe;AAyKf,eAAe,wBAAwB,OAAOA,QAAOiD,WAAU,IAAI;AACjE,SAAO,YAAY;IACjB,MAAM;IACN,YAAY,CAAC;IACb,IAAI,wBAAC,aAAa;AAChB,YAAM,eAAe,cAAc,OAAO,QAAQ;AAClD,aAAO;QACL,EAAE,OAAO,cAAc,OAAAjD,OAAM;QAC7B,MAAM,iCAAiC,cAAcA,QAAOiD,WAAU,EAAE;MAC1E;IACF,GANI;EAON,CAAC;AACH;AAZe;AAaf,eAAe,iCAAiC,OAAOjD,QAAOiD,WAAU,IAAI;AAC1E,QAAM,CAAC,OAAO,MAAM,SAAS,IAAI,GAAG,MAAM,GAAG;AAC7C,QAAM,UAAUA,UAAS,EAAE;AAC3B,QAAM,SAAS,MAAM,QAAQ,KAAK,IAAI;AACtC,MAAI;;IAEF,QAAQ,QAAQ,IAAI;;AAEtB,MAAI,CAAC,MAAM;AACT,UAAM,WAAW;;;MAGf,OAAO;IACT,CAAC;AACD,WAAO;MACL,MAAM;MACN,OAAO,IAAI;QACT;QACA;QACA,sDAAsD,WAAW;MACnE;IACF;EACF;AACA,MAAI,WAAW;AACb,WAAO,mBAAmB,EAAE,OAAO,OAAAjD,OAAM,GAAG,MAAM,KAAK,IAAI,KAAK,MAAM,SAAS,CAAC,CAAC;EACnF;AACA,MAAI;AACF,UAAM,YAAY,MAAM,MAAM,QAAQ,SAAS;AAC/C,UAAM;;;MAGJ,KAAK,GAAG;;AAEV,QAAI,aAAa,CAAC,UAAU,IAAI,IAAI,GAAG;AACrC,gBAAU,IAAI,gBAAgB,mBAAmB,SAAS,CAAC;IAC7D;AACA,UAAM,mBAAmB,EAAE,OAAO,OAAAA,OAAM,GAAG,MAAM,GAAG,SAAS,CAAC;AAC9D,WAAO;MACL,MAAM;MACN,QAAQ;IACV;EACF,SAAS3D,IAAG;AACV,UAAM,MAAM,gBAAgBA,EAAC;AAC7B,QAAI,eAAe,UAAU;AAC3B,aAAO;QACL,MAAM;QACN,QAAQ,IAAI;QACZ,UAAU,IAAI;MAChB;IACF;AACA,WAAO;MACL,MAAM;MACN,OAAO,yBAAyB,GAAG;IACrC;EACF;AACF;AAvDe;AAwDf,SAAS,cAAc,KAAK;AAC1B,SAAO,IAAI,SAAS,WAAW,GAAG,IAAI,IAAI,OAAO,UAAU,KAAK,IAAI,SAAS,QAAQ,GAAG,IAAI,IAAI,OAAO,YAAY,EAAE;AACvH;AAFS;AAGT,SAAS,kBAAkB,KAAK;AAC9B,SAAO,IAAI,aAAa,IAAI,SAAS;AACvC;AAFS;AAGT,IAAM,YAAY;AAClB,eAAe,YAAY,OAAO,aAAauG,OAAM,UAAUK,WAAUjD,QAAO,OAAO,cAAc;AACnG,MAAIA,OAAM,QAAQ,WAAW;AAC3B,WAAO,KAAK,cAAc,MAAM,IAAI,QAAQ,IAAI;MAC9C,QAAQ;;IAEV,CAAC;EACH;AACA,MAAI,uBAAuB,KAAK,GAAG;AACjC,UAAM,OAAO,MAAMiD,UAAS,EAAE,MAAML,MAAK,IAAI,EAAE;AAC/C,WAAO,2BAA2B,OAAO,aAAa,UAAU,MAAM,MAAM;EAC9E;AACA,MAAI;AACF,UAAM;;MAEJ,MAAM,KAAK;;AAEb,QAAI,SAAS;AACb,QAAI,gBAAgB;AACpB,QAAI,kBAAkB,KAAK,GAAG;AAC5B,YAAM,YAAY,kBAAkB,MAAM,GAAG;AAC7C,UAAI,WAAW;AACb,wBAAgB,MAAM,wBAAwB,OAAO,aAAaK,WAAU,SAAS;MACvF,OAAO;AACL,wBAAgB,MAAM,sBAAsB,OAAO,aAAa,UAAU,MAAM;MAClF;AACA,UAAI,eAAe,SAAS,YAAY;AACtC,eAAO,kBAAkB,cAAc,QAAQ,cAAc,QAAQ;MACvE;AACA,UAAI,eAAe,SAAS,SAAS;AACnC,iBAAS,WAAW,cAAc,KAAK;MACzC;AACA,UAAI,eAAe,SAAS,WAAW;AACrC,iBAAS,cAAc;MACzB;IACF;AACA,UAAM,mBAAmB,MAAM,UAAU;AACzC,QAAI,kBAAkB;AACpB,YAAM,MAAM,UAAU;AACtB,UAAI,KAAK,SAAS;AAChB,cAAM,IAAI,MAAM,qCAAqC;MACvD;IACF,WAAWjD,OAAM,cAAc;AAC7B,aAAO,IAAI,SAAS,QAAQ;QAC1B,QAAQ;MACV,CAAC;IACH;AACAA,WAAM,oBAAoB;AAC1B,UAAM,wBAAwB,MAAM,sBAAsB;AAC1D,UAAM,gBAAgBmD,iBAAgB,MAAM,IAAI,QAAQ;AACxD,UAAM,UAAU,CAAC;AACjB,UAAM,MAAM,MAAM,IAAI;AACtB,UAAM,MAAM,MAAM,IAAI;AACtB,QAAI,QAAQ,SAAS,EAAEnD,OAAM,gBAAgB,wBAAwB;AACnE,UAAI,WAAW,iBAAiB,CAAC,MAAM,QAAQ,QAAQ,IAAI,oBAAoB,EAAG;AAClF,aAAO,MAAM,gBAAgB;QAC3B,QAAQ,CAAC;QACT;QACA,aAAa;UACX,KAAK;UACL;QACF;QACA;QACA,OAAO;QACP;QACA;QACA,SAAS;QACT,UAAAiD;QACA,OAAAjD;QACA;QACA,iBAAiB,uBAAuB,OAAO,aAAa,QAAQ;MACtE,CAAC;IACH;AACA,UAAM6D,UAAS,CAAC;AAChB,QAAI,aAAa;AACjB,UAAM,kBAAkB,uBAAuB,OAAO,aAAa,QAAQ;AAC3E,UAAM,uBAAuB7D,OAAM,gBAAgB,wBAAwB,4BAA4B,OAAO,aAAa,QAAQ,IAAI;AACvI,UAAM,kBAAkB,MAAM,KAAK,IAAI,CAAC,MAAM,MAAM;AAClD,UAAI,YAAY;AACd,cAAM;MACR;AACA,aAAO,QAAQ,QAAQ,EAAE,KAAK,YAAY;AACxC,YAAI;AACF,cAAI,SAAS,aAAa,eAAe,SAAS,SAAS;AACzD,kBAAM,cAAc;UACtB;AACA,gBAAM,cAAc,MAAM,iBAAiB;YACzC;YACA;YACA,OAAAA;YACA;YACA,QAAQ,mCAAY;AAClB,oBAAM,OAAO,CAAC;AACd,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,sBAAM,SAAS,MAAM,gBAAgB,CAAC;AACtC,oBAAI,OAAQ,QAAO,OAAO,MAAM,OAAO,IAAI;cAC7C;AACA,qBAAO;YACT,GAPQ;UAQV,CAAC;AACD,cAAI,MAAM;AACR,4BAAgB,SAAS,GAAG,WAAW;UACzC;AACA,gCAAsB,SAAS,GAAG,WAAW;AAC7C,iBAAO;QACT,SAAS3D,IAAG;AACV;UACAA;AACA,gBAAM;QACR;MACF,CAAC;IACH,CAAC;AACD,UAAM,gBAAgB,MAAM,KAAK,IAAI,CAAC,MAAM,MAAM;AAChD,UAAI,WAAY,OAAM;AACtB,aAAO,QAAQ,QAAQ,EAAE,KAAK,YAAY;AACxC,YAAI;AACF,iBAAO,MAAM,UAAU;YACrB;YACA;YACA;YACA;YACA,QAAQ,mCAAY;AAClB,oBAAM,OAAO,CAAC;AACd,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,uBAAO,OAAO,MAAM,MAAM,cAAc,CAAC,CAAC;cAC5C;AACA,qBAAO;YACT,GANQ;YAOR;YACA,qBAAqB,gBAAgB,CAAC;YACtC,OAAA2D;YACA;UACF,CAAC;QACH,SAAS3D,IAAG;AACV;UACAA;AACA,gBAAM;QACR;MACF,CAAC;IACH,CAAC;AACD,eAAW,KAAK,gBAAiB,GAAE,MAAM,MAAM;IAC/C,CAAC;AACD,eAAW,KAAK,cAAe,GAAE,MAAM,MAAM;IAC7C,CAAC;AACD,aAAS,IAAI,GAAG,IAAI,MAAM,KAAK,QAAQ,KAAK,GAAG;AAC7C,YAAM,OAAO,MAAM,KAAK,CAAC;AACzB,UAAI,MAAM;AACR,YAAI;AACF,gBAAM,cAAc,MAAM,gBAAgB,CAAC;AAC3C,gBAAM,OAAO,MAAM,cAAc,CAAC;AAClCwH,kBAAO,KAAK,EAAE,MAAM,aAAa,KAAK,CAAC;QACzC,SAASxH,IAAG;AACV,gBAAM,MAAM,gBAAgBA,EAAC;AAC7B,cAAI,eAAe,UAAU;AAC3B,gBAAI2D,OAAM,gBAAgB,uBAAuB;AAC/C,oBAAM,QAAQ,KAAK,UAAU;gBAC3B,MAAM;gBACN,UAAU,IAAI;cAChB,CAAC;AACDA,qBAAM,aAAa,aAAa,IAAI,eAAe;gBACjD,UAAU,KAAK,KAAK;gBACpB,MAAM;cACR,CAAC;YACH;AACA,mBAAO,kBAAkB,IAAI,QAAQ,IAAI,QAAQ;UACnD;AACA,gBAAM,UAAU,WAAW,GAAG;AAC9B,gBAAMoC,UAAS,MAAM,yBAAyB,OAAO,aAAa,UAAU,GAAG;AAC/E,iBAAO,KAAK;AACV,gBAAIQ,MAAK,OAAO,CAAC,GAAG;AAClB,oBAAMrF;;gBAEJqF,MAAK,OAAO,CAAC;;AAEf,oBAAM,QAAQ,MAAMK,UAAS,EAAE,MAAM1F,MAAK,EAAE;AAC5C,kBAAI,IAAI;AACR,qBAAO,CAACsG,QAAO,CAAC,EAAG,MAAK;AACxB,8BAAgB,cAAc,IAAI,CAAC;AACnC,oBAAM,UAAU,QAAQA,QAAO,MAAM,GAAG,IAAI,CAAC,CAAC;AAC9C,oBAAM,SAAS,IAAI,UAAU,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI,CAAC;AACjE,qBAAO,MAAM,gBAAgB;gBAC3B;gBACA;gBACA,SAAS;gBACT,UAAAZ;gBACA,OAAAjD;gBACA;gBACA,aAAa;kBACX,KAAK,OAAO,IAAI;kBAChB,KAAK,OAAO,IAAI;gBAClB;gBACA,QAAQ;gBACR,OAAOoC;gBACP,QAAQ,QAAQ,OAAO;kBACrB,MAAM;kBACN,MAAM;kBACN,aAAa;gBACf,CAAC;gBACD;gBACA;cACF,CAAC;YACH;UACF;AACA,iBAAO,kBAAkB,UAAU,SAASA,QAAO,OAAO;QAC5D;MACF,OAAO;AACLyB,gBAAO,KAAK,IAAI;MAClB;IACF;AACA,QAAI7D,OAAM,gBAAgB,sBAAsB;AAC9C,UAAI,EAAE,MAAM,OAAO,IAAI,qBAAqB,SAAS;AACrD,UAAI,QAAQ;AACV,yBAAiB,SAAS,QAAQ;AAChC,kBAAQ;QACV;MACF;AACAA,aAAM,aAAa,aAAa,IAAI,eAAe;QACjD,UAAU,KAAK,IAAI;QACnB,MAAM;MACR,CAAC;IACH;AACA,WAAO,MAAM,gBAAgB;MAC3B;MACA;MACA,SAAS;MACT,UAAAiD;MACA,OAAAjD;MACA;MACA,aAAa;QACX;QACA;MACF;MACA;MACA,OAAO;MACP,QAAQ,QAAQ,QAAQ,CAAC,IAAI,QAAQ6D,OAAM;MAC3C;MACA;MACA,iBAAiB,QAAQ,QAAQ,uBAAuB,OAAO,aAAa,QAAQ,IAAI;IAC1F,CAAC;EACH,SAASxH,IAAG;AACV,WAAO,MAAM,mBAAmB;MAC9B;MACA;MACA,SAAS;MACT,UAAA4G;MACA,OAAAjD;MACA,QAAQ;MACR,OAAO3D;MACP;IACF,CAAC;EACH;AACF;AA1Pe;AA2Pf,SAASyH,MAAK,IAAI;AAChB,MAAI,OAAO;AACX,MAAI;AACJ,SAAO,MAAM;AACX,QAAI,KAAM,QAAO;AACjB,WAAO;AACP,WAAO,SAAS,GAAG;EACrB;AACF;AARS,OAAAA,OAAA;AAST,eAAe,YAAY,OAAO,aAAa,OAAO,UAAUb,WAAUjD,QAAO,wBAAwB,gBAAgB;AACvH,MAAI,CAAC,MAAM,MAAM;AACf,WAAO,IAAI,SAAS,QAAQ;MAC1B,QAAQ;IACV,CAAC;EACH;AACA,MAAI;AACF,UAAM,WAAW,CAAC,GAAG,MAAM,KAAK,SAAS,MAAM,KAAK,IAAI;AACxD,UAAM,cAAc,0BAA0B,SAAS,IAAI,MAAM,IAAI;AACrE,QAAI,UAAU;AACd,UAAM,MAAM,IAAI,IAAI,MAAM,GAAG;AAC7B,QAAI,WAAW,eAAe,IAAI,UAAU,cAAc;AAC1D,UAAM,YAAY,EAAE,GAAG,OAAO,IAAI;AAClC,UAAM,YAAY,SAAS,IAAI,CAACzD,IAAG,MAAM;AACvC,aAAOuH,MAAK,YAAY;AACtB,YAAI;AACF,cAAI,SAAS;AACX;;cAEE;gBACE,MAAM;cACR;;UAEJ;AACA,gBAAM,OAAOvH,MAAK,SAASA,KAAI,MAAM0G,UAAS,EAAE,MAAM1G,EAAC,EAAE;AACzD,iBAAO,iBAAiB;YACtB,OAAO;YACP;YACA,OAAAyD;YACA;YACA,QAAQ,mCAAY;AAClB,oBAAM,QAAQ,CAAC;AACf,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,sBAAM;;kBAEJ,MAAM,UAAU,CAAC,EAAE;;AAErB,oBAAI,QAAQ;AACV,yBAAO,OAAO,OAAO,OAAO,IAAI;gBAClC;cACF;AACA,qBAAO;YACT,GAZQ;UAaV,CAAC;QACH,SAAS3D,IAAG;AACV,oBAAU;AACV,gBAAMA;QACR;MACF,CAAC;IACH,CAAC;AACD,UAAM,WAAW,UAAU,IAAI,OAAO,IAAI,MAAM;AAC9C,UAAI,CAAC,YAAY,CAAC,GAAG;AACnB;;UAEE;YACE,MAAM;UACR;;MAEJ;AACA,aAAO,GAAG;IACZ,CAAC;AACD,QAAI,SAAS,SAAS;AACtB,UAAM,QAAQ,MAAM,QAAQ;MAC1B,SAAS;QACP,CAAC,GAAG,MAAM,EAAE,MAAM,OAAO+F,YAAW;AAClC,cAAIA,mBAAkB,UAAU;AAC9B,kBAAMA;UACR;AACA,mBAAS,KAAK,IAAI,QAAQ,IAAI,CAAC;AAC/B;;YAEE;cACE,MAAM;cACN,OAAO,MAAM,yBAAyB,OAAO,aAAa,UAAUA,OAAM;cAC1E,QAAQA,mBAAkB,aAAaA,mBAAkB,iBAAiBA,QAAO,SAAS;YAC5F;;QAEJ,CAAC;MACH;IACF;AACA,UAAM,kBAAkB,4BAA4B,OAAO,aAAa,QAAQ;AAChF,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAK,iBAAgB,SAAS,GAAG,MAAM,CAAC,CAAC;AAC3E,UAAM,EAAE,MAAM,OAAO,IAAI,gBAAgB,SAAS;AAClD,QAAI,CAAC,QAAQ;AACX,aAAO,cAAc,IAAI;IAC3B;AACA,WAAO,IAAI;MACT,IAAI,eAAe;QACjB,MAAM,MAAMM,aAAY;AACtBA,sBAAW,QAAQ/G,cAAa,OAAO,IAAI,CAAC;AAC5C,2BAAiB,SAAS,QAAQ;AAChC+G,wBAAW,QAAQ/G,cAAa,OAAO,KAAK,CAAC;UAC/C;AACA+G,sBAAW,MAAM;QACnB;QACA,MAAM;MACR,CAAC;MACD;QACE,SAAS;;;UAGP,gBAAgB;UAChB,iBAAiB;QACnB;MACF;IACF;EACF,SAASrG,IAAG;AACV,UAAM+F,UAAS,gBAAgB/F,EAAC;AAChC,QAAI+F,mBAAkB,UAAU;AAC9B,aAAO,uBAAuBA,OAAM;IACtC,OAAO;AACL,aAAO,cAAc,MAAM,yBAAyB,OAAO,aAAa,UAAUA,OAAM,GAAG,GAAG;IAChG;EACF;AACF;AAlHe;AAmHf,SAAS,cAAc,OAAO,SAAS,KAAK;AAC1C,SAAO,KAAK,OAAO,UAAU,WAAW,QAAQ,KAAK,UAAU,KAAK,GAAG;IACrE;IACA,SAAS;MACP,gBAAgB;MAChB,iBAAiB;IACnB;EACF,CAAC;AACH;AARS;AAST,SAAS,uBAAuB,UAAU;AACxC,SAAO;;IAEL;MACE,MAAM;MACN,UAAU,SAAS;IACrB;EACF;AACF;AARS;AAeT,IAAI,UAAU;AACd,IAAI,cAAc;AAClB,IAAI,aAAa,OAAO,UAAU;AAClC,IAAI,qBAAqB;AACzB,SAAS,QAAQ,KAAK,UAAU;AAC9B,MAAI,OAAO,QAAQ,UAAU;AAC3B,UAAM,IAAI,UAAU,+BAA+B;EACrD;AACA,MAAI,MAAM,CAAC;AACX,MAAI,MAAM,YAAY,CAAC;AACvB,MAAI,MAAM,IAAI,UAAU;AACxB,MAAI7E,SAAQ;AACZ,SAAOA,SAAQ,IAAI,QAAQ;AACzB,QAAI,QAAQ,IAAI,QAAQ,KAAKA,MAAK;AAClC,QAAI,UAAU,IAAI;AAChB;IACF;AACA,QAAI,SAAS,IAAI,QAAQ,KAAKA,MAAK;AACnC,QAAI,WAAW,IAAI;AACjB,eAAS,IAAI;IACf,WAAW,SAAS,OAAO;AACzBA,eAAQ,IAAI,YAAY,KAAK,QAAQ,CAAC,IAAI;AAC1C;IACF;AACA,QAAI,OAAO,IAAI,MAAMA,QAAO,KAAK,EAAE,KAAK;AACxC,QAAI,WAAW,IAAI,IAAI,GAAG;AACxB,UAAI,MAAM,IAAI,MAAM,QAAQ,GAAG,MAAM,EAAE,KAAK;AAC5C,UAAI,IAAI,WAAW,CAAC,MAAM,IAAI;AAC5B,cAAM,IAAI,MAAM,GAAG,EAAE;MACvB;AACA,UAAI,IAAI,IAAI,UAAU,KAAK,GAAG;IAChC;AACAA,aAAQ,SAAS;EACnB;AACA,SAAO;AACT;AA/BS;AAgCT,SAAS,UAAU,MAAM,KAAK,UAAU;AACtC,MAAI,MAAM,YAAY,CAAC;AACvB,MAAI,MAAM,IAAI,UAAU;AACxB,MAAI,OAAO,QAAQ,YAAY;AAC7B,UAAM,IAAI,UAAU,0BAA0B;EAChD;AACA,MAAI,CAAC,mBAAmB,KAAK,IAAI,GAAG;AAClC,UAAM,IAAI,UAAU,0BAA0B;EAChD;AACA,MAAI,QAAQ,IAAI,GAAG;AACnB,MAAI,SAAS,CAAC,mBAAmB,KAAK,KAAK,GAAG;AAC5C,UAAM,IAAI,UAAU,yBAAyB;EAC/C;AACA,MAAI,MAAM,OAAO,MAAM;AACvB,MAAI,QAAQ,IAAI,QAAQ;AACtB,QAAI,SAAS,IAAI,SAAS;AAC1B,QAAI,MAAM,MAAM,KAAK,CAAC,SAAS,MAAM,GAAG;AACtC,YAAM,IAAI,UAAU,0BAA0B;IAChD;AACA,WAAO,eAAe,KAAK,MAAM,MAAM;EACzC;AACA,MAAI,IAAI,QAAQ;AACd,QAAI,CAAC,mBAAmB,KAAK,IAAI,MAAM,GAAG;AACxC,YAAM,IAAI,UAAU,0BAA0B;IAChD;AACA,WAAO,cAAc,IAAI;EAC3B;AACA,MAAI,IAAI,MAAM;AACZ,QAAI,CAAC,mBAAmB,KAAK,IAAI,IAAI,GAAG;AACtC,YAAM,IAAI,UAAU,wBAAwB;IAC9C;AACA,WAAO,YAAY,IAAI;EACzB;AACA,MAAI,IAAI,SAAS;AACf,QAAI,UAAU,IAAI;AAClB,QAAI,CAAC,OAAO,OAAO,KAAK,MAAM,QAAQ,QAAQ,CAAC,GAAG;AAChD,YAAM,IAAI,UAAU,2BAA2B;IACjD;AACA,WAAO,eAAe,QAAQ,YAAY;EAC5C;AACA,MAAI,IAAI,UAAU;AAChB,WAAO;EACT;AACA,MAAI,IAAI,QAAQ;AACd,WAAO;EACT;AACA,MAAI,IAAI,aAAa;AACnB,WAAO;EACT;AACA,MAAI,IAAI,UAAU;AAChB,QAAI,WAAW,OAAO,IAAI,aAAa,WAAW,IAAI,SAAS,YAAY,IAAI,IAAI;AACnF,YAAQ,UAAU;MAChB,KAAK;AACH,eAAO;AACP;MACF,KAAK;AACH,eAAO;AACP;MACF,KAAK;AACH,eAAO;AACP;MACF;AACE,cAAM,IAAI,UAAU,4BAA4B;IACpD;EACF;AACA,MAAI,IAAI,UAAU;AAChB,QAAI,WAAW,OAAO,IAAI,aAAa,WAAW,IAAI,SAAS,YAAY,IAAI,IAAI;AACnF,YAAQ,UAAU;MAChB,KAAK;AACH,eAAO;AACP;MACF,KAAK;AACH,eAAO;AACP;MACF,KAAK;AACH,eAAO;AACP;MACF,KAAK;AACH,eAAO;AACP;MACF;AACE,cAAM,IAAI,UAAU,4BAA4B;IACpD;EACF;AACA,SAAO;AACT;AArFS;AAsFT,SAAS,OAAO,KAAK;AACnB,SAAO,IAAI,QAAQ,GAAG,MAAM,KAAK,mBAAmB,GAAG,IAAI;AAC7D;AAFS;AAGT,SAAS,OAAO,KAAK;AACnB,SAAO,mBAAmB,GAAG;AAC/B;AAFS;AAGT,SAAS,OAAO,KAAK;AACnB,SAAO,WAAW,KAAK,GAAG,MAAM,mBAAmB,eAAe;AACpE;AAFS;AAGT,SAAS,UAAU,KAAK,SAAS;AAC/B,MAAI;AACF,WAAO,QAAQ,GAAG;EACpB,SAASlB,IAAG;AACV,WAAO;EACT;AACF;AANS;AAOT,IAAM,iCAAiC;AACvC,SAAS,iBAAiB,UAAU;AAClC,MAAI,UAAU,SAAS,QAAQ;AAC7B,UAAM,IAAI,MAAM,yEAAyE;EAC3F;AACF;AAJS;AAKT,SAAS,oBAAoB0H,SAAQ,MAAM,MAAM;AAC/C,SAAO,GAAGA,WAAU,EAAE,GAAG,IAAI,IAAI,mBAAmB,IAAI,CAAC;AAC3D;AAFS;AAGT,SAAS,YAAY,SAAS,KAAK;AACjC,QAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ,KAAK;AAChD,QAAM,kBAAkB,QAAQ,QAAQ,EAAE,QAAQ,wBAAC,UAAU,OAAX,UAAiB,CAAC;AACpE,MAAI;AACJ,QAAM,cAA8B,oBAAI,IAAI;AAC5C,QAAM,WAAW;IACf,UAAU;IACV,UAAU;IACV,QAAQ,IAAI,aAAa,eAAe,IAAI,aAAa,UAAU,QAAQ;EAC7E;AACA,QAAM,UAAU;;;;;;;;;IASd,IAAI,MAAM,MAAM;AACd,YAAM,aAAa,MAAM,KAAK,YAAY,OAAO,CAAC,EAAE,OAAO,CAACrH,OAAM;AAChE,eAAOA,GAAE,SAAS,QAAQ,eAAe,IAAI,UAAUA,GAAE,QAAQ,MAAM,KAAK,aAAa,IAAI,UAAUA,GAAE,QAAQ,IAAI;MACvH,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,KAAK,SAAS,EAAE,QAAQ,KAAK,MAAM,EAAE,CAAC;AAClE,UAAI,YAAY;AACd,eAAO,WAAW,QAAQ,WAAW,IAAI,SAAS,WAAW;MAC/D;AACA,YAAM,cAAc,QAAQ,QAAQ,EAAE,QAAQ,MAAM,OAAO,CAAC;AAC5D,YAAM,SAAS,YAAY,IAAI;AAC/B,aAAO;IACT;;;;IAIA,OAAO,MAAM;AACX,YAAM,WAAW,QAAQ,QAAQ,EAAE,QAAQ,MAAM,OAAO,CAAC;AACzD,YAAM,SAAyB,oBAAI,IAAI;AACvC,iBAAWA,MAAK,YAAY,OAAO,GAAG;AACpC,YAAI,eAAe,IAAI,UAAUA,GAAE,QAAQ,MAAM,KAAK,aAAa,IAAI,UAAUA,GAAE,QAAQ,IAAI,GAAG;AAChG,gBAAM,WAAW,OAAO,IAAIA,GAAE,IAAI;AAClC,cAAI,CAAC,YAAYA,GAAE,QAAQ,KAAK,SAAS,SAAS,QAAQ,KAAK,QAAQ;AACrE,mBAAO,IAAIA,GAAE,MAAMA,EAAC;UACtB;QACF;MACF;AACA,iBAAWA,MAAK,OAAO,OAAO,GAAG;AAC/B,iBAASA,GAAE,IAAI,IAAIA,GAAE;MACvB;AACA,aAAO,OAAO,QAAQ,QAAQ,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,OAAO,EAAE,MAAM,MAAM,EAAE;IAC1E;;;;;;IAMA,IAAI,MAAM,OAAO,UAAU;AACzB,YAAM,qBAAqB,KAAK,MAAM,8BAA8B;AACpE,UAAI,oBAAoB;AACtB,gBAAQ;UACN,oBAAoB,IAAI,qDAAqD,mBAAmB;YAC9F;UACF,CAAC;QACH;MACF;AACA,uBAAiB,QAAQ;AACzB,mBAAa,MAAM,OAAO,EAAE,GAAG,UAAU,GAAG,SAAS,CAAC;IACxD;;;;;IAKA,OAAO,MAAM,UAAU;AACrB,uBAAiB,QAAQ;AACzB,cAAQ,IAAI,MAAM,IAAI,EAAE,GAAG,UAAU,QAAQ,EAAE,CAAC;IAClD;;;;;;IAMA,UAAU,MAAM,OAAO,UAAU;AAC/B,uBAAiB,QAAQ;AACzB,UAAI,OAAO,SAAS;AACpB,UAAI,CAAC,SAAS,UAAU,SAAS,WAAW,IAAI,UAAU;AACxD,YAAI,CAAC,gBAAgB;AACnB,gBAAM,IAAI,MAAM,8DAA8D;QAChF;AACA,eAAO,QAAQ,gBAAgB,IAAI;MACrC;AACA,aAAO,YAAY,MAAM,OAAO,EAAE,GAAG,UAAU,GAAG,UAAU,KAAK,CAAC;IACpE;EACF;AACA,WAAS,kBAAkB,aAAa,SAAS;AAC/C,UAAM,mBAAmB;;MAEvB,GAAG;IACL;AACA,eAAW,UAAU,YAAY,OAAO,GAAG;AACzC,UAAI,CAAC,eAAe,YAAY,UAAU,OAAO,QAAQ,MAAM,EAAG;AAClE,UAAI,CAAC,aAAa,YAAY,UAAU,OAAO,QAAQ,IAAI,EAAG;AAC9D,YAAM,UAAU,OAAO,QAAQ,UAAU;AACzC,uBAAiB,OAAO,IAAI,IAAI,QAAQ,OAAO,KAAK;IACtD;AACA,QAAI,SAAS;AACX,YAAM,SAAS,QAAQ,SAAS,EAAE,QAAQ,wBAAC,UAAU,OAAX,UAAiB,CAAC;AAC5D,iBAAW,QAAQ,QAAQ;AACzB,yBAAiB,IAAI,IAAI,OAAO,IAAI;MACtC;IACF;AACA,WAAO,OAAO,QAAQ,gBAAgB,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,GAAG,IAAI,IAAI,KAAK,EAAE,EAAE,KAAK,IAAI;EAC9F;AAlBS;AAmBT,QAAM,iBAAiB,CAAC;AACxB,WAAS,aAAa,MAAM,OAAO,UAAU;AAC3C,QAAI,CAAC,gBAAgB;AACnB,qBAAe,KAAK,MAAM,aAAa,MAAM,OAAO,QAAQ,CAAC;AAC7D;IACF;AACA,QAAI,OAAO,SAAS;AACpB,QAAI,CAAC,SAAS,UAAU,SAAS,WAAW,IAAI,UAAU;AACxD,aAAO,QAAQ,gBAAgB,IAAI;IACrC;AACA,UAAM,aAAa,oBAAoB,SAAS,QAAQ,MAAM,IAAI;AAClE,UAAM,SAAS,EAAE,MAAM,OAAO,SAAS,EAAE,GAAG,UAAU,KAAK,EAAE;AAC7D,gBAAY,IAAI,YAAY,MAAM;EACpC;AAZS;AAaT,WAAS,mBAAmB,gBAAgB;AAC1C,qBAAiB,eAAe,IAAI,UAAU,cAAc;AAC5D,mBAAe,QAAQ,CAAC,OAAO,GAAG,CAAC;EACrC;AAHS;AAIT,SAAO,EAAE,SAAS,aAAa,mBAAmB,cAAc,mBAAmB;AACrF;AAjIS;AAkIT,SAAS,eAAe,UAAU,YAAY;AAC5C,MAAI,CAAC,WAAY,QAAO;AACxB,QAAM,aAAa,WAAW,CAAC,MAAM,MAAM,WAAW,MAAM,CAAC,IAAI;AACjE,MAAI,aAAa,WAAY,QAAO;AACpC,SAAO,SAAS,SAAS,MAAM,UAAU;AAC3C;AALS;AAMT,SAAS,aAAa,MAAM,YAAY;AACtC,MAAI,CAAC,WAAY,QAAO;AACxB,QAAM,aAAa,WAAW,SAAS,GAAG,IAAI,WAAW,MAAM,GAAG,EAAE,IAAI;AACxE,MAAI,SAAS,WAAY,QAAO;AAChC,SAAO,KAAK,WAAW,aAAa,GAAG;AACzC;AALS;AAMT,SAAS,uBAAuB,UAAU,SAAS;AACjD,aAAW,cAAc,SAAS;AAChC,UAAM,EAAE,MAAM,OAAO,SAAS,SAAS,IAAI;AAC3C,aAAS,OAAO,cAAc,YAAY,MAAM,OAAO,QAAQ,CAAC;AAChE,QAAI,SAAS,KAAK,SAAS,OAAO,GAAG;AACnC,YAAM,OAAOyG,iBAAgB,SAAS,IAAI;AAC1C,eAAS,OAAO,cAAc,YAAY,MAAM,OAAO,EAAE,GAAG,UAAU,KAAK,CAAC,CAAC;IAC/E;EACF;AACF;AATS;AAUT,IAAI,YAAY,EAAE,SAAS,CAAC,EAAE;AAC9B,IAAI,sBAAsB;EACxB,cAAc;EACd,KAAK;EACL,QAAQ;AACV;AACA,SAAS,iBAAiB,KAAK;AAC7B,SAAO,OAAO,QAAQ,YAAY,CAAC,CAAC,IAAI,KAAK;AAC/C;AAFS;AAGT,SAAS,YAAY,gBAAgB,UAAU;AAC7C,MAAI,QAAQ,eAAe,MAAM,GAAG,EAAE,OAAO,gBAAgB;AAC7D,MAAI,mBAAmB,MAAM,MAAM;AACnC,MAAI,SAAS,mBAAmB,gBAAgB;AAChD,MAAI,OAAO,OAAO;AAClB,MAAI,QAAQ,OAAO;AACnB,aAAW,WAAW,OAAO,OAAO,CAAC,GAAG,qBAAqB,QAAQ,IAAI;AACzE,MAAI;AACF,YAAQ,SAAS,eAAe,mBAAmB,KAAK,IAAI;EAC9D,SAAS9G,IAAG;AACV,YAAQ;MACN,gFAAgF,QAAQ;MACxFA;IACF;EACF;AACA,MAAI,SAAS;IACX;IACA;EACF;AACA,QAAM,QAAQ,SAAS,MAAM;AAC3B,QAAI,QAAQ,KAAK,MAAM,GAAG;AAC1B,QAAI,OAAO,MAAM,MAAM,EAAE,SAAS,EAAE,YAAY;AAChD,QAAI,SAAS,MAAM,KAAK,GAAG;AAC3B,QAAI,SAAS,WAAW;AACtB,aAAO,UAAU,IAAI,KAAK,MAAM;IAClC,WAAW,SAAS,WAAW;AAC7B,aAAO,SAAS,SAAS,QAAQ,EAAE;IACrC,WAAW,SAAS,UAAU;AAC5B,aAAO,SAAS;IAClB,WAAW,SAAS,YAAY;AAC9B,aAAO,WAAW;IACpB,WAAW,SAAS,YAAY;AAC9B,aAAO,WAAW;IACpB,WAAW,SAAS,eAAe;AACjC,aAAO,cAAc;IACvB,OAAO;AACL,aAAO,IAAI,IAAI;IACjB;EACF,CAAC;AACD,SAAO;AACT;AAxCS;AAyCT,SAAS,mBAAmB,kBAAkB;AAC5C,MAAI,OAAO;AACX,MAAI,QAAQ;AACZ,MAAI,eAAe,iBAAiB,MAAM,GAAG;AAC7C,MAAI,aAAa,SAAS,GAAG;AAC3B,WAAO,aAAa,MAAM;AAC1B,YAAQ,aAAa,KAAK,GAAG;EAC/B,OAAO;AACL,YAAQ;EACV;AACA,SAAO,EAAE,MAAM,MAAM;AACvB;AAXS;AAYT,SAAS2H,OAAM,OAAO,UAAU;AAC9B,aAAW,WAAW,OAAO,OAAO,CAAC,GAAG,qBAAqB,QAAQ,IAAI;AACzE,MAAI,CAAC,OAAO;AACV,QAAI,CAAC,SAAS,KAAK;AACjB,aAAO,CAAC;IACV,OAAO;AACL,aAAO,CAAC;IACV;EACF;AACA,MAAI,MAAM,SAAS;AACjB,QAAI,OAAO,MAAM,QAAQ,iBAAiB,YAAY;AACpD,cAAQ,MAAM,QAAQ,aAAa;IACrC,WAAW,MAAM,QAAQ,YAAY,GAAG;AACtC,cAAQ,MAAM,QAAQ,YAAY;IACpC,OAAO;AACL,UAAI,MAAM,MAAM,QAAQ,OAAO,KAAK,MAAM,OAAO,EAAE,KAAK,SAAS,MAAM;AACrE,eAAO,KAAK,YAAY,MAAM;MAChC,CAAC,CAAC;AACF,UAAI,CAAC,OAAO,MAAM,QAAQ,UAAU,CAAC,SAAS,QAAQ;AACpD,gBAAQ;UACN;QACF;MACF;AACA,cAAQ;IACV;EACF;AACA,MAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,YAAQ,CAAC,KAAK;EAChB;AACA,MAAI,CAAC,SAAS,KAAK;AACjB,WAAO,MAAM,OAAO,gBAAgB,EAAE,IAAI,SAAS,KAAK;AACtD,aAAO,YAAY,KAAK,QAAQ;IAClC,CAAC;EACH,OAAO;AACL,QAAI,UAAU,CAAC;AACf,WAAO,MAAM,OAAO,gBAAgB,EAAE,OAAO,SAAS,UAAU,KAAK;AACnE,UAAI,SAAS,YAAY,KAAK,QAAQ;AACtC,eAAS,OAAO,IAAI,IAAI;AACxB,aAAO;IACT,GAAG,OAAO;EACZ;AACF;AAzCSA;AA0CT,SAAS,mBAAmB,eAAe;AACzC,MAAI,MAAM,QAAQ,aAAa,GAAG;AAChC,WAAO;EACT;AACA,MAAI,OAAO,kBAAkB,UAAU;AACrC,WAAO,CAAC;EACV;AACA,MAAI,iBAAiB,CAAC;AACtB,MAAI,MAAM;AACV,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,WAAS,iBAAiB;AACxB,WAAO,MAAM,cAAc,UAAU,KAAK,KAAK,cAAc,OAAO,GAAG,CAAC,GAAG;AACzE,aAAO;IACT;AACA,WAAO,MAAM,cAAc;EAC7B;AALS;AAMT,WAAS,iBAAiB;AACxB,SAAK,cAAc,OAAO,GAAG;AAC7B,WAAO,OAAO,OAAO,OAAO,OAAO,OAAO;EAC5C;AAHS;AAIT,SAAO,MAAM,cAAc,QAAQ;AACjC,YAAQ;AACR,4BAAwB;AACxB,WAAO,eAAe,GAAG;AACvB,WAAK,cAAc,OAAO,GAAG;AAC7B,UAAI,OAAO,KAAK;AACd,oBAAY;AACZ,eAAO;AACP,uBAAe;AACf,oBAAY;AACZ,eAAO,MAAM,cAAc,UAAU,eAAe,GAAG;AACrD,iBAAO;QACT;AACA,YAAI,MAAM,cAAc,UAAU,cAAc,OAAO,GAAG,MAAM,KAAK;AACnE,kCAAwB;AACxB,gBAAM;AACN,yBAAe,KAAK,cAAc,UAAU,OAAO,SAAS,CAAC;AAC7D,kBAAQ;QACV,OAAO;AACL,gBAAM,YAAY;QACpB;MACF,OAAO;AACL,eAAO;MACT;IACF;AACA,QAAI,CAAC,yBAAyB,OAAO,cAAc,QAAQ;AACzD,qBAAe,KAAK,cAAc,UAAU,OAAO,cAAc,MAAM,CAAC;IAC1E;EACF;AACA,SAAO;AACT;AAtDS;AAuDT,UAAU,UAAUA;AACpB,UAAU,QAAQ,QAAQA;AAC1B,IAAI,gBAAgB,UAAU,QAAQ,cAAc;AACpD,IAAI,uBAAuB,UAAU,QAAQ,qBAAqB;AAClE,SAAS,aAAa,EAAE,OAAO,SAAS,UAAU,UAAAf,WAAU,OAAAjD,QAAO,mBAAmB,aAAa,GAAG;AACpG,QAAM,eAAe,8BAAOxB,OAAM,UAAU;AAC1C,UAAM,mBAAmB,sBAAsBA,OAAM,OAAO,MAAM,GAAG;AACrE,QAAI,QAAQA,iBAAgB,UAAUA,MAAK,OAAO,OAAO,SAAS;AAClE,QAAI,eAAeA,iBAAgB,UAAUA,MAAK,cAAc,OAAO,gBAAgB;AACvF,WAAO,SAAS,MAAM,YAAY;MAChC;MACA,SAAS;MACT,OAAO,8BAAOyF,QAAO,UAAU;AAC7B,cAAM,UAAU,sBAAsBA,QAAO,OAAO,MAAM,GAAG;AAC7D,cAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,YAAI,CAAC,QAAQ,QAAQ,IAAI,QAAQ,GAAG;AAClC,kBAAQ,QAAQ,IAAI,UAAU,MAAM,IAAI,MAAM;QAChD;AACA,YAAIA,WAAU,kBAAkB;AAC9B,kBAAQA,kBAAiB,UAAUA,OAAM,OAAO,OAAO,SAAS;AAChE,yBAAeA,kBAAiB,UAAUA,OAAM,cAAc,OAAO,gBAAgB;QACvF;AACA,aAAK,QAAQ,WAAW,SAAS,QAAQ,WAAW,YAAY,SAAS,aAAa,IAAI,WAAW,MAAM,IAAI,UAAU,IAAI,WAAW,MAAM,IAAI,SAAS;AACzJ,kBAAQ,QAAQ,OAAO,QAAQ;QACjC;AACA,YAAI,IAAI,WAAW,MAAM,IAAI,QAAQ;AACnC,cAAI,IAAI,IAAI,QAAQ,GAAG,SAAS,IAAI,MAAM,IAAI,QAAQ,EAAE,KAAK,gBAAgB,QAAQ;AACnF,kBAAM,SAAS,kBAAkB,KAAK,QAAQ,QAAQ,IAAI,QAAQ,CAAC;AACnE,gBAAI,OAAQ,SAAQ,QAAQ,IAAI,UAAU,MAAM;UAClD;AACA,iBAAO,MAAM,OAAO;QACtB;AACA,cAAM,SAAS,UAAU;AACzB,cAAM,UAAU,mBAAmB,IAAI,QAAQ;AAC/C,cAAM,YAAY,QAAQ,WAAW,MAAM,IAAI,QAAQ,MAAM,OAAO,MAAM,IAAI,SAAS,MAAM,CAAC;AAC9F,cAAM,gBAAgB,GAAG,QAAQ;AACjC,cAAM,WAAWhB,UAAS,OAAO,IAAI,QAAQ,KAAK,YAAYA,UAAS,EAAE;AACzE,cAAM,gBAAgBA,UAAS,OAAO,IAAI,aAAa,KAAK,iBAAiBA,UAAS,EAAE;AACxF,YAAI,YAAY,eAAe;AAC7B,gBAAM,OAAO,WAAW,WAAW;AACnC,cAAIjD,OAAM,MAAM;AACd,kBAAM,OAAO,WAAWiD,UAAS,UAAU,SAAS,MAAM,SAAS,YAAY,GAAG,CAAC,CAAC,IAAI;AACxF,mBAAO,IAAI,SAASjD,OAAM,KAAK,IAAI,GAAG;cACpC,SAAS,OAAO,EAAE,gBAAgB,KAAK,IAAI,CAAC;YAC9C,CAAC;UACH,WAAW,uBAAuB,QAAQiD,UAAS,EAAE,eAAe;AAClE,kBAAM,SAASA,UAAS,EAAE,cAAc,IAAI;AAC5C,kBAAM,OAAOA,UAAS,UAAU,KAAK,MAAM,KAAK,YAAY,GAAG,CAAC,CAAC;AACjE,mBAAO,IAAI,SAAS,oBAAoB,IAAI,GAAG;cAC7C,SAAS;gBACP,kBAAkB,KAAK;gBACvB,gBAAgB;cAClB;YACF,CAAC;UACH;AACA,iBAAO,MAAM,MAAM,OAAO;QAC5B;AACA,YAAI,qBAAqBA,WAAU,OAAO,OAAO,GAAG;AAClD,iBAAO,MAAM,MAAM,OAAO;QAC5B;AACA,YAAI,gBAAgB,QAAQ;AAC1B,gBAAM,SAAS,kBAAkB,KAAK,QAAQ,QAAQ,IAAI,QAAQ,CAAC;AACnE,cAAI,QAAQ;AACV,oBAAQ,QAAQ,IAAI,UAAU,MAAM;UACtC;AACA,gBAAM,gBAAgB,MAAM,QAAQ,QAAQ,IAAI,eAAe;AAC/D,cAAI,iBAAiB,CAAC,QAAQ,QAAQ,IAAI,eAAe,GAAG;AAC1D,oBAAQ,QAAQ,IAAI,iBAAiB,aAAa;UACpD;QACF;AACA,YAAI,CAAC,QAAQ,QAAQ,IAAI,QAAQ,GAAG;AAClC,kBAAQ,QAAQ,IAAI,UAAU,KAAK;QACrC;AACA,YAAI,CAAC,QAAQ,QAAQ,IAAI,iBAAiB,GAAG;AAC3C,kBAAQ,QAAQ;YACd;;YAEA,MAAM,QAAQ,QAAQ,IAAI,iBAAiB;UAC7C;QACF;AACA,cAAM,WAAW,MAAM,eAAe,SAAS,UAAUA,WAAUjD,MAAK;AACxE,cAAM,aAAa,SAAS,QAAQ,IAAI,YAAY;AACpD,YAAI,YAAY;AACd,qBAAW,OAAO,qBAAqB,UAAU,GAAG;AAClD,kBAAM,EAAE,MAAM,OAAO,GAAG,SAAS,IAAI,cAAc,KAAK;cACtD,cAAc;YAChB,CAAC;AACD,kBAAM,OAAO,SAAS,SAAS,IAAI,SAAS,MAAM,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,KAAK;AACjF,yBAAa,MAAM,OAAO;cACxB;cACA,QAAQ,wBAAC,WAAW,QAAZ;cACR;cACA;YACF,CAAC;UACH;QACF;AACA,eAAO;MACT,GArFO;IAsFT,CAAC;EACH,GA9FqB;AA+FrB,SAAO,CAAC,OAAO,UAAU;AACvB,UAAM,WAAW,aAAa,OAAO,KAAK;AAC1C,aAAS,MAAM,MAAM;IACrB,CAAC;AACD,WAAO;EACT;AACF;AAtGS;AAuGT,SAAS,sBAAsBxB,OAAM,OAAO,KAAK;AAC/C,MAAIA,iBAAgB,SAAS;AAC3B,WAAOA;EACT;AACA,SAAO,IAAI,QAAQ,OAAOA,UAAS,WAAW,IAAI,IAAIA,OAAM,GAAG,IAAIA,OAAM,KAAK;AAChF;AALS;AAMT,eAAe,eAAe,SAAS,UAAUyE,WAAUjD,QAAO;AAChE,MAAI,QAAQ,QAAQ;AAClB,QAAI,QAAQ,OAAO,SAAS;AAC1B,YAAM,IAAI,aAAa,8BAA8B,YAAY;IACnE;AACA,QAAI,wBAAwB,6BAAM;IAClC,GAD4B;AAE5B,UAAM,gBAAgB,IAAI,QAAQ,CAAC,GAAG,WAAW;AAC/C,YAAM,WAAW,6BAAM;AACrB,eAAO,IAAI,aAAa,8BAA8B,YAAY,CAAC;MACrE,GAFiB;AAGjB,cAAQ,OAAO,iBAAiB,SAAS,UAAU,EAAE,MAAM,KAAK,CAAC;AACjE,8BAAwB,6BAAM,QAAQ,OAAO,oBAAoB,SAAS,QAAQ,GAA1D;IAC1B,CAAC;AACD,UAAM,SAAS,MAAM,QAAQ,KAAK;MAChC,QAAQ,SAAS,UAAUiD,WAAU;QACnC,GAAGjD;QACH,OAAOA,OAAM,QAAQ;MACvB,CAAC;MACD;IACF,CAAC;AACD,0BAAsB;AACtB,WAAO;EACT,OAAO;AACL,WAAO,MAAM,QAAQ,SAAS,UAAUiD,WAAU;MAChD,GAAGjD;MACH,OAAOA,OAAM,QAAQ;IACvB,CAAC;EACH;AACF;AA7Be;AA8Bf,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,SAAS,eAAe,SAAS;AAC/B,WAAS,oBAAoB,KAAK,UAAU,UAAU,CAAC;AACvD,WAAS,KAAK,KAAK,IAAI,CAAC;AACxB,cAAY,IAAI,QAAQ;IACtB,gBAAgB;IAChB;EACF,CAAC;AACD,MAAI,QAAQ,QAAQ,IAAI,eAAe,MAAM,MAAM;AACjD,WAAO,IAAI,SAAS,QAAQ,EAAE,QAAQ,KAAK,QAAQ,CAAC;EACtD;AACA,SAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,CAAC;AACvC;AAXS;AAYT,IAAM,oBAAoB,wBAAC,EAAE,KAAK,MAAM,MAAd;AAC1B,IAAM,iBAAiB,6BAAM,OAAN;AACvB,IAAM,kBAAkB,wBAAC,EAAE,KAAK,MAAM,SAAS,QAAQ,SAAS,OAAxC;AACxB,IAAM,eAA+B,oBAAI,IAAI,CAAC,OAAO,QAAQ,MAAM,CAAC;AACpE,IAAM,uBAAuC,oBAAI,IAAI,CAAC,OAAO,QAAQ,SAAS,CAAC;AAE/E,IAAM,UAAU,kBAAkB,gBAAgB;AAClD,eAAe,iBAAiB,SAAS,UAAUiD,WAAUjD,QAAO;AAClE,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,8BAA8BqD,uBAAsB,IAAI,QAAQ;AACtE,QAAM,kBAAkBH,iBAAgB,IAAI,QAAQ;AACpD,QAAM,YAAY,cAAc,GAAG;AACnC;AACE,UAAM,iBAAiB,QAAQ,QAAQ,IAAI,QAAQ;AACnD,QAAI,WAAW;AACb,UAAI,QAAQ,WAAW,SAAS,mBAAmB,IAAI,QAAQ;AAC7D,cAAM,UAAU;AAChB,eAAO,KAAK,EAAE,QAAQ,GAAG,EAAE,QAAQ,IAAI,CAAC;MAC1C;IACF,WAAW,SAAS,mBAAmB;AACrC,YAAM,YAAY,qBAAqB,OAAO,MAAM,QAAQ,WAAW,UAAU,QAAQ,WAAW,SAAS,QAAQ,WAAW,WAAW,QAAQ,WAAW,aAAa,mBAAmB,IAAI,WAAW,CAAC,kBAAkB,CAAC,SAAS,qBAAqB,SAAS,cAAc;AACtR,UAAI,WAAW;AACb,cAAM,UAAU,cAAc,QAAQ,MAAM;AAC5C,cAAM,OAAO,EAAE,QAAQ,IAAI;AAC3B,YAAI,QAAQ,QAAQ,IAAI,QAAQ,MAAM,oBAAoB;AACxD,iBAAO,KAAK,EAAE,QAAQ,GAAG,IAAI;QAC/B;AACA,eAAO,KAAK,SAAS,IAAI;MAC3B;IACF;EACF;AACA,MAAI,SAAS,gBAAgB,IAAI,aAAa,OAAO,OAAO,IAAI,aAAa,eAAe;AAC1F,WAAO,KAAK,aAAa,EAAE,QAAQ,IAAI,CAAC;EAC1C;AACA,MAAI;AACJ,MAAI,6BAA6B;AAC/B,QAAI,WAAWK,yBAAwB,IAAI,QAAQ;EACrD,WAAW,iBAAiB;AAC1B,QAAI,WAAWH,mBAAkB,IAAI,QAAQ,KAAK,IAAI,aAAa,IAAI,oBAAoB,MAAM,MAAM,MAAM,OAAO;AACpH,QAAI,aAAa,OAAO,oBAAoB;AAC5C,6BAAyB,IAAI,aAAa,IAAI,iBAAiB,GAAG,MAAM,EAAE,EAAE,IAAI,CAAC,SAAS,SAAS,GAAG;AACtG,QAAI,aAAa,OAAO,iBAAiB;EAC3C,WAAW,WAAW;AACpB,QAAI,WAAW,QAAQ,QAAQ,IAAI,sBAAsB,KAAK;AAC9D,QAAI,SAAS,QAAQ,QAAQ,IAAI,oBAAoB,KAAK;EAC5D;AACA,QAAM,WAAW,CAAC;AAClB,QAAM,EAAE,SAAS,aAAa,mBAAmB,cAAc,mBAAmB,IAAI;IACpF;IACA;EACF;AACA,QAAM,cAAc;IAClB,cAAcpD,OAAM;IACpB,WAAW,SAAS,MAAM;IAC1B,uBAAuB,SAAS,MAAM;IACtC,SAAS;MACP;IACF;IACA,uBAAuB;EACzB;AACA,QAAM,QAAQ;IACZ;;IAEA,OAAO;IACP,kBAAkBA,OAAM,qBAAqB,MAAM;AACjD,YAAM,IAAI;QACR,GAAG,8BAA8B;MACnC;IACF;IACA,QAAQ,CAAC;IACT,QAAQ,CAAC;IACT,UAAUA,OAAM;IAChB;IACA,OAAO,EAAE,IAAI,KAAK;IAClB,YAAY,wBAAC,gBAAgB;AAC3B,iBAAW,QAAQ,aAAa;AAC9B,cAAM,QAAQ,KAAK,YAAY;AAC/B,cAAM,QAAQ,YAAY,IAAI;AAC9B,YAAI,UAAU,cAAc;AAC1B,gBAAM,IAAI;YACR;UACF;QACF,WAAW,SAAS,UAAU;AAC5B,gBAAM,IAAI,MAAM,IAAI,IAAI,yBAAyB;QACnD,OAAO;AACL,mBAAS,KAAK,IAAI;AAClB,cAAIA,OAAM,gBAAgB,UAAU,iBAAiB;AACnDA,mBAAM,aAAa;YACnB;UACF;QACF;MACF;IACF,GAlBY;IAmBZ;IACA,eAAe;IACf,cAAcA,OAAM,QAAQ;IAC5B,iBAAiB,CAAC,CAAC;EACrB;AACA,QAAM,QAAQ,aAAa;IACzB;IACA,SAAS;IACT,UAAAiD;IACA,OAAAjD;IACA;IACA;EACF,CAAC;AACD,MAAIA,OAAM,UAAU,UAAU;AAC5B,UAAM,WAAW,MAAMA,OAAM,SAAS,SAAS;MAC7C,QAAQ,CAAC;MACT,WAAW,CAAC,CAACA,OAAM,cAAc;IACnC,CAAC;EACH;AACA,MAAI,gBAAgB,IAAI;AACxB,MAAI,CAAC,WAAW;AACd,UAAM,6BAA6BA,OAAM,cAAc;AACvD,QAAI;AACF,UAAIA,OAAM,aAAcA,QAAM,aAAa,iBAAiB;AAC5D,sBAAgB,MAAM,SAAS,MAAM,QAAQ,EAAE,KAAK,IAAI,IAAI,GAAG,GAAG,OAAO,MAAM,MAAM,CAAC,KAAK,IAAI;IACjG,QAAQ;AACN,aAAO,KAAK,yBAAyB;QACnC,QAAQ;MACV,CAAC;IACH,UAAA;AACE,UAAIA,OAAM,aAAcA,QAAM,aAAa,iBAAiB;IAC9D;EACF;AACA,MAAI;AACF,oBAAgB,gBAAgB,aAAa;EAC/C,QAAQ;AACN,WAAO,KAAK,iBAAiB,EAAE,QAAQ,IAAI,CAAC;EAC9C;AACA,MAAI,kBAAkB,IAAI,YAAY,CAACA,OAAM,cAAc,YAAY,qBAAqBiD,WAAU,aAAa,GAAG;AACpH,UAAM,OAAO,IAAI,IAAI,QAAQ,GAAG;AAChC,SAAK,WAAW,kBAAkBE,iBAAgB,aAAa,IAAI,8BAA8BG,uBAAsB,aAAa,IAAI;AACxI,UAAM,WAAW,MAAM,MAAM,MAAM,OAAO;AAC1C,UAAM,YAAY,IAAI,QAAQ,SAAS,OAAO;AAC9C,QAAI,UAAU,IAAI,kBAAkB,GAAG;AACrC,gBAAU,OAAO,kBAAkB;AACnC,gBAAU,OAAO,gBAAgB;IACnC;AACA,WAAO,IAAI,SAAS,SAAS,MAAM;MACjC,SAAS;MACT,QAAQ,SAAS;MACjB,YAAY,SAAS;IACvB,CAAC;EACH;AACA,MAAI,QAAQ;AACZ,MAAI,QAAQ,CAACtD,OAAM,cAAc,UAAU;AACzC,QAAI,CAAC,cAAc,WAAW,IAAI,GAAG;AACnC,aAAO,KAAK,aAAa,EAAE,QAAQ,IAAI,CAAC;IAC1C;AACA,oBAAgB,cAAc,MAAM,KAAK,MAAM,KAAK;EACtD;AACA,MAAI,6BAA6B;AAC/B,WAAO,cAAc,eAAe,IAAI,IAAI,QAAQ,GAAG,GAAGiD,SAAQ;EACpE;AACA,MAAI,kBAAkB,IAAI,OAAO,WAAW;AAC1C,WAAO,eAAe,OAAO;EAC/B;AACA,MAAI,CAAC,aAAa,cAAc,WAAW,IAAI,OAAO,EAAE,GAAG;AACzD,UAAM,YAAY,IAAI,QAAQ;AAC9B,cAAU,IAAI,iBAAiB,oCAAoC;AACnE,WAAO,KAAK,aAAa,EAAE,QAAQ,KAAK,SAAS,UAAU,CAAC;EAC9D;AACA,MAAI,CAACjD,OAAM,cAAc,UAAU;AACjC,UAAM,WAAW,MAAMiD,UAAS,EAAE,SAAS;AAC3C,eAAW,aAAaA,UAAS,EAAE,QAAQ;AACzC,YAAM,QAAQ,UAAU,QAAQ,KAAK,aAAa;AAClD,UAAI,CAAC,MAAO;AACZ,YAAM,UAAU,KAAK,OAAO,UAAU,QAAQ,QAAQ;AACtD,UAAI,SAAS;AACX,gBAAQ;AACR,cAAM,QAAQ,EAAE,IAAI,MAAM,GAAG;AAC7B,cAAM,SAAS,cAAc,OAAO;AACpC;MACF;IACF;EACF;AACA,MAAI,eAAe;IACjB,oBAAoB;IACpB,iCAAiC;IACjC,SAAS;EACX;AACA,MAAI,iBAAiB;AACrB,MAAI;AACF,UAAM,aAAa,OAAO,OAAO,IAAI,UAAU,MAAM,gBAAgB,MAAM,MAAMA,SAAQ,CAAC,IAAI;AAC9F,QAAI,SAAS,CAAC,WAAW;AACvB,UAAI,IAAI,aAAa,QAAQ,IAAI,aAAa,OAAO,KAAK;AACxD,yBAAiB;MACnB,WAAW,YAAY;AACrB,YAAI,QAAS;AACb,yBAAiB,WAAW,eAAe;MAC7C,WAAW,MAAM,UAAU;AACzB,cAAM,OAAO,MAAM,MAAM,SAAS;AAClC,yBAAiB,KAAK,iBAAiB;AACvC,YAAI,QAAS;MACf;AACA,UAAI,CAAC,iBAAiB;AACpB,cAAM,aAAa,eAAe,IAAI,UAAU,cAAc;AAC9D,YAAI,eAAe,IAAI,YAAY,CAACjD,OAAM,cAAc,UAAU;AAChE,iBAAO,IAAI,SAAS,QAAQ;YAC1B,QAAQ;YACR,SAAS;cACP,yBAAyB;cACzB;;iBAEG,WAAW,WAAW,IAAI,IAAI,IAAI,SAAS,aAAa,eAAe,IAAI,WAAW,MAAM,KAAK,IAAI;;YAE1G;UACF,CAAC;QACH;MACF;AACA,UAAIA,OAAM,iBAAiBA,OAAM,UAAU,UAAU;AACnD,YAAIL,UAAS,CAAC;AACd,YAAI,YAAY;AAChB,YAAI,MAAM,UAAU;AAClB,gBAAM,OAAO,MAAM,MAAM,SAAS;AAClC,UAAAA,UAAS,KAAK,UAAUA;AACxB,sBAAY,KAAK,aAAa;QAChC,WAAW,YAAY;AACrB,UAAAA,UAAS,WAAW,WAAW,KAAKA;AACpC,sBAAY,WAAW,UAAU;QACnC;AACA,YAAIK,OAAM,eAAe;AACvBA,iBAAM,cAAc,OAAOL,SAAQ,SAAS;QAC9C;AACA,YAAIK,OAAM,UAAU,UAAU;AAC5B,gBAAM,WAAW,MAAMA,OAAM,SAAS,SAAS,EAAE,QAAAL,SAAQ,UAAU,CAAC;QACtE;MACF;IACF;AACA,uBAAmB,cAAc;AACjC,QAAIK,OAAM,gBAAgB,CAACA,OAAM,aAAa,YAAY,CAACA,OAAM,aAAa,gBAAgB;AAC5F,qBAAe,GAAG;IACpB;AACA,UAAM,WAAW,MAAM,YAAY;MACjC,MAAM;MACN,YAAY;QACV,cAAc,MAAM,MAAM,MAAM;QAChC,eAAe,MAAM,QAAQ;QAC7B,YAAY,MAAM,IAAI;QACtB,6BAA6B;QAC7B,4BAA4B,MAAM;MACpC;MACA,IAAI,8BAAO,cAAc;AACvB,cAAM,eAAe;UACnB,GAAG;UACH,SAAS;YACP,SAAS;YACT,MAAM;YACN,SAAS;UACX;QACF;AACA,eAAO,MAAM;UACX,EAAE,OAAO,cAAc,OAAO,YAAY;UAC1C,MAAM,SAAS,MAAM,OAAO;YAC1B,OAAO;YACP,SAAS,wBAAC,QAAQ,SAAS;AACzB,qBAAO,YAAY;gBACjB,MAAM;gBACN,YAAY;kBACV,cAAc,OAAO,MAAM,MAAM;gBACnC;gBACA,IAAI,wBAAC,iBAAiB;AACpB,yBAAO;oBACL;oBACA,MAAM,SAAS,cAAc,QAAQ,YAAY,GAAG,YAAY,IAAI,EAAE;sBACpE,CAAC,cAAc;AACb,mCAAW,QAAQ,UAAU;AAC3B,gCAAM,QAAQ,SAAS,IAAI;AAC3B,oCAAU,QAAQ;4BAChB;;4BAEA;0BACF;wBACF;AACA,+CAAuB,UAAU,SAAS,YAAY,OAAO,CAAC;AAC9D,4BAAIA,OAAM,gBAAgB,OAAO,MAAM,OAAO,MAAM;AAClD,oCAAU,QAAQ,IAAI,uBAAuB,UAAU,OAAO,MAAM,EAAE,CAAC;wBACzE;AACA,qCAAa,cAAc;0BACzB,6BAA6B,UAAU;0BACvC,2BAA2B,UAAU,QAAQ,IAAI,gBAAgB,KAAK;wBACxE,CAAC;AACD,+BAAO;sBACT;oBACF;kBACF;gBACF,GAzBI;cA0BN,CAAC;YACH,GAjCS;UAkCX,CAAC;QACH;MACF,GAjDI;IAkDN,CAAC;AACD,QAAI,SAAS,WAAW,OAAO,SAAS,QAAQ,IAAI,MAAM,GAAG;AAC3D,UAAI,sBAAsB,QAAQ,QAAQ,IAAI,eAAe;AAC7D,UAAI,qBAAqB,WAAW,KAAK,GAAG;AAC1C,8BAAsB,oBAAoB,UAAU,CAAC;MACvD;AACA,YAAM;;QAEJ,SAAS,QAAQ,IAAI,MAAM;;AAE7B,UAAI,wBAAwB,OAAO;AACjC,cAAM,YAAY,IAAI,QAAQ,EAAE,MAAM,MAAM,CAAC;AAC7C,mBAAW,QAAQ;UACjB;UACA;UACA;UACA;UACA;UACA;QACF,GAAG;AACD,gBAAM,QAAQ,SAAS,QAAQ,IAAI,IAAI;AACvC,cAAI,MAAO,WAAU,IAAI,MAAM,KAAK;QACtC;AACA,eAAO,IAAI,SAAS,QAAQ;UAC1B,QAAQ;UACR,SAAS;QACX,CAAC;MACH;IACF;AACA,QAAI,mBAAmB,SAAS,UAAU,OAAO,SAAS,UAAU,KAAK;AACvE,YAAM,WAAW,SAAS,QAAQ,IAAI,UAAU;AAChD,UAAI,UAAU;AACZ,eAAO,uBAAuB,IAAI;;UAEhC,SAAS;UACT;QACF,CAAC;MACH;IACF;AACA,WAAO;EACT,SAAS3D,IAAG;AACV,QAAIA,cAAa,UAAU;AACzB,YAAM,WAAW,mBAAmB,YAAY,uBAAuBA,EAAC,IAAI,OAAO,QAAQ,uBAAuB,KAAK,IAAI,qBAAqBA,EAAC,IAAI,kBAAkBA,GAAE,QAAQA,GAAE,QAAQ;AAC3L,6BAAuB,SAAS,SAAS,YAAY,OAAO,CAAC;AAC7D,aAAO;IACT;AACA,WAAO,MAAM,mBAAmB,OAAO,aAAa,UAAUA,EAAC;EACjE;AACA,iBAAe,SAAS,QAAQ,YAAY,MAAM;AAChD,QAAI;AACF,UAAI,MAAM;AACR,uBAAe;UACb,oBAAoB,KAAK,sBAAsB;UAC/C,iCAAiC,KAAK,mCAAmC;UACzE,SAAS,KAAK,WAAW;QAC3B;MACF;AACA,UAAI,SAAS,gBAAgB2D,OAAM,cAAc,UAAU;AACzD,eAAO,MAAM,gBAAgB;UAC3B,OAAO;UACP;UACA,SAAS;UACT,UAAAiD;UACA,OAAAjD;UACA,aAAa,EAAE,KAAK,OAAO,KAAK,KAAK;UACrC,QAAQ;UACR,OAAO;UACP,QAAQ,CAAC;UACT,SAAS,CAAC;UACV;UACA,iBAAiB,uBAAuB,QAAQ,aAAa,QAAQ;QACvE,CAAC;MACH;AACA,UAAI,WAAW;AACb,eAAO,MAAM,mBAAmB,QAAQ,aAAa,UAAUiD,WAAU,SAAS;MACpF;AACA,UAAI,OAAO;AACT,cAAM;;UAEJ,OAAO,QAAQ;;AAEjB,YAAI;AACJ,YAAI,iBAAiB;AACnB,sBAAY,MAAM;YAChB;YACA;YACA;YACA;YACAA;YACAjD;YACA;YACA;UACF;QACF,WAAW,MAAM,aAAa,CAAC,MAAM,QAAQ,oBAAoB,MAAM,IAAI;AACzE,sBAAY,MAAM,gBAAgB,QAAQ,aAAa,MAAM,MAAM,SAAS,GAAGA,MAAK;QACtF,WAAW,MAAM,MAAM;AACrB,cAAI,CAAC,YAAY;AACf,kBAAM,IAAI,MAAM,gDAAgD;UAClE,WAAW,aAAa,IAAI,MAAM,GAAG;AACnC,wBAAY,MAAM;cAChB;cACA;cACA,MAAM;cACN;cACAiD;cACAjD;cACA;cACA;YACF;UACF,OAAO;AACL,kBAAM,mBAAmB,IAAI,IAAI,oBAAoB;AACrD,kBAAM,OAAO,MAAMiD,UAAS,EAAE,MAAM,MAAM,KAAK,IAAI,EAAE;AACrD,gBAAI,MAAM,QAAQ,SAAS;AACzB,+BAAiB,IAAI,MAAM;YAC7B;AACA,gBAAI,WAAW,WAAW;AACxB,0BAAY,IAAI,SAAS,MAAM;gBAC7B,QAAQ;gBACR,SAAS;kBACP,OAAO,MAAM,KAAK,iBAAiB,OAAO,CAAC,EAAE,KAAK,IAAI;gBACxD;cACF,CAAC;YACH,OAAO;AACL,oBAAM,MAAM,CAAC,GAAG,gBAAgB,EAAE;gBAChC,CAAC,KAAK,SAAS;AACb,sBAAI,IAAI,IAAI;AACZ,yBAAO;gBACT;;gBAEA,CAAC;cACH;AACA,0BAAY,mBAAmB,KAAK,MAAM;YAC5C;UACF;QACF,OAAO;AACL,gBAAM,IAAI,MAAM,8DAA8D;QAChF;AACA,YAAI,QAAQ,WAAW,SAAS,MAAM,QAAQ,MAAM,UAAU;AAC5D,gBAAM,OAAO,UAAU,QAAQ,IAAI,MAAM,GAAG,MAAM,GAAG,GAAG,IAAI,CAAC9G,OAAMA,GAAE,KAAK,EAAE,YAAY,CAAC;AACzF,cAAI,EAAE,MAAM,SAAS,QAAQ,KAAK,MAAM,SAAS,GAAG,IAAI;AACtD,wBAAY,IAAI,SAAS,UAAU,MAAM;cACvC,QAAQ,UAAU;cAClB,YAAY,UAAU;cACtB,SAAS,IAAI,QAAQ,UAAU,OAAO;YACxC,CAAC;AACD,sBAAU,QAAQ,OAAO,QAAQ,QAAQ;UAC3C;QACF;AACA,eAAO;MACT;AACA,UAAI6D,OAAM,SAAS,OAAO,cAAc;AACtC,cAAM,YAAY,IAAI,QAAQ,QAAQ,OAAO;AAC7C,kBAAU,IAAI,qBAAqB,MAAM;AACzC,eAAO,MAAM,MAAM,SAAS,EAAE,SAAS,UAAU,CAAC;MACpD;AACA,UAAIA,OAAM,OAAO;AACf,eAAO,KAAK,yBAAyB;UACnC,QAAQ;QACV,CAAC;MACH;AACA,UAAIA,OAAM,UAAU,GAAG;AACrB,YAAI,WAAW,OAAO,IAAI,aAAa,oDAAqD;AAC5F,eAAO,MAAM,mBAAmB;UAC9B,OAAO;UACP;UACA,SAAS;UACT,UAAAiD;UACA,OAAAjD;UACA,QAAQ;UACR,OAAO,IAAI,eAAe,KAAK,aAAa,cAAc,OAAO,IAAI,QAAQ,EAAE;UAC/E;QACF,CAAC;MACH;AACA,UAAIA,OAAM,cAAc;AACtB,eAAO,KAAK,aAAa,EAAE,QAAQ,IAAI,CAAC;MAC1C;AACA,YAAM,WAAW,MAAM,MAAM,OAAO;AACpC,aAAO,IAAI,SAAS,SAAS,MAAM,QAAQ;IAC7C,SAAS3D,IAAG;AACV,aAAO,MAAM,mBAAmB,QAAQ,aAAa,UAAUA,EAAC;IAClE,UAAA;AACE,aAAO,QAAQ,MAAM,MAAM;AACzB,cAAM,IAAI,MAAM,qEAAqE;MACvF;AACA,aAAO,aAAa,MAAM;AACxB,cAAM,IAAI,MAAM,oEAAoE;MACtF;IACF;EACF;AA5Ie;AA6IjB;AA5de;AA6df,SAAS,gBAAgBuG,OAAMK,WAAU;AACvC,SAAO,QAAQ,IAAI;;IAEjB,GAAGL,MAAK,QAAQ,IAAI,CAACrG,OAAMA,MAAK,SAASA,KAAI0G,UAAS,EAAE,MAAM1G,EAAC,EAAE,CAAC;IAClE0G,UAAS,EAAE,MAAML,MAAK,IAAI,EAAE;EAC9B,CAAC;AACH;AANS;AAOT,SAAS,kBAAkB,IAAI;AAC7B,SAAO,OAAO,QAAQ,SAAS;AAC7B;AACE,aAAO,GAAG,KAAK,GAAG,IAAI;IACxB;EACF;AACF;AANS;AAOT,SAAS,WAAWlD,MAAK,SAAS,YAAY;AAC5C,SAAO,OAAO;IACZ,OAAO,QAAQA,IAAG,EAAE;MAClB,CAAC,CAAC,CAAC,MAAM,EAAE,WAAW,OAAO,MAAM,eAAe,MAAM,CAAC,EAAE,WAAW,UAAU;IAClF;EACF;AACF;AANS;AAOT,SAAS,QAAQ,OAAO;AACxB;AADS;AAET,IAAI;AACJ,IAAI,UAAU;AACd,IAAM,SAAN,MAAa;SAAA;;;;EAEX;;EAEA;;EAEA,YAAYuD,WAAU;AACpB,SAAK,WAAW;AAChB,SAAK,YAAYA;AACjB,QAAIF,kBAAiB;AACnB,YAAM,WAAW,KAAK,QAAQ,KAAK,IAAI;AACvC,WAAK,UAAU,UAAU,SAAS;AAChC,cAAM,EAAE,SAAS,SAAS,SAAS;;UAEjC,eAAe;;AAEjB,cAAM,WAAW;AACjB,kBAAU;AACV,cAAM;AACN,eAAO,SAAS,GAAG,IAAI,EAAE,QAAQ,QAAQ;MAC3C;IACF;EACF;;;;EAIA,MAAM,KAAK,EAAE,KAAArD,MAAK,KAAK,GAAG;AACxB,UAAM,EAAE,mBAAmB,mBAAmB,IAAI,KAAK;AACvD,oBAAgB,WAAWA,MAAK,oBAAoB,iBAAiB,CAAC;AACtE,mBAAe,WAAWA,MAAK,mBAAmB,kBAAkB,CAAC;AACrE,QAAI,MAAM;AACR,YAAM,eAAe,wBAAC,SAAS;AAC7B,cAAM,SAAS,KAAK,IAAI;AACxB,YAAI,kBAAkB,gBAAgB;AACpC,iBAAO;QACT,OAAO;AACL,iBAAO,IAAI,eAAe;YACxB,MAAM,MAAMgD,aAAY;AACtB,kBAAI;AACF,sBAAM,SAAS,MAAM,QAAQ,QAAQ,MAAM;AAC3C,oBAAI,CAAC,QAAQ;AACXA,8BAAW,MAAM;AACjB;gBACF;AACA,sBAAM,SAAS,OAAO,UAAU;AAChC,uBAAO,MAAM;AACX,wBAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAC1C,sBAAI,KAAM;AACVA,8BAAW,QAAQ,KAAK;gBAC1B;AACAA,4BAAW,MAAM;cACnB,SAASN,SAAQ;AACfM,4BAAW,MAAMN,OAAM;cACzB;YACF;UACF,CAAC;QACH;MACF,GA1BqB;AA2BrB,8BAAwB,YAAY;IACtC;AACA,WAAO,kBAAkB,YAAY;AACnC,UAAI;AACF,cAAM,SAAS,MAAM,UAAU;AAC/B,aAAK,SAAS,QAAQ;UACpB,QAAQ,OAAO,WAAW,CAAC,EAAE,OAAO,SAAS,SAAS,MAAM,SAAS,KAAK;UAC1E,aAAa,OAAO,gBAAgB,CAAC,EAAE,QAAQ,OAAOA,SAAQ,MAAM,MAAM;AACxE,kBAAM,gBAAgB;cACpB;;cAEAA;cACA;YACF;AACA,oBAAQ,MAAM,aAAa;UAC7B;UACA,aAAa,OAAO,gBAAgB,CAAC,EAAE,SAAS,OAAO,OAAO,MAAM,OAAO,OAAO;UAClF,uBAAuB,OAAO,0BAA0B,CAAC,EAAE,OAAO,MAAM;AACtE,oBAAQ,MAAM,6CAA6C,MAAM;AACjE,mBAAO,EAAE,SAAS,cAAc;UAClC;UACA,SAAS,OAAO,YAAY,MAAM;UAClC;UACA,WAAW,OAAO,aAAa,CAAC;QAClC;AACA,gBAAQ;UACN,UAAU,OAAO,YAAY,OAAO,YAAY,OAAO,QAAQ,OAAO,SAAS,EAAE,IAAI,CAAC,CAAC,GAAGjG,EAAC,MAAM,CAAC,GAAGA,GAAE,MAAM,CAAC,CAAC,IAAI,CAAC;QACtH,CAAC;AACD,YAAI,OAAO,MAAM;AACf,gBAAM,OAAO,KAAK;QACpB;MACF,SAASE,IAAG;AACV;AACE,gBAAMA;QACR;MACF;IACF,GAAG;EACL;;;;;EAKA,MAAM,QAAQ,SAAS,UAAU;AAC/B,WAAO,QAAQ,SAAS,KAAK,UAAU,KAAK,WAAW;MACrD,GAAG;MACH,OAAO;MACP,OAAO;IACT,CAAC;EACH;AACF;AG91IO,IAAM,YAAY,MAAM;AAC/B,WAAS,OAAO,IAAI;AACnB,QAAI;AACJ,WAAO,MAAM,UAAW,QAAQ,GAAG;EACpC;AAHS;AAKT,SAAO;IACN,QAAQ;IACR,SAAS;IACT,QAAQ,oBAAI,IAAI,CAAC,CAAC;IAClB,WAAW,CAAC;IACZ,GAAG;MACF,QAAQ,EAAC,OAAM,0CAAyC,KAAI,wCAAuC,SAAQ,CAAC,0CAAyC,qCAAoC,qCAAoC,qCAAoC,wCAAuC,qCAAoC,qCAAoC,qCAAoC,mCAAmC,GAAE,aAAY,CAAC,GAAE,OAAM,CAAC,GAAE,yBAAwB,MAAK;MAC9e,OAAO;QACN,OAAO,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,OAAA,GAAA,UAAA,CAAqC;QAClD,OAAO,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,QAAA,GAAA,WAAA,CAAqC;QAClD,OAAO,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,QAAA,GAAA,WAAA,CAAqC;MACnD;MACA,SAAS,CAET;MACA,QAAQ;QACP;UACC,IAAI;UACJ,SAAS;UACT,QAAQ,CAAC;UACT,MAAM,EAAE,SAAS,CAAC,CAAE,GAAG,QAAQ,CAAC,CAAE,GAAG,MAAM,EAAE;UAC7C,UAAU;QACX;MACD;MACA,oBAAoB,oBAAI,IAAI,CAAC,CAAC;MAC9B,UAAU,mCAAY;AAErB,eAAO,CAAG;MACX,GAHU;MAIV,eAAe,CAAC;IACjB;EACD;AACA,GAAG;AAEI,IAAM,cAAc,oBAAI,IAAI,CAAC,CAAC;AAE9B,IAAM,YAAY;ACrCzB,eAAe,EAAE,IAAI,IAAI;AACvB,MAAI,KAAK,YAAY,OAAO,MAAM,WAAW,GAAG;AAChD,SAAO,KAAK,IAAI,QAAQ,IAAI,EAAE,QAAQ,MAAM,CAAC;AAC7C,MAAI,KAAK,MAAM,GAAG,MAAM,EAAE;AAC1B,SAAO,MAAM,OAAO,KAAK,IAAI,SAAS,MAAM,EAAE,IAAI;AACpD;AALe;AAMf,SAAS,EAAE,IAAI,IAAI,IAAI,IAAI;AACzB,UAAQ,YAAY,OAAO,MAAM,UAAU,GAAG,WAAWsC,GAAE,EAAE,MAAM,GAAG,QAAQ,IAAI,YAAY,MAAM,KAAK,IAAI,SAAS,GAAG,MAAM,EAAE,GAAG,QAAQ,OAAO,iBAAiB,oBAAoB,GAAG,GAAG,UAAU,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,IAAI;AACpO;AAFS;AAGT,IAAI,IAAoB,oBAAI,IAAI,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AAClF,SAASA,GAAE,IAAI;AACb,MAAI,CAAC,EAAE,IAAI,GAAG,MAAM,EAAG,QAAO;AAC9B,MAAI,EAAE,GAAG,QAAQ,IAAI,MAAM,KAAK,IAAI,QAAQ,GAAG,EAAG,QAAO;AACzD,MAAI,KAAK,GAAG,QAAQ,IAAI,eAAe,KAAK;AAC5C,SAAO,CAAC,+BAA+B,KAAK,EAAE;AAChD;AALSA;AAMT,SAAS,EAAE,IAAI;AACb,SAAO,eAAe,IAAI,IAAI;AAC5B,QAAI,IAAI,MAAM,EAAE,IAAI,EAAE;AACtB,QAAI,EAAG,QAAO;AACd,OAAG,MAAM,CAAC,OAAO;AACf,QAAE,IAAI,IAAI,IAAI,EAAE;IAClB,CAAC;EACH;AACF;AARS;AAWT,IAAImB,KAAI,OAAO;AACf,IAAI,IAAI,EAAE,KAAK,GAAGA,EAAC;AACnB,IAAI5C,MAAK,EAAE,KAAK,GAAG4C,EAAC;AACpB,IAAI,KAAK,EAAE,KAAK,GAAGA,EAAC;AAGpB,IAAI,SAAS,IAAI,OAAO,QAAQ;AAChC,IAAI,WAAW,IAAI,SAAS,OAAO;AACnC,IAAI,YAAY,GAAG,QAAQ;AAC3B,IAAI,eAAe,GAAG,QAAQ;AAC9B,IAAI,SAAS;EACX,MAAM,MAAM,KAAKJ,MAAKtD,WAAS;AAC7B,UAAM,OAAO,KAAK,EAAE,KAAAsD,KAAI,CAAC;AACzB,QAAI,SAAS,IAAI,QAAQ,IAAI,eAAe,KAAK;AACjD,QAAI,MAAM,CAAC,OAAO,SAAS,UAAU,KAAK,MAAMxC,IAAG,GAAG;AACtD,QAAI,IAAK,QAAO;AAChB,QAAI,EAAE,UAAU,OAAO,IAAI,IAAI,IAAI,IAAI,GAAG;AAC1C,QAAI;AACF,iBAAW,mBAAmB,QAAQ;IACxC,QAAQ;IACR;AACA,UAAM,oBAAoB,SAAS,QAAQ,OAAO,EAAE;AACpD,QAAI,kBAAkB;AACtB,UAAM,WAAW,kBAAkB,MAAM,UAAU,SAAS,CAAC;AAC7D,QAAI,UAAU;AACZ,wBAAkB,SAAS,OAAO,IAAI,QAAQ,KAAK,SAAS,OAAO,IAAI,WAAW,aAAa,KAAK,YAAY,SAAS,EAAE,iBAAiB,WAAW,iBAAiB,SAAS,EAAE;IACrL;AACA,QAAI,WAAW,SAAS,GAAG,EAAE,MAAM,MAAM,oBAAoB,WAAW;AACxE,QAAI,mBAAmB,YAAY,IAAI,QAAQ,KAAK,aAAa,gBAAgB,SAAS,WAAW,SAAS,GAAG;AAC/G,YAAM,MAAMwC,KAAI,OAAO,MAAM,GAAG;IAClC,WAAW,YAAY,YAAY,IAAI,QAAQ,GAAG;AAChD,UAAI,OAAQ,aAAY;AACxB,YAAM,IAAI,SAAS,IAAI;QACrB,QAAQ;QACR,SAAS;UACP;QACF;MACF,CAAC;IACH,OAAO;AACL,YAAM,MAAM,OAAO,QAAQ,KAAK;;QAE9B,UAAU,EAAE,KAAAA,MAAK,SAAAtD,WAAS,QAAQ,IAAI,IAAI,GAAG;QAC7C,mBAAmB;AACjB,iBAAO,IAAI,QAAQ,IAAI,kBAAkB;QAC3C;MACF,CAAC;IACH;AACA,aAAS,IAAI,QAAQ,IAAI,eAAe,KAAK;AAC7C,WAAO,UAAU,IAAI,SAAS,MAAM,EAAE,KAAK,KAAKA,SAAO,IAAI;EAC7D;AACF;AACA,IAAI,iBAAiB;;;ACjFd,IAAM8H,oBAAmB;AAAA,EAC/B,8BAA8B;AAAA,EAC9B,gCAAgC;AAAA,EAChC,gCAAgC;AAAA,EAChC,wBAAwB;AACzB;AAGO,IAAMC,2BAA0B,OAAO,QAAQD,iBAAgB;;;ACVtE,IAAI;AAEJ,IAAI,0BAA0B;AAE9B,SAAS,uBAAuB;AAC5B,MAAI,4BAA4B,QAAQ,wBAAwB,eAAe,GAAG;AAC9E,8BAA0B,IAAI,WAAW,KAAK,OAAO,MAAM;AAAA,EAC/D;AACA,SAAO;AACX;AALS;AAOT,IAAI,oBAAoB,IAAI,YAAY,SAAS,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AAEjF,kBAAkB,OAAO;AAEzB,IAAM,0BAA0B;AAChC,IAAI,kBAAkB;AACtB,SAAS,WAAW,KAAK,KAAK;AAC1B,qBAAmB;AACnB,MAAI,mBAAmB,yBAAyB;AAC5C,wBAAoB,IAAI,YAAY,SAAS,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC;AAC7E,sBAAkB,OAAO;AACzB,sBAAkB;AAAA,EACtB;AACA,SAAO,kBAAkB,OAAO,qBAAqB,EAAE,SAAS,KAAK,MAAM,GAAG,CAAC;AACnF;AARS;AAUT,SAAS,mBAAmB,KAAK,KAAK;AAClC,QAAM,QAAQ;AACd,SAAO,WAAW,KAAK,GAAG;AAC9B;AAHS;AAKT,SAAS,qBAAqB,KAAK;AAC/B,QAAM,MAAM,KAAK,wBAAwB;AACzC,OAAK,oBAAoB,IAAI,KAAK,GAAG;AACrC,SAAO;AACX;AAJS;AAMT,SAAS,YAAY,GAAG,MAAM;AAC1B,MAAI;AACA,WAAO,EAAE,MAAM,MAAM,IAAI;AAAA,EAC7B,SAASE,IAAG;AACR,UAAM,MAAM,qBAAqBA,EAAC;AAClC,SAAK,qBAAqB,GAAG;AAAA,EACjC;AACJ;AAPS;AAST,SAAS,oBAAoB,KAAK,KAAK;AACnC,QAAM,QAAQ;AACd,SAAO,qBAAqB,EAAE,SAAS,MAAM,GAAG,MAAM,IAAI,GAAG;AACjE;AAHS;AAKT,SAAS,WAAW,GAAG;AACnB,SAAO,MAAM,UAAa,MAAM;AACpC;AAFS;AAIT,IAAI,wBAAwB;AAE5B,SAAS,qBAAqB;AAC1B,MAAI,0BAA0B,QAAQ,sBAAsB,OAAO,aAAa,QAAS,sBAAsB,OAAO,aAAa,UAAa,sBAAsB,WAAW,KAAK,OAAO,QAAS;AAClM,4BAAwB,IAAI,SAAS,KAAK,OAAO,MAAM;AAAA,EAC3D;AACA,SAAO;AACX;AALS;AAOT,SAAS,YAAY,KAAK;AAEtB,QAAM,OAAO,OAAO;AACpB,MAAI,QAAQ,YAAY,QAAQ,aAAa,OAAO,MAAM;AACtD,WAAQ,GAAG,GAAG;AAAA,EAClB;AACA,MAAI,QAAQ,UAAU;AAClB,WAAO,IAAI,GAAG;AAAA,EAClB;AACA,MAAI,QAAQ,UAAU;AAClB,UAAM,cAAc,IAAI;AACxB,QAAI,eAAe,MAAM;AACrB,aAAO;AAAA,IACX,OAAO;AACH,aAAO,UAAU,WAAW;AAAA,IAChC;AAAA,EACJ;AACA,MAAI,QAAQ,YAAY;AACpB,UAAM,OAAO,IAAI;AACjB,QAAI,OAAO,QAAQ,YAAY,KAAK,SAAS,GAAG;AAC5C,aAAO,YAAY,IAAI;AAAA,IAC3B,OAAO;AACH,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,MAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,UAAM,SAAS,IAAI;AACnB,QAAIC,SAAQ;AACZ,QAAI,SAAS,GAAG;AACZ,MAAAA,UAAS,YAAY,IAAI,CAAC,CAAC;AAAA,IAC/B;AACA,aAAQ,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC5B,MAAAA,UAAS,OAAO,YAAY,IAAI,CAAC,CAAC;AAAA,IACtC;AACA,IAAAA,UAAS;AACT,WAAOA;AAAA,EACX;AAEA,QAAM,iBAAiB,sBAAsB,KAAK,SAAS,KAAK,GAAG,CAAC;AACpE,MAAI;AACJ,MAAI,kBAAkB,eAAe,SAAS,GAAG;AAC7C,gBAAY,eAAe,CAAC;AAAA,EAChC,OAAO;AAEH,WAAO,SAAS,KAAK,GAAG;AAAA,EAC5B;AACA,MAAI,aAAa,UAAU;AAIvB,QAAI;AACA,aAAO,YAAY,KAAK,UAAU,GAAG,IAAI;AAAA,IAC7C,SAAS,GAAG;AACR,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,MAAI,eAAe,OAAO;AACtB,WAAO,GAAG,IAAI,IAAI,KAAK,IAAI,OAAO;AAAA,EAAK,IAAI,KAAK;AAAA,EACpD;AAEA,SAAO;AACX;AA/DS;AAiET,IAAI,kBAAkB;AAEtB,IAAM,oBAAoB,IAAI,YAAY;AAE1C,IAAI,EAAE,gBAAgB,oBAAoB;AACtC,oBAAkB,aAAa,SAAU,KAAK,MAAM;AAChD,UAAM,MAAM,kBAAkB,OAAO,GAAG;AACxC,SAAK,IAAI,GAAG;AACZ,WAAO;AAAA,MACH,MAAM,IAAI;AAAA,MACV,SAAS,IAAI;AAAA,IACjB;AAAA,EACJ;AACJ;AAEA,SAAS,kBAAkB,KAAK,QAAQ,SAAS;AAE7C,MAAI,YAAY,QAAW;AACvB,UAAM,MAAM,kBAAkB,OAAO,GAAG;AACxC,UAAMC,OAAM,OAAO,IAAI,QAAQ,CAAC,MAAM;AACtC,yBAAqB,EAAE,SAASA,MAAKA,OAAM,IAAI,MAAM,EAAE,IAAI,GAAG;AAC9D,sBAAkB,IAAI;AACtB,WAAOA;AAAA,EACX;AAEA,MAAI,MAAM,IAAI;AACd,MAAI,MAAM,OAAO,KAAK,CAAC,MAAM;AAE7B,QAAM,MAAM,qBAAqB;AAEjC,MAAI,SAAS;AAEb,SAAO,SAAS,KAAK,UAAU;AAC3B,UAAM,OAAO,IAAI,WAAW,MAAM;AAClC,QAAI,OAAO,IAAM;AACjB,QAAI,MAAM,MAAM,IAAI;AAAA,EACxB;AAEA,MAAI,WAAW,KAAK;AAChB,QAAI,WAAW,GAAG;AACd,YAAM,IAAI,MAAM,MAAM;AAAA,IAC1B;AACA,UAAM,QAAQ,KAAK,KAAK,MAAM,SAAS,IAAI,SAAS,GAAG,CAAC,MAAM;AAC9D,UAAM,OAAO,qBAAqB,EAAE,SAAS,MAAM,QAAQ,MAAM,GAAG;AACpE,UAAM,MAAM,kBAAkB,WAAW,KAAK,IAAI;AAElD,cAAU,IAAI;AACd,UAAM,QAAQ,KAAK,KAAK,QAAQ,CAAC,MAAM;AAAA,EAC3C;AAEA,oBAAkB;AAClB,SAAO;AACX;AArCS;AAuCT,IAAM,gBAAiB,OAAO,yBAAyB,cACjD,EAAE,UAAU,6BAAM;AAAC,GAAP,aAAU,YAAY,6BAAM;AAAC,GAAP,cAAS,IAC3C,IAAI;AAAA,EACV,CAAAC,WAAS;AACL,SAAK,oBAAoB,IAAIA,OAAM,IAAI,EAAEA,OAAM,GAAGA,OAAM,CAAC;AAAA,EAC7D;AACA;AAEA,SAAS,eAAe,MAAM,MAAM,MAAM,GAAG;AACzC,QAAMA,SAAQ,EAAE,GAAG,MAAM,GAAG,MAAM,KAAK,GAAG,KAAK;AAC/C,QAAM,OAAO,2BAAI,SAAS;AAKtB,IAAAA,OAAM;AACN,UAAM,IAAIA,OAAM;AAChB,IAAAA,OAAM,IAAI;AACV,QAAI;AACA,aAAO,EAAE,GAAGA,OAAM,GAAG,GAAG,IAAI;AAAA,IAChC,UAAE;AACE,UAAI,EAAEA,OAAM,QAAQ,GAAG;AACnB,aAAK,oBAAoB,IAAIA,OAAM,IAAI,EAAE,GAAGA,OAAM,CAAC;AACnD,sBAAc,WAAWA,MAAK;AAAA,MAClC,OAAO;AACH,QAAAA,OAAM,IAAI;AAAA,MACd;AAAA,IACJ;AAAA,EACJ,GAlBa;AAmBb,OAAK,WAAWA;AAChB,gBAAc,SAAS,MAAMA,QAAOA,MAAK;AACzC,SAAO;AACX;AAxBS;AAiCT,SAAS,iBAAiB,MAAM,MAAM,MAAM;AACxC,OAAK,yBAAyB,MAAM,MAAM,IAAI;AAClD;AAFS;AAIT,SAAS,iBAAiB,MAAM,MAAM,MAAM,MAAM;AAC9C,OAAK,yBAAyB,MAAM,MAAM,MAAM,IAAI;AACxD;AAFS;AAIT,IAAM,qBAAsB,OAAO,yBAAyB,cACtD,EAAE,UAAU,6BAAM;AAAC,GAAP,aAAU,YAAY,6BAAM;AAAC,GAAP,cAAS,IAC3C,IAAI,qBAAqB,SAAO,KAAK,kBAAkB,QAAQ,GAAG,CAAC,CAAC;AAEnE,IAAM,SAAN,MAAM,QAAO;AAAA,EA7OpB,OA6OoB;AAAA;AAAA;AAAA,EAEhB,OAAO,OAAO,KAAK;AACf,UAAM,QAAQ;AACd,UAAM,MAAM,OAAO,OAAO,QAAO,SAAS;AAC1C,QAAI,YAAY;AAChB,uBAAmB,SAAS,KAAK,IAAI,WAAW,GAAG;AACnD,WAAO;AAAA,EACX;AAAA,EAEA,qBAAqB;AACjB,UAAM,MAAM,KAAK;AACjB,SAAK,YAAY;AACjB,uBAAmB,WAAW,IAAI;AAClC,WAAO;AAAA,EACX;AAAA,EAEA,OAAO;AACH,UAAM,MAAM,KAAK,mBAAmB;AACpC,SAAK,kBAAkB,KAAK,CAAC;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,KAAK,SAAS;AACjB,UAAM,MAAM,KAAK,YAAY,OAAO;AACpC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU,MAAM;AACZ,UAAM,MAAM,KAAK,iBAAiB,KAAK,WAAW,IAAI;AACtD,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,QAAQ;AACjB,UAAM,OAAO,kBAAkB,QAAQ,KAAK,mBAAmB,KAAK,kBAAkB;AACtF,UAAM,OAAO;AACb,UAAM,MAAM,KAAK,oBAAoB,KAAK,WAAW,MAAM,IAAI;AAC/D,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,MAAM;AACb,UAAM,MAAM,KAAK,kBAAkB,KAAK,WAAW,IAAI;AACvD,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO;AACH,SAAK,YAAY,KAAK,SAAS;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB;AAChB,QAAI;AACJ,QAAI;AACJ,QAAI;AACA,YAAM,MAAM,KAAK,yBAAyB,KAAK,SAAS;AACxD,oBAAc,IAAI,CAAC;AACnB,oBAAc,IAAI,CAAC;AACnB,aAAO,mBAAmB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAAA,IAC5C,UAAE;AACE,WAAK,gBAAgB,aAAa,aAAa,CAAC;AAAA,IACpD;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB,UAAU;AACtB,UAAM,OAAO,kBAAkB,UAAU,KAAK,mBAAmB,KAAK,kBAAkB;AACxF,UAAM,OAAO;AACb,UAAM,MAAM,KAAK,uBAAuB,KAAK,WAAW,MAAM,IAAI;AAClE,WAAO;AAAA,EACX;AACJ;AACA,IAAI,OAAO,QAAS,QAAO,UAAU,OAAO,OAAO,IAAI,OAAO,UAAU;AAExE,IAAM,2BAA4B,OAAO,yBAAyB,cAC5D,EAAE,UAAU,6BAAM;AAAC,GAAP,aAAU,YAAY,6BAAM;AAAC,GAAP,cAAS,IAC3C,IAAI,qBAAqB,SAAO,KAAK,wBAAwB,QAAQ,GAAG,CAAC,CAAC;AAIzE,IAAM,eAAN,MAAmB;AAAA,EAlV1B,OAkV0B;AAAA;AAAA;AAAA,EAEtB,qBAAqB;AACjB,UAAM,MAAM,KAAK;AACjB,SAAK,YAAY;AACjB,6BAAyB,WAAW,IAAI;AACxC,WAAO;AAAA,EACX;AAAA,EAEA,OAAO;AACH,UAAM,MAAM,KAAK,mBAAmB;AACpC,SAAK,wBAAwB,KAAK,CAAC;AAAA,EACvC;AAAA,EACA,cAAc;AACV,UAAM,MAAM,KAAK,2BAA2B;AAC5C,SAAK,YAAY,QAAQ;AACzB,6BAAyB,SAAS,MAAM,KAAK,WAAW,IAAI;AAC5D,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACX,UAAM,MAAM,KAAK,0BAA0B,KAAK,SAAS;AACzD,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK,SAAS;AACV,UAAM,MAAM,KAAK,kBAAkB,KAAK,WAAW,OAAO;AAC1D,WAAO;AAAA,EACX;AACJ;AACA,IAAI,OAAO,QAAS,cAAa,UAAU,OAAO,OAAO,IAAI,aAAa,UAAU;AAEpF,IAAM,mCAAoC,OAAO,yBAAyB,cACpE,EAAE,UAAU,6BAAM;AAAC,GAAP,aAAU,YAAY,6BAAM;AAAC,GAAP,cAAS,IAC3C,IAAI,qBAAqB,SAAO,KAAK,gCAAgC,QAAQ,GAAG,CAAC,CAAC;AAIjF,IAAM,uBAAN,MAAM,sBAAqB;AAAA,EA7XlC,OA6XkC;AAAA;AAAA;AAAA,EAE9B,OAAO,OAAO,KAAK;AACf,UAAM,QAAQ;AACd,UAAM,MAAM,OAAO,OAAO,sBAAqB,SAAS;AACxD,QAAI,YAAY;AAChB,qCAAiC,SAAS,KAAK,IAAI,WAAW,GAAG;AACjE,WAAO;AAAA,EACX;AAAA,EAEA,qBAAqB;AACjB,UAAM,MAAM,KAAK;AACjB,SAAK,YAAY;AACjB,qCAAiC,WAAW,IAAI;AAChD,WAAO;AAAA,EACX;AAAA,EAEA,OAAO;AACH,UAAM,MAAM,KAAK,mBAAmB;AACpC,SAAK,gCAAgC,KAAK,CAAC;AAAA,EAC/C;AAAA,EACA,cAAc;AACV,UAAM,MAAM,KAAK,2BAA2B;AAC5C,SAAK,YAAY,QAAQ;AACzB,qCAAiC,SAAS,MAAM,KAAK,WAAW,IAAI;AACpE,WAAO;AAAA,EACX;AACJ;AACA,IAAI,OAAO,QAAS,sBAAqB,UAAU,OAAO,OAAO,IAAI,qBAAqB,UAAU;AAEpG,IAAM,0BAA0B,oBAAI,IAAI,CAAC,SAAS,QAAQ,SAAS,CAAC;AAEpE,eAAe,WAAW,QAAQC,UAAS;AACvC,MAAI,OAAO,aAAa,cAAc,kBAAkB,UAAU;AAC9D,QAAI,OAAO,YAAY,yBAAyB,YAAY;AACxD,UAAI;AACA,eAAO,MAAM,YAAY,qBAAqB,QAAQA,QAAO;AAAA,MAEjE,SAASC,IAAG;AACR,cAAM,gBAAgB,OAAO,MAAM,wBAAwB,IAAI,OAAO,IAAI;AAE1E,YAAI,iBAAiB,OAAO,QAAQ,IAAI,cAAc,MAAM,oBAAoB;AAC5E,kBAAQ,KAAK,qMAAqMA,EAAC;AAAA,QAEvN,OAAO;AACH,gBAAMA;AAAA,QACV;AAAA,MACJ;AAAA,IACJ;AAEA,UAAM,QAAQ,MAAM,OAAO,YAAY;AACvC,WAAO,MAAM,YAAY,YAAY,OAAOD,QAAO;AAAA,EAEvD,OAAO;AACH,UAAM,WAAW,MAAM,YAAY,YAAY,QAAQA,QAAO;AAE9D,QAAI,oBAAoB,YAAY,UAAU;AAC1C,aAAO,EAAE,UAAU,OAAO;AAAA,IAE9B,OAAO;AACH,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AA/Be;AAiCf,SAAS,oBAAoB;AACzB,QAAMA,WAAU,CAAC;AACjB,EAAAA,SAAQ,MAAM,CAAC;AACf,EAAAA,SAAQ,IAAI,+BAA+B,SAAS,MAAM,MAAM;AAC5D,UAAM,MAAM,MAAM,mBAAmB,MAAM,IAAI,CAAC;AAChD,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,gCAAgC,SAAS,MAAM;AACvD,UAAM,MAAM,OAAO,IAAI;AACvB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,mBAAmB,SAAS,MAAM;AAC1C,UAAM,MAAM,OAAO,OAAO,IAAI;AAC9B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,8BAA8B,WAAW;AAAE,WAAO,YAAY,SAAU,MAAM,MAAM;AAC5F,YAAM,MAAM,KAAK,KAAK,IAAI;AAC1B,aAAO;AAAA,IACX,GAAG,SAAS;AAAA,EAAE;AACd,EAAAA,SAAQ,IAAI,8BAA8B,WAAW;AAAE,WAAO,YAAY,SAAU,MAAM,MAAM,MAAM;AAClG,YAAM,MAAM,KAAK,KAAK,MAAM,IAAI;AAChC,aAAO;AAAA,IACX,GAAG,SAAS;AAAA,EAAE;AACd,EAAAA,SAAQ,IAAI,8BAA8B,SAAS,MAAM;AACrD,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,iCAAiC,SAAS,MAAM;AACxD,UAAM,MAAM,OAAO,QAAQ,IAAI;AAC/B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6BAA6B,SAAS,MAAM,MAAM;AAC1D,UAAM,MAAM,KAAK,SAAS,CAAC;AAC3B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6BAA6B,WAAW;AAAE,WAAO,YAAY,SAAU,MAAM,MAAM;AAC3F,YAAM,MAAM,QAAQ,IAAI,MAAM,IAAI;AAClC,aAAO;AAAA,IACX,GAAG,SAAS;AAAA,EAAE;AACd,EAAAA,SAAQ,IAAI,uCAAuC,SAAS,MAAM,MAAM;AACpE,UAAM,MAAM,KAAK,IAAI;AACrB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,gDAAgD,SAAS,MAAM;AACvE,QAAI;AACJ,QAAI;AACA,eAAS,gBAAgB;AAAA,IAC7B,SAAS,GAAG;AACR,eAAS;AAAA,IACb;AACA,UAAM,MAAM;AACZ,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,wCAAwC,SAAS,MAAM;AAC/D,QAAI;AACJ,QAAI;AACA,eAAS,gBAAgB;AAAA,IAC7B,SAAS,GAAG;AACR,eAAS;AAAA,IACb;AACA,UAAM,MAAM;AACZ,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,+CAA+C,SAAS,MAAM;AACtE,QAAI;AACJ,QAAI;AACA,eAAS,gBAAgB;AAAA,IAC7B,SAAS,GAAG;AACR,eAAS;AAAA,IACb;AACA,UAAM,MAAM;AACZ,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,iCAAiC,SAAS,MAAM;AACxD,UAAM,MAAM,MAAM,QAAQ,IAAI;AAC9B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,uCAAuC,SAAS,MAAM;AAC9D,UAAM,MAAM,OAAO,cAAc,IAAI;AACrC,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,kCAAkC,WAAW;AACrD,UAAM,MAAM,OAAO;AACnB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,gCAAgC,SAAS,MAAM;AACvD,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,gCAAgC,SAAS,MAAM;AACvD,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6BAA6B,WAAW;AAChD,UAAM,MAAM,IAAI,OAAO;AACvB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6BAA6B,WAAW;AAChD,UAAM,MAAM,IAAI,MAAM;AACtB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6BAA6B,SAAS,MAAM,MAAM;AAC1D,QAAI;AACA,UAAI,SAAS,EAAC,GAAG,MAAM,GAAG,KAAI;AAC9B,UAAI,MAAM,wBAACE,OAAMC,UAAS;AACtB,cAAM,IAAI,OAAO;AACjB,eAAO,IAAI;AACX,YAAI;AACA,iBAAO,iBAAiB,GAAG,OAAO,GAAGD,OAAMC,KAAI;AAAA,QACnD,UAAE;AACE,iBAAO,IAAI;AAAA,QACf;AAAA,MACJ,GARU;AASV,YAAM,MAAM,IAAI,QAAQ,GAAG;AAC3B,aAAO;AAAA,IACX,UAAE;AACE,aAAO,IAAI,OAAO,IAAI;AAAA,IAC1B;AAAA,EACJ;AACA,EAAAH,SAAQ,IAAI,6BAA6B,WAAW;AAChD,UAAM,MAAM,oBAAI,IAAI;AACpB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6BAA6B,SAAS,MAAM;AACpD,UAAM,MAAM,IAAI,WAAW,IAAI;AAC/B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,mCAAmC,SAAS,MAAM,MAAM;AAChE,UAAM,MAAM,IAAI,SAAS,mBAAmB,MAAM,IAAI,CAAC;AACvD,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,uCAAuC,SAAS,MAAM;AAC9D,UAAM,MAAM,IAAI,WAAW,SAAS,CAAC;AACrC,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,8BAA8B,SAAS,MAAM;AACrD,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,8BAA8B,WAAW;AAAE,WAAO,YAAY,SAAU,MAAM;AACtF,YAAM,MAAM,KAAK,KAAK;AACtB,aAAO;AAAA,IACX,GAAG,SAAS;AAAA,EAAE;AACd,EAAAA,SAAQ,IAAI,0CAA0C,SAAS,MAAM,MAAM,MAAM;AAC7E,eAAW,UAAU,IAAI,KAAK,oBAAoB,MAAM,IAAI,GAAG,IAAI;AAAA,EACvE;AACA,EAAAA,SAAQ,IAAI,wCAAwC,SAAS,MAAM;AAC/D,mBAAe,IAAI;AAAA,EACvB;AACA,EAAAA,SAAQ,IAAI,wCAAwC,SAAS,MAAM;AAC/D,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,gCAAgC,WAAW;AACnD,UAAM,MAAM,KAAK,OAAO;AACxB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,iCAAiC,SAAS,MAAM;AACxD,UAAM,MAAM,QAAQ,QAAQ,IAAI;AAChC,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6BAA6B,SAAS,MAAM,MAAM,MAAM;AAChE,SAAK,IAAI,IAAI;AAAA,EACjB;AACA,EAAAA,SAAQ,IAAI,6BAA6B,SAAS,MAAM,MAAM,MAAM;AAChE,SAAK,SAAS,CAAC,IAAI;AAAA,EACvB;AACA,EAAAA,SAAQ,IAAI,6BAA6B,SAAS,MAAM,MAAM,MAAM;AAChE,UAAM,MAAM,KAAK,IAAI,MAAM,IAAI;AAC/B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,gDAAgD,WAAW;AACnE,UAAM,MAAM,OAAO,WAAW,cAAc,OAAO;AACnD,WAAO,WAAW,GAAG,IAAI,IAAI,qBAAqB,GAAG;AAAA,EACzD;AACA,EAAAA,SAAQ,IAAI,qDAAqD,WAAW;AACxE,UAAM,MAAM,OAAO,eAAe,cAAc,OAAO;AACvD,WAAO,WAAW,GAAG,IAAI,IAAI,qBAAqB,GAAG;AAAA,EACzD;AACA,EAAAA,SAAQ,IAAI,8CAA8C,WAAW;AACjE,UAAM,MAAM,OAAO,SAAS,cAAc,OAAO;AACjD,WAAO,WAAW,GAAG,IAAI,IAAI,qBAAqB,GAAG;AAAA,EACzD;AACA,EAAAA,SAAQ,IAAI,gDAAgD,WAAW;AACnE,UAAM,MAAM,OAAO,WAAW,cAAc,OAAO;AACnD,WAAO,WAAW,GAAG,IAAI,IAAI,qBAAqB,GAAG;AAAA,EACzD;AACA,EAAAA,SAAQ,IAAI,8BAA8B,SAAS,MAAM,MAAM;AAC3D,UAAM,MAAM,KAAK,KAAK,IAAI;AAC1B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,+BAA+B,SAAS,MAAM;AACtD,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,gDAAgD,SAAS,MAAM,MAAM;AAC7E,UAAMI,KAAI;AACV,UAAM,MAAM,OAAOA,OAAO,WAAWA,KAAI;AACzC,uBAAmB,EAAE,YAAY,OAAO,IAAI,GAAG,WAAW,GAAG,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI;AACtF,uBAAmB,EAAE,SAAS,OAAO,IAAI,GAAG,CAAC,WAAW,GAAG,GAAG,IAAI;AAAA,EACtE;AACA,EAAAJ,SAAQ,IAAI,4CAA4C,SAAS,MAAM;AACnE,UAAMI,KAAI;AACV,UAAM,MAAM,OAAOA,OAAO,YAAYA,KAAI;AAC1C,WAAO,WAAW,GAAG,IAAI,WAAW,MAAM,IAAI;AAAA,EAClD;AACA,EAAAJ,SAAQ,IAAI,wCAAwC,SAAS,MAAM;AAC/D,UAAM,MAAM,KAAK;AACjB,QAAI,IAAI,SAAS,GAAG;AAChB,UAAI,IAAI;AACR,aAAO;AAAA,IACX;AACA,UAAM,MAAM;AACZ,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6CAA6C,SAAS,MAAM,MAAM;AAC1E,UAAM,MAAM,YAAY,IAAI;AAC5B,UAAM,OAAO,kBAAkB,KAAK,KAAK,mBAAmB,KAAK,kBAAkB;AACnF,UAAM,OAAO;AACb,uBAAmB,EAAE,SAAS,OAAO,IAAI,GAAG,MAAM,IAAI;AACtD,uBAAmB,EAAE,SAAS,OAAO,IAAI,GAAG,MAAM,IAAI;AAAA,EAC1D;AACA,EAAAA,SAAQ,IAAI,oCAAoC,SAAS,MAAM,MAAM;AACjE,UAAM,MAAM,QAAQ;AACpB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,0CAA0C,SAAS,MAAM;AACjE,UAAM,MAAM,OAAO,SAAU;AAC7B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,4CAA4C,SAAS,MAAM;AACnE,UAAM,MAAM,OAAO,SAAU;AAC7B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,0CAA0C,SAAS,MAAM;AACjE,UAAM,MAAM;AACZ,UAAM,MAAM,OAAO,QAAS,YAAY,QAAQ;AAChD,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,0CAA0C,SAAS,MAAM;AACjE,UAAM,MAAM,OAAO,SAAU;AAC7B,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,6CAA6C,SAAS,MAAM;AACpE,UAAM,MAAM,SAAS;AACrB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,yCAAyC,SAAS,MAAM,MAAM;AACtE,UAAM,MAAM,SAAS;AACrB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,8CAA8C,SAAS,MAAM,MAAM;AAC3E,UAAM,MAAM,QAAQ;AACpB,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,2CAA2C,SAAS,MAAM,MAAM;AACxE,UAAM,MAAM;AACZ,UAAM,MAAM,OAAO,QAAS,WAAW,MAAM;AAC7C,uBAAmB,EAAE,WAAW,OAAO,IAAI,GAAG,WAAW,GAAG,IAAI,IAAI,KAAK,IAAI;AAC7E,uBAAmB,EAAE,SAAS,OAAO,IAAI,GAAG,CAAC,WAAW,GAAG,GAAG,IAAI;AAAA,EACtE;AACA,EAAAA,SAAQ,IAAI,2CAA2C,SAAS,MAAM,MAAM;AACxE,UAAM,MAAM;AACZ,UAAM,MAAM,OAAO,QAAS,WAAW,MAAM;AAC7C,QAAI,OAAO,WAAW,GAAG,IAAI,IAAI,kBAAkB,KAAK,KAAK,mBAAmB,KAAK,kBAAkB;AACvG,QAAI,OAAO;AACX,uBAAmB,EAAE,SAAS,OAAO,IAAI,GAAG,MAAM,IAAI;AACtD,uBAAmB,EAAE,SAAS,OAAO,IAAI,GAAG,MAAM,IAAI;AAAA,EAC1D;AACA,EAAAA,SAAQ,IAAI,uCAAuC,SAAS,MAAM,MAAM;AACpE,UAAM,IAAI,MAAM,mBAAmB,MAAM,IAAI,CAAC;AAAA,EAClD;AACA,EAAAA,SAAQ,IAAI,mCAAmC,SAAS,MAAM,MAAM;AAEhE,UAAM,MAAM,mBAAmB,MAAM,IAAI;AACzC,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,mCAAmC,SAAS,MAAM;AAE1D,UAAM,MAAM,OAAO,QAAQ,IAAI,IAAI;AACnC,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,mCAAmC,SAAS,MAAM;AAE1D,UAAM,MAAM;AACZ,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,mCAAmC,SAAS,MAAM,MAAM;AAEhE,UAAM,MAAM,eAAe,MAAM,MAAM,IAAI,gBAAgB;AAC3D,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,mCAAmC,SAAS,MAAM;AAE1D,UAAM,MAAM;AACZ,WAAO;AAAA,EACX;AACA,EAAAA,SAAQ,IAAI,kCAAkC,WAAW;AACrD,UAAMK,SAAQ,KAAK;AACnB,UAAM,SAASA,OAAM,KAAK,CAAC;AAC3B,IAAAA,OAAM,IAAI,GAAG,MAAS;AACtB,IAAAA,OAAM,IAAI,SAAS,GAAG,MAAS;AAC/B,IAAAA,OAAM,IAAI,SAAS,GAAG,IAAI;AAC1B,IAAAA,OAAM,IAAI,SAAS,GAAG,IAAI;AAC1B,IAAAA,OAAM,IAAI,SAAS,GAAG,KAAK;AAC3B;AAAA,EACJ;AAEA,SAAOL;AACX;AArTS;AAuTT,SAAS,kBAAkBA,UAAS,QAAQ;AAE5C;AAFS;AAIT,SAAS,oBAAoB,UAAU,QAAQ;AAC3C,SAAO,SAAS;AAChB,aAAW,yBAAyB;AACpC,0BAAwB;AACxB,4BAA0B;AAG1B,OAAK,iBAAiB;AACtB,SAAO;AACX;AATS;AAWT,SAAS,SAAS,QAAQ;AACtB,MAAI,SAAS,OAAW,QAAO;AAG/B,MAAI,OAAO,WAAW,aAAa;AAC/B,QAAI,OAAO,eAAe,MAAM,MAAM,OAAO,WAAW;AACpD,OAAC,EAAC,OAAM,IAAI;AAAA,IAChB,OAAO;AACH,cAAQ,KAAK,4EAA4E;AAAA,IAC7F;AAAA,EACJ;AAEA,QAAMA,WAAU,kBAAkB;AAElC,oBAAkBA,QAAO;AAEzB,MAAI,EAAE,kBAAkB,YAAY,SAAS;AACzC,aAAS,IAAI,YAAY,OAAO,MAAM;AAAA,EAC1C;AAEA,QAAM,WAAW,IAAI,YAAY,SAAS,QAAQA,QAAO;AAEzD,SAAO,oBAAoB,UAAU,MAAM;AAC/C;AAvBS;AAyBT,eAAe,WAAW,gBAAgB;AACtC,MAAI,SAAS,OAAW,QAAO;AAG/B,MAAI,OAAO,mBAAmB,aAAa;AACvC,QAAI,OAAO,eAAe,cAAc,MAAM,OAAO,WAAW;AAC5D,OAAC,EAAC,eAAc,IAAI;AAAA,IACxB,OAAO;AACH,cAAQ,KAAK,2FAA2F;AAAA,IAC5G;AAAA,EACJ;AAEA,MAAI,OAAO,mBAAmB,aAAa;AACvC,qBAAiB,IAAI,IAAI,2BAA2B,YAAY,GAAG;AAAA,EACvE;AACA,QAAMA,WAAU,kBAAkB;AAElC,MAAI,OAAO,mBAAmB,YAAa,OAAO,YAAY,cAAc,0BAA0B,WAAa,OAAO,QAAQ,cAAc,0BAA0B,KAAM;AAC5K,qBAAiB,MAAM,cAAc;AAAA,EACzC;AAEA,oBAAkBA,QAAO;AAEzB,QAAM,EAAE,UAAU,OAAO,IAAI,MAAM,WAAW,MAAM,gBAAgBA,QAAO;AAE3E,SAAO,oBAAoB,UAAU,MAAM;AAC/C;AA1Be;AA6Bf,IAAO,0BAAQ;;;ACzzBf,OAAO,gBAAgB;;;ACMvB,IAAI,CAAC,OAAO,SAAS;AAClB,SAAe,UAAU,OAAO,IAAI,SAAS;AAChD;AACA,IAAI,CAAC,OAAO,cAAc;AACvB,SAAe,eAAe,OAAO,IAAI,cAAc;AAC1D;AAEA,IAAIM,qBAAoB,OAA+C,uBAAuB;AAC9F,IAAIC;AACJ,IAAID,oBAAmB;AACrB,EAAAC,iBAAgB,MAAM;;IAAyBD;;AACjD;AAMO,IAAIE,aAAYD,iBAAgBA,eAAc,YAAY,MAAM;AAAC;AAQjE,SAASE,YAAW,OAA4B;AACrD,UAAQ,OAAO,OAAA;IACb,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IAET,KAAK;AACH,aAAO;IAET,KAAK;IACL,KAAK;AAEH;IAEF,KAAK;AACH,aAAO;IAET;AACE,aAAO;EAAA;AAKX,MAAI,UAAU,MAAM;AAClB,WAAO;EACT;AAIA,MAAI,YAAY,OAAO,eAAe,KAAK;AAC3C,UAAQ,WAAA;IACN,KAAK,OAAO;AACV,aAAO;IAET,KAAK,SAAS;AACZ,aAAO;IAET,KAAK,MAAM;AACT,aAAO;IAET,KAAK,KAAK;AACR,aAAO;IAET,KAAK,WAAW;AACd,aAAO;;IAIT,KAAKC,SAAQ;AACX,aAAO;IAET,KAAKC,YAAW;AACd,aAAO;;IAIT;AACE,UAAIJ,gBAAe;AAGjB,YAAI,aAAaA,eAAc,QAAQ,aACnC,iBAAiBA,eAAc,aAAa;AAC9C,iBAAO;QACT,WAAW,aAAaA,eAAc,WAAW,aACtC,aAAaA,eAAc,YAAY,WAAW;AAG3D,iBAAO;QACT;MACF;AAEA,UAAI,iBAAiBC,YAAW;AAC9B,eAAO;MACT;AAEA,UAAI,iBAAiB,OAAO;AAC1B,eAAO;MACT;AAEA,aAAO;EAAA;AAEb;AAlFgB,OAAAC,aAAA;AAoFhB,SAASG,gBAAsB;AAC7B,QAAM,IAAI,MAAM,0CAA0C;AAC5D;AAFS,OAAAA,eAAA;AAMF,IAAIC,WAAmB,EAAE,UAAUD,eAAc,SAASA,cAAA;AAoB1D,IAAeE,YAAf,MAAwB;SAAA;;;AA2E/B;AAEO,IAAMC,iBAAN,cAA4BD,UAAS;SAAA;;;EAC1C,YAAoBE,QAAY;AAAE,UAAA;AAAd,SAAA,QAAAA;EAAuB;EAE3C,KAAK,MAAoB,MAA4B;AAAE,WAAO;EAAM;EACpE,IAAI,MAAoB,UAAsB,cAAmC;AAAE,WAAO;EAAM;EAChG,IAAI,MAA8B;AAAE,WAAO;EAAM;EACjD,MAAgB;AAAE,WAAO;EAAM;EAC/B,OAAyC;AAAE,WAAO,QAAQ,OAAO,KAAK,KAAK;EAAG;EAC9E,4BAAkC;EAAC;EACnC,UAAgB;EAAC;EACjB,SAAS,UAAsC;AAC7C,QAAI;AACF,eAAS,KAAK,KAAK;IACrB,SAAS,KAAK;AAEZ,cAAQ,QAAQ,GAAG;IACrB;EACF;AACF;AAEA,IAAMC,iBAA0B,IAAIF;EAChC,IAAI,MAAM,uDAAuD;AAAC;AAKtE,IAAIG,UAA0B,wBAAC,MAAgB,MAAoB,WAAuB;AACxF,SAAO,KAAK,KAAK,MAAM,MAAM;AAC/B,GAF8B;AAIvB,SAASC,qBAAuB,aAA8B,UAAsB;AACzF,MAAI,WAAWD;AACf,EAAAA,UAAS;AACT,MAAI;AACF,WAAO,SAAA;EACT,UAAA;AACE,IAAAA,UAAS;EACX;AACF;AARgB,OAAAC,sBAAA;AAWhB,IAAIC,YAAW,OAAO,UAAU;AAOhC,IAAMC,kBAA+C;EACnD,MAAM,QAAwB,SAAc,eAAsB;AAChE,QAAI,OAAO,OAAO;AAClB,WAAO,IAAIV,YAAWO;MAAO,KAAK;MAC9B,KAAK,iBAAiB,CAAA;MAAII,YAAW,cAAc,aAAa;IAAA,GAAI,CAAA,CAAE;EAC5E;EAEA,IAAI,QAAwB,MAAuB,UAAe;AAChE,QAAI,OAAO,OAAO;AAClB,QAAI,SAASF,WAAU;AACrB,aAAO;IACT,WAAW,QAAQT,YAAW,WAAW;AAOvC,aAAa,KAAM,IAAI;IACzB,WAAW,OAAO,SAAS,UAAU;AAEnC,aAAO,IAAIA;QAAW,KAAK;QACvB,KAAK,gBAAgB,CAAC,GAAG,KAAK,eAAe,IAAI,IAAI,CAAC,IAAI;MAAA;IAChE,WAAW,SAAS,OAAO,YACpB,CAAC,KAAK,iBAAiB,KAAK,cAAc,UAAU,IAAI;AAE7D,aAAO,MAAM;AACX,aAAK,KAAK,QAAA;AACV,aAAK,OAAOM;MACd;IACF,OAAO;AACL,aAAO;IACT;EACF;EAEA,IAAI,QAAwB,MAAuB;AACjD,QAAI,OAAO,OAAO;AAClB,QAAI,SAASG,WAAU;AACrB,aAAO;IACT,WAAW,QAAQT,YAAW,WAAW;AACvC,aAAO,QAAQ;IACjB,WAAW,OAAO,SAAS,UAAU;AACnC,aAAO;IACT,WAAW,SAAS,OAAO,YACpB,CAAC,KAAK,iBAAiB,KAAK,cAAc,UAAU,IAAI;AAC7D,aAAO;IACT,OAAO;AACL,aAAO;IACT;EACF;EAEA,UAAU,QAAwB,MAAW;AAC3C,UAAM,IAAI,MAAM,8CAA8C;EAChE;EAEA,eAAe,QAAwB,UAA2BY,aACpD;AACZ,UAAM,IAAI,MAAM,uCAAuC;EACzD;EAEA,eAAe,QAAwB,GAA6B;AAClE,UAAM,IAAI,MAAM,uCAAuC;EACzD;EAEA,yBAAyB,QAAwB,GAAoD;AAEnG,WAAO;EACT;EAEA,eAAe,QAAuC;AACpD,WAAO,OAAO,eAAe,OAAO,GAAG;EACzC;EAEA,aAAa,QAAiC;AAC5C,WAAO;EACT;EAEA,QAAQ,QAAoD;AAC1D,WAAO,CAAA;EACT;EAEA,kBAAkB,QAAiC;AAEjD,WAAO;EACT;EAEA,IAAI,QAAwB,GAAoB,UAAe,UAAwB;AACrF,UAAM,IAAI,MAAM,uCAAuC;EACzD;EAEA,eAAe,QAAwBC,IAA2B;AAChE,UAAM,IAAI,MAAM,wCAAwC;EAC1D;AACF;AAOO,IAAMd,WAAN,MAAM,iBAAgBF,WAAU;SAAA;;;;;EAGrC,YAAY,MAAgB,eAA8B;AACxD,UAAA;AAEA,QAAI,EAAE,gBAAgBM,YAAW;AAK/B,UAAI,QAAa;AACjB,UAAI,iBAAiBN,cAAa,iBAAiB,UAAU;AAC3D,eAAOiB,gBAAe,OAAO,OAAO,MAAS;MAC/C,OAAO;AAGL,eAAO,IAAIC,iBAAgBJ,YAAW,cAAc,KAAK,CAAC;MAC5D;AAGA,UAAI,eAAe;AACjB,cAAM,IAAI,UAAU,0DAA0D;MAChF;IACF;AAEA,SAAK,OAAO;AACZ,SAAK,gBAAgB;AAKrB,QAAI,OAAY,6BAAM;IAAC,GAAP;AAChB,SAAK,MAAM;AACX,WAAO,IAAI,MAAM,MAAMD,eAAc;EACvC;EAEO;EACA;EAEP,MAAe;AAQb,QAAI,SAAS,KAAKD,SAAQ;AAC1B,QAAI,OAAO,eAAe;AACxB,aAAO,IAAI,SAAQ,OAAO,KAAK,IAAI,OAAO,aAAa,CAAC;IAC1D,OAAO;AACL,aAAO,IAAI,SAAQ,OAAO,KAAK,IAAA,CAAK;IACtC;EACF;EAEA,YAAY,UAAgC;AAC1C,SAAKA,SAAQ,EAAE,KAAK,SAAS,QAAQ;EACvC;EAEA,IAAI,MAAkD;AACpD,QAAI,EAAC,MAAM,cAAA,IAAiB,KAAKA,SAAQ;AACzC,WAAOP,SAAQ,QAAQ,MAAM,iBAAiB,CAAA,GAAI,IAAI;EACxD;AACF;AAEO,IAAMF,cAAN,cAAyBD,SAAQ;SAAA;;;;EAEtC,YAAY,MAAgB,eAA6B;AACvD,UAAM,MAAM,aAAa;EAC3B;EAEA,KAAK,aACA,YACmB;AACtB,WAAOiB,aAAY,IAAI,EAAE,KAAK,GAAG,SAAS;EAC5C;EAEA,MAAM,YAA8E;AAClF,WAAOA,aAAY,IAAI,EAAE,MAAM,GAAG,SAAS;EAC7C;EAEA,QAAQ,WAA+D;AACrE,WAAOA,aAAY,IAAI,EAAE,QAAQ,GAAG,SAAS;EAC/C;AACF;AAYO,SAASC,2BAA0B,MAAyB;AACjE,MAAI,EAAC,MAAM,cAAA,IAAiB,KAAKR,SAAQ;AAEzC,MAAI,iBAAiB,cAAc,SAAS,GAAG;AAC7C,WAAO,KAAK,IAAI,aAAa;EAC/B,OAAO;AACL,WAAO;EACT;AACF;AARgB,OAAAQ,4BAAA;AAkBT,SAASC,kBAAiB,MAAyB;AACxD,MAAI,EAAC,MAAM,cAAA,IAAiB,KAAKT,SAAQ;AAEzC,MAAI,eAAe;AACjB,WAAO,KAAK,IAAI,aAAa;EAC/B,OAAO;AACL,WAAO,KAAK,IAAA;EACd;AACF;AARgB,OAAAS,mBAAA;AAgBT,SAASC,wBAAuB,MAAqC;AAC1E,MAAI,EAAC,MAAM,cAAA,IAAiB,KAAKV,SAAQ;AAEzC,MAAI,iBAAiB,cAAc,SAAS,GAAG;AAC7C,WAAO;EACT;AAEA,SAAO;AACT;AARgB,OAAAU,yBAAA;AAeT,SAASC,oBAAmB,MAAyB;AAC1D,SAAO,KAAKX,SAAQ,EAAE;AACxB;AAFgB,OAAAW,qBAAA;AAQT,SAASC,mBAAkB,MAA+D;AAC/F,SAAO,KAAKZ,SAAQ;AACtB;AAFgB,OAAAY,oBAAA;AAMhB,eAAeL,aAAY,SAAuC;AAChE,MAAI,EAAC,MAAM,cAAA,IAAiB,QAAQP,SAAQ;AAC5C,MAAI,cAAe,SAAS,GAAG;AAK7B,WAAO,KAAK,IAAI,aAAc;EAChC;AACA,MAAI,UAAU,MAAM,KAAK,KAAA;AACzB,SAAO,QAAQ,eAAA;AACjB;AAXe,OAAAO,cAAA;AA4ER,IAAML,cAAN,MAAM,YAAW;SAAA;;;;EAkFd,YAEC,OAOCW,SAQA,OAIA,UACR;AApBO,SAAA,QAAA;AAOC,SAAA,SAAAA;AAQA,SAAA,QAAA;AAIA,SAAA,WAAA;EACP;;;;;;;;EAhGH,OAAc,cAAc,OAA4B;AACtD,WAAO,IAAI,YAAW,OAAO,QAAQ;EACvC;;;;;;EAOA,OAAc,cAAc,OAA4B;AACtD,WAAO,IAAI,YAAW,OAAO,QAAQ;EACvC;;;;EAKA,OAAc,UAAUC,QAAiC;AACvD,QAAI,QAAmB,CAAA;AACvB,QAAI,WAA6B,CAAA;AAEjC,QAAI,cAAyB,CAAA;AAE7B,aAAS,WAAWA,QAAO;AACzB,cAAQ,iBAAA;AACR,eAAS,QAAQ,QAAQ,OAAQ;AAC/B,cAAM,KAAK,IAAI;MACjB;AACA,eAAS,WAAW,QAAQ,UAAW;AACrC,YAAI,QAAQ,WAAW,SAAS;AAG9B,oBAAU;YACR,QAAQ;YACR,UAAU,YAAY;YACtB,SAAS,QAAQ;UAAA;QAErB;AACA,iBAAS,KAAK,OAAO;MACvB;AACA,kBAAY,KAAK,QAAQ,KAAK;IAChC;AAEA,WAAO,IAAI,YAAW,aAAa,SAAS,OAAO,QAAQ;EAC7D;;;;;;;;;;;;EAaA,OAAc,YAAY,OAAkB,UAA4B;AACtE,WAAO,IAAI,YAAW,MAAM,SAAS,OAAO,QAAQ;EACtD;;;;;;;EAQA,OAAc,aACV,OAAgB,WAA+B,OAAsC;AACvF,QAAI,SAAS,IAAI,YAAW,MAAM,SAAS,CAAA,GAAI,CAAA,CAAE;AACjD,WAAO,QAAQ,OAAO;MAAS;MAAO;MAAW;MAAS;;MAAqB;MAAM;IAAA;AACrF,WAAO;EACT;;;;;;EAgCQ;;EAGD,oBAAoB,QAA8B,QAC9B,WAAoB,MAAgB;AAC7D,QAAI,KAAK,WAAW,UAAU;AAC5B,aAAOT,gBAAe,OAAO,QAAQ,MAAM;IAC7C,WAAW,KAAK,WAAW,UAAU;AAUnC,UAAI,OAAO,KAAK,YAAY,IAAI,MAAM;AACtC,UAAI,MAAM;AACR,YAAI,UAAU;AACZ,iBAAO,KAAK,IAAA;QACd,OAAO;AACL,eAAK,YAAY,OAAO,MAAM;AAC9B,iBAAO;QACT;MACF,OAAO;AACL,eAAOA,gBAAe,OAAO,QAAQ,MAAM;AAC3C,YAAI,UAAU;AACZ,cAAI,CAAC,KAAK,YAAY;AACpB,iBAAK,aAAa,oBAAI,IAAA;UACxB;AACA,eAAK,WAAW,IAAI,QAAQ,IAAI;AAChC,iBAAO,KAAK,IAAA;QACd,OAAO;AACL,iBAAO;QACT;MACF;IACF,OAAO;AACL,YAAM,IAAI,MAAM,gDAAgD;IAClE;EACF;EAEQ,SACJ,OAAgB,WAA+B,UAA2B,QAC1E,UAAmB,OAAmC;AACxD,QAAI,OAAOhB,YAAW,KAAK;AAC3B,YAAQ,MAAA;MACN,KAAK;AAEH,eAAO;MAET,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;AAGH,eAAO;MAET,KAAK,SAAS;AAGZ,YAAIyB,SAAwB;AAC5B,YAAI,MAAMA,OAAM;AAChB,YAAI,SAAS,IAAI,MAAM,GAAG;AAC1B,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,iBAAO,CAAC,IAAI,KAAK,SAASA,OAAM,CAAC,GAAGA,QAAO,GAAG,QAAQ,UAAU,KAAK;QACvE;AACA,eAAO;MACT;MAEA,KAAK,UAAU;AAEb,YAAI,SAAkC,CAAA;AACtC,YAAI,SAAkC;AACtC,iBAAS,KAAK,QAAQ;AACpB,iBAAO,CAAC,IAAI,KAAK,SAAS,OAAO,CAAC,GAAG,QAAQ,GAAG,QAAQ,UAAU,KAAK;QACzE;AACA,eAAO;MACT;MAEA,KAAK;MACL,KAAK,eAAe;AAClB,YAAI,OAAgB;AACpB,YAAI;AACJ,YAAI,UAAU;AACZ,iBAAOL,kBAAiB,IAAI;QAC9B,OAAO;AACL,iBAAOD,2BAA0B,IAAI;QACvC;AACA,YAAI,gBAAgBjB,aAAY;AAC9B,cAAI,UAAU,IAAIA,YAAW,MAAM,CAAA,CAAE;AACrC,eAAK,SAAU,KAAK,EAAC,QAAQ,UAAU,QAAA,CAAQ;AAC/C,iBAAO;QACT,OAAO;AACL,cAAI,UAAU,IAAID,SAAQ,IAAI;AAC9B,eAAK,MAAO,KAAK,OAAO;AACxB,iBAAO;QACT;MACF;MAEA,KAAK;MACL,KAAK,cAAc;AACjB,YAAI,SAA+B;AACnC,YAAI;AACJ,YAAI,OAAO;AACT,iBAAO,IAAIA,SAAQ,MAAM,oBAAoB,QAAQ,WAAW,QAAQ,CAAC;QAC3E,OAAO;AACL,iBAAO,IAAIA,SAAQe,gBAAe,OAAO,QAAQ,SAAS,CAAC;QAC7D;AACA,aAAK,MAAO,KAAK,IAAI;AACrB,eAAO;MACT;MAEA,KAAK,gBAAgB;AACnB,YAAI,SAAoB;AACxB,YAAI;AACJ,YAAI,OAAO;AACT,oBAAU,IAAId,YAAW,MAAM,oBAAoB,QAAQ,WAAW,QAAQ,GAAG,CAAA,CAAE;QACrF,OAAO;AACL,oBAAU,IAAIA,YAAWc,gBAAe,OAAO,QAAQ,SAAS,GAAG,CAAA,CAAE;QACvE;AACA,aAAK,SAAU,KAAK,EAAC,QAAQ,UAAU,QAAA,CAAQ;AAC/C,eAAO;MACT;MAEA;AAEE,cAAM,IAAI,MAAM,aAAa;IAAA;EAEnC;;;EAIO,mBAAmB;AACxB,QAAI,KAAK,WAAW,SAAS;AAG3B,UAAI,WAAW,KAAK,WAAW;AAE/B,WAAK,QAAQ,CAAA;AACb,WAAK,WAAW,CAAA;AAGhB,UAAI;AACF,aAAK,QAAQ,KAAK,SAAS,KAAK,OAAO,QAAW,SAAS,MAAM,UAAU,IAAI;MACjF,SAAS,KAAK;AAEZ,aAAK,QAAQ;AACb,aAAK,WAAW;AAChB,cAAM;MACR;AAGA,WAAK,SAAS;AAGd,UAAI,KAAK,cAAc,KAAK,WAAW,OAAO,GAAG;AAC/C,cAAM,IAAI,MAAM,qDAAqD;MACvE;AACA,WAAK,aAAa;IACpB;EACF;;EAGQ,UAAU,QAAgB,UAA2B,UAAgC;AAC3F,SAAK,iBAAA;AAEL,QAAI,KAAK,iBAAiBd,aAAY;AACpC,kBAAW,oBAAoB,KAAK,OAAO,QAAQ,UAAU,QAAQ;IACvE,OAAO;AACC,aAAQ,QAAQ,IAAI,KAAK;AAE/B,eAAS,UAAU,KAAK,UAAW;AAKjC,oBAAW,oBAAoB,OAAO,SAAS,OAAO,QAAQ,OAAO,UAAU,QAAQ;MACzF;IACF;EACF;EAEA,OAAe,oBACX,SAAqB,QAAgB,UACrC,UAA8B;AAEhC,QAAI,OAAOmB,wBAAuB,OAAO;AACzC,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,MAAM,qDAAqD;IACvE;AAEA,QAAI,QAAQ,KAAK,KAAA;AACjB,QAAI,iBAAiB,aAAY;AAE/B,YAAM,UAAU,QAAQ,UAAU,QAAQ;IAC5C,OAAO;AAEL,eAAS,KAAK,MAAM,KAAK,CAAA,YAAW;AAClC,YAAI,cAAkC,CAAA;AACtC,gBAAQ,UAAU,QAAQ,UAAU,WAAW;AAC/C,YAAI,YAAY,SAAS,GAAG;AAC1B,iBAAO,QAAQ,IAAI,WAAW;QAChC;MACF,CAAC,CAAC;IACJ;EACF;;;;;;;;EASA,MAAa,YAAY,MAAgB,SAAkD;AACzF,QAAI;AACF,UAAI,WAA4B,CAAA;AAChC,WAAK,UAAU,MAAM,SAAS,QAAQ;AAKtC,UAAI,SAAS,SAAS,GAAG;AACvB,cAAM,QAAQ,IAAI,QAAQ;MAC5B;AAGA,UAAI,SAAS,SAAS,UAAU,MAAM,KAAK,MAAM,SAAS,KAAK,KAAK;AAEpE,UAAI,kBAAkBnB,aAAY;AAIhC,eAAO,YAAW,cAAc,MAAM;MACxC,OAAO;AAGL,eAAO,YAAW,cAAc,MAAM,MAAM;MAC9C;IACF,UAAA;AACE,WAAK,QAAA;IACP;EACF;;;;;;EAOA,MAAa,iBAAmC;AAC9C,QAAI;AACF,UAAI,WAA4B,CAAA;AAChC,WAAK,UAAU,MAAM,SAAS,QAAQ;AAEtC,UAAI,SAAS,SAAS,GAAG;AACvB,cAAM,QAAQ,IAAI,QAAQ;MAC5B;AAEA,UAAI,SAAS,KAAK;AAGlB,UAAI,kBAAkB,QAAQ;AAC5B,YAAI,EAAE,OAAO,WAAW,SAAS;AAG/B,iBAAO,eAAe,QAAQ,OAAO,SAAS;;;;;;;;YAQ5C,OAAO,6BAAM,KAAK,QAAA,GAAX;YACP,UAAU;YACV,YAAY;YACZ,cAAc;UAAA,CACf;QACH;MACF;AAEA,aAAO;IACT,SAAS,KAAK;AAEZ,WAAK,QAAA;AACL,YAAM;IACR;EACF;EAEO,UAAU;AACf,QAAI,KAAK,WAAW,SAAS;AAE3B,WAAK,MAAO,QAAQ,CAAA,SAAQ,KAAK,OAAO,OAAO,EAAA,CAAG;AAClD,WAAK,SAAU,QAAQ,CAAA,YAAW,QAAQ,QAAQ,OAAO,OAAO,EAAA,CAAG;IACrE,WAAW,KAAK,WAAW,UAAU;AAGnC,WAAK,YAAY,KAAK,OAAO,MAAS;AACtC,UAAI,KAAK,cAAc,KAAK,WAAW,OAAO,GAAG;AAC/C,cAAM,IAAI,MAAM,yDAAyD;MAC3E;IACF,MAAO;AAKP,SAAK,SAAS;AACd,SAAK,QAAQ,CAAA;AACb,SAAK,WAAW,CAAA;EAClB;;EAGQ,YAAY,OAAgB,QAA4B;AAC9D,QAAI,OAAOF,YAAW,KAAK;AAC3B,YAAQ,MAAA;MACN,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;AACH;MAEF,KAAK,SAAS;AACZ,YAAIyB,SAAwB;AAC5B,YAAI,MAAMA,OAAM;AAChB,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,eAAK,YAAYA,OAAM,CAAC,GAAGA,MAAK;QAClC;AACA;MACF;MAEA,KAAK,UAAU;AACb,YAAI,SAAkC;AACtC,iBAAS,KAAK,QAAQ;AACpB,eAAK,YAAY,OAAO,CAAC,GAAG,MAAM;QACpC;AACA;MACF;MAEA,KAAK;MACL,KAAK,eAAe;AAClB,YAAI,OAAgB;AACpB,YAAI,OAAOJ,wBAAuB,IAAI;AACtC,YAAI,MAAM;AACR,eAAK,QAAA;QACP;AACA;MACF;MAEA,KAAK;MACL,KAAK,cAAc;AACjB,YAAI,SAA+B;AACnC,YAAI,OAAO,KAAK,YAAY,IAAI,MAAM;AACtC,YAAI,MAAM;AAER,eAAK,QAAA;AACL,eAAK,WAAY,OAAO,MAAM;QAChC,OAAO;AAOL,UAAAK,kBAAiB,MAAM;QACzB;AACA;MACF;MAEA,KAAK;AAEH;MAEF;AAEE;IAAA;EAEN;;;;EAKA,4BAAkC;AAChC,QAAI,KAAK,OAAO;AAEd,WAAK,MAAM,QAAQ,CAAA,SAAQ;AACzB,QAAAJ,oBAAmB,IAAI,EAAE,0BAAA;MAC3B,CAAC;AACD,WAAK,SAAU;QACX,CAAA,YAAWA,oBAAmB,QAAQ,OAAO,EAAE,0BAAA;MAA0B;IAC/E,OAAO;AAEL,WAAK,8BAA8B,KAAK,KAAK;IAC/C;EACF;EAEQ,8BAA8B,OAAgB;AACpD,QAAI,OAAOtB,YAAW,KAAK;AAC3B,YAAQ,MAAA;MACN,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;AACH;MAEF,KAAK,SAAS;AACZ,YAAIyB,SAAwB;AAC5B,YAAI,MAAMA,OAAM;AAChB,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,eAAK,8BAA8BA,OAAM,CAAC,CAAC;QAC7C;AACA;MACF;MAEA,KAAK,UAAU;AACb,YAAI,SAAkC;AACtC,iBAAS,KAAK,QAAQ;AACpB,eAAK,8BAA8B,OAAO,CAAC,CAAC;QAC9C;AACA;MACF;MAEA,KAAK;MACL,KAAK;AACH,QAAAH,oBAA4B,KAAK,EAAE,0BAAA;AACnC;MAEF,KAAK;AACG,cAAO,KAAK,CAAC,MAAW;QAAC,GAAG,CAAC,MAAW;QAAC,CAAC;AAChD;MAEF;AAEE;IAAA;EAEN;AACF;AA0BA,SAASK,YAAW,OAAgB,QAChB,MAAoB,OAA4C;AAClF,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,aAAiB;AAEjB,QAAI,OAAO,KAAK,CAAC;AACjB,QAAI,QAAQ,OAAO,WAAW;AAO5B,cAAQ;AACR;IACF;AAEA,QAAI,OAAO3B,YAAW,KAAK;AAC3B,YAAQ,MAAA;MACN,KAAK;MACL,KAAK;AAEH,YAAI,OAAO,OAAe,OAAO,IAAI,GAAG;AACtC,kBAAc,MAAO,IAAI;QAC3B,OAAO;AACL,kBAAQ;QACV;AACA;MAEF,KAAK;AAGH,YAAI,OAAO,UAAU,IAAI,KAAa,QAAQ,GAAG;AAC/C,kBAAc,MAAO,IAAI;QAC3B,OAAO;AACL,kBAAQ;QACV;AACA;MAEF,KAAK;MACL,KAAK,gBAAgB;AAEnB,YAAI,OAAO,OAAe,OAAO,IAAI,GAAG;AACtC,kBAAQ;QACV,OAAO;AACL,kBAAc,MAAO,IAAI;QAC3B;AAIA,gBAAQ;AACR;MACF;MAEA,KAAK;MACL,KAAK,eAAe;AAClB,YAAI,EAAC,MAAY,cAAA,IAAiBuB,mBAA2B,KAAK;AAClE,eAAO,EAAE,MAAM,eACX,gBAAgB,cAAc,OAAO,KAAK,MAAM,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,EAAA;MACxE;MAEA,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;AAEH,gBAAQ;AACR;MAEF,KAAK;AAEH,gBAAS,MAAc,IAAI;AAC3B;MAEF,KAAK,eAAe;AAClB,YAAI,MAAM,GAAG;AACX,gBAAM,IAAI,UAAU,6CAA6C;QACnE,OAAO;AACL,cAAI,SAAS,KAAK,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG;AACtC,cAAI,YAAY,KAAK,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG;AACzC,gBAAM,IAAI;YACN,IAAI,MAAM,6CAA6C,SAAS;UAAA;QAEtE;MACF;MAEA;AAEE,cAAM,IAAI,UAAU,aAAa;IAAA;EAEvC;AAIA,MAAI,iBAAiBrB,aAAY;AAC/B,QAAI,EAAC,MAAY,cAAA,IAAiBqB,mBAA2B,KAAK;AAClE,WAAO,EAAE,MAAM,eAAe,iBAAiB,CAAA,EAAC;EAClD;AAIA,SAAO;IACL;IACA;IACA;EAAA;AAEJ;AA3GS,OAAAI,aAAA;AA8GT,IAAeC,iBAAf,cAAqCvB,UAAS;SAAA;;;EAG5C,KAAK,MAAoB,MAA4B;AACnD,QAAI;AACF,UAAI,EAAC,OAAO,MAAA,IAAS,KAAK,SAAA;AAC1B,UAAI,eAAesB,YAAW,OAAO,QAAW,MAAM,KAAK;AAE3D,UAAI,aAAa,MAAM;AACrB,eAAO,aAAa,KAAK,KAAK,aAAa,eAAe,IAAI;MAChE;AAGA,UAAI,OAAO,aAAa,SAAS,YAAY;AAC3C,cAAM,IAAI,UAAU,IAAI,KAAK,KAAK,GAAG,CAAC,sBAAsB;MAC9D;AACA,UAAI,UAAU,KAAK,YAAY,aAAa,OAAO,aAAa,MAAM;AACtE,aAAO,IAAIE,iBAAgB,QAAQ,KAAK,CAAA,YAAW;AACjD,eAAO,IAAIZ,iBAAgB,OAAO;MACpC,CAAC,CAAC;IACJ,SAAS,KAAK;AACZ,aAAO,IAAIX,eAAc,GAAG;IAC9B;EACF;EAEA,IAAI,MAAoB,UAAsB,cAAmC;AAC/E,QAAI;AACF,UAAI;AACJ,UAAI;AACF,YAAI,EAAC,OAAO,MAAA,IAAS,KAAK,SAAA;AAC1B,uBAAeqB,YAAW,OAAO,QAAW,MAAM,KAAK;AAAE;MAC3D,SAAS,KAAK;AAEZ,iBAAS,OAAO,UAAU;AACxB,cAAI,QAAA;QACN;AACA,cAAM;MACR;AAEA,UAAI,aAAa,MAAM;AACrB,eAAO,aAAa,KAAK,IAAI,aAAa,eAAe,UAAU,YAAY;MACjF;AAEA,aAAOvB,SAAQ;QACX,aAAa;QAAO,aAAa;QAAQ,aAAa;QAAO;QAAU;MAAA;IAC7E,SAAS,KAAK;AACZ,aAAO,IAAIE,eAAc,GAAG;IAC9B;EACF;EAEA,IAAI,MAA8B;AAChC,QAAI;AACF,UAAI,EAAC,OAAO,MAAA,IAAS,KAAK,SAAA;AAE1B,UAAI,KAAK,WAAW,KAAK,UAAU,MAAM;AAKvC,cAAM,IAAI,MAAM,2CAA2C;MAC7D;AAEA,UAAI,eAAeqB,YAAW,OAAO,QAAW,MAAM,KAAK;AAE3D,UAAI,aAAa,MAAM;AACrB,eAAO,aAAa,KAAK,IAAI,aAAa,aAAa;MACzD;AAWA,aAAO,IAAIV,iBAAgBJ,YAAW;QAClC,aAAa;QAAO,aAAa;QAAQ,aAAa;MAAA,CAAM;IAClE,SAAS,KAAK;AACZ,aAAO,IAAIP,eAAc,GAAG;IAC9B;EACF;AACF;AAUO,IAAMW,mBAAN,MAAM,yBAAwBW,eAAc;SAAA;;;EACjD,YAAY,SAAqB;AAC/B,UAAA;AACA,SAAK,UAAU;EACjB;EAEQ;;EAEA,aAAyB;AAC/B,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK;IACd,OAAO;AACL,YAAM,IAAI,MAAM,yDAAyD;IAC3E;EACF;EAEU,WAAW;AACnB,QAAI,UAAU,KAAK,WAAA;AACnB,WAAO,EAAC,OAAO,QAAQ,OAAO,OAAO,QAAA;EACvC;EAEA,MAAgB;AAQd,QAAI,cAAc,KAAK,WAAA;AACvB,WAAO,IAAI,iBAAgBf,YAAW;MAClC,YAAY;MAAO;MAAW;IAAA,CAAY;EAChD;EAEA,OAAyC;AAIvC,WAAO,KAAK,WAAA;EACd;EAEA,4BAAkC;AAChC,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,0BAAA;IACf;EACF;EAEA,UAAgB;AACd,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,QAAA;AACb,WAAK,UAAU;IACjB;EACF;EAEA,SAAS,UAAsC;AAC7C,QAAI,KAAK,SAAS;AAChB,UAAI,KAAK,QAAQ,iBAAiBZ,UAAS;AAIzC,aAAK,QAAQ,MAAM,YAAY,QAAQ;MACzC;IAGF;EACF;AACF;AAEA,SAASyB,kBAAiB,QAA8B;AACtD,MAAI,OAAO,WAAW,QAAQ;AAC5B,QAAI;AACiB,aAAQ,OAAO,OAAO,EAAA;IAC3C,SAAS,KAAK;AAIZ,cAAQ,OAAO,GAAG;IACpB;EACF;AACF;AAXS,OAAAA,mBAAA;AAyBT,IAAMV,kBAAN,MAAM,wBAAuBY,eAAc;SAAA;;;;;;EAIzC,OAAO,OAAO,OAA6B,QAA4B;AACrE,QAAI,OAAO,UAAU,YAAY;AAI/B,eAAS;IACX;AACA,WAAO,IAAI,gBAAe,OAAO,MAAM;EACzC;EAEQ,YAAY,QACA,QACA,SAA0B;AAC5C,UAAA;AACA,SAAK,SAAS;AACd,SAAK,SAAS;AACd,QAAI,SAAS;AACX,UAAI,QAAQ,UAAU;AACpB,aAAK,WAAW,QAAQ;AACxB,UAAE,KAAK,SAAS;MAClB;IACF,WAAW,OAAO,WAAW,QAAQ;AAEnC,WAAK,WAAW,EAAC,OAAO,EAAA;IAC1B;EACF;EAEQ;;EACA;;EACA;;EAEA,YAAkC;AACxC,QAAI,KAAK,QAAQ;AACf,aAAO,KAAK;IACd,OAAO;AACL,YAAM,IAAI,MAAM,yDAAyD;IAC3E;EACF;EAEU,WAAW;AACnB,WAAO,EAAC,OAAO,KAAK,UAAA,GAAa,OAAO,KAAA;EAC1C;EAEA,MAAgB;AACd,WAAO,IAAI,gBAAe,KAAK,UAAA,GAAa,KAAK,QAAQ,IAAI;EAC/D;EAEA,OAAyC;AACvC,QAAI,SAAS,KAAK,UAAA;AAClB,QAAI,UAAU,QAAQ;AAGpB,aAAO,QAAQ,QAAQ,MAAM,EAAE,KAAK,CAAA,eAAc;AAChD,eAAOf,YAAW,cAAc,UAAU;MAC5C,CAAC;IACH,OAAO;AAGL,aAAO,QAAQ,OAAO,IAAI,MAAM,sCAAsC,CAAC;IACzE;EACF;EAEA,4BAAkC;EAElC;EAEA,UAAgB;AACd,QAAI,KAAK,QAAQ;AACf,UAAI,KAAK,UAAU;AACjB,YAAI,EAAE,KAAK,SAAS,SAAS,GAAG;AAC9B,UAAAa,kBAAiB,KAAK,MAAM;QAC9B;MACF;AAEA,WAAK,SAAS;IAChB;EACF;EAEA,SAAS,UAAsC;EAE/C;AACF;AAIA,IAAMG,mBAAN,MAAM,yBAAwBxB,UAAS;SAAA;;;EAC7B;EACA;EAER,YAAY,SAA4B;AACtC,UAAA;AAEA,SAAK,UAAU,QAAQ,KAAK,CAAA,QAAO;AAAE,WAAK,aAAa;AAAK,aAAO;IAAK,CAAC;EAC3E;EAEA,KAAK,MAAoB,MAA4B;AASnD,SAAK,iBAAA;AAEL,WAAO,IAAI,iBAAgB,KAAK,QAAQ,KAAK,CAAA,SAAQ,KAAK,KAAK,MAAM,IAAI,CAAC,CAAC;EAC7E;EAEA,IAAI,MAAoB,UAAsB,cAAmC;AAC/E,WAAO,IAAI,iBAAgB,KAAK,QAAQ;MACpC,CAAA,SAAQ,KAAK,IAAI,MAAM,UAAU,YAAY;MAC7C,CAAA,QAAO;AACL,iBAAS,OAAO,UAAU;AACxB,cAAI,QAAA;QACN;AACA,cAAM;MACR;IAAA,CAAE;EACR;EAEA,IAAI,MAA8B;AAEhC,WAAO,IAAI,iBAAgB,KAAK,QAAQ,KAAK,CAAA,SAAQ,KAAK,IAAI,IAAI,CAAC,CAAC;EACtE;EAEA,MAAgB;AACd,QAAI,KAAK,YAAY;AACnB,aAAO,KAAK,WAAW,IAAA;IACzB,OAAO;AACL,aAAO,IAAI,iBAAgB,KAAK,QAAQ,KAAK,CAAA,SAAQ,KAAK,IAAA,CAAK,CAAC;IAClE;EACF;EAEA,OAAyC;AAKvC,QAAI,KAAK,YAAY;AACnB,aAAO,KAAK,WAAW,KAAA;IACzB,OAAO;AACL,aAAO,KAAK,QAAQ,KAAK,CAAA,SAAQ,KAAK,KAAA,CAAM;IAC9C;EACF;EAEA,4BAAkC;AAChC,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,0BAAA;IAClB,OAAO;AACL,WAAK,QAAQ,KAAK,CAAA,QAAO;AACvB,YAAI,0BAAA;MACN,GAAG,CAAA,QAAO;MAEV,CAAC;IACH;EACF;EAEA,UAAgB;AACd,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,QAAA;IAClB,OAAO;AACL,WAAK,QAAQ,KAAK,CAAA,SAAQ;AACxB,aAAK,QAAA;MACP,GAAG,CAAA,QAAO;MAEV,CAAC;IACH;EACF;EAEA,SAAS,UAAsC;AAC7C,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,SAAS,QAAQ;IACnC,OAAO;AACL,WAAK,QAAQ,KAAK,CAAA,SAAQ;AACxB,aAAK,SAAS,QAAQ;MACxB,GAAG,QAAQ;IACb;EACF;AACF;ACzmDA,IAAMyB,gBAAN,MAAuC;SAAA;;;EACrC,WAAW,MAAuB;AAChC,UAAM,IAAI,MAAM,oDAAoD;EACtE;EACA,cAAc,MAAuB;AACnC,UAAM,IAAI,MAAM,oDAAoD;EACtE;EACA,UAAU,MAAsC;AAC9C,WAAO;EACT;EACA,SAAS,KAA4B;EAAC;EAEtC,YAAYvB,QAA4B;EAAC;AAC3C;AAEA,IAAMwB,iBAAgB,IAAID,cAAA;AAG1B,IAAME,eAAmC;EACvC;EAAO;EAAW;EAAY;EAAgB;EAAa;EAAW;EAAU;;AAElF;AAsBO,IAAMC,cAAN,MAAM,YAAW;SAAA;;;EACd,YAAoB,UAA4BT,SAAgC;AAA5D,SAAA,WAAA;AAA4B,SAAA,SAAAA;EAAiC;;;;;;;;;EAUzF,OAAc,UACV,OAAgB,QAAiB,WAAqBO,gBAAeP,SAC3D;AACZ,QAAI,aAAa,IAAI,YAAW,UAAUA,OAAM;AAChD,QAAI;AACF,aAAO,WAAW,cAAc,OAAO,QAAQ,CAAC;IAClD,SAAS,KAAK;AACZ,UAAI,WAAW,SAAS;AACtB,YAAI;AACF,mBAAS,SAAS,WAAW,OAAO;QACtC,SAASU,MAAK;QAEd;MACF;AACA,YAAM;IACR;EACF;EAEQ;EAEA,cAAc,OAAgB,QAA4B,OAAwB;AACxF,QAAI,SAAS,IAAI;AACf,YAAM,IAAI;QACN;MAAA;IACN;AAEA,QAAI,OAAOlC,YAAW,KAAK;AAC3B,YAAQ,MAAA;MACN,KAAK,eAAe;AAClB,YAAI;AACJ,YAAI;AACF,gBAAM,2BAA2B,KAAK;QACxC,SAAS,KAAK;AACZ,gBAAM;QACR;AACA,cAAM,IAAI,UAAU,GAAG;MACzB;MAEA,KAAK;AAEH,eAAO;MAET,KAAK,UAAU;AACb,YAAI,SAAkC;AACtC,YAAI,SAAkC,CAAA;AACtC,iBAASmC,QAAO,QAAQ;AACtB,iBAAOA,IAAG,IAAI,KAAK,cAAc,OAAOA,IAAG,GAAG,QAAQ,QAAQ,CAAC;QACjE;AACA,eAAO;MACT;MAEA,KAAK,SAAS;AACZ,YAAIV,SAAwB;AAC5B,YAAI,MAAMA,OAAM;AAChB,YAAI,SAAS,IAAI,MAAM,GAAG;AAC1B,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,iBAAO,CAAC,IAAI,KAAK,cAAcA,OAAM,CAAC,GAAGA,QAAO,QAAQ,CAAC;QAC3D;AAEA,eAAO,CAAC,MAAM;MAChB;MAEA,KAAK;AACH,eAAO,CAAC,UAAmB,MAAO,SAAA,CAAU;MAE9C,KAAK;AACH,eAAO,CAAC,QAAe,MAAO,QAAA,CAAS;MAEzC,KAAK,SAAS;AACZ,YAAI,QAAQ;AACZ,YAAI,MAAM,UAAU;AAClB,iBAAO,CAAC,SAAS,MAAM,SAAS,EAAC,aAAa,KAAA,CAAK,CAAC;QACtD,OAAO;AACL,iBAAO;YAAC;YACJ,KAAK,OAAO,aAAa,MAAM,MAAM,KAAiB,EAAE,QAAQ,OAAO,EAAE,CAAC;UAAA;QAChF;MACF;MAEA,KAAK,SAAS;AACZ,YAAIW,KAAW;AAOf,YAAI,YAAY,KAAK,SAAS,YAAYA,EAAC;AAC3C,YAAI,WAAW;AACb,UAAAA,KAAI;QACN;AAEA,YAAI,SAAS,CAAC,SAASA,GAAE,MAAMA,GAAE,OAAO;AACxC,YAAI,aAAa,UAAU,OAAO;AAChC,iBAAO,KAAK,UAAU,KAAK;QAC7B;AACA,eAAO;MACT;MAEA,KAAK;AACH,eAAO,CAAC,WAAW;MAErB,KAAK;MACL,KAAK,eAAe;AAClB,YAAI,CAAC,KAAK,QAAQ;AAChB,gBAAM,IAAI,MAAM,4CAA4C;QAC9D;AAEA,YAAI,EAAC,MAAM,cAAA,IAAiBb,mBAA2B,KAAK;AAC5D,YAAI,WAAW,KAAK,SAAS,UAAU,IAAI;AAC3C,YAAI,aAAa,QAAW;AAC1B,cAAI,eAAe;AAEjB,gBAAI,cAAc,SAAS,GAAG;AAC5B,qBAAO,CAAC,YAAY,UAAU,aAAa;YAC7C,OAAO;AACL,qBAAO,CAAC,YAAY,QAAQ;YAC9B;UACF,OAAO;AACL,mBAAO,CAAC,UAAU,QAAQ;UAC5B;QACF;AAEA,YAAI,eAAe;AACjB,iBAAO,KAAK,IAAI,aAAa;QAC/B,OAAO;AACL,iBAAO,KAAK,IAAA;QACd;AAEA,eAAO,KAAK,cAAc,gBAAgB,YAAY,UAAU,IAAI;MACtE;MAEA,KAAK;MACL,KAAK,cAAc;AACjB,YAAI,CAAC,KAAK,QAAQ;AAChB,gBAAM,IAAI,MAAM,4CAA4C;QAC9D;AAEA,YAAI,OAAO,KAAK,OAAO,oBAAwC,OAAO,MAAM;AAC5E,eAAO,KAAK,cAAc,UAAU,IAAI;MAC1C;MAEA,KAAK,gBAAgB;AACnB,YAAI,CAAC,KAAK,QAAQ;AAChB,gBAAM,IAAI,MAAM,4CAA4C;QAC9D;AAEA,YAAI,OAAO,KAAK,OAAO,oBAA+B,OAAO,MAAM;AACnE,eAAO,KAAK,cAAc,WAAW,IAAI;MAC3C;MAEA;AAEE,cAAM,IAAI,MAAM,aAAa;IAAA;EAEnC;EAEQ,cAAc,MAA4B,MAAyB;AACzE,QAAI,CAAC,KAAK,QAAS,MAAK,UAAU,CAAA;AAClC,QAAI,WAAW,SAAS,YAAY,KAAK,SAAS,cAAc,IAAI,IAChC,KAAK,SAAS,WAAW,IAAI;AACjE,SAAK,QAAQ,KAAK,QAAQ;AAC1B,WAAO,CAAC,MAAM,QAAQ;EACxB;AACF;AAkBA,IAAMc,gBAAN,MAAuC;SAAA;;;EACrC,WAAW,KAAsB;AAC/B,UAAM,IAAI,MAAM,sDAAsD;EACxE;EACA,cAAc,KAAsB;AAClC,UAAM,IAAI,MAAM,sDAAsD;EACxE;EACA,UAAU,KAAqC;AAC7C,WAAO;EACT;AACF;AAEA,IAAMC,iBAAgB,IAAID,cAAA;AAKnB,IAAME,aAAN,MAAM,WAAU;SAAA;;;EACrB,YAAoB,UAAoB;AAApB,SAAA,WAAA;EAAqB;EAEjC,QAAmB,CAAA;EACnB,WAA6B,CAAA;EAE9B,SAAS,OAA4B;AAC1C,QAAI,UAAUC,YAAW,YAAY,KAAK,OAAO,KAAK,QAAQ;AAC9D,QAAI;AACF,cAAQ,QAAQ,KAAK,aAAa,OAAO,SAAS,OAAO;AACzD,aAAO;IACT,SAAS,KAAK;AACZ,cAAQ,QAAA;AACR,YAAM;IACR;EACF;;EAGO,aAAa,OAA4B;AAC9C,WAAO,KAAK,SAAS,gBAAgB,KAAK,CAAC;EAC7C;EAEQ,aAAa,OAAgB,QAAgB,UAAoC;AACvF,QAAI,iBAAiB,OAAO;AAC1B,UAAI,MAAM,UAAU,KAAK,MAAM,CAAC,aAAa,OAAO;AAElD,YAAI,SAAS,MAAM,CAAC;AACpB,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,iBAAO,CAAC,IAAI,KAAK,aAAa,OAAO,CAAC,GAAG,QAAQ,CAAC;QACpD;AACA,eAAO;MACT,MAAO,SAAQ,MAAM,CAAC,GAAA;QACpB,KAAK;AACH,cAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B,mBAAO,OAAO,MAAM,CAAC,CAAC;UACxB;AACA;QACF,KAAK;AACH,cAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B,mBAAO,IAAI,KAAK,MAAM,CAAC,CAAC;UAC1B;AACA;QACF,KAAK,SAAS;AACZ,cAAI,MAAM;AACV,cAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B,gBAAI,IAAI,YAAY;AAClB,qBAAO,IAAI,WAAW,MAAM,CAAC,CAAC;YAChC,OAAO;AACL,kBAAI,KAAK,KAAK,MAAM,CAAC,CAAC;AACtB,kBAAI,MAAM,GAAG;AACb,kBAAI,QAAQ,IAAI,WAAW,GAAG;AAC9B,uBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,sBAAM,CAAC,IAAI,GAAG,WAAW,CAAC;cAC5B;AACA,qBAAO;YACT;UACF;AACA;QACF;QACA,KAAK;AACH,cAAI,MAAM,UAAU,KAAK,OAAO,MAAM,CAAC,MAAM,YAAY,OAAO,MAAM,CAAC,MAAM,UAAU;AACrF,gBAAI,MAAMC,aAAY,MAAM,CAAC,CAAC,KAAK;AACnC,gBAAI,SAAS,IAAI,IAAI,MAAM,CAAC,CAAC;AAC7B,gBAAI,OAAO,MAAM,CAAC,MAAM,UAAU;AAChC,qBAAO,QAAQ,MAAM,CAAC;YACxB;AACA,mBAAO;UACT;AACA;QACF,KAAK;AACH,cAAI,MAAM,WAAW,GAAG;AACtB,mBAAO;UACT;AACA;QAEF,KAAK;QACL,KAAK,YAAY;AAIf,cAAI,MAAM,SAAS,KAAK,MAAM,SAAS,GAAG;AACxC;UACF;AAIA,cAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B;UACF;AAEA,cAAI,OAAO,KAAK,SAAS,UAAU,MAAM,CAAC,CAAC;AAC3C,cAAI,CAAC,MAAM;AACT,kBAAM,IAAI,MAAM,mCAAmC,MAAM,CAAC,CAAC,EAAE;UAC/D;AAEA,cAAI,YAAY,MAAM,CAAC,KAAK;AAE5B,cAAI,UAAU,wBAACC,UAAmB;AAChC,gBAAI,WAAW;AACb,kBAAI,UAAU,IAAIC,YAAWD,OAAM,CAAA,CAAE;AACrC,mBAAK,SAAS,KAAK,EAAC,SAAS,QAAQ,SAAA,CAAS;AAC9C,qBAAO;YACT,OAAO;AACL,kBAAI,OAAO,IAAIC,YAAWD,OAAM,CAAA,CAAE;AAClC,mBAAK,MAAM,KAAK,IAAI;AACpB,qBAAO;YACT;UACF,GAVc;AAYd,cAAI,MAAM,UAAU,GAAG;AAErB,gBAAI,WAAW;AAEb,qBAAO,QAAQ,KAAK,IAAI,CAAA,CAAE,CAAC;YAC7B,OAAO;AAEL,qBAAO,QAAQ,KAAK,IAAA,CAAK;YAC3B;UACF;AAGA,cAAI,OAAO,MAAM,CAAC;AAClB,cAAI,EAAE,gBAAgB,QAAQ;AAC5B;UACF;AACA,cAAI,CAAC,KAAK;YACN,CAAA,SAAQ;AAAE,qBAAO,OAAO,QAAQ,YAAY,OAAO,QAAQ;YAAU;UAAA,GAAI;AAC3E;UACF;AAEA,cAAI,MAAM,UAAU,GAAG;AAErB,mBAAO,QAAQ,KAAK,IAAI,IAAI,CAAC;UAC/B;AAUA,cAAI,OAAO,MAAM,CAAC;AAClB,cAAI,EAAE,gBAAgB,QAAQ;AAC5B;UACF;AAGA,cAAI,UAAU,IAAI,WAAU,KAAK,QAAQ;AACzC,iBAAO,QAAQ,SAAS,CAAC,IAAI,CAAC;AAE9B,iBAAO,QAAQ,KAAK,KAAK,MAAM,IAAI,CAAC;QACtC;QAEA,KAAK,SAAS;AACZ,cAAI,MAAM,WAAW,KACjB,OAAO,MAAM,CAAC,MAAM,YACpB,EAAE,MAAM,CAAC,aAAa,UACtB,EAAE,MAAM,CAAC,aAAa,UACtB,EAAE,MAAM,CAAC,aAAa,QAAQ;AAChC;UACF;AAEA,cAAI,OAAO,KAAK,SAAS,UAAU,MAAM,CAAC,CAAC;AAC3C,cAAI,CAAC,MAAM;AACT,kBAAM,IAAI,MAAM,mCAAmC,MAAM,CAAC,CAAC,EAAE;UAC/D;AAEA,cAAI,OAAO,MAAM,CAAC;AAClB,cAAI,CAAC,KAAK;YACN,CAAA,SAAQ;AAAE,qBAAO,OAAO,QAAQ,YAAY,OAAO,QAAQ;YAAU;UAAA,GAAI;AAC3E;UACF;AAEA,cAAI,WAAuB,MAAM,CAAC,EAAE,IAAI,CAAA,QAAO;AAC7C,gBAAI,EAAE,eAAe,UACjB,IAAI,WAAW,KACd,IAAI,CAAC,MAAM,YAAY,IAAI,CAAC,MAAM,YACnC,OAAO,IAAI,CAAC,MAAM,UAAU;AAC9B,oBAAM,IAAI,UAAU,wBAAwB,KAAK,UAAU,GAAG,CAAC,EAAE;YACnE;AAEA,gBAAI,IAAI,CAAC,MAAM,UAAU;AACvB,qBAAO,KAAK,SAAS,WAAW,IAAI,CAAC,CAAC;YACxC,OAAO;AACL,kBAAI,MAAM,KAAK,SAAS,UAAU,IAAI,CAAC,CAAC;AACxC,kBAAI,CAAC,KAAK;AACR,sBAAM,IAAI,MAAM,mCAAmC,IAAI,CAAC,CAAC,EAAE;cAC7D;AACA,qBAAO,IAAI,IAAA;YACb;UACF,CAAC;AAED,cAAI,eAAe,MAAM,CAAC;AAE1B,cAAI,aAAa,KAAK,IAAI,MAAM,UAAU,YAAY;AAEtD,cAAI,UAAU,IAAIC,YAAW,YAAY,CAAA,CAAE;AAC3C,eAAK,SAAS,KAAK,EAAC,SAAS,QAAQ,SAAA,CAAS;AAC9C,iBAAO;QACT;QAEA,KAAK;QACL,KAAK;AASH,cAAI,OAAO,MAAM,CAAC,KAAK,UAAU;AAC/B,gBAAI,MAAM,CAAC,KAAK,WAAW;AACzB,kBAAI,OAAO,KAAK,SAAS,cAAc,MAAM,CAAC,CAAC;AAC/C,kBAAI,UAAU,IAAIA,YAAW,MAAM,CAAA,CAAE;AACrC,mBAAK,SAAS,KAAK,EAAC,QAAQ,UAAU,QAAA,CAAQ;AAC9C,qBAAO;YACT,OAAO;AACL,kBAAI,OAAO,KAAK,SAAS,WAAW,MAAM,CAAC,CAAC;AAC5C,kBAAI,OAAO,IAAIC,SAAQ,IAAI;AAC3B,mBAAK,MAAM,KAAK,IAAI;AACpB,qBAAO;YACT;UACF;AACA;MAAA;AAEJ,YAAM,IAAI,UAAU,0BAA0B,KAAK,UAAU,KAAK,CAAC,EAAE;IACvE,WAAW,iBAAiB,QAAQ;AAClC,UAAI,SAAkC;AACtC,eAASC,QAAO,QAAQ;AACtB,YAAIA,QAAO,OAAO,aAAaA,SAAQ,UAAU;AAW/C,eAAK,aAAa,OAAOA,IAAG,GAAG,QAAQA,IAAG;AAC1C,iBAAO,OAAOA,IAAG;QACnB,OAAO;AACL,iBAAOA,IAAG,IAAI,KAAK,aAAa,OAAOA,IAAG,GAAG,QAAQA,IAAG;QAC1D;MACF;AACA,aAAO;IACT,OAAO;AAEL,aAAO;IACT;EACF;AACF;ACreA,IAAM,mBAAN,MAAuB;SAAA;;;EACrB,YAAmB,SAAgC,UAAkB,SAAkB;AAApE,SAAA,UAAA;AAAgC,SAAA,WAAA;AACjD,QAAI,SAAS;AACX,WAAK,aAAa,QAAQ,cAAA;IAC5B;EACF;EAEO,gBAAwB;EACxB,iBAAyB;EAExB;EACD;;;EAIC;EAER,QAAQ,YAAsB;AAS5B,QAAI,KAAK,iBAAiB,GAAG;AAE3B,iBAAW,QAAA;AACX;IACF;AAEA,SAAK,aAAa;AAClB,SAAK,YAAA;AAEL,QAAI,KAAK,uBAAuB;AAG9B,eAAS,KAAK,KAAK,uBAAuB;AACxC,YAAI,WAAW,KAAK,QAAQ,kBAAkB,CAAC;AAC/C,YAAI,WAAW,KAAK,QAAQ,kBAAkB;AAC9C,mBAAW,SAAS,QAAQ;AAC5B,YAAI,KAAK,QAAQ,kBAAkB,QAAQ,MAAM,UAAU;AAMzD,iBAAO,KAAK,QAAQ,kBAAkB,QAAQ;QAChD,OAAO;AAEL,iBAAO,KAAK,QAAQ,kBAAkB,CAAC;QACzC;MACF;AACA,WAAK,wBAAwB;IAC/B;AAEA,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,QAAA;AAChB,WAAK,aAAa;IACpB;EACF;EAEA,MAAM,kBAAuC;AAC3C,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,QAAQ,SAAS,KAAK,QAAQ;AACnC,WAAK,aAAa,QAAQ,cAAA;IAC5B;AACA,UAAM,KAAK,WAAW;AACtB,WAAO,KAAK,WAAY,KAAA;EAC1B;EAEA,UAAU;AACR,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,QAAA;IAClB,OAAO;AACL,WAAK,MAAM,IAAI,MAAM,uDAAuD,CAAC;AAC7E,WAAK,YAAA;IACP;EACF;EAEA,MAAMC,QAAY;AAChB,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,IAAIC,eAAcD,MAAK;AAEzC,UAAI,KAAK,YAAY;AACnB,aAAK,WAAW,OAAOA,MAAK;AAC5B,aAAK,aAAa;MACpB;AAIA,WAAK,wBAAwB;IAC/B;EACF;EAEA,SAAS,UAAsC;AAC7C,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,SAAS,QAAQ;IACnC,OAAO;AACL,UAAIE,SAAQ,KAAK,QAAQ,kBAAkB;AAC3C,WAAK,QAAQ,kBAAkB,KAAK,QAAQ;AAE5C,UAAI,CAAC,KAAK,sBAAuB,MAAK,wBAAwB,CAAA;AAC9D,WAAK,sBAAsB,KAAKA,MAAK;IACvC;EACF;EAEQ,cAAc;AACpB,QAAI,KAAK,iBAAiB,GAAG;AAC3B,WAAK,QAAQ,YAAY,KAAK,UAAU,KAAK,cAAc;AAC3D,WAAK,iBAAiB;IACxB;EACF;AACF;AAEA,IAAM,gBAAN,MAAM,uBAAsBC,UAAS;SAAA;;;;;;EAKnC,YAAmB,WAAoB,OAAyB;AAC9D,UAAA;AADiB,SAAA,YAAA;AAEjB,MAAE,MAAM;AACR,SAAK,QAAQ;EACf;EARO;EAUP,YAAY,MAAmC;AAC7C,WAAO;EACT;EAEA,WAA6B;AAC3B,QAAI,KAAK,OAAO;AACd,aAAO,KAAK;IACd,OAAO;AAGL,YAAM,IAAI,MAAM,0CAA0C;IAC5D;EACF;;;EAKA,KAAK,MAAoB,MAA4B;AACnD,QAAI,QAAQ,KAAK,SAAA;AACjB,QAAI,MAAM,YAAY;AACpB,aAAO,MAAM,WAAW,KAAK,MAAM,IAAI;IACzC,OAAO;AACL,aAAO,MAAM,QAAQ,SAAS,MAAM,UAAU,MAAM,IAAI;IAC1D;EACF;EAEA,IAAI,MAAoB,UAAsB,cAAmC;AAC/E,QAAI;AACJ,QAAI;AACF,cAAQ,KAAK,SAAA;IACf,SAAS,KAAK;AACZ,eAAS,OAAO,UAAU;AACxB,YAAI,QAAA;MACN;AACA,YAAM;IACR;AAEA,QAAI,MAAM,YAAY;AACpB,aAAO,MAAM,WAAW,IAAI,MAAM,UAAU,YAAY;IAC1D,OAAO;AACL,aAAO,MAAM,QAAQ,QAAQ,MAAM,UAAU,MAAM,UAAU,YAAY;IAC3E;EACF;EAEA,IAAI,MAA8B;AAChC,QAAI,QAAQ,KAAK,SAAA;AACjB,QAAI,MAAM,YAAY;AACpB,aAAO,MAAM,WAAW,IAAI,IAAI;IAClC,OAAO;AACL,aAAO,MAAM,QAAQ,SAAS,MAAM,UAAU,IAAI;IACpD;EACF;EAEA,MAAqB;AACnB,WAAO,IAAI,eAAc,OAAO,KAAK,SAAA,CAAU;EACjD;EAEA,OAAyC;AACvC,QAAI,QAAQ,KAAK,SAAA;AAEjB,QAAI,CAAC,KAAK,WAAW;AACnB,YAAM,IAAI,MAAM,uDAAuD;IACzE;AAEA,QAAI,MAAM,YAAY;AACpB,aAAO,MAAM,WAAW,KAAA;IAC1B;AAEA,WAAO,MAAM,gBAAA;EACf;EAEA,4BAAkC;EAIlC;EAEA,UAAgB;AACd,QAAI,QAAQ,KAAK;AACjB,SAAK,QAAQ;AACb,QAAI,OAAO;AACT,UAAI,EAAE,MAAM,kBAAkB,GAAG;AAC/B,cAAM,QAAA;MACR;IACF;EACF;EAEA,SAAS,UAAsC;AAC7C,QAAI,KAAK,OAAO;AACd,WAAK,MAAM,SAAS,QAAQ;IAC9B;EACF;AACF;AAEA,IAAM,cAAN,cAA0B,cAAc;SAAA;;;EAC9B;EAER,YAAY,OAAyB;AACnC,UAAM,OAAO,KAAK;AAClB,SAAK,UAAU,MAAM;EACvB;EAEA,UAAgB;AACd,QAAI,KAAK,SAAS;AAChB,UAAI,UAAU,KAAK;AACnB,WAAK,UAAU;AACf,cAAQ,SAAA;IACV;EACF;AACF;AAqBA,IAAM,iBAAN,MAAmD;SAAA;;;EAsBjD,YAAoB,WAAyB,UACjCC,UAA4B;AADpB,SAAA,YAAA;AACR,SAAA,UAAAA;AAEV,SAAK,QAAQ,KAAK,EAAC,MAAM,UAAU,UAAU,EAAA,CAAE;AAG/C,SAAK,QAAQ,KAAK,IAAI,iBAAiB,MAAM,GAAG,KAAK,CAAC;AAEtD,QAAI;AACJ,QAAI,eAAe,IAAI,QAAe,CAACC,UAAS,WAAW;AAAE,mBAAa;IAAQ,CAAC;AACnF,SAAK,iBAAiB;AAEtB,SAAK,SAAS,YAAY,EAAE,MAAM,CAAA,QAAO,KAAK,MAAM,GAAG,CAAC;EAC1D;EAlCQ,UAAmC,CAAA;EACnC,iBAAA,oBAA8C,IAAA;EAC9C,UAAmC,CAAA;EACnC;EACA;;;;EAKA,eAAe;;EAGf;;EAGA,YAAY;;;EAIpB,oBAA8C,CAAA;;EAkB9C,gBAA+B;AAC7B,WAAO,IAAI,YAAY,KAAK,QAAQ,CAAC,CAAC;EACxC;EAEA,WAAiB;AAGf,SAAK,MAAM,IAAI,MAAM,sDAAsD,GAAG,KAAK;EACrF;EAEA,WAAW,MAA0B;AACnC,QAAI,KAAK,YAAa,OAAM,KAAK;AAEjC,QAAI,mBAAmB,KAAK,eAAe,IAAI,IAAI;AACnD,QAAI,qBAAqB,QAAW;AAClC,QAAE,KAAK,QAAQ,gBAAgB,EAAE;AACjC,aAAO;IACT,OAAO;AACL,UAAI,WAAW,KAAK;AACpB,WAAK,QAAQ,QAAQ,IAAI,EAAE,MAAM,UAAU,EAAA;AAC3C,WAAK,eAAe,IAAI,MAAM,QAAQ;AAEtC,aAAO;IACT;EACF;EAEA,cAAc,MAA0B;AACtC,QAAI,KAAK,YAAa,OAAM,KAAK;AAGjC,QAAI,WAAW,KAAK;AACpB,SAAK,QAAQ,QAAQ,IAAI,EAAE,MAAM,UAAU,EAAA;AAC3C,SAAK,eAAe,IAAI,MAAM,QAAQ;AAGtC,SAAK,sBAAsB,QAAQ;AACnC,WAAO;EACT;EAEA,SAAS,KAA4B;AACnC,aAAS,MAAM,KAAK;AAClB,WAAK,cAAc,IAAI,CAAC;IAC1B;EACF;EAEQ,cAAc,UAAoB,UAAkB;AAC1D,QAAI,QAAQ,KAAK,QAAQ,QAAQ;AACjC,QAAI,CAAC,OAAO;AACV,YAAM,IAAI,MAAM,sBAAsB,QAAQ,EAAE;IAClD;AACA,QAAI,MAAM,WAAW,UAAU;AAC7B,YAAM,IAAI,MAAM,+BAA+B,MAAM,QAAQ,MAAM,QAAQ,EAAE;IAC/E;AACA,UAAM,YAAY;AAClB,QAAI,MAAM,aAAa,GAAG;AACxB,aAAO,KAAK,QAAQ,QAAQ;AAC5B,WAAK,eAAe,OAAO,MAAM,IAAI;AACrC,YAAM,KAAK,QAAA;IACb;EACF;EAEA,YAAYL,QAA4B;AACtC,QAAI,KAAK,QAAQ,aAAa;AAC5B,aAAO,KAAK,QAAQ,YAAYA,MAAK;IACvC;EACF;EAEQ,sBAAsB,UAAoB;AAChD,QAAI,MAAM,KAAK,QAAQ,QAAQ;AAC/B,QAAI,CAAC,KAAK;AACR,YAAM,IAAI,MAAM,sBAAsB,QAAQ,EAAE;IAClD;AACA,QAAI,CAAC,IAAI,MAAM;AACb,UAAIK,WAAU,mCAAY;AACxB,YAAI,OAAO,IAAI;AACf,mBAAS;AACP,cAAI,UAAU,MAAM,KAAK,KAAA;AACzB,cAAI,QAAQ,iBAAiBC,UAAS;AACpC,gBAAI,EAAC,MAAM,OAAO,cAAA,IAAiBC,mBAAkB,QAAQ,KAAK;AAClE,gBAAI,iBAAiB,cAAc,UAAU,GAAG;AAC9C,kBAAI,KAAK,UAAU,IAAI,MAAM,QAAW;AAOtC,uBAAO;AACP;cACF;YACF;UACF;AAEA,iBAAO;QACT;MACF,GAtBc;AAwBd,QAAE,KAAK;AACP,UAAI,OAAOF,SAAA,EAAU;QACnB,CAAA,YAAW;AAGT,cAAI,QAAQG,YAAW,UAAU,QAAQ,OAAO,QAAW,MAAM,OAAO;AACxE,eAAK,KAAK,CAAC,WAAW,UAAU,KAAK,CAAC;QACxC;QACA,CAAAR,WAAS;AACP,eAAK,KAAK,CAAC,UAAU,UAAUQ,YAAW,UAAUR,QAAO,QAAW,IAAI,CAAC,CAAC;QAC9E;MAAA,EACA;QACA,CAAAA,WAAS;AAGP,cAAI;AACF,iBAAK,KAAK,CAAC,UAAU,UAAUQ,YAAW,UAAUR,QAAO,QAAW,IAAI,CAAC,CAAC;UAC9E,SAASS,SAAQ;AAEf,iBAAK,MAAMA,OAAM;UACnB;QACF;MAAA,EACA,QAAQ,MAAM;AACd,YAAI,EAAE,KAAK,cAAc,GAAG;AAC1B,cAAI,KAAK,aAAa;AACpB,iBAAK,YAAY,QAAA;UACnB;QACF;MACF,CAAC;IACH;EACF;EAEA,UAAU,MAAsC;AAC9C,QAAI,gBAAgB,iBAAiB,KAAK,SAAS,KAAK,MAAM,YAAY,MAAM;AAC9E,aAAO,KAAK,MAAM;IACpB,OAAO;AACL,aAAO;IACT;EACF;EAEA,WAAW,KAA8B;AACvC,QAAI,KAAK,YAAa,OAAM,KAAK;AAEjC,QAAI,QAAQ,KAAK,QAAQ,GAAG;AAC5B,QAAI,CAAC,OAAO;AACV,cAAQ,IAAI,iBAAiB,MAAM,KAAK,KAAK;AAC7C,WAAK,QAAQ,GAAG,IAAI;IACtB;AACA,WAAO,IAAI;;MAA4B;MAAO;IAAA;EAChD;EAEA,cAAc,KAAyB;AACrC,QAAI,KAAK,YAAa,OAAM,KAAK;AAEjC,QAAI,KAAK,QAAQ,GAAG,GAAG;AAErB,aAAO,IAAIR,eAAc,IAAI;QACzB;MAAA,CAA4E;IAClF;AAGA,QAAI,QAAQ,IAAI,iBAAiB,MAAM,KAAK,IAAI;AAChD,SAAK,QAAQ,GAAG,IAAI;AACpB,WAAO,IAAI;;MAA4B;MAAM;IAAA;EAC/C;EAEA,UAAU,KAAqC;AAC7C,WAAO,KAAK,QAAQ,GAAG,GAAG;EAC5B;EAEQ,KAAK,KAAU;AACrB,QAAI,KAAK,gBAAgB,QAAW;AAElC;IACF;AAEA,QAAI;AACJ,QAAI;AACF,gBAAU,KAAK,UAAU,GAAG;IAC9B,SAAS,KAAK;AAGZ,UAAI;AAAE,aAAK,MAAM,GAAG;MAAG,SAAS,MAAM;MAAC;AACvC,YAAM;IACR;AAEA,SAAK,UAAU,KAAK,OAAO,EAGtB,MAAM,CAAA,QAAO,KAAK,MAAM,KAAK,KAAK,CAAC;EAC1C;EAEA,SAAS,IAAc,MAAoB,MAAkC;AAC3E,QAAI,KAAK,YAAa,OAAM,KAAK;AAEjC,QAAI,QAAoB,CAAC,YAAY,IAAI,IAAI;AAC7C,QAAI,MAAM;AACR,UAAI,UAAUO,YAAW,UAAU,KAAK,OAAO,QAAW,MAAM,IAAI;AAIpE,YAAM,KAAsB,QAAS,CAAC,CAAC;IAIzC;AACA,SAAK,KAAK,CAAC,QAAQ,KAAK,CAAC;AAEzB,QAAI,QAAQ,IAAI,iBAAiB,MAAM,KAAK,QAAQ,QAAQ,KAAK;AACjE,SAAK,QAAQ,KAAK,KAAK;AACvB,WAAO,IAAI;;MAA4B;MAAM;IAAA;EAC/C;EAEA,QAAQ,IAAc,MAAoB,UAAsB,cAC5C;AAClB,QAAI,KAAK,aAAa;AACpB,eAAS,OAAO,UAAU;AACxB,YAAI,QAAA;MACN;AACA,YAAM,KAAK;IACb;AAEA,QAAI,mBAAmB,SAAS,IAAI,CAAA,SAAQ;AAC1C,UAAI,WAAW,KAAK,UAAU,IAAI;AAClC,UAAI,aAAa,QAAW;AAC1B,eAAO,CAAC,UAAU,QAAQ;MAC5B,OAAO;AACL,eAAO,CAAC,UAAU,KAAK,WAAW,IAAI,CAAC;MACzC;IACF,CAAC;AAED,QAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,kBAAkB,YAAY;AAE9D,SAAK,KAAK,CAAC,QAAQ,KAAK,CAAC;AAEzB,QAAI,QAAQ,IAAI,iBAAiB,MAAM,KAAK,QAAQ,QAAQ,KAAK;AACjE,SAAK,QAAQ,KAAK,KAAK;AACvB,WAAO,IAAI;;MAA4B;MAAM;IAAA;EAC/C;EAEA,SAAS,IAAc;AACrB,QAAI,KAAK,YAAa,OAAM,KAAK;AAEjC,SAAK,KAAK,CAAC,QAAQ,EAAE,CAAC;EACxB;EAEA,YAAY,IAAc,gBAAwB;AAChD,QAAI,KAAK,YAAa;AAEtB,SAAK,KAAK,CAAC,WAAW,IAAI,cAAc,CAAC;AACzC,WAAO,KAAK,QAAQ,EAAE;EACxB;EAEA,MAAMR,QAAY,sBAA+B,MAAM;AAErD,QAAI,KAAK,gBAAgB,OAAW;AAEpC,SAAK,eAAeA,MAAK;AAEzB,QAAI,qBAAqB;AACvB,UAAI;AACF,aAAK,UAAU,KAAK,KAAK,UAAU,CAAC,SAASQ,YACxC,UAAUR,QAAO,QAAW,IAAI,CAAC,CAAC,CAAC,EACnC,MAAM,CAAA,QAAO;QAAC,CAAC;MACtB,SAAS,KAAK;MAEd;IACF;AAEA,QAAIA,WAAU,QAAW;AAEvB,MAAAA,SAAQ;IACV;AAEA,SAAK,cAAcA;AACnB,QAAI,KAAK,aAAa;AACpB,WAAK,YAAY,OAAOA,MAAK;IAC/B;AAEA,QAAI,KAAK,UAAU,OAAO;AAExB,UAAI;AACF,aAAK,UAAU,MAAMA,MAAK;MAC5B,SAAS,KAAK;AAEZ,gBAAQ,QAAQ,GAAG;MACrB;IACF;AAIA,aAAS,KAAK,KAAK,mBAAmB;AACpC,UAAI;AACF,aAAK,kBAAkB,CAAC,EAAEA,MAAK;MACjC,SAAS,KAAK;AAEZ,gBAAQ,QAAQ,GAAG;MACrB;IACF;AACA,aAAS,KAAK,KAAK,SAAS;AAC1B,WAAK,QAAQ,CAAC,EAAE,MAAMA,MAAK;IAC7B;AACA,aAAS,KAAK,KAAK,SAAS;AAC1B,WAAK,QAAQ,CAAC,EAAE,KAAK,QAAA;IACvB;EACF;EAEA,MAAc,SAAS,cAA8B;AACnD,WAAO,CAAC,KAAK,aAAa;AACxB,UAAI,MAAM,KAAK,MAAM,MAAM,QAAQ,KAAK,CAAC,KAAK,UAAU,QAAA,GAAW,YAAY,CAAC,CAAC;AACjF,UAAI,KAAK,YAAa;AAEtB,UAAI,eAAe,OAAO;AACxB,gBAAQ,IAAI,CAAC,GAAA;UACX,KAAK;AACH,gBAAI,IAAI,SAAS,GAAG;AAClB,kBAAI,UAAU,IAAIU,WAAU,IAAI,EAAE,SAAS,IAAI,CAAC,CAAC;AACjD,kBAAI,OAAO,IAAIC,iBAAgB,OAAO;AAKtC,mBAAK,0BAAA;AAEL,mBAAK,QAAQ,KAAK,EAAE,MAAM,UAAU,EAAA,CAAG;AACvC;YACF;AACA;UAEF,KAAK,QAAQ;AACX,gBAAI,WAAW,IAAI,CAAC;AACpB,gBAAI,OAAO,YAAY,UAAU;AAC/B,mBAAK,sBAAsB,QAAQ;AACnC;YACF;AACA;UACF;UAEA,KAAK;;UACL,KAAK,UAAU;AACb,gBAAI,WAAW,IAAI,CAAC;AACpB,gBAAI,OAAO,YAAY,YAAY,IAAI,SAAS,GAAG;AACjD,kBAAI,MAAM,KAAK,QAAQ,QAAQ;AAC/B,kBAAI,KAAK;AACP,oBAAI,IAAI,CAAC,KAAK,WAAW;AACvB,sBAAI,QAAQ,IAAIA,iBAAgB,IAAID,WAAU,IAAI,EAAE,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvE,OAAO;AAGL,sBAAI,UAAU,IAAIA,WAAU,IAAI,EAAE,SAAS,IAAI,CAAC,CAAC;AACjD,0BAAQ,QAAA;AACR,sBAAI,QAAQ,IAAIT,eAAc,QAAQ,KAAK,CAAC;gBAC9C;cACF,OAAO;AAIL,oBAAI,IAAI,CAAC,KAAK,WAAW;AAGvB,sBAAIS,WAAU,IAAI,EAAE,SAAS,IAAI,CAAC,CAAC,EAAE,QAAA;gBACvC;cACF;AACA;YACF;AACA;UACF;UAEA,KAAK,WAAW;AACd,gBAAI,WAAW,IAAI,CAAC;AACpB,gBAAI,WAAW,IAAI,CAAC;AACpB,gBAAI,OAAO,YAAY,YAAY,OAAO,YAAY,UAAU;AAC9D,mBAAK,cAAc,UAAU,QAAQ;AACrC;YACF;AACA;UACF;UAEA,KAAK,SAAS;AACZ,gBAAI,UAAU,IAAIA,WAAU,IAAI,EAAE,SAAS,IAAI,CAAC,CAAC;AACjD,oBAAQ,QAAA;AACR,iBAAK,MAAM,SAAS,KAAK;AACzB;UACF;QAAA;MAEJ;AAEA,YAAM,IAAI,MAAM,oBAAoB,KAAK,UAAU,GAAG,CAAC,EAAE;IAC3D;EACF;EAEA,MAAM,QAAuB;AAC3B,QAAI,KAAK,aAAa;AACpB,YAAM,KAAK;IACb;AAEA,QAAI,KAAK,YAAY,GAAG;AACtB,UAAI,EAAC,SAAS,SAAAL,UAAS,OAAA,IAAU,QAAQ,cAAA;AACzC,WAAK,cAAc,EAAC,SAAAA,UAAS,OAAA;AAC7B,YAAM;IACR;EACF;EAEA,WAA+C;AAC7C,QAAI,SAAS,EAAC,SAAS,GAAG,SAAS,EAAA;AAEnC,aAAS,KAAK,KAAK,SAAS;AAC1B,QAAE,OAAO;IACX;AACA,aAAS,KAAK,KAAK,SAAS;AAC1B,QAAE,OAAO;IACX;AACA,WAAO;EACT;AACF;AAIO,IAAM,aAAN,MAAiB;SAAA;;;EACtB;EACA;EAEA,YAAY,WAAyB,WAAiBD,WAA6B,CAAA,GAAI;AACrF,QAAI;AACJ,QAAI,WAAW;AACb,iBAAW,IAAIO,iBAAgBC,YAAW,cAAc,SAAS,CAAC;IACpE,OAAO;AACL,iBAAW,IAAIX,eAAc,IAAI,MAAM,qCAAqC,CAAC;IAC/E;AACA,SAAK,WAAW,IAAI,eAAe,WAAW,UAAUG,QAAO;AAC/D,SAAK,YAAY,IAAIE,SAAQ,KAAK,SAAS,cAAA,CAAe;EAC5D;EAEA,gBAAyB;AACvB,WAAO,KAAK;EACd;EAEA,WAA+C;AAC7C,WAAO,KAAK,SAAS,SAAA;EACvB;EAEA,QAAuB;AACrB,WAAO,KAAK,SAAS,MAAA;EACvB;AACF;ACpwBO,SAAS,uBACZ,WAA+B,WAAiBF,UAAsC;AACxF,MAAI,OAAO,cAAc,UAAU;AACjC,gBAAY,IAAI,UAAU,SAAS;EACrC;AAEA,MAAI,YAAY,IAAI,mBAAmB,SAAS;AAChD,MAAI,MAAM,IAAI,WAAW,WAAW,WAAWA,QAAO;AACtD,SAAO,IAAI,cAAA;AACb;AATgB;AA+BhB,IAAM,qBAAN,MAAiD;SAAA;;;EAC/C,YAAa,WAAsB;AACjC,SAAK,aAAa;AAElB,QAAI,UAAU,eAAe,UAAU,YAAY;AACjD,WAAK,aAAa,CAAA;AAClB,gBAAU,iBAAiB,QAAQ,CAAA,UAAS;AAC1C,YAAI;AACF,mBAAS,WAAW,KAAK,YAAa;AACpC,sBAAU,KAAK,OAAO;UACxB;QACF,SAAS,KAAK;AACZ,eAAK,eAAe,GAAG;QACzB;AACA,aAAK,aAAa;MACpB,CAAC;IACH;AAEA,cAAU,iBAAiB,WAAW,CAAC,UAA6B;AAClE,UAAI,KAAK,OAAQ;eAEN,OAAO,MAAM,SAAS,UAAU;AACzC,YAAI,KAAK,kBAAkB;AACzB,eAAK,iBAAiB,MAAM,IAAI;AAChC,eAAK,mBAAmB;AACxB,eAAK,mBAAmB;QAC1B,OAAO;AACL,eAAK,cAAc,KAAK,MAAM,IAAI;QACpC;MACF,OAAO;AACL,aAAK,eAAe,IAAI,UAAU,6CAA6C,CAAC;MAClF;IACF,CAAC;AAED,cAAU,iBAAiB,SAAS,CAAC,UAAsB;AACzD,WAAK,eAAe,IAAI,MAAM,0BAA0B,MAAM,IAAI,IAAI,MAAM,MAAM,EAAE,CAAC;IACvF,CAAC;AAED,cAAU,iBAAiB,SAAS,CAAC,UAAiB;AACpD,WAAK,eAAe,IAAI,MAAM,8BAA8B,CAAC;IAC/D,CAAC;EACH;EAEA;EACA;;EACA;EACA;EACA,gBAA0B,CAAA;EAC1B;EAEA,MAAM,KAAK,SAAgC;AACzC,QAAI,KAAK,eAAe,QAAW;AACjC,WAAK,WAAW,KAAK,OAAO;IAC9B,OAAO;AAEL,WAAK,WAAW,KAAK,OAAO;IAC9B;EACF;EAEA,MAAM,UAA2B;AAC/B,QAAI,KAAK,cAAc,SAAS,GAAG;AACjC,aAAO,KAAK,cAAc,MAAA;IAC5B,WAAW,KAAK,QAAQ;AACtB,YAAM,KAAK;IACb,OAAO;AACL,aAAO,IAAI,QAAgB,CAACS,UAAS,WAAW;AAC9C,aAAK,mBAAmBA;AACxB,aAAK,mBAAmB;MAC1B,CAAC;IACH;EACF;EAEA,MAAO,QAAmB;AACxB,QAAI;AACJ,QAAI,kBAAkB,OAAO;AAC3B,gBAAU,OAAO;IACnB,OAAO;AACL,gBAAU,GAAG,MAAM;IACrB;AACA,SAAK,WAAW,MAAM,KAAM,OAAO;AAEnC,QAAI,CAAC,KAAK,QAAQ;AAChB,WAAK,SAAS;IAEhB;EACF;EAEA,eAAe,QAAa;AAC1B,QAAI,CAAC,KAAK,QAAQ;AAChB,WAAK,SAAS;AACd,UAAI,KAAK,kBAAkB;AACzB,aAAK,iBAAiB,MAAM;AAC5B,aAAK,mBAAmB;AACxB,aAAK,mBAAmB;MAC1B;IACF;EACF;AACF;AGlIA,IAAIC;AASJ,IAAMC,cAAN,MAAqC;SAAA;;;EAC3B;EAGA,aAAA,oBAAwC,IAAA;EAExC,eAAiC,CAAA;EAEzC,YAAY,SAAmB,MAAoB;AACjD,QAAID,oBAAmB;AACrB,WAAK,UAAU;QACb,QAAQA;QACR,UAAU,CAAA;QACV,SAASA,mBAAkB,QAAQ,OAAO;QAC1C;MAAA;IAEJ,OAAO;AACL,WAAK,UAAU;QACb,QAAQ;QACR,UAAU,CAAA;QACV;QACA;MAAA;IAEJ;AAEA,IAAAA,qBAAoB;EACtB;EAEA,aAAa;AACX,IAAAA,qBAAoB,KAAK,QAAQ;EACnC;EAEA,YAA6B;AAC3B,WAAO,IAAIE,iBAAgB,MAAM,CAAC;EACpC;EAEA,WAAW,QAA8B;AACvC,QAAI;AACJ,QAAI;AACF,iBAAWC,YAAW,UAAU,OAAO,OAAO,QAAW,MAAM,MAAM;IACvE,UAAA;AACE,aAAO,QAAA;IACT;AAIA,SAAK,aAAa,KAAU,QAAQ;AAEpC,QAAI,KAAK,QAAQ,QAAQ;AACvB,WAAK,QAAQ,OAAO,aAAa;QAC/B;UAAC;UAAS,KAAK,QAAQ;UAAS,KAAK,QAAQ;UACnC,KAAK,QAAQ,SAAS,IAAI,CAAA,QAAO,CAAC,UAAU,GAAG,CAAC;UAChD,KAAK;QAAA;MAAY;AAE7B,aAAO,IAAID,iBAAgB,KAAK,QAAQ,QAAQ,KAAK,QAAQ,OAAO,aAAa,MAAM;IACzF,OAAO;AACL,aAAO,KAAK,QAAQ,QAAQ,IAAI,KAAK,QAAQ,MAAM,KAAK,QAAQ,UAAU,KAAK,YAAY;IAC7F;EACF;EAEA,SAAS,MAAgB,MAAoB,QAA8B;AACzE,QAAI,WAAWC,YAAW,UAAU,OAAO,OAAO,QAAW,MAAM,MAAM;AAGzE,eAA4B,SAAU,CAAC;AAEvC,QAAI,UAAU,KAAK,QAAQ,KAAK,IAAA,CAAK;AACrC,SAAK,aAAa,KAAK,CAAC,YAAY,SAAS,MAAM,QAAQ,CAAC;AAC5D,WAAO,IAAID,iBAAgB,MAAM,KAAK,aAAa,MAAM;EAC3D;EAEA,QAAQ,MAAgB,MAA8B;AACpD,QAAI,UAAU,KAAK,QAAQ,KAAK,IAAA,CAAK;AACrC,SAAK,aAAa,KAAK,CAAC,YAAY,SAAS,IAAI,CAAC;AAClD,WAAO,IAAIA,iBAAgB,MAAM,KAAK,aAAa,MAAM;EAC3D;EAEA,QAAQ,MAAwB;AAC9B,QAAI,gBAAgBA,oBAAmB,KAAK,WAAW,MAAM;AAE3D,aAAO,KAAK;IACd;AAKA,QAAI,SAAS,KAAK,WAAW,IAAI,IAAI;AACrC,QAAI,WAAW,QAAW;AACxB,UAAI,KAAK,QAAQ,QAAQ;AACvB,YAAI,YAAY,KAAK,QAAQ,OAAO,QAAQ,IAAI;AAChD,aAAK,QAAQ,SAAS,KAAK,SAAS;MACtC,OAAO;AACL,aAAK,QAAQ,SAAS,KAAK,IAAI;MACjC;AACA,eAAS,CAAC,KAAK,QAAQ,SAAS;AAChC,WAAK,WAAW,IAAI,MAAM,MAAM;IAClC;AACA,WAAO;EACT;;;EAKA,WAAW,MAA0B;AAanC,UAAM,IAAI;MACN;IAAA;EAEN;EACA,cAAc,MAA0B;AACtC,WAAO,KAAK,WAAW,IAAI;EAC7B;EACA,UAAU,MAAsC;AAC9C,WAAO,KAAK,QAAQ,IAAI;EAC1B;EAEA,SAAS,KAA4B;EAErC;EAEA,YAAYE,QAA4B;EAExC;AACF;AAEAC,SAAQ,UAAU,CAAC,MAAgB,MAAoB,SAA2C;AAChG,MAAI,UAAU,IAAIJ,YAAW,MAAM,IAAI;AACvC,MAAI;AACJ,MAAI;AACF,aAASK,YAAW,cAAcC,qBAAoB,QAAQ,SAAS,KAAK,OAAO,GAAG,MAAM;AAC1F,aAAO,KAAK,IAAIC,YAAW,QAAQ,UAAA,GAAa,CAAA,CAAE,CAAC;IACrD,CAAC,CAAC;EACJ,UAAA;AACE,YAAQ,WAAA;EACV;AAGA,MAAI,kBAAkB,SAAS;AAG7B,WAAO,MAAM,CAAA,QAAO;IAAC,CAAC;AAGtB,UAAM,IAAI,MAAM,sCAAsC;EACxD;AAEA,SAAO,IAAIA,YAAW,QAAQ,WAAW,MAAM,GAAG,CAAA,CAAE;AACtD;AAEA,SAASC,8BAAoC;AAC3C,QAAM,IAAI;IACN;EAAA;AAEN;AAJS,OAAAA,6BAAA;AAOT,IAAMP,mBAAN,cAA8BQ,UAAS;SAAA;;;EACrC,YAAmB,QAA2B,KAAa;AACzD,UAAA;AADiB,SAAA,SAAA;AAA2B,SAAA,MAAA;EAE9C;;EAGA,MAAgB;AAAE,WAAO;EAAM;EAC/B,UAAgB;EAAC;EAEjB,IAAI,MAA8B;AAEhC,QAAI,KAAK,UAAU,GAAG;AAGpB,aAAO;IACT,WAAWV,oBAAmB;AAC5B,aAAOA,mBAAkB,QAAQ,MAAM,IAAI;IAC7C,OAAO;AACL,MAAAS,4BAAA;IACF;EACF;;EAGA,KAAK,MAAoB,MAA4B;AAEnD,IAAAA,4BAAA;EACF;EAEA,IAAI,MAAoB,UAAsB,cAAmC;AAE/E,IAAAA,4BAAA;EACF;EAEA,OAAyC;AAEvC,IAAAA,4BAAA;EACF;EAEA,4BAAkC;EAElC;EAEA,SAAS,UAAsC;AAC7C,IAAAA,4BAAA;EACF;AACF;AAIA,IAAME,iBAAN,MAAwC;SAAA;;;EAGtC,YAAoB,UAAsB,OAAiB;AAAvC,SAAA,WAAA;AAClB,SAAK,YAAY,CAAC,KAAK;EACzB;EAJQ;EAMR,UAAU;AACR,aAAS,YAAY,KAAK,WAAW;AACnC,eAAS,QAAA;IACX;EACF;EAEA,MAAM,cAAqC;AACzC,QAAI;AACF,UAAI,aAAa,SAAS,GAAG;AAC3B,cAAM,IAAI,MAAM,gCAAgC;MAClD;AAEA,eAAS,eAAe,aAAa,MAAM,GAAG,EAAE,GAAG;AACjD,YAAI,UAAU,IAAIC,WAAU,IAAI,EAAE,aAAa,WAAW;AAG1D,YAAI,QAAQ,iBAAiBC,UAAS;AACpC,cAAI,OAAOC,wBAAuB,QAAQ,KAAK;AAC/C,cAAI,MAAM;AACR,iBAAK,UAAU,KAAK,IAAI;AACxB;UACF;QACF;AAEA,aAAK,UAAU,KAAK,IAAIC,iBAAgB,OAAO,CAAC;MAClD;AAEA,aAAO,IAAIH,WAAU,IAAI,EAAE,aAAa,aAAa,aAAa,SAAS,CAAC,CAAC;IAC/E,UAAA;AACE,eAAS,YAAY,KAAK,WAAW;AACnC,iBAAS,QAAA;MACX;IACF;EACF;EAEA,WAAW,KAAyB;AAGlC,UAAM,IAAI,MAAM,4CAA4C;EAC9D;EACA,cAAc,KAAyB;AACrC,WAAO,KAAK,WAAW,GAAG;EAC5B;EAEA,UAAU,KAAqC;AAC7C,QAAI,MAAM,GAAG;AACX,aAAO,KAAK,SAAS,CAAC,MAAM,CAAC;IAC/B,OAAO;AACL,aAAO,KAAK,UAAU,GAAG;IAC3B;EACF;AACF;AAEA,SAASI,mBAAkB,OAAgB,QAA4B,OAC5C,UAAsB,cAAqC;AAIpF,MAAI,YAAY,IAAID,iBAAgBT,YAAW,aAAa,OAAO,QAAQ,KAAK,CAAC;AACjF,MAAI,SAAS,IAAIK,eAAc,UAAU,SAAS;AAClD,MAAI;AACF,WAAO,OAAO,MAAM,YAAY;EAClC,UAAA;AACE,WAAO,QAAA;EACT;AACF;AAZS,OAAAK,oBAAA;AAcTX,SAAQ,WAAW,CAAC,OAAgB,QAA4B,OAC5C,UAAsB,iBAA4B;AACpE,MAAI;AACF,QAAI;AACJ,QAAI,iBAAiBG,aAAY;AAG/B,YAAM,IAAI,MAAM,0CAA0C;IAC5D,WAAW,iBAAiB,OAAO;AACjC,UAAI,WAAyB,CAAA;AAC7B,UAAI;AACF,iBAAS,QAAQ,OAAO;AACtB,mBAAS,KAAKQ,mBAAkB,MAAM,OAAO,OAAO,UAAU,YAAY,CAAC;QAC7E;MACF,SAAS,KAAK;AACZ,iBAAS,WAAW,UAAU;AAC5B,kBAAQ,QAAA;QACV;AACA,cAAM;MACR;AAEA,eAASV,YAAW,UAAU,QAAQ;IACxC,WAAW,UAAU,QAAQ,UAAU,QAAW;AAChD,eAASA,YAAW,cAAc,KAAK;IACzC,OAAO;AACL,eAASU,mBAAkB,OAAO,QAAQ,OAAO,UAAU,YAAY;IACzE;AAIA,WAAO,IAAID,iBAAgB,MAAM;EACnC,UAAA;AACE,aAAS,OAAO,UAAU;AACxB,UAAI,QAAA;IACN;EACF;AACF;AC5PO,IAAME,aAETA;AAgBG,IAAIC,0BAEF;;;AR/ET,wBAAwB;AAGxB,QAAQ,IAAI,kEAAkE;AAG9E,IAAI,kBAAkB;AACtB,IAAI,kBAAwC;AAG5C,SAAS,0BAA0B;AACjC,QAAM,aAAa,OAAO,cAAc,YAAY;AACpD,QAAM,mBAAmB,OAAO,gBAAgB,eAAe,OAAO,YAAY,QAAQ;AAE1F,MAAI,cAAc,CAAC,kBAAkB;AACnC,YAAQ,IAAI,sFAA4E;AACxF,YAAQ,IAAI,0DAA0D;AAAA,EACxE;AAEA,SAAO,EAAE,YAAY,iBAAiB;AACxC;AAVS;AAYT,eAAe,wBAAwB;AACrC,MAAI,gBAAiB;AAErB,MAAI,CAAC,iBAAiB;AACpB,uBAAmB,YAAY;AAC7B,cAAQ,IAAI,oCAAoC;AAEhD,UAAI;AAEF,cAAM,aAAa,OAAO,cAAc,YAAY;AACpD,gBAAQ,IAAI,gBAAgB,aAAa,sBAAsB,OAAO;AAGtE,YAAI,YAAY;AACd,kBAAQ,IAAI,kDAAkD;AAE9D,mBAAS,UAAU;AACnB,kBAAQ,IAAI,iEAA4D;AAAA,QAC1E,OAAO;AAEL,kBAAQ,IAAI,2CAA2C;AACvD,gBAAM,mBAAmB,OAAO,gBAAgB,eAAe,OAAO,YAAY,QAAQ;AAC1F,cAAI,kBAAkB;AACpB,kBAAM,wBAAK;AACX,oBAAQ,IAAI,kEAA6D;AAAA,UAC3E,OAAO;AAEL,oBAAQ,IAAI,qCAAqC;AACjD,qBAAS,UAAU;AACnB,oBAAQ,IAAI,0EAAqE;AAAA,UACnF;AAAA,QACF;AAEA,0BAAkB;AAClB,gBAAQ,IAAI,4CAAuC;AAAA,MAErD,SAASC,QAAO;AACd,gBAAQ,MAAM,6CAAwCA,MAAK;AAC3D,gBAAQ,MAAM,uDAAuD;AAGrE,QAAC,WAAmB,oBAAoB;AACxC,0BAAkB;AAElB,gBAAQ,IAAI,wDAAwD;AAAA,MACtE;AAAA,IACF,GAAG;AAAA,EACL;AAEA,QAAM;AACR;AAlDe;AAqDf,IAAM,YAAY;AAElB,SAAS,iBAAiBC,MAAyB;AACjD,MAAIA,KAAI,WAAW,GAAG;AACpB,WAAO;AAAA,EACT;AACA,SAAOA,KAAI,IAAI,CAAC,SAAS,GAAG,KAAK,MAAM,IAAI,IAAI,EAAE,EAAE,KAAK,SAAS;AACnE;AALS;AAOT,SAAS,oBAAoB,QAAwC;AACnE,MAAI,OAAO,WAAW,GAAG;AACvB,WAAO;AAAA,EACT;AACA,QAAM,UAAU,iBAAiB,MAAM;AACvC,SAAO,QAAQ,SAAS,GAAG,OAAO,GAAG,SAAS,KAAK;AACrD;AANS;AAQT,SAAS,iBAAiB,SAA6B;AACrD,MAAI,CAAC,SAAS;AACZ,WAAO,CAAC;AAAA,EACV;AAEA,QAAM,QAAkB,CAAC;AACzB,MAAIC,SAAQ;AACZ,SAAOA,SAAQ,QAAQ,QAAQ;AAC7B,UAAM,aAAa,QAAQ,QAAQ,KAAKA,MAAK;AAC7C,QAAI,eAAe,IAAI;AACrB,YAAM,IAAI,MAAM,gCAAgC,OAAO,EAAE;AAAA,IAC3D;AAEA,UAAM,aAAa,QAAQ,MAAMA,QAAO,UAAU;AAClD,UAAM,SAAS,OAAO,UAAU;AAChC,QAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,YAAM,IAAI,MAAM,0CAA0C,UAAU,EAAE;AAAA,IACxE;AAEA,UAAM,QAAQ,aAAa;AAC3B,UAAM,MAAM,QAAQ;AACpB,UAAM,UAAU,QAAQ,MAAM,OAAO,GAAG;AACxC,UAAM,KAAK,OAAO;AAClB,IAAAA,SAAQ;AAER,QAAIA,WAAU,QAAQ,QAAQ;AAC5B;AAAA,IACF;AAEA,QAAI,QAAQA,MAAK,MAAM,WAAW;AAChC,YAAM,IAAI,MAAM,qCAAqC,OAAO,EAAE;AAAA,IAChE;AACA,IAAAA,UAAS;AAAA,EACX;AAEA,SAAO;AACT;AApCS;AAsCT,SAAS,aAAa,OAA4B;AAChD,MAAI,iBAAiB,YAAY;AAC/B,WAAO;AAAA,EACT;AAEA,MAAI,iBAAiB,aAAa;AAChC,WAAO,IAAI,WAAW,KAAK;AAAA,EAC7B;AAEA,MAAI,YAAY,OAAO,KAAK,GAAG;AAC7B,UAAM,OAAO;AACb,WAAO,IAAI,WAAW,KAAK,OAAO,MAAM,KAAK,YAAY,KAAK,aAAa,KAAK,UAAU,CAAC;AAAA,EAC7F;AAEA,QAAM,IAAI,MAAM,oDAAoD;AACtE;AAfS;AAiBT,eAAe,YAAY,SAAc,QAA4B;AACnE,MAAI,WAAW,QAAW;AACxB,WAAO,MAAM,QAAQ,KAAK;AAAA,EAC5B;AACA,SAAO,MAAM,QAAQ,KAAK,EAAE,OAAO,CAAC;AACtC;AALe;AAOf,SAAS,aAAa,OAA2B;AAC/C,MAAI,SAAS;AACb,QAAM,YAAY;AAClB,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,WAAW;AAChD,UAAM,QAAQ,MAAM,SAAS,GAAG,IAAI,SAAS;AAC7C,cAAU,OAAO,aAAa,GAAG,KAAK;AAAA,EACxC;AACA,SAAO,KAAK,MAAM;AACpB;AARS;AAUT,IAAM,8BAAN,MAA4D;AAAA,EAC1D,YAAoB,SAAc;AAAd;AAAA,EAAe;AAAA,EApMrC,OAmM4D;AAAA;AAAA;AAAA,EAG1D,MAAM,KAAKD,MAAkD;AAC3D,UAAM,SAAS,MAAM,KAAK,QAAQ,IAAI,iBAAiBA,IAAG,CAAC;AAC3D,WAAO,WAAW,SAAY,SAAY,aAAa,MAAM;AAAA,EAC/D;AAAA,EAEA,MAAM,UAAU,QAA0D;AACxE,UAAM,SAAS,oBAAI,IAA4B;AAC/C,UAAM,WAAW,iBAAiB,MAAM;AACxC,UAAM,QAAQ,MAAM,KAAK,QAAQ,IAAI,QAAQ;AAC7C,QAAI,UAAU,QAAW;AACvB,aAAO,IAAI,QAAQ,aAAa,KAAK,CAAC;AAAA,IACxC;AAEA,UAAM,eAAe,oBAAoB,MAAM;AAC/C,UAAM,UAAU,MAAM,YAAY,KAAK,SAAS,YAAY;AAC5D,eAAW,CAAC,QAAQ,QAAQ,KAAK,SAAS;AACxC,YAAM,aAAa,iBAAiB,MAAM;AAC1C,aAAO,IAAI,YAAY,aAAa,QAAQ,CAAC;AAAA,IAC/C;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,KAAKA,MAAiB,MAAiC;AAC3D,UAAM,KAAK,QAAQ,IAAI,iBAAiBA,IAAG,GAAG,IAAI;AAAA,EACpD;AAAA,EAEA,MAAM,OAAOA,MAAgC;AAC3C,UAAM,KAAK,QAAQ,OAAO,iBAAiBA,IAAG,CAAC;AAAA,EACjD;AAAA,EAEA,MAAM,aAAa,QAA2C;AAC5D,UAAM,UAAwB,CAAC;AAC/B,UAAM,OAAO,oBAAI,IAAY;AAC7B,UAAM,eAAe,oBAAoB,MAAM;AAC/C,UAAM,UAAU,MAAM,YAAY,KAAK,SAAS,YAAY;AAE5D,eAAW,CAAC,MAAM,KAAK,SAAS;AAC9B,YAAM,UAAU,iBAAiB,MAAM;AACvC,UAAI,QAAQ,UAAU,OAAO,QAAQ;AACnC;AAAA,MACF;AACA,YAAM,QAAQ,QAAQ,MAAM,GAAG,OAAO,SAAS,CAAC;AAChD,YAAM,eAAe,iBAAiB,KAAK;AAC3C,UAAI,CAAC,KAAK,IAAI,YAAY,GAAG;AAC3B,aAAK,IAAI,YAAY;AACrB,gBAAQ,KAAK,KAAK;AAAA,MACpB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;AA0IA,SAAS,SAAS,MAA0B;AAC1C,MAAI,KAAK,WAAW,EAAG,QAAO;AAC9B,MAAI,SAAS;AACb,QAAM,YAAY;AAClB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,WAAW;AAC/C,UAAM,QAAQ,KAAK,SAAS,GAAG,IAAI,SAAS;AAC5C,cAAU,OAAO,aAAa,GAAG,KAAK;AAAA,EACxC;AACA,SAAO,KAAK,MAAM;AACpB;AATS;AAWT,IAAM,gBAAN,cAA4B,WAAU;AAAA,EAKpC,YAA6B,SAAyB;AACpD,UAAM;AADqB;AAF7B,SAAiB,gBAAgB,oBAAI,IAAwB;AAAA,EAI7D;AAAA,EAtZF,OA+YsC;AAAA;AAAA;AAAA,EAWpC,MAAc,YAAY;AACxB,QAAI,KAAK,QAAQ;AACf,aAAO,KAAK;AAAA,IACd;AAEA,QAAI,CAAC,KAAK,eAAe;AACvB,WAAK,iBAAiB,YAAY;AAEhC,cAAM,sBAAsB;AAG5B,YAAK,WAAmB,mBAAmB;AACzC,kBAAQ,IAAI,sDAAsD;AAClE,gBAAM,IAAI,MAAM,6EAA6E;AAAA,QAC/F;AAEA,cAAM,EAAE,SAAS,OAAO,IAAI,KAAK,UAC7B,MAAM,KAAK,QAAQ,IACnB,EAAE,SAAS,IAAI,qBAAqB,GAAG,QAAQ,IAAI,aAAa,EAAE;AACtE,cAAM,WAAW,MAAM,OAAO,KAAK,EAAE,SAAS,OAAO,CAAC;AACtD,aAAK,SAAS;AACd,eAAO;AAAA,MACT,GAAG;AAAA,IACL;AAEA,WAAO,KAAK;AAAA,EACd;AAAA,EAEQ,gBAAgB,QAAa;AACnC,QAAI;AACJ,UAAM,QAAQ,OAAO;AACrB,QAAI,iBAAiB,YAAY;AAC/B,iBAAW;AAAA,IACb,WAAW,iBAAiB,aAAa;AACvC,iBAAW,IAAI,WAAW,KAAK;AAAA,IACjC,WAAW,YAAY,OAAO,KAAK,GAAG;AACpC,iBAAW,IAAI,WAAW,MAAM,OAAO,MAAM,MAAM,YAAY,MAAM,aAAa,MAAM,UAAU,CAAC;AAAA,IACrG,WAAW,OAAO,UAAU,UAAU;AACpC,YAAM,UAAU,WAAW,KAAK,KAAK,KAAK,GAAG,CAACE,OAAMA,GAAE,WAAW,CAAC,CAAC;AACnE,iBAAW;AAAA,IACb,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,iBAAW,IAAI,WAAW,KAAK;AAAA,IACjC,OAAO;AACL,YAAM,IAAI,MAAM,oDAAoD;AAAA,IACtE;AAEA,WAAO;AAAA,MACL,SAAS,OAAO;AAAA,MAChB,MAAM,OAAO;AAAA,MACb,UAAU,SAAS,QAAQ;AAAA,IAC7B;AAAA,EACF;AAAA,EAEA,MAAc,UAAU,OAAY,OAAgB;AAClD,YAAQ,IAAI,uBAAgB;AAAA,MAC1B,MAAM,OAAO;AAAA,MACb;AAAA,MACA,cAAc,KAAK,cAAc;AAAA,MACjC,iBAAiB,CAAC,GAAG,KAAK,aAAa,EAAE,OAAO,CAAC,iBAAiB,CAAC,SAAS,CAAC,aAAa,SAAS,aAAa,UAAU,KAAK,EAAE;AAAA,IACnI,CAAC;AAED,QAAI,KAAK,cAAc,SAAS,KAAK,CAAC,KAAK,WAAW;AACpD,cAAQ,IAAI,+CAAqC;AAAA,IACnD;AAEA,QAAI,KAAK,WAAW;AAClB,WAAK,UAAU,KAAK;AAAA,IACtB;AAEA,eAAW,gBAAgB,CAAC,GAAG,KAAK,aAAa,GAAG;AAClD,UAAI,SAAS,aAAa,SAAS,aAAa,UAAU,OAAO;AAC/D;AAAA,MACF;AAEA,UAAI;AACF,cAAM,SAAS,aAAa,OAAO,kBAAkB,KAAK;AAC1D,YAAI,UAAU,OAAO,OAAO,SAAS,YAAY;AAC/C,gBAAM;AAAA,QACR;AAAA,MACF,SAASH,QAAO;AACd,gBAAQ,MAAM,4CAA4CA,MAAK;AAC/D,YAAI,OAAO,aAAa,SAAS,OAAO,OAAO,MAAM,YAAY;AAC/D,cAAI;AACF,yBAAa,OAAO,OAAO,OAAO,EAAE;AAAA,UACtC,SAAS,cAAc;AACrB,oBAAQ,KAAK,4BAA4B,YAAY;AAAA,UACvD;AAAA,QACF;AACA,aAAK,cAAc,OAAO,YAAY;AACtC,gBAAQ,IAAI,0DAAmD;AAAA,UAC7D,WAAW,KAAK,cAAc;AAAA,UAC9B,OAAO,aAAa;AAAA,QACtB,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,qBAAqB,QAAa,OAAgB;AACtD,QAAI,iBAAiB;AACrB,QAAI;AACF,UAAI,OAAO,QAAQ,QAAQ,YAAY;AACrC,yBAAiB,OAAO,IAAI;AAAA,MAC9B,OAAO;AACL,cAAM,YAAY,OAAO,sBAAsB,MAAM,EAAE,KAAK,CAAC,WAAW,OAAO,gBAAgB,UAAU;AACzG,YAAI,WAAW;AACb,gBAAM,UAAW,OAAe,SAAS;AACzC,cAAI,OAAO,SAAS,QAAQ,YAAY;AACtC,6BAAiB,QAAQ,IAAI;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAASA,QAAO;AACd,cAAQ,KAAK,kDAAkDA,MAAK;AAAA,IACtE;AAEA,UAAM,eAAmC,EAAE,QAAQ,gBAAgB,gBAAgB,QAAQ,MAAM;AACjG,SAAK,cAAc,IAAI,YAAY;AACnC,YAAQ,IAAI,mCAA8B;AAAA,MACxC,OAAO,KAAK,cAAc;AAAA,MAC1B;AAAA,IACF,CAAC;AAED,QAAI,kBAAkB,OAAO,eAAe,gBAAgB,YAAY;AACtE,qBAAe,YAAY,MAAM;AAC/B,YAAI,OAAO,aAAa,SAAS,OAAO,OAAO,MAAM,YAAY;AAC/D,cAAI;AACF,yBAAa,OAAO,OAAO,OAAO,EAAE;AAAA,UACtC,SAAS,cAAc;AACrB,oBAAQ,KAAK,8BAA8B,YAAY;AAAA,UACzD;AAAA,QACF;AACA,aAAK,cAAc,OAAO,YAAY;AAAA,MACxC,CAAC;AAAA,IACH;AAEA,WAAO,EAAE,SAAS,KAAK;AAAA,EACzB;AAAA,EAEA,MAAM,uBAAuB,QAAa,OAAgB;AACxD,eAAW,gBAAgB,KAAK,eAAe;AAC7C,UAAI,aAAa,mBAAmB,WAAW,CAAC,SAAS,aAAa,UAAU,QAAQ;AACtF,YAAI,OAAO,aAAa,SAAS,OAAO,OAAO,MAAM,YAAY;AAC/D,cAAI;AACF,yBAAa,OAAO,OAAO,OAAO,EAAE;AAAA,UACtC,SAAS,cAAc;AACrB,oBAAQ,KAAK,yCAAyC,YAAY;AAAA,UACpE;AAAA,QACF;AACA,aAAK,cAAc,OAAO,YAAY;AACtC,gBAAQ,IAAI,wCAAiC,EAAE,OAAO,KAAK,cAAc,MAAM,MAAM,CAAC;AACtF;AAAA,MACF;AAAA,IACF;AACA,WAAO,EAAE,SAAS,KAAK;AAAA,EACzB;AAAA,EAEA,MAAM,UAAUI,UAAc;AAE5B,UAAM,WAAW,IAAI,WAAWA,SAAQ,cAAc,QAAQ;AAC9D,UAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,QAAQ;AACjE,UAAMC,QAAO,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC,EAAE,IAAI,OAAK,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AACrG,IAAAD,SAAQ,cAAc,WAAW;AACjC,IAAAA,SAAQ,cAAc,OAAOC;AAC7B,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,MAAM,MAAM,OAAO,UAAUD,QAAO;AAE5C,UAAM,KAAK,UAAU,EAAE,MAAM,cAAc,IAAI,OAAO,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC;AAEvE,WAAO,EAAE,IAAI,OAAO,GAAG,EAAE;AAAA,EAC3B;AAAA,EAEA,MAAM,aAAa,OAAe;AAChC,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,UAAW,MAAM,OAAO,aAAa,KAAK;AAGhD,QAAI,CAAC,QAAS,QAAO,CAAC;AAEtB,WAAO,QAAQ,IAAI,CAAC,WAAW;AAC7B,UACE,OAAO,SAAS,YAChB,MAAM,QAAQ,OAAO,OAAO,KAC5B,OAAO,OAAO,SAAS,YACvB,OAAO,oBAAoB,YAC3B;AACA,eAAO;AAAA,UACL,SAAS,OAAO;AAAA,UAChB,MAAM,OAAO;AAAA,UACb,UAAU,aAAa,OAAO,QAAQ;AAAA,QACxC;AAAA,MACF;AAEA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,WAAWA,UAAc;AAC7B,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,OAAO,WAAWA,QAAO;AAC/B,UAAM,KAAK;AAAA,MACT;AAAA,QACE,MAAM;AAAA,QACN,OAAOA,SAAQ;AAAA,QACf,SAASA,SAAQ,QAAQ,IAAI,CAAC,WAAgB,KAAK,gBAAgB,MAAM,CAAC;AAAA,MAC5E;AAAA,MACAA,SAAQ;AAAA,IACV;AACA,WAAO,EAAE,SAAS,KAAK;AAAA,EACzB;AAAA,EAEA,MAAM,gBAAgB,OAAe,SAAiB;AACpD,UAAM,SAAS,MAAM,KAAK,UAAU;AAGpC,UAAM,iBAAiB,MAAM,OAAO,aAAa,KAAK;AACtD,QAAI,CAAC,kBAAkB,eAAe,WAAW,GAAG;AAClD,YAAM,IAAI,MAAM,6BAA6B;AAAA,IAC/C;AAGA,UAAM,eAAe,eAAe,eAAe,SAAS,CAAC;AAC7D,QAAI,aAAa,SAAS,UAAU;AAClC,YAAM,IAAI,MAAM,6BAA6B;AAAA,IAC/C;AAGA,UAAM,WAAW,IAAI,YAAY,EAAE,OAAO,OAAO;AACjD,UAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,QAAQ;AACjE,UAAMC,QAAO,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC,EAAE,IAAI,OAAK,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AAErG,UAAM,YAAY;AAAA,MAChB,SAAS,CAAC,aAAa,IAAI;AAAA,MAC3B,MAAAA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,OAAO,WAAW,EAAE,OAAO,SAAS,CAAC,SAAS,EAAE,CAAC;AACvD,UAAM,KAAK;AAAA,MACT;AAAA,QACE,MAAM;AAAA,QACN;AAAA,QACA,QAAQ,KAAK,gBAAgB,SAAS;AAAA,MACxC;AAAA,MACA;AAAA,IACF;AACA,WAAO,EAAE,SAAS,MAAM,YAAYA,MAAK;AAAA,EAC3C;AAAA,EAEA,MAAM,oBAAoB;AACxB,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,OAAO,MAAM,OAAO,kBAAkB;AAC5C,WAAO,EAAE,MAAM,OAAO,IAAI,EAAE;AAAA,EAC9B;AAAA,EAEA,MAAM,aAAaD,UAAc;AAC/B,WAAO,EAAE,UAAU,cAAc;AAAA,EACnC;AAAA,EAEA,MAAM,gBAAgB,QAAgB;AACpC,UAAM,SAAS,MAAM,KAAK,UAAU;AACpC,UAAM,OAAO,gBAAgB,MAAM;AACnC,WAAO,EAAE,QAAQ,KAAK;AAAA,EACxB;AAAA,EAEA,MAAM,OAAO;AACX,QAAI,KAAK,QAAQ;AACf,YAAM,KAAK,OAAO,KAAK;AACvB,WAAK,SAAS;AACd,WAAK,gBAAgB;AAAA,IACvB;AAAA,EACF;AAAA,EAEA,MAAM,MAAM,MAAc;AACxB,WAAO,UAAU,IAAI;AAAA,EACvB;AAAA,EAEA,OAAO,OAAO,YAAY,IAAI;AAC5B,UAAM,KAAK,KAAK;AAAA,EAClB;AACF;AAEO,IAAM,WAAN,MAAe;AAAA,EAGpB,YAA6BE,QAA6BC,MAAU;AAAvC,iBAAAD;AAA6B,eAAAC;AAExD,SAAK,UAAU,IAAI,cAAc,YAAY;AAE3C,YAAM,sBAAsB;AAG5B,UAAK,WAAmB,mBAAmB;AACzC,gBAAQ,IAAI,+DAA+D;AAC3E,cAAM,IAAI,MAAM,wDAAwD;AAAA,MAC1E;AAEA,aAAO;AAAA,QACL,SAAS,IAAI,4BAA4B,KAAK,MAAM,OAAO;AAAA,QAC3D,QAAQ,IAAI,aAAa;AAAA,MAC3B;AAAA,IACF,CAAC;AAGD,SAAK,QAAQ,YAAY;AAAA,EAC3B;AAAA,EA1sBF,OAmrBsB;AAAA;AAAA;AAAA,EAyBpB,MAAM,MAAM,SAAkB;AAC5B,QAAI,QAAQ,QAAQ,IAAI,SAAS,GAAG,YAAY,MAAM,aAAa;AACjE,YAAM,gBAAgB,IAAI,cAAc;AACxC,YAAM,SAAS,cAAc,CAAC;AAC9B,YAAMC,UAAS,cAAc,CAAC;AAE9B,MAAAA,QAAO,OAAO;AACd,8BAAuBA,SAAQ,KAAK,OAAO;AAE3C,aAAO,IAAI,SAAS,MAAM;AAAA,QACxB,QAAQ;AAAA,QACR,WAAW;AAAA,MACb,CAAQ;AAAA,IACV;AAEA,WAAO,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC3D;AACF;AAGA,IAAOC,kBAAQ;AAAA,EACb,MAAM,MAAM,SAAkBF,MAAU;AACtC,QAAI,QAAQ,QAAQ,IAAI,SAAS,GAAG,YAAY,MAAM,aAAa;AACjE,YAAM,KAAKA,KAAI,UAAU,WAAW,QAAQ;AAC5C,YAAM,OAAOA,KAAI,UAAU,IAAI,EAAE;AACjC,aAAO,KAAK,MAAM,OAAO;AAAA,IAC3B;AAEA,WAAO,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC3D;AACF;;;AStuBO,IAAMG,YAAN,cAAuB,SAAa;AAAA,EAJ3C,OAI2C;AAAA;AAAA;AAAA,EAC1C,YAAYC,QAAYC,MAAU;AACjC,UAAMD,QAAOC,IAAG;AAAA,EACjB;AACD;AAEA,IAAM,iBAAiB;AAEvB,IAAMC,wBAAuB,wBAAC,aAAiC;AAC9D,QAAMC,WAAU,IAAI,QAAQ,SAAS,OAAO;AAE5C,aAAW,CAACC,MAAK,KAAK,KAAKC,0BAAyB;AACnD,IAAAF,SAAQ,IAAIC,MAAK,KAAK;AAAA,EACvB;AAEA,SAAO,IAAI,SAAS,SAAS,MAAM;AAAA,IAClC,QAAQ,SAAS;AAAA,IACjB,YAAY,SAAS;AAAA,IACrB,SAAAD;AAAA,EACD,CAAC;AACF,GAZ6B;AAc7B,IAAOG,kBAAQ;AAAA,EACd,MAAM,MAAM,SAAkBL,MAAU,KAAiC;AACxE,UAAM,gBAAgB,QAAQ,QAAQ,IAAI,SAAS,GAAG,YAAY;AAClE,QAAI,kBAAkB,gBAAgB;AACrC,aAAOK,gBAAc,MAAM,SAASL,IAAG;AAAA,IACxC;AAEA,QAAIA,KAAI,UAAU,OAAOA,KAAI,WAAW,YAAYA,KAAI,WAAW,QAAQ,WAAWA,KAAI,QAAQ;AACjG,YAAM,iBAAiBA,KAAI;AAC3B,MAAAA,KAAI,SAAS;AAAA,QACZ,MAAM,MAAM,KAAc;AACzB,gBAAM,gBAAgB,MAAM,eAAe,MAAM,GAAG;AACpD,iBAAOC,sBAAqB,aAAa;AAAA,QAC1C;AAAA,MACD;AAAA,IACD;AAEA,UAAM,WAAW,MAAO,eAAyB,MAAM,SAASD,MAAK,GAAG;AACxE,WAAOC,sBAAqB,QAAQ;AAAA,EACrC;AACD;",
  "names": ["options", "PerformanceMark", "e", "performance", "performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "dir", "env", "count", "cwd", "hrtime", "assert", "body", "text", "current", "text_encoder", "text_decoder", "resolve", "base", "key", "set", "pattern", "escaped", "v", "context", "e", "t", "n", "o", "hash", "c", "abort", "error", "component", "options", "flags", "global", "body2", "r2", "headers", "__exports", "fonts", "imports", "index", "stylesheets", "component_cache", "init__", "attributes", "_RpcStub", "_RpcPayload", "source", "array", "_PayloadStubHook", "_TargetStubHook", "_PromiseStubHook", "_Devaluator", "err", "_Evaluator", "hook", "assert", "info", "root", "dir", "r", "mount", "attr", "byteArray", "count", "next", "relative", "stdin", "stdout", "stderr", "xhr", "lazyArray", "group", "cwd", "time", "env", "config", "wasm", "pDb", "s", "sig", "state", "argv", "log", "BigInt", "BigInt64Array", "f", "name", "StructBinder", "StructCtor", "s2", "pMem", "callee", "tgt", "func", "out", "stmt", "ndx", "val", "sqlite3", "require", "warn", "clear", "handle", "noop", "debug", "proxy", "sqlite3Worker1Promiser", "chars", "channel", "init", "hydrate", "index2", "push", "pop", "version", "reset", "error2", "immutable", "version2", "key2", "push2", "e2", "controller", "stores", "page", "assets", "handleError", "IN_WEBCONTAINER", "escape_html", "manifest", "has_data_suffix", "add_data_suffix", "strip_data_suffix", "has_resolution_suffix", "add_resolution_suffix", "strip_resolution_suffix", "stringify_primitive", "server", "deferred", "get", "replacements", "branch", "once", "domain", "parse", "info2", "SECURITY_HEADERS", "SECURITY_HEADER_ENTRIES", "e", "debug", "ptr", "state", "imports", "e", "arg0", "arg1", "v", "table", "workersModuleName", "workersModule", "RpcTarget", "typeForRpc", "RpcStub", "RpcPromise", "mapNotLoaded", "mapImpl", "StubHook", "ErrorStubHook", "error", "DISPOSED_HOOK", "doCall", "withCallInterceptor", "RAW_STUB", "PROXY_HANDLERS", "RpcPayload", "attributes", "v", "TargetStubHook", "PayloadStubHook", "pullPromise", "unwrapStubTakingOwnership", "unwrapStubAndDup", "unwrapStubNoProperties", "unwrapStubOrParent", "unwrapStubAndPath", "source", "array", "disposeRpcTarget", "followPath", "ValueStubHook", "PromiseStubHook", "NullExporter", "NULL_EXPORTER", "ERROR_TYPES", "Devaluator", "err", "key", "e", "NullImporter", "NULL_IMPORTER", "Evaluator", "RpcPayload", "ERROR_TYPES", "hook", "RpcPromise", "RpcStub", "key", "error", "ErrorStubHook", "index", "StubHook", "options", "resolve", "RpcStub", "unwrapStubAndPath", "Devaluator", "error2", "Evaluator", "PayloadStubHook", "RpcPayload", "resolve", "currentMapBuilder", "MapBuilder", "MapVariableHook", "Devaluator", "error", "mapImpl", "RpcPayload", "withCallInterceptor", "RpcPromise", "throwMapperBuilderUseError", "StubHook", "MapApplicator", "Evaluator", "RpcStub", "unwrapStubNoProperties", "PayloadStubHook", "applyMapToElement", "RpcTarget", "newWebSocketRpcSession", "error", "key", "index", "c", "options", "hash", "state", "env", "server", "worker_default", "BeelayDO", "state", "env", "applySecurityHeaders", "headers", "key", "SECURITY_HEADER_ENTRIES", "worker_default"]
}
